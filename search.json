[{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  ggplot() +   geom_point(data = samp.etas.list[[1]], aes(x = ts, y = magnitudes), color = \"red\") +   geom_point(data = samp.etas.list[[2]], aes(x = ts, y = magnitudes), color = \"green\") +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") combined.M7.ETAS.cat <- bind_rows(samp.etas.list)  combined.M7.ETAS.cat <- bind_rows(samp.etas.list) combined.M7.ETAS.cat <- combined.M7.ETAS.cat[order(combined.M7.ETAS.cat$ts), ]  combined.M7.ETAS.cat$ID <- seq(1, length(combined.M7.ETAS.cat$ts))  ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase num.threads if you have more cores on your computer INLA::inla.setOption(num.threads = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.3823519  #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.369858  #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  4.843053 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 94.79%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 111.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1580% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 104.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1110% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 99.97%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 946% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 104.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 596% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 371% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 192% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 150% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 133% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 119% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 107% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 97.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 89% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 81.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 74.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 67.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 62.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 57% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 52.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 47.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 43.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 40.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 37% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 34% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 31.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 24.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 22.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 20.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.61% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 40 [max:100] #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  4.593063 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 78.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 103.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 48.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 41% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 29.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 27.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 25.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.34% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 19 [max:100] #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 1 row containing missing values (`geom_line()`). plt #> NULL  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 1 row containing missing values (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1299] #> 8 8 (1-3,1-1) arrange text[GRID.text.1300]  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exists, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p \\geq 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Tutorial on real data","text":"bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter rate b. distribution mean \\texttt{}/\\texttt{b} variance \\(\\texttt{}/\\texttt{b}^2\\). unit_t(X, , b) Uniform distribution b. exp_t(X, r) Exponential distribution rate r. loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm m standard deviation logarithm s. code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. whole Horus catalogue can loaded using data reports earthquake longitude (lon) latitude (lat) epicentre, moment magnitude (M), time string (time_string), depth kilometres (depth), catalogue event IDs. focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load ISIDE catalogue horus <- read.table(   file = \"data/HORUS.txt\",   header = TRUE,   sep = \",\" ) head(horus) #>       lon     lat    M            time_string depth catalog_id event_id #> 1 15.3000 39.3000 6.34 1960-01-03T20:19:34.00   290         -1       NA #> 2 13.1667 43.1333 3.94 1960-01-04T09:20:00.00     0         -1       NA #> 3 12.7000 46.4833 4.69 1960-01-06T15:17:34.00     4         -1       NA #> 4 12.7000 46.4667 4.14 1960-01-06T15:20:53.00     0         -1       NA #> 5 12.7500 46.4333 3.00 1960-01-06T15:31:00.00     0         -1       NA #> 6 12.7500 46.4333 3.00 1960-01-06T15:45:00.00     0         -1       NA # transform time string in Date object time_string <- gsub(\"T\", \" \", horus$time_string) horus$time_date <- as.POSIXct(time_string,   format = \"%Y-%m-%d %H:%M:%OS\" )  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. num.threads: number cores used parallel. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created .","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(difftime(aquila$time_date, start.date,     units = \"days\"   )),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   num.threads = 2, # Increase this if your computer has multiple cores   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  2.575926"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 )  head(post.samp) #>          mu         K    alpha          c        p #> 1 0.3677738 0.1617029 2.425827 0.05822018 1.157604 #> 2 0.3445203 0.1262370 2.395503 0.09943504 1.239542 #> 3 0.2833900 0.1600875 2.408921 0.06421593 1.175880 #> 4 0.3042535 0.1205547 2.475632 0.07013789 1.171228 #> 5 0.3017681 0.1260403 2.456525 0.06481491 1.151355 #> 6 0.2927550 0.1327959 2.444883 0.07093366 1.198998 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = 3 ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 28 rows containing non-finite values (`stat_bin()`). #> Warning: Removed 2 rows containing missing values (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL,   ncore = 1 ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     288     112     176 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.6193817"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) head(post.samp) #>          mu          K    alpha         c        p #> 1 0.3138455 0.04873831 2.617522 0.2033840 1.400218 #> 2 0.3867388 0.05672472 2.500152 0.1826018 1.296260 #> 3 0.3001815 0.04666845 2.560214 0.1538018 1.300088 #> 4 0.2741145 0.05496949 2.523308 0.2010335 1.299242 #> 5 0.3577927 0.03000257 2.585222 0.3549045 1.386969 #> 6 0.3429220 0.07648315 2.396364 0.2592483 1.403229"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>          N N.bkg N.after #> first  288   112     176 #> second 408   104     304 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.8666663 input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Francesco Serafini Dr Mark Naylor, School GeoSciences, University Edinburgh Prof Finn Lindgren, School Mathematics, University Edinburgh Dr Kirsty Bayliss, Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Implement pre-model domain history Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@ed.ac.uk Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore number cores used generate synthetic catalogues parallel.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x562182b0a728> #> <environment: 0x562182b0cf78> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x562182b0a450> #> <environment: 0x562182b0cf78> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x562182b0dfa8> #> <environment: 0x562182b0cf78> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x562182b0dcd0> #> <environment: 0x562182b0cf78> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x562182b0d9f8> #> <environment: 0x562182b0cf78> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   ncore = 1 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. ncore Integer number compute cores use.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"data.frame temporal catalogue columns [t_i, M_i, gen_i] , t_i times,  M_i magnitudes, gen_i includes information generation number","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>            ts magnitudes gen #> 1  445.814661   2.862875   1 #> 2    1.511047   2.551889   1 #> 3  450.398582   2.657511   1 #> 4  552.961470   2.997241   1 #> 5   96.109651   2.621532   1 #> 6  233.410575   2.769049   1 #> 7  864.031977   3.591813   1 #> 8  149.268855   2.906260   1 #> 9  366.425641   3.710124   1 #> 10  48.722519   2.664519   1 #> 11 855.759335   3.307979   1 #> 12 641.646876   3.447401   1 #> 13 283.392257   2.628881   1 #> 14 646.560931   3.026876   1 #> 15 190.352778   3.091582   1 #> 16 842.461093   3.147989   1 #> 17 645.798694   3.000761   1 #> 18 812.275130   2.778749   1 #> 19 524.980624   2.517020   1 #> 20 663.984693   2.728555   1 #> 21 250.395176   2.573941   1 #> 22 455.926699   2.652847   1 #> 23 681.083605   2.676670   1 #> 24 105.168928   2.511774   1 #> 25 473.461655   4.453231   1 #> 26 288.775714   2.568363   1 #> 27  32.291134   2.742728   1 #> 28 574.243060   2.504050   1 #> 29 335.973238   2.541879   1 #> 30 279.256274   2.799185   1 #> 31 726.767266   3.009697   1 #> 32 682.300755   2.504379   1 #> 33   9.863307   3.138412   1 #> 34 934.113104   2.826224   1 #> 35 288.309680   2.699439   1 #> 36 755.336691   2.540039   1 #> 37 941.823812   3.223463   1 #> 38 724.225436   3.388024   1 #> 39 962.528152   2.683425   1 #> 40 935.482190   2.520949   1 #> 41 464.572715   2.598013   1 #> 42 944.417177   2.721429   1 #> 43 415.535219   2.760890   1 #> 44 560.649705   3.225198   1 #> 45 410.566651   2.502661   1 #> 46 498.245327   2.749632   1 #> 47 869.286845   2.592628   1 #> 48 784.597489   2.656743   1 #> 49 562.818747   2.777485   1 #> 50 562.026764   3.815155   1 #> 51 439.904479   3.226823   1 #> 52 760.400193   3.156512   1 #> 53 359.118366   2.661760   1 #> 54 177.747800   2.587455   1 #> 55 588.260694   2.907455   1 #> 56 408.264031   3.211516   1 #> 57 472.379733   3.291364   1 #> 58 539.305338   2.589385   1 #> 59  43.298163   2.663909   1 #> 60 562.447367   2.788776   1 #> 61 675.322942   3.379704   1 #> 62 930.047202   3.307376   1 #> 63 818.723135   2.635868   1 #> 64 981.942859   2.717766   1 #> 65 795.259985   2.683051   1 #> 66 760.259316   3.249612   1 #> 67 544.270907   2.557057   1 #> 68 387.751807   2.790841   1 #> 69 409.105610   3.593308   1 #> 70 477.956243   2.959736   1 #> 71 380.437136   4.477027   1 #> 72 866.470087   2.763450   1 #> 73 428.059654   2.934155   1 #> 74 266.574334   2.764357   1 #> 75 199.954649   2.578085   1 #> 76  67.132845   2.815870   1 #> 77  39.319216   3.293191   1 #> 78 342.915023   2.834552   1 #> 79  81.529554   2.928007   1 #> 80  52.263390   3.657245   1 #> 81 144.415703   2.642416   1 #> 82 425.405034   2.897573   1 #> 83 564.648295   2.545429   1 #> 84 241.035392   2.864035   1 #> 85 111.548684   2.813241   1 #> 86 956.995690   2.690308   1 #> 87 772.481106   2.755053   1 #> 88 796.793701   2.892085   1 #>  #> [[2]] #>           ts magnitudes gen #> 1  866.03641   2.546527   2 #> 2  244.39685   2.737617   2 #> 3  367.31878   3.547849   2 #> 4  373.03082   3.183152   2 #> 5  641.66942   2.966626   2 #> 6  609.59460   2.605389   2 #> 7  474.95416   2.517095   2 #> 8  562.31375   2.663108   2 #> 9  947.94964   2.764263   2 #> 10 556.37502   2.622291   2 #> 11 401.83691   2.841162   2 #> 12 505.94850   2.698657   2 #> 13 382.73219   3.788875   2 #> 14 421.82116   2.538304   2 #> 15 380.52051   2.880995   2 #> 16  54.42130   2.612831   2 #> 17  54.18005   3.235041   2 #> 18  52.69264   2.588748   2 #> 19  75.40048   2.508768   2 #> 20 485.38816   2.532426   2 #> 21 772.57719   2.508117   2 #> 22 119.76493   2.603566   2 #>  #> [[3]] #>         ts magnitudes gen #> 1 382.7011   2.786781   3 #> 2 367.4385   2.733190   3 #> 3 394.5844   2.763187   3 #> 4 410.3213   2.553126   3 #> 5 383.0339   3.293111   3 #> 6 431.5474   2.586261   3 #>  #> [[4]] #>         ts magnitudes gen #> 1 383.2275   2.719502   4 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>              ts magnitudes gen #> 1   517.5329754   3.011740   0 #> 2   637.5090595   2.568840   0 #> 3   671.7508640   3.312820   0 #> 4   501.1467289   2.631484   0 #> 5   734.8081815   3.257565   0 #> 6   504.5676500   3.911620   0 #> 7   896.3269353   2.546858   0 #> 8   501.9542352   2.827681   0 #> 9   501.0492455   2.565656   0 #> 10  589.8215247   2.577050   0 #> 11  500.5072160   2.744177   0 #> 12  513.3259053   2.688020   0 #> 13  897.5942974   2.982785   0 #> 14  500.1488963   2.977976   0 #> 15  794.4505939   2.515550   0 #> 16  500.0287225   2.510668   0 #> 17  501.5085572   3.504377   0 #> 18  500.0238613   2.910793   0 #> 19  500.1028079   3.388540   0 #> 20  510.9755475   2.629258   0 #> 21  500.2594412   2.752981   0 #> 22  562.5821031   3.226853   0 #> 23  500.1798176   2.931706   0 #> 24  500.0467650   2.581854   0 #> 25  500.5532093   2.723297   0 #> 26  500.6977519   3.028946   0 #> 27  503.2564309   3.364872   0 #> 28  505.9355064   2.596547   0 #> 29  507.2324959   3.203455   0 #> 30  835.0034255   2.564388   0 #> 31  500.0324892   2.573566   0 #> 32  500.5017084   2.942661   0 #> 33  757.4570543   3.915554   0 #> 34  501.8597685   3.021583   0 #> 35  558.3963634   2.581160   0 #> 36  503.2118520   3.040022   0 #> 37  589.3596446   3.131609   0 #> 38  500.9591183   2.558069   0 #> 39  515.2436283   2.507577   0 #> 40  511.4563379   3.109567   0 #> 41  502.8990315   2.828035   0 #> 42  500.1991829   2.913177   0 #> 43  503.7504278   3.596650   0 #> 44  949.6427804   3.276183   0 #> 45  500.1069390   3.283680   0 #> 46  795.0552076   2.831025   0 #> 47  502.1326752   3.501989   0 #> 48  507.4262014   2.741145   0 #> 49  507.8467896   2.507199   0 #> 50  500.1655581   2.522223   0 #> 51  500.2290295   2.857841   0 #> 52  501.6613096   2.668612   0 #> 53  500.0255072   3.867706   0 #> 54  726.0592486   2.639003   0 #> 55  504.9124388   3.053387   0 #> 56  509.6599709   2.937350   0 #> 57  501.3492943   3.020649   0 #> 58  500.3177156   2.518899   0 #> 59  501.0563302   2.538534   0 #> 60  500.3803468   2.617803   0 #> 61  508.4563131   3.042039   0 #> 62  500.4619566   4.168002   0 #> 63  593.0160613   2.753741   0 #> 64  621.0571247   2.897587   0 #> 65  516.4714015   2.886747   0 #> 66  607.4775818   2.923355   0 #> 67  500.0594283   2.750004   0 #> 68  510.1727923   2.861565   0 #> 69  552.4499850   2.592943   0 #> 70  500.9715777   2.557127   0 #> 71  844.8681850   2.731849   0 #> 72  506.9231247   2.536653   0 #> 73  529.9202746   2.506223   0 #> 74  503.5823883   5.042453   0 #> 75  500.0198436   2.879920   0 #> 76  649.2795367   2.781839   0 #> 77  500.0491142   2.877604   0 #> 78  720.3891914   2.999781   0 #> 79  922.4977176   2.692918   0 #> 80  500.9459143   2.530218   0 #> 81  500.8428772   3.816779   0 #> 82  501.5654548   2.739526   0 #> 83  500.4353808   2.829123   0 #> 84  500.7160412   2.679810   0 #> 85  588.6496650   2.654202   0 #> 86  500.1439431   3.055771   0 #> 87  500.1142964   2.881642   0 #> 88  586.4467874   3.016654   0 #> 89  500.0797182   2.683866   0 #> 90  502.1008068   2.503271   0 #> 91  500.1485386   3.568383   0 #> 92  504.3615522   2.530931   0 #> 93  985.8920341   2.661970   0 #> 94  504.7916923   3.195408   0 #> 95  500.1810679   2.852180   0 #> 96  706.5598874   2.586922   0 #> 97  500.6975384   2.808330   0 #> 98  500.1164690   2.584855   0 #> 99  907.2373072   5.562931   0 #> 100 505.7738332   2.679728   0 #> 101 523.2625516   2.886458   0 #> 102 665.5222413   2.630824   0 #> 103 501.3861289   2.936441   0 #> 104 500.3394787   2.732822   0 #> 105 519.8343065   3.225267   0 #> 106 582.7564285   2.710294   0 #> 107 500.1277184   2.852166   0 #> 108 518.2710288   2.730050   0 #> 109 511.7500137   2.658753   0 #> 110 500.7076571   3.534556   0 #> 111 801.8519030   2.847925   0 #> 112 900.8296105   2.502292   0 #> 113 573.0921178   2.903342   0 #> 114 590.5182620   2.612518   0 #> 115 500.9654829   3.463273   0 #> 116 565.3363044   2.587005   0 #> 117 751.3355183   2.567487   0 #> 118 534.2668190   2.642450   0 #> 119 500.1390270   2.575343   0 #> 120 500.1160239   3.906697   0 #> 121 500.8765551   3.564960   0 #> 122 500.1849919   2.592757   0 #> 123 552.6768629   2.507975   0 #> 124 835.8042229   2.704106   0 #> 125 500.1658425   2.570748   0 #> 126 502.3683285   3.189223   0 #> 127 500.8911558   2.552082   0 #> 128 512.1031922   3.299583   0 #> 129 500.9595713   2.720642   0 #> 130 517.5920270   2.760419   0 #> 131 889.2834547   3.013225   0 #> 132 512.2572996   2.914719   0 #> 133 629.3843095   3.589479   0 #> 134 501.7207572   2.955722   0 #> 135 506.1465894   3.788952   0 #> 136 500.9151783   2.721647   0 #> 137 522.7146575   3.104530   0 #> 138 522.5047270   3.168228   0 #> 139 502.3819907   3.659427   0 #> 140 502.2951179   3.194501   0 #> 141 512.6539406   2.510552   0 #> 142 501.3805485   2.916473   0 #> 143 500.0481898   2.596485   0 #> 144 517.1105277   2.911948   0 #> 145 508.9347618   2.526718   0 #> 146 500.2443323   3.139105   0 #> 147 500.0089007   3.290443   0 #> 148 523.2744615   4.748744   0 #> 149 501.5441322   4.113217   0 #> 150 503.0521111   2.758560   0 #> 151 549.3038635   2.697972   0 #> 152 500.9484436   3.467237   0 #> 153 501.4608202   3.558805   0 #> 154 500.0767848   3.066261   0 #> 155 537.0327224   2.512761   0 #> 156 750.1738246   3.075933   0 #> 157 500.9526473   3.293351   0 #> 158 519.3295903   2.802455   0 #> 159 503.6915957   2.581061   0 #> 160 525.6637707   2.506192   0 #> 161 817.7310362   3.205834   0 #> 162 996.1294569   2.957580   0 #> 163 500.1060213   3.835092   0 #> 164 901.6988021   2.645311   0 #> 165 501.4282081   2.635531   0 #> 166 500.2249094   2.666302   0 #> 167 500.6731563   3.198575   0 #> 168 501.4373733   3.207148   0 #> 169 546.1822875   2.591313   0 #> 170 501.5862884   3.155621   0 #> 171 500.1234101   2.507898   0 #> 172 642.9476588   3.124730   0 #> 173 500.5517831   2.695302   0 #> 174 500.6211748   2.682479   0 #> 175 500.5562141   2.895240   0 #> 176 534.5081917   3.784303   0 #> 177 501.7490899   2.543565   0 #> 178 528.4036292   3.549858   0 #> 179 511.9777890   2.857434   0 #> 180 512.1247171   2.832992   0 #> 181 670.2918477   3.573666   0 #> 182 501.3502926   2.874164   0 #> 183 505.1426133   3.034373   0 #> 184 500.2794076   2.880949   0 #> 185 500.0385336   2.669087   0 #> 186 929.6600997   2.864077   0 #> 187 528.5886991   2.570668   0 #> 188 501.7946975   2.899389   0 #> 189 508.8982361   2.972261   0 #> 190 606.7322196   2.561460   0 #> 191 535.5344134   2.879041   0 #> 192 501.2666763   2.722068   0 #> 193 736.5135684   2.966488   0 #> 194 500.3386992   2.783460   0 #> 195 500.0094499   2.527001   0 #> 196 500.0135372   2.739522   0 #> 197 501.3873942   2.916954   0 #> 198 817.4678273   3.298396   0 #> 199 505.1163250   2.876260   0 #> 200 509.5827728   2.766974   0 #> 201 500.1820478   3.293826   0 #> 202 515.8430887   2.789558   0 #> 203 518.1138160   2.543157   0 #> 204 509.4338542   2.758424   0 #> 205 503.7053805   2.877293   0 #> 206 500.0394355   3.644653   0 #> 207 500.0545456   2.853772   0 #> 208 517.8569423   3.919736   0 #> 209 509.8947210   2.680169   0 #> 210 521.1225045   3.089703   0 #> 211 507.6992126   2.639592   0 #> 212 505.3907654   3.322149   0 #> 213 503.3041995   2.863866   0 #> 214 500.6920956   3.254169   0 #> 215 529.0970934   3.001400   0 #> 216 500.0226784   2.568016   0 #> 217 500.0977156   3.052634   0 #> 218 678.4533804   2.645470   0 #> 219 500.3530097   3.195611   0 #> 220 774.1455326   2.903526   0 #> 221 500.5066168   2.640285   0 #> 222 500.0874322   2.513557   0 #> 223 505.9393038   2.886275   0 #> 224 675.6385630   2.765878   0 #> 225 500.4247032   3.536899   0 #> 226 500.3652973   2.682545   0 #> 227 500.2021168   3.299561   0 #> 228 519.2887598   3.230538   0 #> 229 532.7169504   3.092057   0 #> 230 714.4427099   2.560118   0 #> 231 500.0478642   3.123740   0 #> 232 500.2049428   3.957138   0 #> 233 503.4707247   2.943564   0 #> 234 524.5447941   2.720764   0 #> 235 519.3293307   2.865006   0 #> 236 504.2449312   4.084925   0 #> 237 501.3456265   2.855441   0 #> 238 595.4556553   2.657936   0 #> 239 685.6190695   2.503238   0 #> 240 532.4241381   3.129620   0 #> 241 501.1685187   2.740429   0 #> 242 500.4809892   3.074532   0 #> 243 500.8732803   2.631827   0 #> 244 500.9892585   3.081067   0 #> 245 504.7906257   2.694112   0 #> 246 500.0697906   2.793647   0 #> 247 500.0170521   2.719940   0 #> 248 523.3094302   2.552232   0 #> 249 503.3548774   2.992805   0 #> 250 537.5361553   2.563875   0 #> 251 500.3306104   2.790498   0 #> 252 500.2231546   3.039075   0 #> 253 626.6480490   2.739121   0 #> 254 507.7594119   3.744043   0 #> 255 500.0674411   3.300290   0 #> 256 500.1033738   3.684952   0 #> 257 522.7146284   2.524303   0 #> 258 500.9437595   3.688205   0 #> 259 570.1533544   4.164050   0 #> 260 512.0014715   3.159499   0 #> 261 511.7302845   3.085803   0 #> 262 579.8169748   3.533132   0 #> 263 501.0635078   3.117718   0 #> 264 501.2165523   2.656907   0 #> 265 500.0123511   2.825652   0 #> 266 500.1128742   2.625025   0 #> 267 790.0843202   3.105821   0 #> 268 562.0846938   2.539483   0 #> 269 500.3069501   2.893154   0 #> 270 500.1158416   2.647826   0 #> 271 502.4467432   2.636082   0 #> 272 504.5474209   3.303738   0 #> 273 540.4264339   3.490907   0 #> 274 502.7670295   2.944191   0 #> 275 706.9484100   2.579650   0 #> 276 500.4285210   2.703943   0 #> 277 501.1220086   2.806426   0 #> 278 505.2553319   2.772069   0 #> 279 506.9540697   2.651438   0 #> 280 500.2013094   2.664601   0 #> 281 501.3454119   2.557089   0 #> 282 500.2643495   3.001317   0 #> 283 550.7374098   2.934908   0 #> 284 501.3587921   2.520492   0 #> 285 502.5864456   2.987703   0 #> 286 528.4813106   2.579218   0 #> 287 510.0529130   2.658431   0 #> 288 508.3732648   2.746753   0 #> 289 500.3064824   2.521449   0 #> 290 882.4753403   2.694612   0 #> 291 500.0198509   2.509527   0 #> 292 501.3441542   3.549474   0 #> 293 589.6276045   3.705429   0 #> 294 500.4854842   2.661974   0 #> 295 500.7670869   2.613705   0 #> 296 500.0714321   2.669878   0 #> 297 842.4443283   2.530515   0 #> 298 701.0328860   3.342480   0 #> 299 569.5024492   3.677226   0 #> 300 511.7662697   4.501556   0 #> 301 501.8220762   2.631399   0 #> 302 501.6711037   2.832610   0 #> 303 513.5865352   3.041941   0 #> 304 852.5757135   2.692525   0 #> 305 500.8145537   2.895054   0 #> 306 500.3989583   2.545056   0 #> 307 524.6215523   2.683480   0 #> 308 508.2418807   2.734544   0 #> 309 500.0733452   2.724163   0 #> 310 500.3645217   2.838237   0 #> 311 732.1161853   2.550233   0 #> 312 501.6009181   2.514957   0 #> 313 506.4074279   3.189950   0 #> 314 886.5515486   2.636000   0 #> 315 500.7092096   2.785606   0 #> 316 503.1452190   3.117177   0 #> 317 695.0271445   2.511791   0 #> 318 501.8171480   2.575986   0 #> 319 500.4537423   2.997296   0 #> 320 501.0854421   3.204033   0 #> 321 616.4583422   2.745008   0 #> 322 564.2444057   2.504727   0 #> 323 500.2865590   2.587997   0 #> 324 672.5753953   3.085395   0 #> 325 501.6599103   4.007530   0 #> 326 502.1307887   2.828185   0 #> 327 584.2288650   2.522150   0 #> 328 500.8938938   2.571100   0 #> 329 509.3563576   2.644833   0 #> 330 500.1920648   2.890374   0 #> 331 777.7555885   2.564978   0 #> 332 500.7203900   2.617962   0 #> 333 501.3119643   3.182134   0 #> 334 730.4168483   3.059579   0 #> 335 500.0125346   2.527202   0 #> 336 500.2835594   3.596720   0 #> 337 500.0421631   2.657286   0 #> 338 508.0630841   2.590090   0 #> 339 502.1011372   2.990291   0 #> 340 500.0338327   4.273795   0 #> 341 501.7042201   3.292024   0 #> 342 570.7836792   3.078948   0 #> 343 504.8608762   3.287642   0 #> 344 782.6326062   3.185169   0 #> 345 502.7429645   2.526190   0 #> 346 527.7496625   2.959813   0 #> 347 500.1195281   4.091478   0 #> 348 502.0321955   2.648664   0 #> 349 505.9638366   3.228419   0 #> 350 500.1314195   2.787774   0 #> 351 690.5928285   3.730109   0 #> 352 500.2548166   3.651909   0 #> 353 500.0832899   3.153844   0 #> 354 509.6465395   2.701119   0 #> 355 500.0114910   3.252096   0 #> 356 500.0620555   2.614313   0 #> 357 508.0315308   3.476258   0 #> 358 526.8100730   2.609609   0 #> 359 629.6957657   2.612984   0 #> 360 507.4962138   5.213799   0 #> 361 500.2566207   3.060760   0 #> 362 506.1801009   2.954957   0 #> 363 501.5002935   3.164448   0 #> 364 743.7141255   3.171414   0 #> 365 502.0629688   3.112073   0 #> 366 509.4697560   3.001175   0 #> 367 520.8284589   4.165997   0 #> 368 782.3597842   2.922944   0 #> 369 500.8395452   2.803708   0 #> 370 500.0291126   3.127243   0 #> 371 500.5970604   2.519699   0 #> 372 548.3650036   2.853568   0 #> 373 568.2412462   2.524485   0 #> 374 503.9746353   3.383096   0 #> 375 510.5008689   2.682883   0 #> 376 500.3906459   2.586292   0 #> 377 500.8424593   2.558229   0 #> 378 551.1583791   2.692958   0 #> 379 503.5884664   3.204410   0 #> 380 523.6243666   3.286784   0 #> 381 502.9226153   2.735279   0 #> 382 500.0686368   2.795953   0 #> 383 618.1121696   2.631470   0 #> 384 501.0891170   2.672272   0 #> 385 930.2901644   3.028448   0 #> 386 560.9479708   2.946616   0 #> 387 500.2174592   2.546948   0 #> 388 500.1510087   3.541818   0 #> 389 500.1975930   2.873266   0 #> 390 500.2829205   2.836899   0 #> 391 780.2557488   2.657817   0 #> 392 502.5698055   2.936514   0 #> 393 500.1462150   2.702376   0 #> 394 510.1662161   2.776871   0 #> 395 524.8012204   2.809702   0 #> 396 510.1138714   2.567886   0 #> 397 563.5678249   3.590552   0 #> 398 508.2053408   3.397085   0 #> 399 507.2753319   2.873544   0 #> 400 531.1481149   2.640047   0 #> 401 502.5350250   2.774801   0 #> 402 513.5214638   2.555549   0 #> 403 540.1395968   2.828143   0 #> 404 500.5925627   3.288460   0 #> 405 564.2608978   2.794296   0 #> 406 715.7975890   2.762228   0 #> 407 529.0858287   2.998914   0 #> 408 984.6371180   2.584904   0 #> 409 511.9883689   2.600551   0 #> 410 502.4143848   2.651912   0 #> 411 591.2125171   2.615590   0 #> 412 500.2945332   2.890028   0 #> 413 501.4747557   2.571503   0 #> 414 500.9806628   2.756476   0 #> 415 502.7194691   2.500814   0 #> 416 500.8025916   3.225306   0 #> 417 504.9717265   2.525927   0 #> 418 500.1287978   3.407013   0 #> 419 881.4953804   2.674095   0 #> 420 650.1838846   2.683977   0 #> 421 500.6220108   2.919491   0 #> 422 500.0851508   2.666704   0 #> 423 519.6950371   2.516197   0 #> 424 502.7236566   2.803461   0 #> 425 502.6536804   3.879936   0 #> 426 508.1864637   2.503376   0 #> 427 500.5408619   2.770143   0 #> 428 500.6655974   2.745089   0 #> 429 501.4184154   3.569102   0 #> 430 511.4262831   2.538948   0 #> 431 511.5758582   2.704763   0 #> 432 867.7595090   2.861468   0 #> 433 552.9318909   2.884876   0 #> 434 500.6965189   2.981824   0 #> 435 523.5974638   2.922859   0 #> 436 510.3463764   2.945574   0 #> 437 500.8049496   3.201269   0 #> 438 500.4000137   2.747128   0 #> 439 693.8820329   2.951025   0 #> 440 501.4255331   2.785463   0 #> 441 566.5591831   2.564701   0 #> 442 505.5374560   2.722565   0 #> 443 505.3979821   3.444658   0 #> 444 501.8201163   2.776625   0 #> 445 502.5305266   3.022189   0 #> 446 782.6906343   2.618160   0 #> 447 500.0385709   2.802341   0 #> 448 760.4355698   2.753351   0 #> 449 505.0440574   2.830232   0 #> 450 501.2922021   2.512975   0 #> 451 502.9030214   2.560934   0 #> 452 505.0003996   2.736734   0 #> 453 500.0678225   2.694510   0 #> 454 796.2457438   4.285518   0 #> 455 503.8917171   2.783457   0 #> 456 504.1220632   2.591110   0 #> 457 509.4668374   3.782554   0 #> 458 502.1863048   4.266301   0 #> 459 938.0543545   2.782578   0 #> 460 504.1605263   4.051701   0 #> 461 563.9575437   3.226615   0 #> 462 563.5627847   3.297089   0 #> 463 515.3721183   3.168578   0 #> 464 500.3043046   2.556613   0 #> 465 503.4904485   2.693420   0 #> 466 856.4856896   3.120068   0 #> 467 500.6313919   3.264935   0 #> 468 501.1129740   2.672029   0 #> 469 500.0221460   4.106395   0 #> 470 511.6855529   2.598772   0 #> 471 511.7335630   2.656527   0 #> 472 500.1008232   3.107379   0 #> 473 500.8432780   2.859906   0 #> 474 500.1808258   2.642772   0 #> 475 529.1463928   2.572533   0 #> 476 500.0677815   2.560881   0 #> 477 507.0690477   2.750781   0 #> 478 502.8466115   2.548790   0 #> 479 505.9755820   2.845342   0 #> 480 505.9548387   3.025498   0 #> 481 522.8035198   2.718369   0 #> 482 500.7768845   2.556200   0 #> 483 692.9976340   2.770871   0 #> 484 501.7372202   2.507984   0 #> 485 519.4099453   4.483390   0 #> 486 786.1417856   3.054208   0 #> 487 509.4133277   3.361052   0 #> 488 506.7498777   2.590008   0 #> 489 667.7812535   3.034301   0 #> 490 609.9549479   2.827641   0 #> 491 505.9624689   2.761120   0 #> 492 515.1960017   2.681905   0 #> 493 503.4865565   3.253947   0 #> 494 501.2652558   2.519301   0 #> 495 503.7845850   2.993962   0 #> 496 513.3871906   2.575658   0 #> 497 500.4372003   2.828781   0 #> 498 512.0775766   2.969662   0 #> 499 503.6220709   3.187626   0 #> 500 500.1348078   2.877115   0 #> 501 509.4793925   3.099709   0 #> 502 506.3424030   2.689291   0 #> 503 504.3321047   2.522383   0 #> 504 501.1102778   3.351182   0 #> 505 500.6386989   3.357053   0 #> 506 500.0189990   2.973147   0 #> 507 500.6526829   2.642833   0 #> 508 500.6164844   2.623871   0 #> 509 614.4365869   2.719946   0 #> 510 500.3587576   3.545631   0 #> 511 728.5744061   3.192082   0 #> 512 500.1926593   2.888470   0 #> 513 521.2327150   2.775209   0 #> 514 532.2996248   4.326654   0 #> 515 500.2659146   2.823898   0 #> 516 647.4568605   2.584588   0 #> 517 501.7334464   2.525953   0 #> 518 500.3182874   2.856849   0 #> 519 500.9771082   3.308713   0 #> 520 500.0690032   2.708205   0 #> 521 510.0332331   3.174519   0 #> 522 587.9202783   2.729612   0 #> 523 648.5852560   2.655757   0 #> 524 513.6476346   2.581430   0 #> 525 500.5361328   2.732961   0 #> 526 965.6616659   2.640126   0 #> 527 500.7677686   2.970298   0 #> 528 508.8867848   3.047970   0 #> 529 546.2696329   4.264626   0 #> 530 501.3468643   2.691101   0 #> 531 500.0391993   3.467605   0 #> 532 560.3483818   3.268382   0 #> 533 503.3660595   2.533929   0 #> 534 504.1056590   2.676813   0 #> 535 500.1293865   2.527893   0 #> 536 507.4599324   3.098060   0 #> 537 510.3662173   2.740117   0 #> 538 500.6402303   2.532618   0 #> 539 500.0896417   2.759696   0 #> 540 500.3256797   3.014428   0 #> 541 510.5641715   2.865662   0 #> 542 964.1231551   2.839515   0 #> 543 616.1527696   2.798259   0 #> 544 501.4095183   2.908619   0 #> 545 502.0204188   2.859684   0 #> 546 517.9265001   3.108766   0 #> 547 512.4151424   2.799891   0 #> 548 500.0628764   2.937918   0 #> 549 660.7540902   2.533762   0 #> 550 506.6866076   2.816698   0 #> 551 502.2165135   2.862316   0 #> 552 500.0302801   2.656743   0 #> 553 500.4194761   2.850617   0 #> 554 582.2552390   2.602519   0 #> 555 500.4505039   3.348012   0 #> 556 500.0186847   2.623783   0 #> 557 521.8418785   2.678330   0 #> 558 588.8308000   2.778895   0 #> 559 601.1959821   2.631820   0 #> 560 581.0598412   2.804974   0 #> 561 501.0292157   3.411688   0 #> 562 501.4122690   3.206581   0 #> 563 500.3467666   2.807594   0 #> 564 597.8932577   2.873544   0 #> 565 501.0532980   3.515100   0 #> 566 569.1452131   2.512633   0 #> 567 501.6178324   2.591989   0 #> 568 506.2576046   2.897691   0 #> 569 708.0055175   2.823519   0 #> 570 574.3654301   3.122367   0 #> 571 500.0061038   2.670845   0 #> 572 501.2627912   2.613741   0 #> 573 500.1733531   2.602154   0 #> 574 827.4919066   3.469539   0 #> 575 531.4144624   3.855729   0 #> 576 522.1505242   2.809892   0 #> 577 521.1204605   2.624109   0 #> 578 500.0406605   2.885971   0 #> 579 532.2966087   4.979690   0 #> 580 667.4361118   4.609252   0 #> 581 613.1666290   3.562367   0 #> 582 500.0458760   2.834085   0 #> 583 512.9921129   3.216427   0 #> 584 500.5433017   3.018432   0 #> 585 500.0689471   2.525009   0 #> 586 500.1794966   3.420584   0 #> 587 500.3581079   2.799620   0 #> 588 515.6327834   3.191076   0 #> 589 505.2151451   2.783815   0 #> 590 500.6626034   2.567863   0 #> 591 541.2384508   2.973302   0 #> 592 500.3873102   2.853281   0 #> 593 504.1128608   3.411901   0 #> 594 503.2332807   2.763131   0 #> 595 577.2252385   2.618314   0 #> 596 959.2017602   3.673008   0 #> 597 500.6176178   2.812338   0 #> 598 501.9905348   2.830329   0 #> 599 559.3906119   2.680171   0 #> 600 532.7974099   2.933477   0 #> 601 500.2429382   2.644711   0 #> 602 500.2290918   4.204194   0 #> 603 641.8959712   2.950561   0 #> 604 501.0027498   4.108200   0 #> 605 500.5659181   2.678282   0 #> 606 738.2572030   2.779726   0 #> 607 504.5473685   2.515614   0 #> 608 502.2584490   2.992128   0 #> 609 501.6399763   2.948051   0 #> 610 512.8312995   2.582130   0 #> 611 500.0590550   3.447099   0 #> 612 501.7891885   2.609733   0 #> 613 509.2588301   2.516552   0 #> 614 501.0457201   2.953492   0 #> 615 545.9683235   3.001556   0 #> 616 500.4758761   2.645630   0 #> 617 501.3003927   2.890579   0 #> 618 500.0608064   2.957647   0 #> 619 505.5697046   3.376043   0 #> 620 506.3397360   3.115534   0 #> 621 504.5943874   2.836707   0 #> 622 500.1970028   2.902381   0 #> 623 500.3537086   2.998829   0 #> 624 500.0583029   3.738213   0 #> 625 507.8551684   2.752046   0 #> 626 501.5171734   2.583925   0 #> 627 549.8629765   2.790650   0 #> 628 851.8306564   2.717954   0 #> 629 504.0513684   2.573894   0 #> 630 529.8550938   3.097712   0 #> 631 502.4027990   3.165751   0 #> 632 506.5448569   3.296825   0 #> 633 500.0461623   4.781344   0 #> 634 501.5770675   2.929877   0 #> 635 766.9528961   2.659377   0 #> 636 500.5035842   3.479585   0 #> 637 946.3069194   2.819096   0 #> 638 804.1801061   2.852839   0 #> 639 592.3313961   3.124035   0 #> 640 500.0204866   3.026258   0 #> 641 505.0057974   2.606586   0 #> 642 500.4678095   3.000744   0 #> 643 500.1014218   2.617315   0 #> 644 735.2487827   2.518603   0 #> 645 501.6348350   2.988683   0 #> 646 500.0820159   3.028958   0 #> 647 500.0597305   2.616393   0 #> 648 514.3384232   3.268191   0 #> 649 656.2620502   2.953634   0 #> 650 506.8357874   2.626170   0 #> 651 500.3403041   2.673092   0 #> 652 500.0786468   2.822446   0 #> 653 529.7488642   3.533660   0 #> 654 561.5140517   2.940457   0 #> 655 500.8273801   3.022811   0 #> 656 501.1890618   2.788730   0 #> 657 500.1153313   2.728256   0 #> 658 527.5595503   2.734088   0 #> 659 642.6966400   2.714738   0 #> 660 510.2037794   2.577897   0 #> 661 556.2064365   2.589403   0 #> 662 501.1196868   2.691955   0 #> 663 501.2561512   2.686881   0 #> 664 534.9109859   2.769083   0 #> 665 501.7601049   2.729887   0 #> 666 589.1522204   3.009692   0 #> 667 500.1076714   2.830864   0 #> 668 510.5821780   2.903321   0 #> 669 513.1590386   2.586634   0 #> 670 757.8637486   2.560376   0 #> 671 541.0438277   3.213242   0 #> 672 501.1716143   2.635023   0 #> 673 501.4536833   2.733959   0 #> 674 502.5403709   2.540147   0 #> 675 503.3916175   2.542203   0 #> 676 500.2243942   2.690981   0 #> 677 529.9644843   2.714122   0 #> 678 589.6391821   3.645598   0 #> 679 500.0015841   3.018824   0 #> 680 603.9734838   3.422549   0 #> 681 931.5507812   2.806867   0 #> 682 506.9953601   2.527900   0 #> 683 500.2294818   2.694698   0 #> 684 500.3786064   3.606728   0 #> 685 501.7401217   2.526332   0 #> 686 551.5670952   2.861321   0 #> 687 500.6353399   2.886980   0 #> 688 500.1277989   3.426182   0 #> 689 501.8049016   2.525310   0 #> 690 501.0628453   2.650269   0 #> 691 500.2262273   2.572385   0 #> 692 501.3259201   3.691875   0 #> 693 500.2097681   2.613990   0 #> 694 551.4808995   2.664855   0 #> 695 501.9115680   2.999758   0 #> 696 500.1352854   2.624382   0 #> 697 689.9231646   3.025559   0 #> 698 500.4819306   3.173964   0 #> 699 500.2571879   3.550238   0 #> 700 510.9888506   2.605526   0 #> 701 500.0492375   2.660834   0 #> 702 741.6529262   2.806511   0 #> 703 510.1905551   3.368695   0 #> 704 527.4862640   2.638667   0 #> 705 508.0220603   2.561402   0 #> 706 509.1307126   2.942993   0 #> 707 502.0807363   2.565736   0 #> 708 674.0276730   3.055143   0 #> 709 500.0404305   2.666698   0 #> 710 501.3945981   2.518137   0 #> 711 501.2576454   4.028695   0 #> 712 501.9604612   2.519341   0 #> 713 500.0224590   2.768875   0 #> 714 584.2868683   2.798478   0 #> 715 500.2161583   2.972154   0 #> 716 500.1092098   2.588132   0 #> 717 505.9877666   2.545676   0 #> 718 509.6220734   2.592897   0 #> 719 666.4592499   4.100514   0 #> 720 888.6116117   2.675364   0 #> 721 506.6080353   3.391418   0 #> 722 592.2850219   2.781052   0 #> 723 642.9686235   3.080486   0 #> 724 507.4664103   2.713377   0 #> 725 504.9605623   3.157592   0 #> 726 501.7560766   3.265939   0 #> 727 501.0248722   2.630611   0 #> 728 501.1525509   2.568495   0 #> 729 504.8139357   2.760249   0 #> 730 500.0566603   2.910462   0 #> 731 500.3213509   2.847004   0 #> 732 500.2584385   2.591568   0 #> 733 503.7020999   3.090561   0 #> 734 502.3969671   2.604134   0 #> 735 545.6964718   2.632236   0 #> 736 505.8119409   2.660717   0 #> 737 500.6292374   2.941486   0 #> 738 692.5374997   3.178143   0 #> 739 583.2180050   2.642448   0 #> 740 500.2655826   2.612609   0 #> 741 535.1504727   2.518429   0 #> 742 514.1251818   4.525719   0 #> 743 501.8236135   2.505383   0 #> 744 829.6273751   2.593591   0 #> 745 502.8913047   2.527742   0 #> 746 502.7440870   2.587236   0 #> 747 665.6293658   2.933265   0 #> 748 982.4208997   2.518061   0 #> 749 500.5728121   3.362041   0 #> 750 505.8597805   2.758324   0 #> 751 503.7755480   2.618315   0 #> 752 500.0391100   3.686313   0 #> 753 506.4089080   2.751746   0 #> 754 894.9712430   3.180021   0 #> 755 503.5747286   4.091791   0 #> 756 507.4864508   2.748194   0 #> 757 500.0146755   2.566983   0 #> 758 502.7475364   2.520908   0 #> 759 773.9859600   2.848461   0 #> 760 501.3586745   2.858187   0 #> 761 500.5703340   2.640328   0 #> 762 500.5496607   2.581676   0 #> 763 517.5588254   2.726641   0 #> 764 501.2025034   2.603025   0 #> 765 500.3932681   2.507758   0 #> 766 593.3060558   2.503048   0 #> 767 537.7038757   2.838105   0 #> 768 510.5794345   2.613556   0 #> 769 503.3187189   2.612721   0 #> 770 625.2752676   3.111626   0 #> 771 657.4423129   2.623747   0 #> 772 505.7586030   2.752458   0 #> 773 503.5149820   2.644753   0 #> 774 505.5116129   2.616311   0 #> 775 500.0266169   2.504536   0 #> 776 509.5462547   2.866322   0 #> 777 500.1892917   2.914748   0 #> 778 500.0932208   2.593854   0 #> 779 508.6671596   2.606146   0 #> 780 652.7087014   2.619537   0 #> 781 718.2651195   2.655333   0 #> 782 501.5736124   2.696118   0 #> 783 578.6770936   2.528422   0 #> 784 500.3800397   2.654070   0 #> 785 500.4920541   3.453771   0 #> 786 511.2971373   2.833454   0 #> 787 501.8841905   3.211457   0 #> 788 557.0264082   2.980582   0 #> 789 925.2665018   3.445297   0 #> 790 510.8436786   2.802350   0 #> 791 571.6580925   2.865289   0 #> 792 513.6880602   4.256985   0 #> 793 699.2854448   4.657103   0 #> 794 805.4467781   2.980904   0 #> 795 500.5101486   3.810783   0 #> 796 512.5044463   2.666285   0 #> 797 511.1846490   2.577104   0 #> 798 505.9656893   3.384962   0 #> 799 528.3634395   2.690198   0 #> 800 500.3216077   3.481576   0 #> 801 501.0611672   2.575033   0 #> 802 501.9372919   2.568932   0 #> 803 500.0648909   2.917250   0 #> 804 510.8006933   2.793871   0 #> 805 502.2837089   2.661074   0 #> 806 500.0037877   2.642452   0 #> 807 502.3674665   2.568338   0 #> 808 514.6498714   3.319679   0 #> 809 711.3287592   2.504983   0 #> 810 500.9640371   3.169514   0 #> 811 501.0792632   3.854564   0 #> 812 561.7729738   2.852449   0 #> 813 678.1103298   2.510043   0 #> 814 506.1550214   2.728547   0 #> 815 506.0330468   2.597342   0 #> 816 500.2333254   2.518940   0 #> 817 510.0925586   2.989302   0 #> 818 534.0933622   4.046695   0 #> 819 501.0740207   2.547263   0 #> 820 502.8364346   3.137563   0 #> 821 500.4488375   3.280445   0 #> 822 531.1930401   3.157339   0 #> 823 507.9607671   4.047717   0 #> 824 500.1437821   3.748885   0 #> 825 794.6123160   3.061980   0 #> 826 654.7407411   2.755896   0 #> 827 514.9168812   2.851696   0 #> 828 504.2071000   2.549171   0 #> 829 500.1331505   3.289391   0 #> 830 500.2370230   2.768878   0 #> 831 660.2253621   2.730563   0 #> 832 500.0303041   3.646903   0 #> 833 500.1953694   2.816484   0 #> 834 502.3839948   2.870695   0 #> 835 581.3321431   3.290438   0 #> 836 500.2864550   4.501262   0 #> 837 523.5023461   2.500357   0 #> 838 500.2315846   2.826447   0 #> 839 639.1342433   2.679975   0 #> 840 520.8311023   2.627184   0 #> 841 530.0150924   2.758401   0 #> 842 503.1817573   2.601101   0 #> 843 543.2577887   2.726590   0 #> 844 507.6852708   3.658174   0 #> 845 503.0239276   2.848211   0 #> 846 501.0922155   2.984751   0 #> 847 872.3550310   2.660351   0 #> 848 500.5777629   2.678499   0 #> 849 831.2097129   3.172998   0 #> 850 506.5582482   2.760256   0 #> 851 501.0600309   3.157677   0 #> 852 503.7791827   2.685857   0 #> 853 600.9760845   3.270096   0 #> 854 501.1162902   2.944432   0 #> 855 592.8105000   2.680997   0 #> 856 500.9109880   3.896534   0 #> 857 500.3242324   3.898870   0 #> 858 632.9250507   2.612556   0 #> 859 501.2469819   2.741548   0 #> 860 504.8494267   3.233766   0 #> 861 500.0484226   2.973070   0 #> 862 500.0172754   2.844993   0 #> 863 514.6103482   2.564942   0 #> 864 523.1990746   2.633346   0 #> 865 598.1521493   2.510725   0 #> 866 500.0949005   3.324568   0 #> 867 504.0392762   2.653654   0 #> 868 526.4822349   2.918378   0 #> 869 500.2418039   2.511261   0 #> 870 500.2545141   2.670611   0 #> 871 600.3104531   2.527493   0 #> 872 520.8237673   3.065634   0 #> 873 501.8717658   3.338275   0 #> 874 731.5691501   2.824427   0 #> 875 503.5358637   2.737449   0 #> 876 501.2587966   2.545496   0 #> 877 506.0933479   2.920473   0 #> 878 913.6215021   2.529604   0 #> 879 500.2750556   3.032568   0 #> 880 629.2778648   3.333582   0 #> 881 560.4176819   2.660612   0 #> 882 500.2071038   3.500569   0 #> 883 532.1028426   3.361783   0 #> 884 636.8064110   2.521683   0 #> 885 503.0845322   2.551065   0 #> 886 500.2065603   2.831066   0 #> 887 812.9383814   2.562680   0 #> 888 500.5727077   2.574952   0 #> 889 500.4239512   2.574163   0 #> 890 624.9300562   3.038799   0 #> 891 500.6846376   2.512732   0 #> 892 684.6491605   2.622443   0 #> 893 500.1439430   2.675475   0 #> 894 813.4317686   2.799583   0 #> 895 567.8862103   2.757400   0 #> 896 421.4614511   2.602950   1 #> 897   0.4688012   3.243644   1 #> 898 149.3060472   2.780383   1 #> 899 684.3353286   2.556921   1 #> 900 682.8987896   2.726071   1 #> 901 616.7429304   3.177966   1 #> 902 111.6645518   2.672504   1 #> 903 694.6311269   3.076160   1 #> 904 795.4999532   2.751715   1 #> 905 466.7302961   2.519764   1 #> 906 523.3832668   2.680974   1 #> 907 468.1827356   2.774919   1 #> 908 659.5847111   2.557369   1 #> 909 719.3193445   3.422406   1 #> 910 992.7964415   3.375077   1 #> 911  51.4506970   2.986013   1 #> 912 865.8492761   2.765992   1 #> 913 957.5018350   2.656440   1 #> 914 778.7686349   2.582489   1 #> 915 701.6438709   3.219273   1 #> 916 765.2389307   2.522148   1 #> 917 507.6253072   2.910370   1 #> 918 993.8028294   2.766838   1 #> 919 362.4011793   3.757668   1 #> 920 511.9411796   3.141976   1 #> 921  54.5654076   4.494328   1 #> 922   5.5279857   2.884888   1 #> 923 427.3892716   2.563644   1 #> 924 444.0218722   3.087230   1 #> 925 348.4769315   2.505062   1 #> 926 146.8490066   2.566991   1 #> 927 298.4616118   2.581324   1 #> 928 792.3034367   2.618031   1 #> 929 942.7643176   2.594109   1 #> 930 322.1972559   2.944094   1 #> 931 109.8203033   2.770074   1 #> 932 192.8265211   3.003072   1 #> 933 520.8352506   2.631310   1 #> 934 136.7578730   3.329502   1 #> 935 607.5764815   3.311989   1 #> 936  34.5734744   3.480446   1 #> 937 213.5900413   3.168811   1 #> 938 639.3521302   2.696670   1 #> 939 836.1315916   2.725412   1 #> 940 506.9763176   2.710687   1 #> 941 484.4189957   2.684645   1 #> 942  23.8175499   3.585357   1 #> 943 147.0960488   3.103947   1 #> 944 908.5783272   2.566657   1 #> 945 662.4164858   3.624372   1 #> 946 671.9281671   2.702868   1 #> 947 939.8430444   2.935393   1 #> 948  72.9626350   2.752880   1 #> 949 206.8480577   2.806685   1 #> 950 381.1185467   2.531922   1 #> 951 677.0225624   4.353930   1 #> 952 902.9259866   2.833867   1 #> 953 543.9743837   2.678105   1 #> 954 293.2528439   2.523916   1 #> 955 954.4454010   4.043756   1 #> 956 438.8717709   2.656262   1 #> 957 985.8880746   3.673804   1 #> 958 979.1955862   3.148075   1 #> 959 556.3708977   3.091918   1 #> 960 589.4805640   3.029685   1 #> 961 744.9893057   4.043131   1 #> 962 343.6606841   2.988719   1 #> 963 609.0322472   2.526035   1 #> 964  19.2674494   2.578479   1 #> 965 712.3121361   2.867225   1 #> 966 274.1537530   2.504834   1 #> 967 635.0305537   2.558103   1 #> 968 309.0896728   2.506285   1 #> 969 472.8760584   2.555437   1 #> 970 930.5491198   2.586692   1 #> 971 824.1245309   3.609978   1 #> 972 491.9227040   2.800037   1 #> 973 532.7060469   3.851534   1 #> 974 955.7475001   3.170255   1 #> 975 641.1419231   2.533164   1 #> 976 643.5486565   2.710139   1 #> 977 767.0260582   2.545932   1 #> 978 808.0993651   2.648566   1 #> 979 610.7757420   2.814983   1 #> 980 406.4576940   2.951093   1 #> 981  57.9766971   2.608939   1 #> 982 730.0349518   2.632256   1 #> 983 833.9775389   2.512394   1 #> 984 685.3939213   2.564401   1 #> 985 228.5524432   2.752321   1 #> 986 187.0885191   2.587034   1 #> 987 442.8415815   3.084493   1 #> 988 676.2522128   3.182904   1 #> 989 889.9147073   2.752446   1 #> 990 828.2686628   2.647310   1 #> 991 274.4141805   3.175161   1 #> 992 918.4938143   2.660020   1 #>  #> [[3]] #>            ts magnitudes gen #> 1   949.55325   2.676048   2 #> 2   500.19653   3.214636   2 #> 3   501.67442   2.751790   2 #> 4   500.28290   2.925917   2 #> 5   503.29729   2.678949   2 #> 6   757.54592   2.855630   2 #> 7   515.81981   2.904756   2 #> 8   504.37700   3.379866   2 #> 9   503.64403   2.563169   2 #> 10  501.47452   2.686097   2 #> 11  500.18365   3.010341   2 #> 12  505.87430   2.623967   2 #> 13  537.84717   3.620961   2 #> 14  537.69868   2.643051   2 #> 15  503.37584   2.610665   2 #> 16  501.81823   2.680214   2 #> 17  511.88592   3.121196   2 #> 18  515.50715   2.964983   2 #> 19  671.50217   4.359197   2 #> 20  504.06855   2.974708   2 #> 21  527.34474   3.303462   2 #> 22  504.91805   2.684910   2 #> 23  574.76132   2.565857   2 #> 24  503.90875   2.787739   2 #> 25  538.98950   3.719742   2 #> 26  513.86877   3.121377   2 #> 27  522.92572   2.696312   2 #> 28  504.15750   2.552976   2 #> 29  534.53406   2.525643   2 #> 30  675.19165   4.363384   2 #> 31  662.28975   3.652606   2 #> 32  504.14741   2.852859   2 #> 33  504.26430   3.413068   2 #> 34  509.08154   2.620010   2 #> 35  504.41508   2.507498   2 #> 36  500.99706   2.557008   2 #> 37  778.95046   3.131631   2 #> 38  501.14932   2.728981   2 #> 39  904.36991   2.827157   2 #> 40  907.66710   2.618348   2 #> 41  908.26212   2.930065   2 #> 42  908.92232   2.715785   2 #> 43  909.08620   3.460967   2 #> 44  910.84375   2.979901   2 #> 45  907.26195   2.966996   2 #> 46  907.94989   2.885153   2 #> 47  969.84929   3.250469   2 #> 48  976.48323   2.864133   2 #> 49  925.60462   2.537921   2 #> 50  911.20698   2.522098   2 #> 51  944.97023   2.772804   2 #> 52  907.85110   2.632807   2 #> 53  933.49231   2.520711   2 #> 54  919.74394   2.687494   2 #> 55  911.18566   2.950782   2 #> 56  907.30145   2.571706   2 #> 57  911.67672   2.707733   2 #> 58  917.21011   3.207218   2 #> 59  908.67948   2.855201   2 #> 60  907.28300   2.693055   2 #> 61  912.44007   2.810330   2 #> 62  940.60819   2.985602   2 #> 63  919.41829   3.172263   2 #> 64  934.10812   2.530330   2 #> 65  933.20681   2.542785   2 #> 66  923.97470   2.504528   2 #> 67  910.27666   2.852476   2 #> 68  909.31223   2.936996   2 #> 69  941.84314   2.608361   2 #> 70  911.02948   2.934312   2 #> 71  976.60697   2.670816   2 #> 72  907.38226   2.536046   2 #> 73  921.11995   2.592302   2 #> 74  907.77611   3.338579   2 #> 75  907.89917   4.597607   2 #> 76  908.43500   2.579649   2 #> 77  928.77067   2.668026   2 #> 78  968.14712   2.568448   2 #> 79  911.79994   2.603963   2 #> 80  909.14149   2.609099   2 #> 81  907.41795   3.189826   2 #> 82  913.34706   3.792580   2 #> 83  907.27921   3.236738   2 #> 84  981.75393   2.560139   2 #> 85  907.73453   2.786258   2 #> 86  979.59163   4.461329   2 #> 87  912.56817   3.066348   2 #> 88  922.24461   2.776166   2 #> 89  912.68611   3.050280   2 #> 90  936.52794   2.857563   2 #> 91  922.09451   2.967288   2 #> 92  932.69475   2.756928   2 #> 93  907.48480   2.662490   2 #> 94  949.39822   3.303588   2 #> 95  909.45822   2.664838   2 #> 96  910.18473   2.702117   2 #> 97  909.47805   2.600559   2 #> 98  909.16370   3.242402   2 #> 99  520.42079   3.358988   2 #> 100 531.84334   2.529243   2 #> 101 501.30242   2.849758   2 #> 102 511.75339   2.692028   2 #> 103 541.36707   2.950568   2 #> 104 580.56423   2.699471   2 #> 105 518.97820   3.367920   2 #> 106 502.66186   2.593051   2 #> 107 945.66189   3.063980   2 #> 108 502.66830   2.887763   2 #> 109 503.77128   2.639556   2 #> 110 718.32219   3.114273   2 #> 111 507.28066   3.020801   2 #> 112 507.03558   3.092626   2 #> 113 515.95750   2.632446   2 #> 114 523.18461   2.819752   2 #> 115 655.77120   2.620980   2 #> 116 523.73518   3.428030   2 #> 117 602.59617   3.098875   2 #> 118 540.59400   2.660021   2 #> 119 783.69041   3.045158   2 #> 120 570.45527   3.193708   2 #> 121 523.81611   2.622486   2 #> 122 530.38682   4.049862   2 #> 123 524.47860   2.638325   2 #> 124 522.05928   2.929637   2 #> 125 505.16405   3.055841   2 #> 126 762.44969   2.820914   2 #> 127 531.04186   2.969222   2 #> 128 542.68701   3.213306   2 #> 129 505.17007   3.003505   2 #> 130 653.71728   2.691952   2 #> 131 505.77094   4.155287   2 #> 132 817.51084   3.279557   2 #> 133 508.36510   2.900074   2 #> 134 556.67743   2.733234   2 #> 135 502.85497   2.835841   2 #> 136 528.76634   2.525230   2 #> 137 517.47916   4.310488   2 #> 138 506.09861   2.510487   2 #> 139 539.26386   2.783211   2 #> 140 503.63529   2.958696   2 #> 141 522.47673   2.514905   2 #> 142 503.33006   3.831394   2 #> 143 508.53753   3.013856   2 #> 144 519.74773   3.244109   2 #> 145 505.75384   3.183902   2 #> 146 504.25153   3.023555   2 #> 147 506.38853   2.956566   2 #> 148 504.25512   2.530512   2 #> 149 538.62330   2.726732   2 #> 150 655.62704   2.510582   2 #> 151 528.40715   3.903626   2 #> 152 500.96134   2.656239   2 #> 153 570.76331   2.836958   2 #> 154 995.18382   2.569344   2 #> 155 735.67912   2.507733   2 #> 156 508.56123   3.191473   2 #> 157 922.57355   2.529601   2 #> 158 843.58437   2.525876   2 #> 159 512.21568   2.905896   2 #> 160 601.06363   4.260872   2 #> 161 649.53698   3.393549   2 #> 162 512.09419   3.205435   2 #> 163 586.95274   3.050892   2 #> 164 512.08844   2.615807   2 #> 165 556.13489   3.857295   2 #> 166 512.30408   2.559347   2 #> 167 502.77216   2.590398   2 #> 168 500.36510   2.795027   2 #> 169 503.87107   3.436762   2 #> 170 548.30256   2.587460   2 #> 171 501.13425   2.690924   2 #> 172 511.46836   2.842364   2 #> 173 765.60743   3.372984   2 #> 174 738.86110   2.845390   2 #> 175 554.76059   2.743239   2 #> 176 657.22256   2.792113   2 #> 177 500.21648   3.087121   2 #> 178 502.84589   3.373041   2 #> 179 500.08799   2.506931   2 #> 180 783.13508   3.063979   2 #> 181 501.34960   2.793772   2 #> 182 503.61157   3.027675   2 #> 183 600.01968   3.654311   2 #> 184 526.56063   3.490729   2 #> 185 503.22813   2.674922   2 #> 186 513.86812   2.529972   2 #> 187 508.21501   2.965421   2 #> 188 507.88603   2.823695   2 #> 189 658.04185   3.065893   2 #> 190 507.77710   2.731308   2 #> 191 511.52932   2.568397   2 #> 192 572.40889   2.656893   2 #> 193 857.32184   2.528094   2 #> 194 534.88126   2.833315   2 #> 195 587.79422   3.006959   2 #> 196 508.34423   3.101389   2 #> 197 510.59438   3.958084   2 #> 198 650.38537   2.660956   2 #> 199 509.10678   2.847254   2 #> 200 531.95480   3.093372   2 #> 201 805.83863   3.400625   2 #> 202 508.69036   3.781338   2 #> 203 522.32983   3.269604   2 #> 204 515.85665   2.907959   2 #> 205 507.52096   3.194824   2 #> 206 526.80431   3.074238   2 #> 207 844.30543   3.775484   2 #> 208 507.58226   2.927353   2 #> 209 507.65891   2.533234   2 #> 210 994.37997   2.737458   2 #> 211 507.91897   2.670501   2 #> 212 509.77942   2.643409   2 #> 213 516.03063   2.570918   2 #> 214 507.94099   2.997607   2 #> 215 507.51417   2.643155   2 #> 216 508.04044   2.731610   2 #> 217 533.58953   2.617035   2 #> 218 507.90563   2.554519   2 #> 219 541.73224   2.508725   2 #> 220 507.68189   3.192802   2 #> 221 534.01352   2.782125   2 #> 222 689.49644   3.366669   2 #> 223 520.21415   3.593755   2 #> 224 565.55932   2.919929   2 #> 225 629.27125   2.948477   2 #> 226 521.12637   3.040007   2 #> 227 573.80490   3.576067   2 #> 228 523.80476   2.566641   2 #> 229 504.16817   2.556488   2 #> 230 561.06729   2.963678   2 #> 231 511.30666   2.518527   2 #> 232 510.18313   2.790879   2 #> 233 564.25074   2.691300   2 #> 234 508.23457   2.613035   2 #> 235 514.82049   2.723353   2 #> 236 690.84681   2.571146   2 #> 237 591.97180   2.989782   2 #> 238 736.22977   2.594801   2 #> 239 600.62635   2.933142   2 #> 240 553.08115   3.450276   2 #> 241 570.48076   2.554272   2 #> 242 509.65264   3.577461   2 #> 243 839.88540   3.457069   2 #> 244 565.55933   3.245718   2 #> 245 760.64377   2.813981   2 #> 246 796.27023   2.564046   2 #> 247 804.67833   2.532944   2 #> 248 813.33994   3.183015   2 #> 249 516.10579   3.589490   2 #> 250 509.49586   2.533478   2 #> 251 536.41851   3.006337   2 #> 252 571.93010   3.163965   2 #> 253 502.18638   4.108274   2 #> 254 524.99205   2.848392   2 #> 255 829.77159   2.549434   2 #> 256 504.49911   2.784267   2 #> 257 514.10615   3.058240   2 #> 258 519.54299   2.679206   2 #> 259 536.64571   2.603429   2 #> 260 548.17427   3.170449   2 #> 261 651.68916   3.166798   2 #> 262 525.11215   2.607832   2 #> 263 528.79477   2.682895   2 #> 264 610.05225   2.849954   2 #> 265 739.99460   4.025304   2 #> 266 686.18020   3.370931   2 #> 267 505.38747   3.262733   2 #> 268 519.53833   2.663052   2 #> 269 752.88134   2.883720   2 #> 270 533.86289   3.769588   2 #> 271 533.86510   2.834170   2 #> 272 532.42398   2.894065   2 #> 273 564.29971   3.103591   2 #> 274 564.74320   3.205670   2 #> 275 600.58201   2.592071   2 #> 276 579.22380   2.799257   2 #> 277 531.70036   2.792306   2 #> 278 655.30349   2.584227   2 #> 279 574.46966   2.528936   2 #> 280 555.16431   2.544320   2 #> 281 553.95108   2.914955   2 #> 282 653.35030   3.295521   2 #> 283 551.21303   3.071803   2 #> 284 532.52437   2.565561   2 #> 285 535.76570   2.638768   2 #> 286 537.08306   3.163989   2 #> 287 532.72728   2.514045   2 #> 288 532.35386   2.767440   2 #> 289 573.50396   3.269388   2 #> 290 651.30467   2.695508   2 #> 291 539.33249   3.091947   2 #> 292 532.34981   2.942323   2 #> 293 532.52118   3.259715   2 #> 294 533.59705   2.602366   2 #> 295 701.05697   2.622642   2 #> 296 533.71449   2.741526   2 #> 297 536.72998   3.666403   2 #> 298 532.42584   2.694436   2 #> 299 534.31703   2.551532   2 #> 300 544.07491   4.123035   2 #> 301 546.81980   3.088790   2 #> 302 537.15242   2.955069   2 #> 303 532.30700   2.653038   2 #> 304 532.39131   2.785032   2 #> 305 590.65364   2.535438   2 #> 306 839.58423   3.532599   2 #> 307 667.89369   3.272365   2 #> 308 668.25581   2.816953   2 #> 309 842.97552   4.306246   2 #> 310 695.30786   2.692900   2 #> 311 667.45084   2.594800   2 #> 312 673.12575   2.780478   2 #> 313 957.80822   2.549972   2 #> 314 668.35467   3.356825   2 #> 315 667.47543   2.766098   2 #> 316 667.48265   2.794744   2 #> 317 505.87742   2.542660   2 #> 318 977.94285   4.840120   2 #> 319 500.84871   2.809444   2 #> 320 545.55564   3.080320   2 #> 321 501.70521   2.684323   2 #> 322 742.03607   2.643446   2 #> 323 506.42966   3.271395   2 #> 324 746.23452   2.551093   2 #> 325 798.94933   3.589960   2 #> 326 507.37725   3.191272   2 #> 327 501.08225   2.679730   2 #> 328 520.14022   3.239805   2 #> 329 550.24656   2.773343   2 #> 330 500.35077   3.280969   2 #> 331 627.20835   3.138280   2 #> 332 765.98278   2.650206   2 #> 333 536.76964   3.986464   2 #> 334 500.47246   2.824481   2 #> 335 507.09189   2.865475   2 #> 336 500.32681   2.582417   2 #> 337 510.37930   3.367180   2 #> 338 506.49010   3.098209   2 #> 339 672.94313   2.741890   2 #> 340 500.32438   2.670050   2 #> 341 949.32541   2.609861   2 #> 342 511.66662   2.520771   2 #> 343 800.22203   2.621187   2 #> 344 660.15158   2.819624   2 #> 345 529.89655   2.970861   2 #> 346 938.85469   2.655709   2 #> 347 619.58444   2.628847   2 #> 348 501.99171   2.551491   2 #> 349 551.74969   3.373839   2 #> 350 620.93760   2.856903   2 #> 351 505.76292   4.200881   2 #> 352 543.58259   3.836692   2 #> 353 677.90617   2.605144   2 #> 354 520.04393   3.152262   2 #> 355 505.07754   2.551528   2 #> 356 501.89012   3.182937   2 #> 357 744.18612   2.590307   2 #> 358 505.13024   2.638739   2 #> 359 505.00732   2.985510   2 #> 360 510.58991   3.675834   2 #> 361 516.99274   4.370183   2 #> 362 514.83038   2.630755   2 #> 363 514.69942   3.953068   2 #> 364 521.43094   2.602015   2 #> 365 650.46733   2.565371   2 #> 366 505.73540   2.592816   2 #> 367 897.88601   2.841981   2 #> 368 503.77036   3.011749   2 #> 369 504.32432   2.638694   2 #> 370 580.32880   2.644340   2 #> 371 657.58669   3.386913   2 #> 372 508.16186   4.020554   2 #> 373 501.79639   3.128308   2 #> 374 925.45276   3.212706   2 #> 375 769.50018   2.612196   2 #> 376 533.92159   2.535642   2 #> 377 579.34789   3.108805   2 #> 378 513.74256   3.198153   2 #> 379 515.57026   2.546057   2 #> 380 513.86019   2.659302   2 #> 381 742.44507   2.724760   2 #> 382 973.76294   3.217864   2 #> 383 704.95916   2.841409   2 #> 384 730.06331   3.062146   2 #> 385 700.06178   2.573025   2 #> 386 702.19922   2.598459   2 #> 387 701.28271   3.317552   2 #> 388 700.45728   2.737495   2 #> 389 547.82589   2.663075   2 #> 390 561.08460   2.806573   2 #> 391 501.96548   2.574069   2 #> 392 502.29314   2.642704   2 #> 393 506.36124   2.869873   2 #> 394 506.23371   2.855196   2 #> 395 516.20934   2.549267   2 #> 396 564.96887   2.970388   2 #> 397 634.62460   2.572350   2 #> 398 533.89000   2.511244   2 #> 399 590.40838   3.360598   2 #> 400 501.98109   2.698784   2 #> 401 500.28486   3.130123   2 #> 402 837.74810   3.400430   2 #> 403 550.81888   2.793756   2 #> 404 500.19209   2.508858   2 #> 405 508.28904   2.951411   2 #> 406 660.34067   2.962218   2 #> 407 500.14538   3.053709   2 #> 408 594.40201   2.606317   2 #> 409 507.24373   2.698318   2 #> 410 965.30900   2.574709   2 #> 411 501.21106   2.502311   2 #> 412 539.01439   2.613853   2 #> 413 512.30145   2.575326   2 #> 414 548.82775   3.691075   2 #> 415 506.61585   3.431565   2 #> 416 510.48732   2.638618   2 #> 417 501.08118   2.556349   2 #> 418 506.06158   2.650123   2 #> 419 591.77514   2.606118   2 #> 420 500.47646   2.515701   2 #> 421 601.28748   2.823614   2 #> 422 506.11563   2.937690   2 #> 423 626.27650   3.084240   2 #> 424 501.30485   2.833185   2 #> 425 532.98739   2.610972   2 #> 426 501.48013   2.984973   2 #> 427 812.65511   5.326713   2 #> 428 860.26616   2.547634   2 #> 429  61.66801   2.726937   2 #> 430  86.14508   2.819961   2 #> 431  55.08729   2.738797   2 #> 432  72.05924   2.892027   2 #> 433  58.76123   4.571723   2 #> 434 261.06763   2.799719   2 #> 435  59.93063   2.876838   2 #> 436 145.25121   2.967153   2 #> 437 344.67308   3.710544   2 #> 438 452.17011   2.625149   2 #> 439 444.62406   3.772652   2 #> 440 126.89488   3.408922   2 #> 441  38.96982   2.700054   2 #> 442 663.80055   2.781860   2 #> 443 252.81468   2.824458   2 #> 444 693.56893   2.618128   2 #> 445 681.06970   2.870776   2 #> 446 748.76322   2.704177   2 #> 447 702.27614   2.600864   2 #> 448 679.85516   3.552743   2 #> 449 677.03641   2.898764   2 #> 450 569.24083   2.871358   2 #> 451 958.19678   2.999775   2 #> 452 569.93817   3.081265   2 #> 453 744.99019   2.931044   2 #> 454 635.73214   2.853139   2 #> 455 824.59691   3.359433   2 #> 456 571.48039   2.860823   2 #> 457 700.33853   2.584005   2 #> 458 829.81838   2.758171   2 #> 459 275.06159   2.709434   2 #>  #> [[4]] #>            ts magnitudes gen #> 1   557.79405   3.408352   3 #> 2   515.51787   2.845926   3 #> 3   638.04095   4.011755   3 #> 4   673.34784   3.806045   3 #> 5   795.60783   2.685209   3 #> 6   671.91809   3.481190   3 #> 7   672.71797   2.953610   3 #> 8   672.14186   2.672923   3 #> 9   672.27793   3.092814   3 #> 10  673.54012   3.102390   3 #> 11  817.64433   4.330442   3 #> 12  713.08004   3.130567   3 #> 13  686.96713   3.134756   3 #> 14  528.07986   2.627256   3 #> 15  513.90593   2.919420   3 #> 16  676.73121   3.702308   3 #> 17  675.83414   3.255522   3 #> 18  675.85906   2.595110   3 #> 19  675.28653   2.943490   3 #> 20  691.82402   3.416974   3 #> 21  504.36263   2.781856   3 #> 22  915.29987   3.552930   3 #> 23  918.39606   2.778148   3 #> 24  909.58293   2.932921   3 #> 25  908.77420   2.989820   3 #> 26  908.34644   2.548894   3 #> 27  952.47307   2.508472   3 #> 28  964.01994   2.624186   3 #> 29  973.22580   2.626587   3 #> 30  908.05833   2.896668   3 #> 31  910.24616   3.329705   3 #> 32  909.58310   3.706915   3 #> 33  914.94167   2.503950   3 #> 34  913.54010   2.759288   3 #> 35  913.39760   2.813651   3 #> 36  909.72177   2.579820   3 #> 37  980.52010   2.996219   3 #> 38  979.65626   2.532995   3 #> 39  981.61516   2.791516   3 #> 40  979.70923   2.747236   3 #> 41  925.06007   2.534476   3 #> 42  949.57341   2.907179   3 #> 43  804.10779   2.576637   3 #> 44  950.79239   3.808159   3 #> 45  664.15599   2.661637   3 #> 46  537.91436   2.873527   3 #> 47  616.34133   3.129277   3 #> 48  510.93759   3.092843   3 #> 49  507.01764   2.749202   3 #> 50  506.97867   3.596227   3 #> 51  505.80366   2.923643   3 #> 52  506.23119   2.787657   3 #> 53  956.42457   3.061774   3 #> 54  517.11318   2.795152   3 #> 55  517.50161   3.804110   3 #> 56  517.58014   3.355654   3 #> 57  520.56401   3.144277   3 #> 58  542.30684   2.655367   3 #> 59  549.07507   3.426553   3 #> 60  519.17421   3.033099   3 #> 61  543.43571   2.601768   3 #> 62  544.38017   2.839776   3 #> 63  530.65063   3.197478   3 #> 64  531.01432   2.559028   3 #> 65  995.20827   2.889528   3 #> 66  601.87249   2.672663   3 #> 67  680.84400   3.120375   3 #> 68  558.66722   3.034363   3 #> 69  559.70862   2.619858   3 #> 70  783.59076   2.880837   3 #> 71  604.82183   3.038743   3 #> 72  757.48085   2.590751   3 #> 73  806.21797   3.704494   3 #> 74  528.45502   2.589425   3 #> 75  508.10031   2.635641   3 #> 76  511.98014   2.870855   3 #> 77  521.56056   2.755499   3 #> 78  520.21464   2.502235   3 #> 79  593.99862   2.901658   3 #> 80  643.37610   2.522602   3 #> 81  565.68501   2.993070   3 #> 82  508.75611   2.607439   3 #> 83  689.58172   2.733656   3 #> 84  657.66979   2.610737   3 #> 85  741.61799   5.610837   3 #> 86  948.32641   2.526898   3 #> 87  832.61461   2.617479   3 #> 88  775.48912   2.694561   3 #> 89  582.84654   3.378820   3 #> 90  682.49583   2.881067   3 #> 91  579.35973   2.619715   3 #> 92  579.57111   2.567013   3 #> 93  553.97249   3.418924   3 #> 94  828.95808   2.702280   3 #> 95  537.12023   2.539946   3 #> 96  536.82762   2.631669   3 #> 97  539.00237   3.011771   3 #> 98  555.28581   3.126838   3 #> 99  544.20986   2.603611   3 #> 100 776.17982   3.496422   3 #> 101 687.14788   3.006839   3 #> 102 554.52745   2.923213   3 #> 103 544.74041   2.702776   3 #> 104 546.89589   2.569187   3 #> 105 546.25348   2.666709   3 #> 106 591.48057   2.876421   3 #> 107 840.18142   2.995629   3 #> 108 668.71075   2.810555   3 #> 109 845.96853   2.785140   3 #> 110 920.40704   2.586780   3 #> 111 843.09405   2.614022   3 #> 112 862.90303   2.907962   3 #> 113 958.60646   2.721653   3 #> 114 669.46334   2.700003   3 #> 115 506.96376   3.457036   3 #> 116 978.95332   2.565033   3 #> 117 978.45871   2.936403   3 #> 118 978.34192   2.628660   3 #> 119 978.30561   3.272282   3 #> 120 980.43831   2.592321   3 #> 121 979.04512   3.210521   3 #> 122 978.48123   3.046729   3 #> 123 983.09044   2.763788   3 #> 124 980.24679   2.966489   3 #> 125 978.07126   2.578068   3 #> 126 981.37659   3.790428   3 #> 127 981.28691   3.033801   3 #> 128 979.28936   2.769479   3 #> 129 985.44805   3.051431   3 #> 130 989.24527   2.631559   3 #> 131 986.91600   4.035581   3 #> 132 835.90043   2.749748   3 #> 133 520.18216   2.707650   3 #> 134 537.72233   3.210887   3 #> 135 540.60285   2.758713   3 #> 136 581.04601   2.681097   3 #> 137 660.65654   3.335180   3 #> 138 537.41650   3.353997   3 #> 139 543.84993   2.698037   3 #> 140 521.48985   2.759873   3 #> 141 511.40164   2.525133   3 #> 142 568.40057   2.520770   3 #> 143 568.44676   2.627213   3 #> 144 557.14579   2.549237   3 #> 145 815.41509   3.145926   3 #> 146 973.76386   2.688041   3 #> 147 999.37902   2.512445   3 #> 148 576.30753   2.953279   3 #> 149 517.93974   2.628027   3 #> 150 538.53009   4.037972   3 #> 151 533.73314   2.716403   3 #> 152 813.84430   2.648293   3 #> 153 819.13632   2.534920   3 #> 154 813.39309   2.964627   3 #> 155 851.64348   2.555231   3 #> 156 812.75490   2.839485   3 #> 157 829.46885   2.820941   3 #> 158 812.75368   3.190069   3 #> 159 904.90378   3.122207   3 #> 160 862.72055   3.683895   3 #> 161 812.67279   2.753029   3 #> 162 997.82029   3.396509   3 #> 163 812.70405   2.525441   3 #> 164 846.39334   2.724787   3 #> 165 839.85305   2.518345   3 #> 166 812.89144   3.393377   3 #> 167 812.85353   3.263461   3 #> 168 857.03018   2.637817   3 #> 169 813.95265   2.849582   3 #> 170 835.98095   2.836138   3 #> 171 812.97192   2.844005   3 #> 172 814.53402   2.740476   3 #> 173 817.88334   2.567480   3 #> 174 913.23177   2.707980   3 #> 175 812.88160   2.893250   3 #> 176 813.12220   2.598833   3 #> 177 812.65539   2.860278   3 #> 178 833.01513   2.724320   3 #> 179 813.79781   2.880948   3 #> 180 812.68728   2.886283   3 #> 181 817.88921   3.475757   3 #> 182 813.26405   2.569161   3 #> 183 813.01935   3.309683   3 #> 184 818.96773   2.618019   3 #> 185 897.52206   2.707291   3 #> 186 813.16845   2.945777   3 #> 187 813.26265   2.596013   3 #> 188  58.90001   3.094861   3 #> 189  58.93503   2.530397   3 #> 190  65.31702   3.594950   3 #> 191  58.78206   2.666447   3 #> 192  95.74335   2.584146   3 #> 193 647.75145   3.202845   3 #> 194 201.93239   3.130673   3 #> 195  59.23344   2.710855   3 #> 196 490.06695   2.726368   3 #> 197 444.82815   2.966651   3 #> 198 771.25512   2.581673   3 #> 199 681.20488   2.541346   3 #> 200 726.96632   3.442409   3 #> 201 830.03742   2.708099   3 #>  #> [[5]] #>            ts magnitudes gen #> 1   824.83119   2.853227   4 #> 2   638.05302   2.573947   4 #> 3   674.58922   2.968349   4 #> 4   673.62703   2.956298   4 #> 5   820.76989   2.862196   4 #> 6   845.64265   2.937859   4 #> 7   817.79634   2.958660   4 #> 8   714.42381   2.768523   4 #> 9   689.71184   4.207545   4 #> 10  678.59042   2.979852   4 #> 11  692.67188   3.329245   4 #> 12  942.34817   2.818398   4 #> 13  921.09994   2.734691   4 #> 14  980.71104   3.473605   4 #> 15  950.81104   3.628417   4 #> 16  688.49284   2.925926   4 #> 17  512.56996   2.679406   4 #> 18  507.86958   3.395474   4 #> 19  523.14824   2.619123   4 #> 20  956.46563   3.119245   4 #> 21  517.62631   2.524843   4 #> 22  518.70239   3.801915   4 #> 23  529.11219   2.725202   4 #> 24  635.84462   2.509660   4 #> 25  567.70165   3.211459   4 #> 26  515.80090   2.988950   4 #> 27  615.38021   2.623400   4 #> 28  660.81518   2.510605   4 #> 29  690.97112   2.618251   4 #> 30  748.26729   2.984750   4 #> 31  744.15535   2.544188   4 #> 32  756.45906   2.955105   4 #> 33  760.66562   2.712696   4 #> 34  750.43042   2.955871   4 #> 35  742.10695   2.592230   4 #> 36  809.55503   3.604712   4 #> 37  814.78246   3.020617   4 #> 38  742.42120   2.835783   4 #> 39  798.28278   2.529044   4 #> 40  800.20671   2.658646   4 #> 41  741.71374   2.929597   4 #> 42  743.63525   2.716845   4 #> 43  836.02934   2.989492   4 #> 44  742.25094   2.864272   4 #> 45  746.99224   2.986251   4 #> 46  741.82738   2.902991   4 #> 47  771.07813   3.248795   4 #> 48  784.77251   2.811216   4 #> 49  913.82945   3.047053   4 #> 50  744.97527   3.107748   4 #> 51  741.82388   2.924885   4 #> 52  811.56269   3.019603   4 #> 53  741.89548   2.526249   4 #> 54  742.13104   3.375399   4 #> 55  747.70408   2.603394   4 #> 56  780.65338   3.196593   4 #> 57  743.39235   2.979328   4 #> 58  742.26309   2.759083   4 #> 59  741.88068   2.819710   4 #> 60  745.54717   3.329558   4 #> 61  878.01229   2.521001   4 #> 62  883.42727   2.878060   4 #> 63  937.83919   2.728975   4 #> 64  957.69452   2.578768   4 #> 65  741.67665   2.646926   4 #> 66  742.03656   3.654933   4 #> 67  761.02155   2.849223   4 #> 68  741.68866   3.038761   4 #> 69  820.92838   3.131757   4 #> 70  758.28338   2.874773   4 #> 71  741.62562   2.565664   4 #> 72  797.89455   2.785684   4 #> 73  745.54555   2.615865   4 #> 74  800.55820   3.530089   4 #> 75  741.63530   2.615784   4 #> 76  743.65606   2.858656   4 #> 77  762.21074   2.701062   4 #> 78  742.39802   3.236429   4 #> 79  741.67103   2.927953   4 #> 80  743.73829   2.535753   4 #> 81  744.54250   2.876913   4 #> 82  744.45590   2.748993   4 #> 83  752.38074   2.882489   4 #> 84  747.46819   3.365553   4 #> 85  777.68449   2.879800   4 #> 86  749.67482   2.588127   4 #> 87  776.68981   3.524026   4 #> 88  747.57624   2.977347   4 #> 89  741.87355   2.531869   4 #> 90  847.82720   2.535413   4 #> 91  741.63918   3.093941   4 #> 92  742.34140   2.980390   4 #> 93  785.51765   2.888296   4 #> 94  778.20069   3.310533   4 #> 95  865.00971   2.871127   4 #> 96  989.45580   2.861718   4 #> 97  982.07705   2.511909   4 #> 98  992.43600   2.627338   4 #> 99  666.02921   3.381890   4 #> 100 828.17985   2.578971   4 #> 101 820.32178   6.272022   4 #> 102 538.53101   2.611911   4 #> 103 832.64724   3.458508   4 #> 104 907.89422   2.804496   4 #> 105 934.66714   2.602713   4 #> 106 867.01082   2.627368   4 #> 107 911.55550   2.671024   4 #> 108 832.34276   2.991072   4 #> 109 823.70399   2.565932   4 #> 110  82.06765   3.007941   4 #> 111 181.34858   3.420248   4 #> 112  78.38611   3.038470   4 #>  #> [[6]] #>           ts magnitudes gen #> 1   674.8468   3.126471   5 #> 2   714.8718   2.631455   5 #> 3   690.3195   3.011359   5 #> 4   690.0128   2.757488   5 #> 5   767.8242   2.558597   5 #> 6   981.3209   2.726004   5 #> 7   507.9402   2.854044   5 #> 8   517.7061   2.619645   5 #> 9   759.5859   2.965784   5 #> 10  957.7468   5.049703   5 #> 11  741.9265   2.591217   5 #> 12  745.0312   3.272595   5 #> 13  757.6563   3.132490   5 #> 14  871.0587   3.436226   5 #> 15  741.6840   2.827732   5 #> 16  786.0715   2.539593   5 #> 17  779.0111   2.520716   5 #> 18  989.5443   2.627151   5 #> 19  666.0679   2.502394   5 #> 20  669.3175   3.016505   5 #> 21  820.5910   3.911022   5 #> 22  887.6955   2.776206   5 #> 23  820.6682   3.427074   5 #> 24  904.6516   2.725580   5 #> 25  822.3242   3.024785   5 #> 26  820.9340   2.654828   5 #> 27  899.0778   2.644530   5 #> 28  820.4890   2.829064   5 #> 29  820.3954   3.285066   5 #> 30  820.6647   2.864874   5 #> 31  840.2038   2.767942   5 #> 32  872.7687   2.923747   5 #> 33  820.5092   2.623884   5 #> 34  820.3517   2.747002   5 #> 35  827.0821   2.825465   5 #> 36  820.8305   2.763133   5 #> 37  851.5864   2.570950   5 #> 38  924.0100   3.801370   5 #> 39  820.3369   2.601645   5 #> 40  823.6189   2.796795   5 #> 41  910.0186   2.624265   5 #> 42  820.3908   2.525722   5 #> 43  824.2127   2.527046   5 #> 44  839.1924   2.525041   5 #> 45  820.4548   2.718678   5 #> 46  870.9476   2.861659   5 #> 47  876.6881   2.640158   5 #> 48  822.2982   2.514046   5 #> 49  820.8801   2.800376   5 #> 50  820.3909   2.955132   5 #> 51  973.7911   3.156080   5 #> 52  920.6112   2.567887   5 #> 53  907.5165   3.830660   5 #> 54  820.3328   3.327257   5 #> 55  820.9044   2.924133   5 #> 56  820.3719   2.665863   5 #> 57  823.7954   2.904213   5 #> 58  824.2669   2.888880   5 #> 59  820.7431   2.534274   5 #> 60  828.7113   2.700661   5 #> 61  820.5179   3.201026   5 #> 62  830.3019   3.324250   5 #> 63  897.4735   2.590894   5 #> 64  936.2063   2.609081   5 #> 65  820.3244   2.709892   5 #> 66  838.2739   2.774725   5 #> 67  824.9775   2.818392   5 #> 68  855.7133   2.581801   5 #> 69  821.8844   3.097287   5 #> 70  820.6488   2.802839   5 #> 71  822.2391   2.700763   5 #> 72  821.0425   3.436788   5 #> 73  828.0570   2.580164   5 #> 74  820.3755   2.667789   5 #> 75  821.5111   2.591110   5 #> 76  820.3810   2.873488   5 #> 77  822.0061   3.536356   5 #> 78  821.6004   2.636894   5 #> 79  820.4320   3.522476   5 #> 80  829.2596   2.694306   5 #> 81  820.4676   2.766723   5 #> 82  820.9389   2.527435   5 #> 83  820.6872   2.535860   5 #> 84  820.5660   3.288446   5 #> 85  823.9084   2.815431   5 #> 86  823.8063   3.585997   5 #> 87  820.4199   2.552960   5 #> 88  820.8719   3.491145   5 #> 89  956.4924   3.507892   5 #> 90  820.8082   2.915236   5 #> 91  980.8202   2.549194   5 #> 92  820.3881   2.753998   5 #> 93  825.0907   3.100451   5 #> 94  825.8134   3.677313   5 #> 95  821.3038   2.734526   5 #> 96  964.5473   2.673378   5 #> 97  821.1359   2.908236   5 #> 98  820.8448   2.897389   5 #> 99  820.9188   2.965095   5 #> 100 824.2208   2.522911   5 #> 101 821.9220   2.558681   5 #> 102 821.5530   2.618256   5 #> 103 821.7166   2.846164   5 #> 104 820.4781   2.577399   5 #> 105 837.9162   2.802662   5 #> 106 822.2085   2.536180   5 #> 107 820.4508   3.175623   5 #> 108 820.5973   3.676275   5 #> 109 835.3456   2.568058   5 #> 110 820.3947   2.549521   5 #> 111 821.9729   3.163878   5 #> 112 860.5332   2.748872   5 #> 113 893.9003   2.612370   5 #> 114 830.6300   2.954415   5 #> 115 826.1416   2.795118   5 #> 116 849.0555   3.488538   5 #> 117 823.0594   2.563681   5 #> 118 821.2341   2.519105   5 #> 119 822.6527   2.647895   5 #> 120 820.6355   2.532783   5 #> 121 843.7384   3.469824   5 #> 122 820.4137   3.935406   5 #> 123 822.0553   2.656150   5 #> 124 821.7150   2.639681   5 #> 125 822.1118   3.247139   5 #> 126 825.8140   2.716753   5 #> 127 820.9379   2.904525   5 #> 128 827.7877   3.383704   5 #> 129 906.6944   2.907941   5 #> 130 820.5207   2.528152   5 #> 131 820.7216   3.100052   5 #> 132 886.2754   2.703592   5 #> 133 856.2476   3.053937   5 #> 134 823.9120   4.045032   5 #> 135 820.3803   2.772962   5 #> 136 820.3454   2.591796   5 #> 137 848.6880   2.900246   5 #> 138 837.2192   2.660431   5 #> 139 850.7948   2.507268   5 #> 140 852.0401   3.010046   5 #> 141 835.3214   2.931663   5 #> 142 820.4265   3.731479   5 #> 143 824.0730   2.644610   5 #> 144 820.7680   2.574403   5 #> 145 820.8130   3.802453   5 #> 146 824.7308   3.046664   5 #> 147 844.2247   4.460921   5 #> 148 820.3783   2.872067   5 #> 149 843.4732   2.804932   5 #> 150 821.5997   2.779426   5 #> 151 866.3784   2.558217   5 #> 152 838.1942   2.668148   5 #> 153 829.3629   2.690577   5 #> 154 820.3674   4.358249   5 #> 155 820.4878   3.003315   5 #> 156 820.4527   2.698485   5 #> 157 820.9147   3.368093   5 #> 158 831.2414   3.382885   5 #> 159 821.1608   2.513319   5 #> 160 824.4447   2.975935   5 #> 161 820.3307   3.903221   5 #> 162 841.9979   2.725388   5 #> 163 825.5886   2.780638   5 #> 164 820.3226   2.863222   5 #> 165 820.3811   3.567585   5 #> 166 869.0688   2.584264   5 #> 167 822.7969   2.523973   5 #> 168 836.6234   2.737374   5 #> 169 869.3503   2.656848   5 #> 170 831.9843   2.801429   5 #> 171 821.4408   3.277260   5 #> 172 850.0067   2.752393   5 #> 173 945.0411   2.617834   5 #> 174 826.8987   2.836178   5 #> 175 820.5348   3.391488   5 #> 176 820.3438   2.665034   5 #> 177 843.9849   3.208633   5 #> 178 820.6959   3.178119   5 #> 179 977.6839   3.424089   5 #> 180 820.8220   2.544656   5 #> 181 820.3285   2.831729   5 #> 182 980.7175   2.863571   5 #> 183 820.4762   2.547930   5 #> 184 821.2731   3.431466   5 #> 185 820.6317   2.883708   5 #> 186 820.7463   3.423279   5 #> 187 824.5408   2.524693   5 #> 188 820.4061   3.413307   5 #> 189 830.9401   2.665417   5 #> 190 880.0520   2.737402   5 #> 191 824.7612   2.732342   5 #> 192 820.3747   2.553119   5 #> 193 820.4153   4.314197   5 #> 194 853.4476   2.912120   5 #> 195 826.2127   2.693201   5 #> 196 837.1257   2.702098   5 #> 197 822.0831   4.028759   5 #> 198 831.0105   2.603025   5 #> 199 896.0624   2.610507   5 #> 200 935.9201   2.597954   5 #> 201 860.7599   2.544174   5 #> 202 825.7278   2.538626   5 #> 203 830.9506   2.716360   5 #> 204 821.0801   2.893184   5 #> 205 823.9369   2.709043   5 #> 206 856.2983   3.805855   5 #> 207 823.2513   2.838521   5 #> 208 820.4227   2.564367   5 #> 209 820.3369   3.100402   5 #> 210 820.8669   2.634772   5 #> 211 838.2956   2.695182   5 #> 212 832.7147   2.656084   5 #> 213 826.6504   2.784279   5 #> 214 985.3006   2.644110   5 #> 215 820.4046   2.798529   5 #> 216 820.7447   2.664450   5 #> 217 827.7183   3.535807   5 #> 218 831.5623   2.742780   5 #> 219 831.8472   2.754814   5 #> 220 823.1963   2.882398   5 #> 221 826.0967   2.902070   5 #> 222 820.4524   4.320085   5 #> 223 820.4856   3.144035   5 #> 224 825.3570   2.754235   5 #> 225 826.1815   2.775390   5 #> 226 902.2389   2.517993   5 #> 227 827.2356   3.171748   5 #> 228 823.6426   2.509099   5 #> 229 852.6444   2.812891   5 #> 230 820.4292   5.132413   5 #> 231 861.3586   2.858543   5 #> 232 833.9677   2.700104   5 #> 233 820.6523   2.734602   5 #> 234 831.4806   2.784719   5 #> 235 829.9524   3.022538   5 #> 236 820.3269   3.408082   5 #> 237 823.3364   4.125097   5 #> 238 820.3292   3.065595   5 #> 239 829.3995   2.967802   5 #> 240 821.4974   3.011640   5 #> 241 830.6139   3.551075   5 #> 242 827.9637   2.530967   5 #> 243 820.4441   3.075363   5 #> 244 825.9927   2.711175   5 #> 245 822.7041   2.663687   5 #> 246 820.3537   2.516679   5 #> 247 820.8102   2.813555   5 #> 248 867.6157   2.853033   5 #> 249 820.4539   2.539741   5 #> 250 820.3272   2.618991   5 #> 251 820.3828   2.768158   5 #> 252 829.7324   2.592662   5 #> 253 934.5948   2.798067   5 #> 254 826.7346   2.523269   5 #> 255 820.4393   2.980539   5 #> 256 846.5802   2.800478   5 #> 257 820.3714   2.794192   5 #> 258 820.3521   2.740794   5 #> 259 824.8444   2.527197   5 #> 260 848.7453   2.539061   5 #> 261 824.0848   2.651115   5 #> 262 821.2421   3.262928   5 #> 263 821.0113   2.786240   5 #> 264 830.6811   2.585925   5 #> 265 820.3481   2.577502   5 #> 266 849.2147   2.589823   5 #> 267 820.3729   2.687853   5 #> 268 822.2540   2.560237   5 #> 269 825.8138   3.327237   5 #> 270 825.1051   3.149344   5 #> 271 820.5486   2.529352   5 #> 272 890.2726   2.899840   5 #> 273 959.3660   2.829538   5 #> 274 821.1289   4.319554   5 #> 275 880.1706   2.855460   5 #> 276 930.7366   2.902198   5 #> 277 832.5177   2.500202   5 #> 278 920.0158   3.019190   5 #> 279 820.3415   2.577574   5 #> 280 820.7782   2.577910   5 #> 281 837.3733   2.626289   5 #> 282 820.4318   3.089646   5 #> 283 820.3636   2.806656   5 #> 284 820.4865   3.456721   5 #> 285 871.6293   3.027501   5 #> 286 820.8401   3.582303   5 #> 287 820.5272   2.762928   5 #> 288 870.4823   2.846419   5 #> 289 820.6458   2.669465   5 #> 290 834.0948   2.865900   5 #> 291 820.7340   3.190504   5 #> 292 894.3667   3.708416   5 #> 293 820.3237   2.513486   5 #> 294 821.9573   3.040704   5 #> 295 917.6428   2.971766   5 #> 296 889.7981   3.984657   5 #> 297 828.4197   2.768798   5 #> 298 820.5772   2.808766   5 #> 299 855.9751   2.809777   5 #> 300 856.5366   2.875120   5 #> 301 820.3997   2.935977   5 #> 302 832.7526   3.341935   5 #> 303 835.3978   2.745638   5 #> 304 823.7192   2.937202   5 #> 305 820.4464   2.804196   5 #> 306 839.2351   2.639712   5 #> 307 825.3032   2.523035   5 #> 308 820.4942   2.509453   5 #> 309 820.3745   2.677106   5 #> 310 820.3647   2.739880   5 #> 311 835.8692   3.721925   5 #> 312 821.1425   2.577044   5 #> 313 820.3587   2.533859   5 #> 314 952.5530   2.530775   5 #> 315 832.8706   3.036726   5 #> 316 821.0826   3.004332   5 #> 317 820.3437   2.641154   5 #> 318 824.1201   2.892672   5 #> 319 846.8289   2.717072   5 #> 320 823.9227   3.107924   5 #> 321 821.3223   2.528721   5 #> 322 822.2104   2.672728   5 #> 323 821.4918   4.288773   5 #> 324 902.7170   2.928344   5 #> 325 840.8459   3.153398   5 #> 326 847.4005   2.668122   5 #> 327 824.2413   2.522002   5 #> 328 820.4076   2.573912   5 #> 329 893.7551   2.560298   5 #> 330 827.7829   2.908766   5 #> 331 881.3260   2.514016   5 #> 332 820.5724   2.549638   5 #> 333 828.1068   2.680688   5 #> 334 820.9676   2.711279   5 #> 335 820.5474   2.664544   5 #> 336 820.4841   2.754825   5 #> 337 820.4151   2.706912   5 #> 338 820.9265   4.161568   5 #> 339 950.8876   4.185932   5 #> 340 842.5036   2.508677   5 #> 341 869.9671   2.689937   5 #> 342 821.2723   2.606614   5 #> 343 820.9060   3.123307   5 #> 344 844.1044   2.502886   5 #> 345 820.4479   2.705564   5 #> 346 832.6795   2.588643   5 #> 347 912.2689   2.994647   5 #> 348 337.6028   2.736609   5 #> 349 256.6853   2.522885   5 #>  #> [[7]] #>           ts magnitudes gen #> 1   678.2903   2.796589   6 #> 2   960.7207   3.540950   6 #> 3   978.3667   2.727649   6 #> 4   957.9175   3.175364   6 #> 5   957.8480   2.622299   6 #> 6   957.8081   2.798098   6 #> 7   958.0660   4.104216   6 #> 8   957.7525   2.734609   6 #> 9   957.9367   2.541787   6 #> 10  957.7858   2.855832   6 #> 11  958.0996   3.165965   6 #> 12  961.1400   2.857051   6 #> 13  958.5113   2.796075   6 #> 14  957.8136   3.191048   6 #> 15  761.9326   3.887117   6 #> 16  871.8123   2.556453   6 #> 17  749.1663   2.912337   6 #> 18  989.7971   5.145845   6 #> 19  821.1422   3.558242   6 #> 20  821.5243   3.248651   6 #> 21  842.9157   2.806733   6 #> 22  924.4203   2.591048   6 #> 23  872.5574   2.955792   6 #> 24  824.2861   2.540258   6 #> 25  841.6030   2.809212   6 #> 26  825.3179   2.507151   6 #> 27  822.4802   2.804024   6 #> 28  823.2719   2.757763   6 #> 29  821.0722   2.900103   6 #> 30  957.0050   3.027831   6 #> 31  956.5111   2.755235   6 #> 32  825.8438   2.576598   6 #> 33  825.6282   2.635566   6 #> 34  837.0742   2.623883   6 #> 35  849.1088   2.786895   6 #> 36  824.0079   3.131106   6 #> 37  845.0447   3.242106   6 #> 38  838.8846   3.317638   6 #> 39  862.2308   2.848468   6 #> 40  824.5258   3.290095   6 #> 41  848.9156   2.528563   6 #> 42  866.0964   3.065275   6 #> 43  963.9883   2.871459   6 #> 44  986.6713   2.761532   6 #> 45  844.4624   2.596307   6 #> 46  848.0002   3.008107   6 #> 47  848.4321   3.199179   6 #> 48  844.4932   2.924645   6 #> 49  880.8376   2.544789   6 #> 50  844.2316   3.139169   6 #> 51  821.3850   3.026476   6 #> 52  820.3946   2.711893   6 #> 53  825.0349   2.625724   6 #> 54  820.5181   2.582087   6 #> 55  824.8473   3.724560   6 #> 56  821.2670   3.270672   6 #> 57  820.4796   3.488934   6 #> 58  820.8665   2.505091   6 #> 59  837.2648   2.770642   6 #> 60  820.5371   2.814871   6 #> 61  870.0105   2.549998   6 #> 62  821.0704   3.005543   6 #> 63  838.7902   2.545575   6 #> 64  820.6795   2.913540   6 #> 65  824.5033   2.856976   6 #> 66  824.5085   3.404868   6 #> 67  827.3855   2.662238   6 #> 68  980.1904   3.055928   6 #> 69  842.8221   3.297659   6 #> 70  900.8416   2.584921   6 #> 71  824.6348   2.742718   6 #> 72  865.5476   2.752307   6 #> 73  824.1531   3.417080   6 #> 74  825.7152   2.533852   6 #> 75  820.8070   2.668454   6 #> 76  825.0245   2.874033   6 #> 77  821.4011   2.974813   6 #> 78  821.5697   2.999670   6 #> 79  820.4911   3.521029   6 #> 80  825.6458   2.525587   6 #> 81  820.5562   2.564707   6 #> 82  821.5840   2.744834   6 #> 83  821.9348   2.858886   6 #> 84  820.4308   2.985976   6 #> 85  820.4755   2.779516   6 #> 86  882.8800   2.900321   6 #> 87  821.2911   2.585071   6 #> 88  820.4573   3.005070   6 #> 89  841.9404   2.784133   6 #> 90  823.6730   2.948754   6 #> 91  852.4068   3.482638   6 #> 92  921.8988   2.882901   6 #> 93  844.5021   2.782440   6 #> 94  823.4590   2.932248   6 #> 95  849.1360   2.619397   6 #> 96  845.2629   3.275405   6 #> 97  852.2040   3.107302   6 #> 98  824.9218   2.676352   6 #> 99  821.3603   2.550550   6 #> 100 821.3655   2.833165   6 #> 101 824.8453   2.713409   6 #> 102 960.5684   2.533640   6 #> 103 882.0205   3.178240   6 #> 104 821.6547   3.040229   6 #> 105 890.8987   2.572114   6 #> 106 905.2184   3.200568   6 #> 107 841.0970   2.697856   6 #> 108 837.6346   2.975086   6 #> 109 906.9006   2.571599   6 #> 110 821.1425   2.600221   6 #> 111 822.4121   2.964659   6 #> 112 820.9451   3.755582   6 #> 113 822.1168   3.310699   6 #> 114 837.4458   2.846319   6 #> 115 826.6862   2.986881   6 #> 116 970.4939   2.578239   6 #> 117 951.2963   2.872755   6 #> 118 950.8945   2.783728   6 #> 119 820.9282   2.619285   6 #>  #> [[8]] #>          ts magnitudes gen #> 1  957.9610   2.799849   7 #> 2  968.9151   2.984874   7 #> 3  762.4126   2.652003   7 #> 4  762.2888   3.381244   7 #> 5  752.1263   3.236514   7 #> 6  990.0700   2.577144   7 #> 7  990.2979   3.218287   7 #> 8  990.2035   3.623732   7 #> 9  989.8389   2.532552   7 #> 10 990.3966   2.790058   7 #> 11 993.1833   2.706023   7 #> 12 990.1354   3.226061   7 #> 13 991.3988   3.379487   7 #> 14 989.9404   3.747140   7 #> 15 989.9037   2.735297   7 #> 16 998.7616   2.621574   7 #> 17 992.2735   3.357090   7 #> 18 990.9171   2.976398   7 #> 19 839.1920   2.722040   7 #> 20 821.6477   3.044445   7 #> 21 827.4413   2.554574   7 #> 22 842.8701   2.595095   7 #> 23 829.6662   2.502341   7 #> 24 839.3059   2.619339   7 #> 25 821.4834   2.955858   7 #> 26 822.9029   3.569646   7 #> 27 824.5503   2.628491   7 #> 28 858.4485   2.961313   7 #> 29 828.7066   2.880362   7 #> 30 822.8458   3.386995   7 #> 31 919.5762   3.089292   7 #> 32 820.5927   2.645141   7 #> 33 839.2239   3.056235   7 #> 34 922.3475   2.580571   7 #> 35 873.9419   2.619211   7 #> 36 863.9758   2.537839   7 #> 37 821.4613   2.537105   7 #> 38 930.5395   2.762833   7 #>  #> [[9]] #>         ts magnitudes gen #> 1 762.6130   3.501894   8 #> 2 994.0511   3.526153   8 #> 3 993.4179   3.556078   8 #> 4 990.6961   2.614885   8 #> 5 872.2749   3.606719   8 #> 6 874.0505   2.617429   8 #>  #> [[10]] #>         ts magnitudes gen #> 1 995.3122   2.782872   9 #> 2 872.2750   3.269315   9 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Number cores used n.samp exceeds max.batch. Default 1","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 3.010207 2.977944 2.727194 2.656467 2.797035 3.236363 2.589347 2.557403 #>   [9] 2.848817 2.746119 2.528964 3.969873 2.714515 3.404716 2.565322 3.111796 #>  [17] 2.513325 3.126395 2.985492 3.096147 2.512656 2.689523 2.706942 2.882904 #>  [25] 2.981247 3.443782 2.825497 3.481875 2.656969 3.124641 2.586578 2.609621 #>  [33] 3.018054 3.585759 2.600237 2.500639 2.659313 3.062850 2.774295 2.741993 #>  [41] 3.131018 2.611436 2.521975 2.829056 3.112567 2.527060 2.608794 3.041858 #>  [49] 2.666134 3.636883 2.681933 3.630823 2.639567 3.642662 2.579450 2.574479 #>  [57] 4.477282 2.634228 4.815827 2.585137 3.108776 2.951415 3.437226 2.791552 #>  [65] 2.697979 2.807144 2.809329 2.700537 3.038435 3.033214 2.634267 3.837249 #>  [73] 2.738168 2.622650 3.214018 2.665314 2.648935 2.853661 2.834162 3.184234 #>  [81] 3.420943 3.044828 2.513568 2.523519 3.299773 3.070468 3.480425 2.817072 #>  [89] 2.719105 2.730526 2.767626 3.471171 2.571678 3.178097 2.843626 3.163106 #>  [97] 2.939514 2.875340 2.976611 3.496162"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore number compute cores use","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   500.0799   3.069963 #> 2   501.8686   2.568093 #> 3   518.6628   2.659556 #> 4   531.5754   2.574316 #> 5   500.2132   2.519218 #> 6   539.9867   3.690318 #> 7   638.4927   4.299014 #> 8   510.6262   2.521603 #> 9   500.1531   2.573876 #> 10  501.5937   2.590356 #> 11  500.9860   2.656973 #> 12  500.0778   2.518227 #> 13  656.4156   2.843291 #> 14  501.6785   3.003386 #> 15  500.0753   2.532397 #> 16  503.0449   2.684075 #> 17  517.8610   2.974439 #> 18  519.8132   3.449438 #> 19  542.3888   2.691417 #> 20  500.4154   3.094746 #> 21  937.6286   2.526500 #> 22  738.7756   3.080944 #> 23  502.9696   2.827339 #> 24  500.9494   3.007377 #> 25  500.0745   2.790658 #> 26  502.3221   2.558911 #> 27  502.7987   3.340848 #> 28  611.9643   2.869650 #> 29  502.7091   3.108157 #> 30  501.1895   2.597875 #> 31  996.6708   3.001033 #> 32  500.5432   2.746072 #> 33  501.8637   2.739142 #> 34  500.4367   2.530652 #> 35  500.9159   3.548269 #> 36  730.6214   2.682134 #> 37  501.4981   2.538276 #> 38  781.8431   2.871633 #> 39  500.0376   3.593369 #> 40  500.7752   3.389519 #> 41  500.3333   3.455301 #> 42  502.3976   2.615554 #> 43  505.6151   2.625124 #> 44  500.9185   2.962927 #> 45  500.0637   3.033883 #> 46  500.1930   2.596594 #> 47  513.8370   2.940840 #> 48  500.0276   2.968735 #> 49  505.2054   2.559020 #> 50  911.7166   2.961229 #> 51  822.8891   2.985317 #> 52  501.6094   2.525270 #> 53  502.1900   2.823731 #> 54  512.5593   2.863641 #> 55  500.0047   2.509127 #> 56  533.1183   2.823798 #> 57  754.5095   2.703077 #> 58  501.3022   2.532728 #> 59  502.2568   3.020978 #> 60  522.1150   2.545102 #> 61  502.0709   2.826356 #> 62  525.2116   3.134530 #> 63  814.6001   2.661462 #> 64  502.0196   3.572318 #> 65  503.6158   3.052836 #> 66  500.5319   3.517857 #> 67  543.4457   2.559363 #> 68  501.8343   3.437552 #> 69  502.3287   3.177386 #> 70  500.5009   3.019857 #> 71  501.2066   2.749615 #> 72  502.6531   2.548215 #> 73  567.8756   2.719902 #> 74  503.6458   3.594270 #> 75  500.2003   3.971217 #> 76  515.2789   2.518095 #> 77  690.1905   3.459213 #> 78  500.8859   2.675505 #> 79  934.2094   3.276009 #> 80  641.9730   2.639492 #> 81  500.1835   3.299884 #> 82  500.0498   2.725905 #> 83  501.2537   2.957260 #> 84  524.0954   3.174379 #> 85  532.2242   2.518700 #> 86  500.4293   2.650947 #> 87  501.0233   3.143583 #> 88  941.4584   3.351498 #> 89  549.0752   2.599892 #> 90  517.3376   2.753328 #> 91  500.5174   2.927311 #> 92  676.0750   2.998368 #> 93  563.6500   3.034489 #> 94  502.1467   2.570053 #> 95  505.8350   2.738560 #> 96  500.0758   2.561469 #> 97  589.7514   2.640753 #> 98  500.1199   2.871215 #> 99  502.8216   2.744851 #> 100 500.0315   2.847304 #> 101 580.0571   2.523511 #> 102 500.1559   2.536364 #> 103 500.1843   2.661096 #> 104 509.5146   2.510395 #> 105 500.7205   2.628840 #> 106 501.8504   2.664411 #> 107 607.8917   3.866933 #> 108 933.2666   3.782442 #> 109 500.0753   2.705741 #> 110 501.6009   2.743503 #> 111 590.6652   2.908994 #> 112 593.6747   2.955286 #> 113 566.9326   2.916094 #> 114 504.5806   3.501687 #> 115 512.1989   3.366687 #> 116 521.3417   2.537005 #> 117 500.3787   3.339281 #> 118 556.7172   2.708539 #> 119 513.9331   3.017813 #> 120 500.6825   3.254621 #> 121 537.4082   3.911418 #> 122 543.7304   2.892472 #> 123 500.6274   2.752954 #> 124 618.8923   2.816771 #> 125 535.6203   2.540577 #> 126 526.3267   2.614935 #> 127 500.2893   2.642741 #> 128 500.3942   2.685273 #> 129 500.1582   2.561608 #> 130 682.5460   2.517575 #> 131 500.8576   3.125526 #> 132 887.9050   2.791715 #> 133 521.0961   2.694171 #> 134 938.7208   2.681375 #> 135 517.9898   3.157866 #> 136 730.2880   2.854988 #> 137 500.6620   2.616619 #> 138 500.4838   2.631229 #> 139 505.4630   2.849546 #> 140 500.3176   3.244453 #> 141 531.9516   2.956684 #> 142 696.3977   2.954240 #> 143 504.9107   2.715447 #> 144 500.0354   2.677116 #> 145 500.1007   3.848819 #> 146 504.9260   2.583689 #> 147 500.0852   2.735265 #> 148 500.0376   2.773577 #> 149 501.1598   2.638553 #> 150 506.8382   3.052377 #> 151 587.3095   2.887762 #> 152 500.0429   2.506034 #> 153 672.7104   2.677631 #> 154 788.8607   3.773552 #> 155 500.3195   4.698850 #> 156 506.5457   3.956564 #> 157 515.2693   2.745273 #> 158 500.8464   2.827815 #> 159 500.0731   2.887499 #> 160 502.5187   2.751592 #> 161 542.4034   2.635452 #> 162 579.2691   3.327961 #> 163 530.7331   2.566307 #> 164 501.8164   2.745502 #> 165 500.8604   2.553254 #> 166 504.7545   2.850347 #> 167 574.0504   3.233053 #> 168 500.0660   2.740826 #> 169 507.8876   2.944225 #> 170 504.1676   2.600221 #> 171 500.1465   2.752643 #> 172 500.5199   4.331165 #> 173 627.7996   2.925774 #> 174 505.0245   4.224129 #> 175 511.8922   2.518131 #> 176 513.1060   2.541908 #> 177 536.5784   3.786379 #> 178 500.1213   2.696174 #> 179 519.7187   2.757009 #> 180 782.9542   2.818931 #> 181 501.0019   4.338360 #> 182 537.7887   2.785187 #> 183 501.1921   2.533689 #> 184 500.2336   3.308783 #> 185 834.7400   2.548741 #> 186 500.3417   2.848920 #> 187 500.0540   2.579812 #> 188 530.2081   3.029535 #> 189 500.3047   2.733016 #> 190 502.7626   2.500334 #> 191 537.9670   2.872816 #> 192 500.1181   2.561678 #> 193 509.3525   2.655142 #> 194 500.0441   2.785504 #> 195 505.9487   2.658156 #> 196 500.1995   2.712470 #> 197 586.3725   2.944246 #> 198 513.5555   3.044199 #> 199 507.7787   2.941747 #> 200 618.3299   2.531861 #> 201 532.5481   2.625547 #> 202 500.7576   2.596952 #> 203 501.2280   2.523901 #> 204 500.2808   2.875184 #> 205 500.2244   3.668764 #> 206 544.5548   3.450987 #> 207 506.0453   2.505210 #> 208 501.4562   2.619121 #> 209 500.0835   2.844916 #> 210 500.3068   2.566856 #> 211 524.2655   2.578967 #> 212 500.4105   2.960778 #> 213 511.2824   2.557316 #> 214 500.2832   2.998104 #> 215 500.6655   2.799100 #> 216 501.0050   2.921549 #> 217 593.3473   3.006024 #> 218 610.6962   2.822650 #> 219 502.4086   2.538475 #> 220 563.4343   3.399591 #> 221 506.3971   2.659581 #> 222 500.7947   3.031434 #> 223 625.0542   2.812052 #> 224 500.0218   2.587432 #> 225 520.2555   3.644262 #> 226 501.3693   2.591427 #> 227 688.7428   3.306325 #> 228 500.2228   2.709718 #> 229 615.1392   3.032379 #> 230 500.1837   2.708772 #> 231 502.3846   2.926077 #> 232 500.1543   2.872572 #> 233 501.4966   2.710980 #> 234 500.1119   2.530797 #> 235 501.4972   3.120721 #> 236 500.2519   2.968051 #> 237 500.2135   2.580361 #> 238 777.9205   2.963112 #> 239 501.8517   2.815193 #> 240 500.8909   3.460420 #> 241 565.2355   2.702066 #> 242 665.7531   2.758247 #> 243 983.6997   2.782586 #> 244 500.3913   2.979482 #> 245 501.7219   2.641491 #> 246 500.4827   2.731984 #> 247 500.0830   2.678435 #> 248 500.4453   2.547156 #> 249 500.0132   3.390842 #> 250 500.7288   2.638935 #> 251 500.1323   2.551589 #> 252 554.1508   2.844811 #> 253 510.6190   3.119582 #> 254 501.5443   2.538275 #> 255 572.8156   2.698970 #> 256 500.4060   2.838371 #> 257 500.0258   2.561657 #> 258 509.9392   3.510287 #> 259 501.4522   2.969513 #> 260 500.1956   3.833587 #> 261 500.2960   3.179464 #> 262 693.0259   2.689603 #> 263 561.8534   3.096420 #> 264 502.5407   2.635760 #> 265 500.1071   7.064527 #> 266 501.8475   2.872879 #> 267 501.7824   3.195580 #> 268 601.4262   2.677841 #> 269 500.6024   2.654147 #> 270 500.9165   2.757192 #> 271 501.0027   3.889108 #> 272 500.2405   2.788200 #> 273 500.0327   2.548134 #> 274 665.0193   2.538701 #> 275 501.7958   4.148786 #> 276 500.3576   2.535674 #> 277 500.3505   2.774672 #> 278 504.5216   2.924125 #> 279 501.3852   3.793337 #> 280 500.0937   3.464661 #> 281 500.1838   2.927389 #> 282 514.8644   2.866128 #> 283 661.8868   2.841943 #> 284 505.5044   2.718382 #> 285 500.3502   3.708968 #> 286 771.4178   2.534366 #> 287 722.1025   2.704907 #> 288 500.0218   2.661830 #> 289 513.9005   2.680022 #> 290 650.5488   2.530697 #> 291 502.0394   2.504826 #> 292 500.4176   3.253272 #> 293 507.9129   2.525688 #> 294 500.3226   3.203999 #> 295 500.2686   2.706462 #> 296 500.1281   2.952599 #> 297 500.3558   2.701134 #> 298 502.4522   2.749937 #> 299 500.0521   3.044417 #> 300 500.0158   2.751731 #> 301 540.3635   2.946569 #> 302 502.2653   2.854263 #> 303 503.9204   2.700549 #> 304 500.3096   2.972588 #> 305 504.0615   2.955277 #> 306 500.5360   2.584571 #> 307 716.4828   2.646562 #> 308 500.0089   3.160826 #> 309 789.0687   2.519819 #> 310 500.2629   2.588423 #> 311 500.1323   2.828268 #> 312 509.3493   2.887329 #> 313 519.3686   3.059658 #> 314 504.4321   3.091437 #> 315 710.3327   2.540073 #> 316 500.2981   2.500454 #> 317 512.9896   2.761302 #> 318 660.4598   3.830434 #> 319 500.0114   2.569604 #> 320 500.2061   3.585650 #> 321 501.2044   2.914454 #> 322 500.0514   2.783540 #> 323 500.5082   2.613590 #> 324 781.6083   3.153784 #> 325 943.3962   3.124761 #> 326 607.7694   2.900557 #> 327 526.7230   3.159447 #> 328 870.4742   2.821276 #> 329 500.3581   3.019909 #> 330 502.2781   2.638939 #> 331 513.1568   2.769455 #> 332 808.2509   2.973038 #> 333 524.8387   3.255703 #> 334 842.0961   4.659429 #> 335 503.2523   3.868294 #> 336 895.9028   3.031334 #> 337 501.0261   2.679378 #> 338 701.6040   2.752379 #> 339 501.1679   3.530706 #> 340 518.4760   3.312926 #> 341 572.4404   2.589307 #> 342 503.8093   2.792103 #> 343 505.5694   2.527822 #> 344 500.1755   3.439694 #> 345 500.0132   2.576453 #> 346 517.6311   2.764471 #> 347 538.8924   2.670254 #> 348 500.5435   2.614334 #> 349 501.0557   2.727223 #> 350 502.7203   2.904978 #> 351 500.0406   3.814841 #> 352 500.8875   2.669017 #> 353 500.5737   2.653810 #> 354 500.1370   2.789283 #> 355 500.2642   2.508129 #> 356 504.0761   2.510634 #> 357 500.1570   2.817579 #> 358 665.8711   2.608621 #> 359 597.9271   2.800084 #> 360 500.3871   2.549632 #> 361 531.5012   3.051690 #> 362 526.7686   2.583967 #> 363 500.0319   3.735167 #> 364 899.9855   3.667208 #> 365 566.9124   2.623305 #> 366 744.2492   2.812321 #> 367 500.2625   4.207021 #> 368 506.1309   3.091991 #> 369 846.4705   3.360881 #> 370 500.2809   3.038012 #> 371 509.4374   2.617573 #> 372 501.5084   3.378164 #> 373 500.3249   3.530372 #> 374 500.2778   2.770176 #> 375 500.2411   2.861242 #> 376 500.0743   2.703986 #> 377 500.0539   2.989994 #> 378 501.2530   3.401941 #> 379 601.8088   2.628995 #> 380 508.8403   2.601253 #> 381 696.0050   2.516473 #> 382 502.4179   2.799850 #> 383 501.9920   2.755059 #> 384 727.9726   3.769582 #> 385 510.5972   2.862590 #> 386 500.0075   3.185217 #> 387 510.3804   3.832449 #> 388 500.0556   3.368306 #> 389 544.2065   3.088642 #> 390 500.4087   4.341765 #> 391 509.9807   2.518011 #> 392 502.8112   2.560502 #> 393 623.8992   2.667025 #> 394 501.7927   3.214928 #> 395 500.0741   5.189046 #> 396 500.1767   2.752781 #> 397 500.0668   2.970397 #> 398 500.0059   2.630585 #> 399 598.0289   2.878419 #> 400 554.0364   2.574285 #> 401 500.8067   2.896194 #> 402 512.0397   2.622312 #> 403 580.4797   2.767008 #> 404 506.8414   3.026421 #> 405 501.8825   2.644763 #> 406 554.9324   2.974659 #> 407 702.1478   2.615535 #> 408 500.6725   2.624683 #> 409 523.1167   2.575538 #> 410 503.5723   3.139127 #> 411 522.1599   2.592067 #> 412 523.7303   2.703927 #> 413 507.8591   3.087800 #> 414 500.2360   2.672079 #> 415 533.4152   3.317890 #> 416 501.4909   3.710217 #> 417 525.1802   2.554838 #> 418 500.1808   2.875607 #> 419 542.7412   3.467327 #> 420 500.0065   2.505160 #> 421 507.5341   2.559299 #> 422 574.1373   3.071119 #> 423 595.9903   2.572836 #> 424 949.8478   3.042195 #> 425 501.1362   3.919155 #> 426 518.2100   2.538707 #> 427 500.0745   2.781134 #> 428 505.1638   2.706890 #> 429 500.0355   2.646653 #> 430 500.4859   3.155162 #> 431 504.7456   2.758470 #> 432 510.8830   3.902944 #> 433 680.2905   3.179143 #> 434 500.7836   2.596249 #> 435 526.7316   4.010808 #> 436 517.7982   2.551942 #> 437 500.7925   3.261364 #> 438 501.4072   4.007261 #> 439 512.7941   2.818230 #> 440 500.7994   2.621480 #> 441 518.7922   2.581100 #> 442 585.6856   3.079749 #> 443 878.3401   2.926749 #> 444 538.7000   3.448351 #> 445 500.7846   2.625142 #> 446 548.2229   2.692903 #> 447 500.2478   2.749172 #> 448 501.0005   2.930253 #> 449 505.4366   2.667531 #> 450 500.2096   2.987798 #> 451 500.0290   4.150152 #> 452 500.4257   2.679369 #> 453 989.0480   3.813381 #> 454 500.0352   2.811702 #> 455 556.7583   4.018440 #> 456 500.1090   3.117241 #> 457 500.3563   2.707308 #> 458 500.0577   2.690186 #> 459 501.0336   3.917997 #> 460 501.7633   2.889372 #> 461 998.9485   3.041764 #> 462 612.4287   3.216968 #> 463 509.9761   2.608287 #> 464 536.4430   3.056220 #> 465 531.3930   3.088141 #> 466 500.0445   2.899480 #> 467 751.3790   2.810121 #> 468 545.8507   3.779158 #> 469 500.0502   2.914723 #> 470 658.2520   2.664646 #> 471 500.3242   3.081890 #> 472 506.7691   2.860560 #> 473 500.1125   2.541612 #> 474 594.1173   2.625518 #> 475 570.8434   3.048272 #> 476 500.0812   2.914085 #> 477 500.9567   2.726117 #> 478 500.4977   2.622975 #> 479 500.2075   3.225610 #> 480 500.1348   2.784969 #> 481 500.4819   4.817875 #> 482 500.2282   3.392302 #> 483 501.7187   3.359770 #> 484 500.0234   2.851121 #> 485 500.2923   2.933199 #> 486 500.8797   3.039947 #> 487 501.9962   4.219222 #> 488 507.3253   3.414414 #> 489 501.4146   2.597418 #> 490 500.0335   3.142483 #> 491 660.9449   2.789219 #> 492 549.5594   2.674151 #> 493 502.2814   3.652696 #> 494 501.8869   3.368271 #> 495 510.6244   2.776072 #> 496 509.8032   2.920946 #> 497 506.7009   2.573431 #> 498 501.3977   2.805251 #> 499 500.0755   2.718482 #> 500 629.1118   2.972493 #> 501 506.7816   2.688310 #> 502 690.9396   2.533355 #> 503 501.9876   3.291598 #> 504 500.2646   2.792820 #> 505 500.4979   2.575635 #> 506 517.5131   2.677646 #> 507 504.6360   2.806607 #> 508 500.7374   2.745981 #> 509 747.0180   3.204413 #> 510 505.5767   3.240445 #> 511 562.2262   2.930885 #> 512 503.7063   3.288375 #> 513 500.1753   2.647612 #> 514 500.0165   2.603319 #> 515 908.2955   2.570981 #> 516 501.1519   2.637736 #> 517 500.1513   3.183601 #> 518 611.3939   2.801830 #> 519 500.0255   2.553220 #> 520 536.9782   2.681617 #> 521 501.4916   3.099002 #> 522 500.4882   2.584290 #> 523 501.4589   3.278927 #> 524 759.2234   3.287377 #> 525 503.8226   2.611905 #> 526 502.7924   2.783425 #> 527 503.6486   3.536961 #> 528 541.3882   2.501405 #> 529 501.1517   3.703960 #> 530 500.6230   2.865770 #> 531 571.6126   3.506047 #> 532 964.9534   2.821087 #> 533 505.0075   2.600085 #> 534 501.8830   2.551453 #> 535 518.0977   2.671472 #> 536 500.2602   3.825529 #> 537 500.6470   2.860477 #> 538 570.5312   2.846846 #> 539 500.0275   3.001471 #> 540 500.2123   3.072488 #> 541 500.0106   2.763384 #> 542 500.0460   2.746193 #> 543 500.3866   3.130178 #> 544 503.2276   2.544026 #> 545 500.0840   2.814791 #> 546 534.2859   3.841294 #> 547 542.2266   2.654449 #> 548 646.7205   2.540206 #> 549 501.6866   2.740933 #> 550 522.9843   2.727205 #> 551 500.4239   2.580521 #> 552 500.1492   3.127376 #> 553 521.7289   3.876499 #> 554 500.1349   2.809431 #> 555 508.4381   3.423034 #> 556 522.0203   2.647499 #> 557 504.8666   3.184091 #> 558 502.0413   2.561369 #> 559 512.0470   2.978343 #> 560 500.9539   2.860654 #> 561 504.8911   2.534408 #> 562 501.2101   3.246508 #> 563 506.1702   2.669625 #> 564 501.1592   2.675579 #> 565 509.4795   2.705007 #> 566 500.9064   2.510656 #> 567 500.0804   2.506010 #> 568 511.9469   2.747538 #> 569 719.2846   2.721683 #> 570 502.4138   3.216061 #> 571 536.9271   2.540844 #> 572 501.6010   3.079703 #> 573 593.5693   3.026423 #> 574 500.1214   2.565936 #> 575 649.6370   3.540468 #> 576 528.9325   2.855599 #> 577 770.7629   3.021876 #> 578 660.5612   2.755330 #> 579 501.0285   2.678314 #> 580 500.6169   3.120808 #> 581 585.8774   3.177028 #> 582 501.6903   2.767530 #> 583 928.9910   2.772082 #> 584 500.0195   2.704833 #> 585 773.9797   2.719885 #> 586 500.4160   4.131872 #> 587 500.9949   2.790416 #> 588 500.0714   3.111401 #> 589 663.1399   2.570358 #> 590 578.5810   2.898646 #> 591 500.1188   2.738641 #> 592 509.7124   2.549280 #> 593 507.1396   3.117044 #> 594 500.3892   2.906937 #> 595 664.4233   3.062947 #> 596 500.0219   2.967051 #> 597 786.2734   2.536536 #> 598 500.1700   2.615148 #> 599 609.8165   2.896568 #> 600 500.1364   2.561168 #> 601 501.4825   2.822372 #> 602 500.1166   2.974060 #> 603 502.3713   3.181908 #> 604 506.2513   3.202214 #> 605 501.2528   2.599756 #> 606 502.0715   2.702257 #> 607 515.7084   2.744388 #> 608 505.5564   2.530607 #> 609 510.5045   3.205371 #> 610 500.0543   3.019541 #> 611 500.0864   2.642787 #> 612 623.5184   3.464011 #> 613 551.2494   2.648581 #> 614 500.3820   2.804087 #> 615 501.1839   3.179238 #> 616 580.4070   5.578855 #> 617 502.6280   3.231052 #> 618 500.0542   2.659126 #> 619 500.0628   2.736561 #> 620 500.3158   2.754005 #> 621 506.7389   3.140819 #> 622 500.2188   2.613546 #> 623 500.4361   2.629537 #> 624 509.7700   2.571146 #> 625 561.3279   3.972647 #> 626 712.4720   3.199235 #> 627 500.1097   2.713061 #> 628 500.5282   2.854998 #> 629 501.3549   4.702292 #> 630 513.2741   2.801738 #> 631 500.2049   3.126500 #> 632 503.2741   2.638272 #> 633 636.2031   2.779517 #> 634 505.9446   4.086524 #> 635 504.9859   2.921215 #> 636 501.3316   2.572136 #> 637 500.4263   3.642677 #> 638 570.7194   2.525833 #> 639 500.3931   2.698603 #> 640 501.3341   3.195495 #> 641 500.1312   2.774830 #> 642 504.9016   2.726582 #> 643 605.1893   2.560151 #> 644 720.4238   3.484351 #> 645 500.6463   2.914469 #> 646 502.7847   2.544920 #> 647 674.2100   2.832303 #> 648 504.3565   2.579360 #> 649 505.5827   2.884589 #> 650 500.0954   2.824026 #> 651 501.8825   2.831935 #> 652 500.1778   2.629828 #> 653 718.9285   2.689375 #> 654 507.9355   3.209554 #> 655 500.3255   2.521422 #> 656 527.5261   2.882742 #> 657 500.3868   2.636234 #> 658 500.0051   2.592443 #> 659 552.8983   3.259424 #> 660 500.4600   2.569751 #> 661 502.3117   3.075080 #> 662 540.1925   2.524763 #> 663 500.0762   2.845698 #> 664 500.7176   2.651028 #> 665 500.6142   3.544852 #> 666 500.0391   3.112201 #> 667 502.5187   2.621882 #> 668 501.6412   2.568387 #> 669 583.6903   2.516397 #> 670 500.1569   3.835432 #> 671 500.1356   3.471301 #> 672 550.9219   2.719195 #> 673 500.0686   3.578176 #> 674 517.8100   2.871404 #> 675 505.3801   2.727914 #> 676 646.6827   2.605209 #> 677 500.4661   3.002522 #> 678 574.3866   3.032522 #> 679 501.4920   3.074728 #> 680 677.3220   2.652497 #> 681 802.8040   3.535169 #> 682 500.5624   2.977146 #> 683 501.3771   2.881833 #> 684 633.9755   2.773748 #> 685 501.7648   2.750713 #> 686 523.4124   2.817624 #> 687 517.1506   3.427469 #> 688 500.1157   3.076896 #> 689 500.0221   3.152736 #> 690 500.2942   2.855757 #> 691 500.5312   2.711138 #> 692 996.5872   3.166950 #> 693 619.4088   3.508046 #> 694 500.1194   2.598709 #> 695 500.4498   3.400862 #> 696 869.2188   2.949872 #> 697 631.4239   2.942744 #> 698 754.8418   2.585367 #> 699 500.1054   2.626673 #> 700 500.0731   2.729119 #> 701 508.3899   2.595797 #> 702 504.0758   2.994139 #> 703 503.2838   2.574188 #> 704 518.8639   2.509900 #> 705 500.1453   2.762230 #> 706 500.0573   2.719833 #> 707 517.2600   2.868227 #> 708 573.6654   3.706147 #> 709 537.5875   2.817506 #> 710 501.4685   3.227363 #> 711 521.8678   2.554758 #> 712 796.1874   2.550614 #> 713 501.5222   2.774379 #> 714 501.2768   2.879745 #> 715 500.0878   2.905218 #> 716 515.2553   2.599328 #> 717 500.0364   3.066326 #> 718 633.0836   2.565648 #> 719 500.0734   2.512846 #> 720 500.6116   2.520753 #> 721 785.9122   2.561649 #> 722 502.9600   2.567500 #> 723 500.2245   2.646813 #> 724 500.0223   2.684337 #> 725 500.9357   3.995414 #> 726 500.1579   3.204387 #> 727 590.9442   2.799134 #> 728 505.5786   2.982841 #> 729 517.0915   2.502372 #> 730 500.5567   3.806171 #> 731 506.3796   3.831788 #> 732 500.5364   3.478244 #> 733 506.0096   2.511917 #> 734 500.2005   2.940567 #> 735 500.1079   3.368700 #> 736 506.6041   2.541217 #> 737 520.2837   2.940936 #> 738 501.2062   2.526885 #> 739 535.8296   3.195814 #> 740 558.6252   2.596716 #> 741 501.5160   2.760438 #> 742 501.6124   4.112129 #> 743 500.4097   3.937907 #> 744 969.6430   2.777410 #> 745 506.5455   3.725373 #> 746 500.4018   2.589758 #> 747 667.7337   2.791158 #> 748 500.0729   3.399758 #> 749 501.9307   2.899920 #> 750 515.9300   2.949437 #> 751 503.3805   2.591351 #> 752 500.7899   2.932832 #> 753 500.1832   2.517303 #> 754 601.1606   2.635524 #> 755 500.0655   3.567583 #> 756 501.2379   3.117337 #> 757 506.2836   3.190344 #> 758 500.7519   3.562617 #> 759 500.0002   2.716838 #> 760 502.8072   2.813244 #> 761 511.2377   3.450586 #> 762 500.2544   2.846319 #> 763 500.0386   3.055572 #> 764 504.8288   2.602282 #> 765 500.0901   2.760134 #> 766 503.8535   2.579275 #> 767 617.6498   2.664660 #> 768 512.7227   3.207250 #> 769 512.1473   2.722242 #> 770 500.0419   2.525036 #> 771 500.2514   3.133561 #> 772 643.2709   2.861831 #> 773 761.5360   3.538978 #> 774 500.2697   2.638556 #> 775 500.4576   3.184966 #> 776 500.3051   2.553758 #> 777 500.0831   2.748604 #> 778 514.2624   3.530677 #> 779 501.7029   2.708793 #> 780 500.8135   2.556408 #> 781 597.0072   3.435334 #> 782 500.5347   3.245615 #> 783 500.1241   2.928085 #> 784 594.2369   2.860413 #> 785 500.5644   2.503465 #> 786 513.5990   2.721449 #> 787 501.0640   2.770531 #> 788 533.2540   3.090839 #> 789 500.2976   2.830803 #> 790 504.8816   2.797561 #> 791 916.2878   3.077673 #> 792 524.1485   3.206380 #> 793 512.0129   2.601658 #> 794 671.3581   2.669819 #> 795 500.8077   2.666475 #> 796 582.9017   3.318522 #> 797 779.4459   2.531227 #> 798 500.4602   4.495840 #> 799 562.2668   2.595924 #> 800 507.8792   3.007525 #> 801 517.2100   2.560047 #> 802 719.9261   2.819587 #> 803 634.0256   2.643145 #> 804 500.2195   2.979932 #> 805 505.0486   2.723848 #> 806 500.8663   2.612883 #> 807 500.0079   2.878268 #> 808 551.0633   2.900641 #> 809 511.1001   2.570488 #> 810 508.9623   2.732691 #> 811 502.3250   2.683403 #> 812 599.5146   2.576203 #> 813 508.5001   4.150260 #> 814 500.4615   2.754298 #> 815 500.2504   2.948023 #> 816 500.6124   2.571689 #> 817 528.8946   3.150595 #> 818 693.2262   2.536584 #> 819 540.4571   2.672310 #> 820 500.8188   3.027256 #> 821 506.1080   2.887245 #> 822 500.2494   3.215044 #> 823 500.1170   2.992858 #> 824 684.2126   2.622317 #> 825 507.0201   2.513955 #> 826 500.1754   3.086263 #> 827 986.6746   2.969614 #> 828 500.0498   2.949435 #> 829 521.6441   2.541026 #> 830 500.5143   3.405711 #> 831 807.3142   2.726459 #> 832 500.4846   2.822969 #> 833 500.1171   2.594083 #> 834 570.3315   3.333600 #> 835 500.1027   3.232378 #> 836 654.0256   2.595302 #> 837 500.0558   2.804013 #> 838 502.0989   3.142338 #> 839 500.5712   3.353051 #> 840 761.0686   2.757679 #> 841 567.7263   3.479345 #> 842 500.3832   2.504800 #> 843 502.8363   2.946613 #> 844 514.5026   2.620923 #> 845 504.2837   2.615736 #> 846 500.0367   2.793210 #> 847 500.0142   3.213193 #> 848 500.0867   3.285444 #> 849 500.2463   2.967111 #> 850 502.1958   3.227931 #> 851 524.2368   4.410768 #> 852 504.4786   3.349385 #> 853 502.5332   2.511870 #> 854 501.2481   2.981225"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
