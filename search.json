[{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  ggplot() +   geom_point(data = samp.etas.list[[1]], aes(x = ts, y = magnitudes), color = \"red\") +   geom_point(data = samp.etas.list[[2]], aes(x = ts, y = magnitudes), color = \"green\") +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") combined.M7.ETAS.cat <- bind_rows(samp.etas.list)  combined.M7.ETAS.cat <- bind_rows(samp.etas.list) combined.M7.ETAS.cat <- combined.M7.ETAS.cat[order(combined.M7.ETAS.cat$ts), ]  combined.M7.ETAS.cat$ID <- seq(1, length(combined.M7.ETAS.cat$ts))  ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase num.threads if you have more cores on your computer INLA::inla.setOption(num.threads = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.3896658  #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.3754497  #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  5.649885 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 92.42%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 119.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1510% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 85.02%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 2250% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 121%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 853% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 507% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 103.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 170% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 157% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 136% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 125% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 114% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 105% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 96.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 89.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 82.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 76.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 70.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 65.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 60.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 56.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 52.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 48.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 45% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 41.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 38.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 36% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 33.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 31% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 24.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 40 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 41 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 42 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 43 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.55% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 44 [max:100] #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  6.120674 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 102.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 6.58% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 6.04% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 5 [max:100] #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 55 rows containing missing values (`geom_line()`). #> Warning: Removed 4 rows containing missing values (`geom_line()`). #> Warning: Removed 14 rows containing missing values (`geom_line()`). #> Warning: Removed 2 rows containing missing values (`geom_line()`). #> Warning: Removed 26 rows containing missing values (`geom_line()`). #> Warning: Removed 2 rows containing missing values (`geom_line()`). plt #> NULL  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 55 rows containing missing values (`geom_line()`). #> Warning: Removed 4 rows containing missing values (`geom_line()`). #> Warning: Removed 14 rows containing missing values (`geom_line()`). #> Warning: Removed 2 rows containing missing values (`geom_line()`). #> Warning: Removed 26 rows containing missing values (`geom_line()`). #> Warning: Removed 2 rows containing missing values (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1299] #> 8 8 (1-3,1-1) arrange text[GRID.text.1300]  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exists, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p \\geq 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Tutorial on real data","text":"bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter rate b. distribution mean \\texttt{}/\\texttt{b} variance \\(\\texttt{}/\\texttt{b}^2\\). unit_t(X, , b) Uniform distribution b. exp_t(X, r) Exponential distribution rate r. loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm m standard deviation logarithm s. code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. whole Horus catalogue can loaded using data reports earthquake longitude (lon) latitude (lat) epicentre, moment magnitude (M), time string (time_string), depth kilometres (depth), catalogue event IDs. focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load ISIDE catalogue horus <- read.table(   file = \"data/HORUS.txt\",   header = TRUE,   sep = \",\" ) head(horus) #>       lon     lat    M            time_string depth catalog_id event_id #> 1 15.3000 39.3000 6.34 1960-01-03T20:19:34.00   290         -1       NA #> 2 13.1667 43.1333 3.94 1960-01-04T09:20:00.00     0         -1       NA #> 3 12.7000 46.4833 4.69 1960-01-06T15:17:34.00     4         -1       NA #> 4 12.7000 46.4667 4.14 1960-01-06T15:20:53.00     0         -1       NA #> 5 12.7500 46.4333 3.00 1960-01-06T15:31:00.00     0         -1       NA #> 6 12.7500 46.4333 3.00 1960-01-06T15:45:00.00     0         -1       NA # transform time string in Date object time_string <- gsub(\"T\", \" \", horus$time_string) horus$time_date <- as.POSIXct(time_string,   format = \"%Y-%m-%d %H:%M:%OS\" )  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. num.threads: number cores used parallel. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created .","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(difftime(aquila$time_date, start.date,     units = \"days\"   )),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   num.threads = 2, # Increase this if your computer has multiple cores   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  3.453542"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 )  head(post.samp) #>          mu         K    alpha          c        p #> 1 0.3371113 0.1628606 2.395887 0.05793316 1.151251 #> 2 0.2802309 0.1231784 2.448602 0.07860345 1.196107 #> 3 0.2604647 0.1825894 2.442851 0.04712678 1.141840 #> 4 0.2741875 0.1436083 2.388715 0.07806933 1.179619 #> 5 0.2740375 0.1404051 2.423026 0.06868827 1.180533 #> 6 0.3305438 0.1121833 2.456883 0.08945747 1.218534 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = 3 ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 30 rows containing non-finite values (`stat_bin()`). #> Warning: Removed 2 rows containing missing values (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL,   ncore = 1 ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     288     112     176 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.84815"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) head(post.samp) #>          mu          K    alpha         c        p #> 1 0.3597504 0.06061575 2.385346 0.2032518 1.208513 #> 2 0.3656341 0.03747670 2.532475 0.3637313 1.398601 #> 3 0.3732262 0.02976210 2.639435 0.2212090 1.301685 #> 4 0.3738982 0.04471413 2.523411 0.3354488 1.485679 #> 5 0.3499787 0.03345090 2.620459 0.2499064 1.323232 #> 6 0.2748353 0.04721425 2.512305 0.2907572 1.399682"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>          N N.bkg N.after #> first  288   112     176 #> second 408   104     304 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  1.244201 input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Francesco Serafini Dr Mark Naylor, School GeoSciences, University Edinburgh Prof Finn Lindgren, School Mathematics, University Edinburgh Dr Kirsty Bayliss, Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Implement pre-model domain history Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@ed.ac.uk Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore number cores used generate synthetic catalogues parallel.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x563af2d49d58> #> <environment: 0x563af2d48778> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x563af2d49a80> #> <environment: 0x563af2d48778> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x563af2d497a8> #> <environment: 0x563af2d48778> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x563af2d494d0> #> <environment: 0x563af2d48778> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x563af2d491f8> #> <environment: 0x563af2d48778> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   ncore = 1 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. ncore Integer number compute cores use.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"data.frame temporal catalogue columns [t_i, M_i, gen_i] , t_i times,  M_i magnitudes, gen_i includes information generation number","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>             ts magnitudes gen #> 1    11.083095   3.186330   1 #> 2   100.877446   4.598429   1 #> 3     5.521732   2.609223   1 #> 4   173.658577   2.705018   1 #> 5   804.165443   3.877134   1 #> 6   183.071628   2.866788   1 #> 7   129.343407   3.538436   1 #> 8   819.335326   2.767222   1 #> 9   723.224991   2.635252   1 #> 10  202.886742   2.676108   1 #> 11  880.661968   2.521279   1 #> 12  445.081624   3.149019   1 #> 13  669.111083   3.108139   1 #> 14  502.678189   4.066193   1 #> 15  111.039370   3.552115   1 #> 16  715.581359   3.159965   1 #> 17  541.636183   2.695520   1 #> 18  419.469896   2.684039   1 #> 19  816.846405   2.528048   1 #> 20  400.560162   3.197805   1 #> 21  788.648842   2.913670   1 #> 22  343.965560   2.881072   1 #> 23  937.290888   2.577414   1 #> 24  245.646408   2.584310   1 #> 25  933.583281   2.947853   1 #> 26  877.760881   3.519854   1 #> 27  447.913799   2.584388   1 #> 28   13.828204   3.357508   1 #> 29  987.529086   3.059727   1 #> 30  922.448437   2.603924   1 #> 31  841.850435   2.639298   1 #> 32  340.585883   2.530377   1 #> 33    8.442416   3.649955   1 #> 34  177.790283   2.528530   1 #> 35  796.445680   2.593890   1 #> 36  990.964295   2.556068   1 #> 37  111.734724   2.527031   1 #> 38   81.392987   2.609977   1 #> 39  999.523136   2.569624   1 #> 40  459.257134   2.887262   1 #> 41  317.545952   2.569406   1 #> 42  931.416402   3.340054   1 #> 43  205.303145   3.920839   1 #> 44  995.219057   2.823570   1 #> 45  104.768903   2.617261   1 #> 46  162.795781   4.290198   1 #> 47  876.883682   2.927628   1 #> 48   52.759507   2.779578   1 #> 49  458.341945   2.750722   1 #> 50  698.156809   2.554755   1 #> 51  626.690745   2.586928   1 #> 52  692.815436   3.984544   1 #> 53  894.587935   2.963698   1 #> 54  648.907164   4.099180   1 #> 55  313.174061   2.989360   1 #> 56  488.520471   2.789106   1 #> 57  343.557409   2.623350   1 #> 58  539.083001   2.624101   1 #> 59  189.835466   2.997416   1 #> 60  635.360416   2.527477   1 #> 61  733.562966   3.383629   1 #> 62  533.847411   3.363711   1 #> 63  820.690324   2.599646   1 #> 64  229.008209   2.636311   1 #> 65  687.202598   2.688670   1 #> 66  131.213601   2.571136   1 #> 67  113.620612   2.569358   1 #> 68  925.607650   2.628752   1 #> 69  885.547854   2.568166   1 #> 70  530.414160   3.414488   1 #> 71   94.449873   2.685603   1 #> 72  609.519620   2.663620   1 #> 73  538.958683   2.734055   1 #> 74   89.277130   2.591050   1 #> 75  589.980847   2.794698   1 #> 76  605.242490   3.545866   1 #> 77   70.187574   2.750204   1 #> 78  602.226928   2.776770   1 #> 79  265.075909   2.727489   1 #> 80  220.360109   3.327264   1 #> 81  517.685223   3.045846   1 #> 82  426.304798   2.602702   1 #> 83  692.380175   3.048485   1 #> 84   95.643568   2.563586   1 #> 85    4.633263   3.377212   1 #> 86  235.969214   2.822659   1 #> 87  344.098977   2.951714   1 #> 88  666.636634   2.645508   1 #> 89  775.960043   2.647215   1 #> 90   37.532798   3.033115   1 #> 91  310.107621   4.301556   1 #> 92   33.629837   2.762318   1 #> 93  406.021246   2.580954   1 #> 94  208.754591   2.744938   1 #> 95  668.619557   2.857086   1 #> 96  821.638914   2.530299   1 #> 97  552.417868   3.748999   1 #> 98  864.330749   2.500341   1 #> 99  144.646213   3.299074   1 #> 100 757.707515   2.534197   1 #> 101 431.156267   2.756406   1 #> 102 648.506164   2.562712   1 #> 103 749.538902   3.358476   1 #> 104 505.862206   2.572404   1 #> 105 629.245835   3.847587   1 #> 106 172.261569   2.784800   1 #> 107 929.063472   3.118650   1 #> 108 217.635822   3.512271   1 #> 109 875.133677   3.222292   1 #> 110 303.188329   2.548623   1 #> 111  38.162720   2.890989   1 #>  #> [[2]] #>           ts magnitudes gen #> 1  143.17309   2.521420   2 #> 2  122.26221   2.520963   2 #> 3  100.98986   3.349831   2 #> 4  100.89487   3.035276   2 #> 5  101.12756   2.774630   2 #> 6  101.41900   2.817778   2 #> 7  315.26430   2.616164   2 #> 8  112.70530   3.360848   2 #> 9  221.75476   2.612087   2 #> 10 105.93577   2.946484   2 #> 11 111.78077   2.898727   2 #> 12 124.88992   3.007711   2 #> 13 806.55703   2.542312   2 #> 14 183.79985   3.232710   2 #> 15 131.28158   2.627826   2 #> 16 821.24089   2.883170   2 #> 17 503.13413   3.137481   2 #> 18 502.74326   3.185185   2 #> 19 504.62319   2.684260   2 #> 20 502.75355   2.928689   2 #> 21 778.52334   2.694445   2 #> 22 848.12282   2.832638   2 #> 23 748.91285   3.674396   2 #> 24 344.30632   2.626602   2 #> 25 484.02167   2.741187   2 #> 26  15.98438   2.657472   2 #> 27  13.08372   3.119520   2 #> 28  42.28139   2.826608   2 #> 29 412.60110   2.643966   2 #> 30 566.23810   3.184389   2 #> 31 163.06628   3.311486   2 #> 32 162.80376   3.383181   2 #> 33 882.58825   4.280922   2 #> 34 649.02864   2.944586   2 #> 35 649.75358   2.530727   2 #> 36 492.03125   2.787170   2 #> 37 530.46990   2.792536   2 #> 38 605.36111   2.944165   2 #> 39  37.72367   3.029637   2 #> 40 311.08995   3.293221   2 #> 41 311.18630   2.525897   2 #> 42 421.79484   2.667170   2 #> 43 553.23825   2.777363   2 #> 44 361.41281   2.552135   2 #> 45 647.57162   2.621481   2 #> 46 630.41128   2.550617   2 #>  #> [[3]] #>          ts magnitudes gen #> 1  250.0715   3.104339   3 #> 2  412.4484   2.819928   3 #> 3   45.5327   3.131698   3 #> 4  882.7152   2.964470   3 #> 5  882.6196   3.327636   3 #> 6  887.0308   2.544408   3 #> 7  894.7637   2.623787   3 #> 8  495.7405   2.567668   3 #> 9  361.4996   2.580481   3 #> 10 631.8713   2.876680   3 #>  #> [[4]] #>          ts magnitudes gen #> 1 278.90770   2.737405   4 #> 2  48.53049   3.649591   4 #> 3 907.01236   2.689608   4 #>  #> [[5]] #>        ts magnitudes gen #> 1 49.0327   3.180262   5 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>             ts magnitudes gen #> 1   595.088177   3.361619   0 #> 2   500.596081   4.548284   0 #> 3   595.947730   3.090497   0 #> 4   500.277040   2.798604   0 #> 5   705.809794   2.506270   0 #> 6   548.797967   3.019058   0 #> 7   953.910457   3.045062   0 #> 8   517.427412   3.706221   0 #> 9   500.102675   2.769402   0 #> 10  501.322162   2.843666   0 #> 11  519.119828   2.568706   0 #> 12  500.074399   2.560748   0 #> 13  501.619694   3.228824   0 #> 14  500.003231   2.501328   0 #> 15  504.666542   2.580785   0 #> 16  506.469401   2.629895   0 #> 17  500.731313   3.006799   0 #> 18  500.125573   2.599638   0 #> 19  500.012923   2.736149   0 #> 20  550.724229   3.404827   0 #> 21  500.489644   2.555235   0 #> 22  501.527258   2.733371   0 #> 23  500.256424   2.575741   0 #> 24  549.137934   2.856394   0 #> 25  504.238663   2.752431   0 #> 26  500.207479   3.689240   0 #> 27  500.070818   3.158649   0 #> 28  500.092935   2.510992   0 #> 29  500.063616   3.804792   0 #> 30  532.255209   2.904317   0 #> 31  617.983330   3.453600   0 #> 32  500.461986   3.498082   0 #> 33  771.816250   2.562892   0 #> 34  579.304505   2.980363   0 #> 35  503.322455   3.802357   0 #> 36  500.234728   3.066610   0 #> 37  842.160859   2.517953   0 #> 38  958.823540   2.558017   0 #> 39  503.049246   2.879896   0 #> 40  502.147764   2.700162   0 #> 41  500.544643   3.025521   0 #> 42  509.264695   3.200851   0 #> 43  502.416379   2.723955   0 #> 44  528.546733   2.604544   0 #> 45  502.319606   3.243744   0 #> 46  500.255595   3.346039   0 #> 47  508.931053   2.528211   0 #> 48  657.902393   2.552334   0 #> 49  563.793597   2.627770   0 #> 50  500.156141   2.644938   0 #> 51  500.129380   2.506052   0 #> 52  500.097793   3.207999   0 #> 53  500.633714   2.600794   0 #> 54  577.428961   3.318319   0 #> 55  650.234820   2.910825   0 #> 56  505.377502   3.388934   0 #> 57  710.640416   2.560285   0 #> 58  501.204002   2.780336   0 #> 59  878.843727   4.031211   0 #> 60  558.196928   3.033651   0 #> 61  837.526642   3.311323   0 #> 62  500.014219   2.708736   0 #> 63  500.085078   2.553209   0 #> 64  542.899357   3.855527   0 #> 65  502.699061   2.579799   0 #> 66  500.015333   2.811300   0 #> 67  500.057368   3.264424   0 #> 68  555.004489   2.737463   0 #> 69  500.157445   2.928818   0 #> 70  500.037702   2.866790   0 #> 71  529.136538   2.550214   0 #> 72  843.757889   2.804584   0 #> 73  500.038138   2.781008   0 #> 74  500.219880   3.797466   0 #> 75  528.395201   2.640579   0 #> 76  505.822123   2.569091   0 #> 77  500.566556   2.527076   0 #> 78  693.836633   2.530029   0 #> 79  501.554732   2.699651   0 #> 80  502.130871   2.977049   0 #> 81  517.932276   2.612288   0 #> 82  500.619266   4.171241   0 #> 83  560.691226   3.034973   0 #> 84  503.533900   3.255286   0 #> 85  508.851370   2.910309   0 #> 86  500.098525   2.785798   0 #> 87  500.231957   3.184854   0 #> 88  501.415641   2.707003   0 #> 89  510.991702   3.411308   0 #> 90  501.225374   3.181612   0 #> 91  871.501761   2.759969   0 #> 92  500.513491   2.865739   0 #> 93  500.058432   3.044272   0 #> 94  500.754894   2.557941   0 #> 95  500.624684   2.707353   0 #> 96  518.229157   3.770369   0 #> 97  501.509743   2.999198   0 #> 98  501.500661   2.682763   0 #> 99  911.900085   3.131896   0 #> 100 523.935422   2.685308   0 #> 101 535.192182   2.870575   0 #> 102 500.207588   3.212722   0 #> 103 501.740910   3.837299   0 #> 104 502.863463   4.605709   0 #> 105 511.923936   2.702812   0 #> 106 500.802230   2.755867   0 #> 107 500.074794   2.686948   0 #> 108 505.061396   2.923724   0 #> 109 500.272631   3.039606   0 #> 110 512.067462   3.620677   0 #> 111 536.931357   3.277742   0 #> 112 500.037512   3.207044   0 #> 113 500.250833   2.664523   0 #> 114 502.729734   2.602143   0 #> 115 701.860985   2.950776   0 #> 116 506.384852   3.003337   0 #> 117 500.902469   2.539152   0 #> 118 519.114361   3.704620   0 #> 119 500.238049   3.145313   0 #> 120 500.130831   2.886307   0 #> 121 524.509482   3.543611   0 #> 122 504.281190   2.552631   0 #> 123 616.610427   2.675895   0 #> 124 539.946993   2.516536   0 #> 125 500.614545   2.506101   0 #> 126 789.567154   2.673890   0 #> 127 501.525259   2.557805   0 #> 128 516.706398   2.803500   0 #> 129 500.100398   3.956896   0 #> 130 527.100345   2.530790   0 #> 131 719.841344   2.505652   0 #> 132 501.004404   3.036098   0 #> 133 500.306734   3.980154   0 #> 134 500.037703   2.724056   0 #> 135 508.824061   2.730748   0 #> 136 520.984228   3.269153   0 #> 137 500.605812   3.292890   0 #> 138 500.197753   2.705470   0 #> 139 501.012165   3.178211   0 #> 140 500.511001   2.576041   0 #> 141 711.784622   2.600367   0 #> 142 569.976722   2.690207   0 #> 143 504.172865   3.184231   0 #> 144 627.857023   2.622076   0 #> 145 506.937501   3.001276   0 #> 146 500.337743   2.513912   0 #> 147 621.472765   2.821610   0 #> 148 500.637078   2.727189   0 #> 149 500.719897   3.083676   0 #> 150 511.341466   2.672112   0 #> 151 563.051104   2.953395   0 #> 152 559.926618   2.587880   0 #> 153 523.924073   2.914989   0 #> 154 500.401476   2.928680   0 #> 155 573.720618   2.600009   0 #> 156 545.017586   2.709950   0 #> 157 512.259136   2.937504   0 #> 158 568.774208   2.620664   0 #> 159 511.892251   2.992562   0 #> 160 735.342795   2.850436   0 #> 161 543.242167   2.988415   0 #> 162 501.437752   2.645309   0 #> 163 500.015198   3.013746   0 #> 164 675.424849   2.614926   0 #> 165 760.046659   2.742948   0 #> 166 802.442872   2.940352   0 #> 167 605.325889   2.507377   0 #> 168 507.224786   3.015180   0 #> 169 522.140505   2.792200   0 #> 170 500.010277   2.522597   0 #> 171 524.716515   2.570725   0 #> 172 501.765281   3.926126   0 #> 173 503.443659   2.665706   0 #> 174 501.096377   2.931859   0 #> 175 574.811757   2.803934   0 #> 176 524.409048   2.674209   0 #> 177 698.513385   3.036806   0 #> 178 500.653382   3.073536   0 #> 179 554.544833   2.561833   0 #> 180 529.641711   3.925292   0 #> 181 501.170793   2.685670   0 #> 182 500.062113   2.627883   0 #> 183 531.359600   2.820475   0 #> 184 586.627627   3.376994   0 #> 185 506.355966   2.628054   0 #> 186 668.092759   2.953894   0 #> 187 511.769703   2.796682   0 #> 188 500.541523   2.942741   0 #> 189 503.531887   3.733816   0 #> 190 500.271393   2.801965   0 #> 191 535.848008   2.620194   0 #> 192 500.710818   3.186606   0 #> 193 685.601730   2.955991   0 #> 194 927.448978   2.516548   0 #> 195 500.083064   3.231807   0 #> 196 500.059651   2.524308   0 #> 197 557.814622   4.120867   0 #> 198 520.790682   3.102115   0 #> 199 577.081678   2.868008   0 #> 200 528.287045   2.681023   0 #> 201 519.760898   2.921313   0 #> 202 500.774753   2.528208   0 #> 203 500.015594   3.051204   0 #> 204 500.006650   4.027897   0 #> 205 585.810640   3.025478   0 #> 206 505.374912   3.701348   0 #> 207 500.458373   3.041919   0 #> 208 508.349854   3.045180   0 #> 209 501.400308   2.894276   0 #> 210 511.342313   2.969874   0 #> 211 500.234162   2.752243   0 #> 212 516.250222   2.569944   0 #> 213 501.463173   2.635856   0 #> 214 500.010772   3.491389   0 #> 215 506.174716   2.846251   0 #> 216 500.239239   2.682361   0 #> 217 503.176136   3.291559   0 #> 218 560.576916   2.662105   0 #> 219 501.275627   2.793588   0 #> 220 729.706573   3.365968   0 #> 221 500.283100   3.004459   0 #> 222 784.649204   2.671119   0 #> 223 500.323209   2.684704   0 #> 224 500.323791   2.609127   0 #> 225 500.059935   2.814782   0 #> 226 500.022746   2.683557   0 #> 227 501.649295   2.858508   0 #> 228 500.558068   3.531505   0 #> 229 514.368725   2.908505   0 #> 230 500.028411   2.515059   0 #> 231 500.984801   2.799676   0 #> 232 504.397380   2.577102   0 #> 233 518.852740   3.253511   0 #> 234 583.715590   2.643290   0 #> 235 500.084850   3.014182   0 #> 236 596.798336   2.957136   0 #> 237 500.152766   2.876361   0 #> 238 519.134668   2.601236   0 #> 239 509.943684   2.593143   0 #> 240 500.040620   4.416591   0 #> 241 500.695219   2.684118   0 #> 242 507.738263   3.026590   0 #> 243 500.188577   3.329840   0 #> 244 614.586985   2.678039   0 #> 245 612.069444   2.795457   0 #> 246 505.002187   3.195361   0 #> 247 571.859617   2.804198   0 #> 248 919.186650   2.546426   0 #> 249 563.836299   2.838815   0 #> 250 629.774228   2.965582   0 #> 251 510.945046   3.264804   0 #> 252 500.074669   2.847088   0 #> 253 526.938117   2.917256   0 #> 254 631.552278   2.793026   0 #> 255 526.448927   3.703285   0 #> 256 502.955521   2.539910   0 #> 257 502.443419   2.606357   0 #> 258 500.352789   2.535259   0 #> 259 550.390893   3.164534   0 #> 260 528.831126   2.638677   0 #> 261 888.089756   2.551821   0 #> 262 872.423565   3.070287   0 #> 263 720.945593   3.282628   0 #> 264 500.037059   2.641004   0 #> 265 509.577968   2.504267   0 #> 266 561.282432   2.829932   0 #> 267 503.801470   2.743699   0 #> 268 505.144755   3.328926   0 #> 269 615.866181   2.568114   0 #> 270 861.207844   3.135387   0 #> 271 564.837775   3.048650   0 #> 272 767.707006   2.684961   0 #> 273 699.779529   2.559059   0 #> 274 500.262765   3.091381   0 #> 275 500.150664   3.894645   0 #> 276 500.123479   3.065926   0 #> 277 522.492163   2.929508   0 #> 278 513.246422   3.367193   0 #> 279 507.410493   2.883376   0 #> 280 865.303389   3.230785   0 #> 281 503.817100   2.547005   0 #> 282 500.056061   3.199633   0 #> 283 507.111250   3.002002   0 #> 284 500.409971   2.549045   0 #> 285 675.833344   3.304461   0 #> 286 507.715770   3.404526   0 #> 287 590.413853   2.676966   0 #> 288 564.862675   2.664582   0 #> 289 500.366586   2.642605   0 #> 290 500.390436   2.732429   0 #> 291 500.172922   3.190230   0 #> 292 500.357348   2.696264   0 #> 293 587.810559   2.963987   0 #> 294 500.161665   2.926802   0 #> 295 518.131032   2.757459   0 #> 296 500.246493   3.291383   0 #> 297 500.537622   2.942297   0 #> 298 698.202643   2.627001   0 #> 299 500.009429   2.523925   0 #> 300 500.665702   2.775108   0 #> 301 512.852551   2.504685   0 #> 302 536.855474   3.184811   0 #> 303 504.364375   3.377162   0 #> 304 501.602986   2.835602   0 #> 305 638.118518   3.825665   0 #> 306 500.003579   3.465683   0 #> 307 500.173695   2.816709   0 #> 308 754.411013   3.544260   0 #> 309 522.457163   2.741112   0 #> 310 502.170221   3.153152   0 #> 311 569.576145   3.113982   0 #> 312 502.712810   2.760532   0 #> 313 510.436325   2.867601   0 #> 314 544.723924   2.588375   0 #> 315 501.908308   2.966201   0 #> 316 521.188598   3.344705   0 #> 317 531.362447   2.630353   0 #> 318 541.064775   3.021308   0 #> 319 500.843079   3.161408   0 #> 320 520.842046   2.768721   0 #> 321 562.087367   2.701854   0 #> 322 503.982759   2.522661   0 #> 323 504.223113   2.507609   0 #> 324 565.223578   2.596308   0 #> 325 547.807864   2.746337   0 #> 326 500.072589   2.502608   0 #> 327 524.816878   4.424416   0 #> 328 521.939297   2.639345   0 #> 329 508.339250   2.520426   0 #> 330 500.191746   2.945328   0 #> 331 500.026772   2.523107   0 #> 332 501.478795   4.100519   0 #> 333 527.256211   3.379054   0 #> 334 805.564899   3.113985   0 #> 335 531.599918   2.826716   0 #> 336 500.293869   2.502213   0 #> 337 592.380812   2.729612   0 #> 338 815.790783   3.078340   0 #> 339 500.205312   2.642117   0 #> 340 504.348968   3.326942   0 #> 341 616.432164   3.133774   0 #> 342 507.036278   3.159332   0 #> 343 501.644515   3.575146   0 #> 344 504.878804   2.585117   0 #> 345 665.618579   2.783500   0 #> 346 501.190512   2.903853   0 #> 347 511.749005   3.284283   0 #> 348 506.917204   2.541580   0 #> 349 500.034492   3.220815   0 #> 350 503.340422   2.840926   0 #> 351 577.658769   2.661425   0 #> 352 500.310045   2.646674   0 #> 353 500.792686   2.506159   0 #> 354 500.136804   3.001095   0 #> 355 500.042245   2.520648   0 #> 356 646.421665   2.623973   0 #> 357 505.038176   2.534741   0 #> 358 790.858495   2.972215   0 #> 359 507.767196   3.075554   0 #> 360 516.276303   4.048335   0 #> 361 509.033683   2.690036   0 #> 362 543.081246   3.711332   0 #> 363 661.791087   2.580708   0 #> 364 500.889323   2.891586   0 #> 365 504.258878   2.644378   0 #> 366 501.756381   3.174260   0 #> 367 500.866022   2.883634   0 #> 368 500.106125   2.563231   0 #> 369 500.174822   2.539556   0 #> 370 500.769220   3.159216   0 #> 371 530.213244   2.658367   0 #> 372 503.239441   2.641614   0 #> 373 518.950636   3.125530   0 #> 374 554.725030   2.782667   0 #> 375 500.594922   2.699220   0 #> 376 508.946191   2.562685   0 #> 377 522.380576   2.803047   0 #> 378 722.851363   2.801143   0 #> 379 500.928868   4.252997   0 #> 380 511.466170   5.617184   0 #> 381 528.779730   2.874044   0 #> 382 513.187305   2.590818   0 #> 383 608.640079   2.582388   0 #> 384 500.054241   2.822579   0 #> 385 500.152200   2.541322   0 #> 386 500.516526   3.123904   0 #> 387 553.669347   3.104159   0 #> 388 557.777436   2.557561   0 #> 389 525.659790   2.655207   0 #> 390 605.556168   2.626403   0 #> 391 500.055154   2.534024   0 #> 392 502.260885   3.465334   0 #> 393 510.849221   2.989489   0 #> 394 500.005589   2.831143   0 #> 395 500.074719   3.147509   0 #> 396 522.892896   3.147113   0 #> 397 500.419579   2.717301   0 #> 398 523.353017   2.754869   0 #> 399 572.590388   3.316552   0 #> 400 500.136077   3.144685   0 #> 401 500.856513   2.935707   0 #> 402 665.772703   3.434821   0 #> 403 500.749872   2.947160   0 #> 404 503.177674   3.513181   0 #> 405 500.182032   2.582546   0 #> 406 500.153042   3.543284   0 #> 407 500.383083   2.708662   0 #> 408 507.994705   2.856307   0 #> 409 509.881152   3.158785   0 #> 410 604.789063   2.891141   0 #> 411 625.098148   3.438755   0 #> 412 501.648246   2.786019   0 #> 413 504.018445   2.779622   0 #> 414 512.971426   2.771155   0 #> 415 500.808752   2.949468   0 #> 416 500.059244   2.514525   0 #> 417 500.044330   2.646936   0 #> 418 560.934297   2.839373   0 #> 419 630.181236   2.881239   0 #> 420 502.029788   2.741971   0 #> 421 671.586694   5.102165   0 #> 422 500.603995   3.181193   0 #> 423 501.072557   2.528552   0 #> 424 505.186654   2.587556   0 #> 425 774.042840   2.610706   0 #> 426 505.265040   2.628645   0 #> 427 500.020104   3.109965   0 #> 428 500.597994   3.005351   0 #> 429 500.238673   3.162142   0 #> 430 504.483707   3.244543   0 #> 431 515.228802   2.547681   0 #> 432 500.072248   2.751110   0 #> 433 609.637651   2.537235   0 #> 434 500.394902   3.092591   0 #> 435 502.588846   2.629146   0 #> 436 533.294621   3.313037   0 #> 437 501.720542   2.583446   0 #> 438 500.254788   2.521053   0 #> 439 501.179035   2.530114   0 #> 440 500.070401   2.677791   0 #> 441 559.785019   2.512048   0 #> 442 506.933134   3.594499   0 #> 443 500.414876   2.938328   0 #> 444 500.875740   3.092071   0 #> 445 501.353891   2.904750   0 #> 446 500.714632   2.978859   0 #> 447 542.213623   2.623831   0 #> 448 503.781306   2.666646   0 #> 449 500.655084   2.730479   0 #> 450 533.998720   2.735716   0 #> 451 500.016624   3.425212   0 #> 452 501.825523   2.692985   0 #> 453 820.329074   2.999569   0 #> 454 579.320095   2.605129   0 #> 455 654.843026   2.967139   0 #> 456 631.778519   3.133684   0 #> 457 502.702908   2.721164   0 #> 458 506.856894   2.685471   0 #> 459 607.747436   2.791721   0 #> 460 525.449118   2.551981   0 #> 461 500.129596   2.552172   0 #> 462 500.009989   3.477697   0 #> 463 501.867620   4.433031   0 #> 464 500.830454   3.088170   0 #> 465 705.037113   2.541046   0 #> 466 500.198952   3.475014   0 #> 467 501.059868   2.655302   0 #> 468 534.663256   3.990664   0 #> 469 576.488983   2.959630   0 #> 470 570.385317   2.825587   0 #> 471 612.706507   3.060335   0 #> 472 503.131777   2.535464   0 #> 473 766.318242   2.754269   0 #> 474 500.370040   2.651164   0 #> 475 500.308980   2.502456   0 #> 476 502.577024   2.927947   0 #> 477 501.160717   2.505228   0 #> 478 500.077923   3.241830   0 #> 479 500.237481   2.689285   0 #> 480 500.110101   2.658979   0 #> 481 501.627922   2.669123   0 #> 482 553.432974   2.594060   0 #> 483 586.655173   3.349291   0 #> 484 504.064927   2.825863   0 #> 485 500.298090   2.504070   0 #> 486 500.035154   2.767846   0 #> 487 500.293933   2.538321   0 #> 488 500.185000   2.582870   0 #> 489 503.550204   3.898520   0 #> 490 502.821813   5.742773   0 #> 491 511.519603   2.571003   0 #> 492 843.288727   3.368970   0 #> 493 500.868007   2.962222   0 #> 494 500.533734   2.585620   0 #> 495 500.711374   3.362455   0 #> 496 500.117230   4.477443   0 #> 497 500.260511   2.600528   0 #> 498 829.139145   2.801827   0 #> 499 517.398498   2.968978   0 #> 500 789.594031   3.046876   0 #> 501 504.816606   3.389590   0 #> 502 502.172727   4.460044   0 #> 503 500.833376   3.279461   0 #> 504 526.054083   3.026602   0 #> 505 500.503575   3.204584   0 #> 506 508.574130   2.612138   0 #> 507 501.284319   2.792822   0 #> 508 516.526081   2.735016   0 #> 509 500.001686   2.669709   0 #> 510 512.018370   2.692863   0 #> 511 500.511316   2.718074   0 #> 512 712.049302   4.958895   0 #> 513 501.091176   2.565684   0 #> 514 510.277879   2.996281   0 #> 515 526.545261   2.542640   0 #> 516 505.702550   3.408833   0 #> 517 649.195550   3.500187   0 #> 518 503.456590   2.682178   0 #> 519 958.351965   3.067889   0 #> 520 514.509498   2.537182   0 #> 521 500.149751   2.554508   0 #> 522 587.508119   3.889548   0 #> 523 560.268218   2.865616   0 #> 524 513.643056   2.774081   0 #> 525 512.420918   4.121305   0 #> 526 718.670906   2.604114   0 #> 527 522.756846   4.308498   0 #> 528 503.269523   2.725125   0 #> 529 503.925879   3.724604   0 #> 530 500.133343   2.594647   0 #> 531 561.737870   2.826598   0 #> 532 500.732140   2.711283   0 #> 533 619.186941   3.267181   0 #> 534 500.000845   2.667264   0 #> 535 500.323503   2.618814   0 #> 536 500.106084   2.764467   0 #> 537 500.712934   3.707152   0 #> 538 503.468709   2.546209   0 #> 539 500.996658   2.589258   0 #> 540 542.053760   2.580595   0 #> 541 501.625746   3.056557   0 #> 542 506.379792   2.673830   0 #> 543 500.616198   2.728296   0 #> 544 500.071505   2.963438   0 #> 545 564.431567   2.506948   0 #> 546 500.620807   3.278758   0 #> 547 503.422465   3.130908   0 #> 548 929.719647   2.654421   0 #> 549 500.192641   2.609434   0 #> 550 500.321375   2.940882   0 #> 551 506.628204   3.734809   0 #> 552 526.359278   2.833011   0 #> 553 500.509477   2.540297   0 #> 554 500.020446   2.582011   0 #> 555 518.243986   2.992482   0 #> 556 519.637389   2.550462   0 #> 557 500.165043   2.556206   0 #> 558 546.708120   2.946224   0 #> 559 500.052705   3.234390   0 #> 560 500.364159   2.694659   0 #> 561 533.324523   2.548305   0 #> 562 584.670927   2.714057   0 #> 563 584.543871   3.111394   0 #> 564 547.304608   2.918337   0 #> 565 510.470112   3.187489   0 #> 566 500.044652   3.351891   0 #> 567 537.598604   2.702146   0 #> 568 500.089976   2.633628   0 #> 569 504.929742   2.829433   0 #> 570 503.853471   3.042041   0 #> 571 502.822357   3.219663   0 #> 572 500.185091   2.830185   0 #> 573 574.141627   2.972433   0 #> 574 500.669023   2.877039   0 #> 575 785.996588   2.508801   0 #> 576 509.185469   2.947230   0 #> 577 503.914384   3.490458   0 #> 578 500.027780   2.547938   0 #> 579 530.632647   2.688974   0 #> 580 500.252924   2.711174   0 #> 581 510.412062   4.201752   0 #> 582 501.368835   2.691005   0 #> 583 500.038001   2.991233   0 #> 584 518.956044   3.560116   0 #> 585 503.791921   2.810077   0 #> 586 505.501216   3.025425   0 #> 587 504.956450   2.987574   0 #> 588 513.674570   2.632909   0 #> 589 501.511791   2.641537   0 #> 590 500.084424   3.522770   0 #> 591 926.175281   3.371277   0 #> 592 533.835110   2.625567   0 #> 593 539.422275   2.696704   0 #> 594 871.817972   3.487431   0 #> 595 501.071102   2.623201   0 #> 596 500.117068   2.921609   0 #> 597 501.332455   2.515812   0 #> 598 647.081561   2.714449   0 #> 599 800.796024   3.193832   0 #> 600 500.103903   3.651699   0 #> 601 501.675182   3.967678   0 #> 602 525.575230   2.886171   0 #> 603 508.936879   2.656916   0 #> 604 501.385852   2.738409   0 #> 605 500.328652   2.925322   0 #> 606 530.709355   2.712136   0 #> 607 532.238805   2.774622   0 #> 608 500.192411   2.692984   0 #> 609 522.803586   3.027338   0 #> 610 891.016859   3.046605   0 #> 611 601.808602   2.663397   0 #> 612 500.024981   2.715654   0 #> 613 505.698786   3.656084   0 #> 614 560.305068   2.540081   0 #> 615 626.380068   3.394860   0 #> 616 628.950309   3.584514   0 #> 617 710.120995   2.657690   0 #> 618 520.758051   2.651223   0 #> 619 502.839345   3.184910   0 #> 620 500.760032   2.517474   0 #> 621 500.330673   2.915743   0 #> 622 500.880477   2.609848   0 #> 623 502.513458   2.742205   0 #> 624 501.368551   3.210545   0 #> 625 534.031656   2.774141   0 #> 626 791.462626   2.791633   0 #> 627 613.516615   2.598461   0 #> 628 500.345309   2.515612   0 #> 629 500.910329   2.820653   0 #> 630 500.033184   2.556675   0 #> 631 500.040113   2.964613   0 #> 632 500.031176   2.655348   0 #> 633 500.682619   4.012898   0 #> 634 500.242631   2.915806   0 #> 635 506.455615   3.040244   0 #> 636 502.868180   2.929653   0 #> 637 531.975032   2.873899   0 #> 638 503.496561   3.065504   0 #> 639 513.085151   2.615505   0 #> 640 500.238874   2.800504   0 #> 641 505.129226   2.577862   0 #> 642 521.947774   2.848413   0 #> 643 509.019962   2.982902   0 #> 644 741.676650   2.544732   0 #> 645 505.519530   2.734231   0 #> 646 501.819951   2.744229   0 #> 647 516.960831   2.599445   0 #> 648 500.229672   3.006026   0 #> 649 515.291273   3.535780   0 #> 650 501.708803   2.707475   0 #> 651 591.225794   2.728753   0 #> 652 672.691708   2.508136   0 #> 653 551.741302   2.553955   0 #> 654 501.562466   2.692855   0 #> 655 500.692430   2.748113   0 #> 656 500.004357   2.757773   0 #> 657 501.050926   3.432595   0 #> 658 502.972075   2.897460   0 #> 659 500.358752   3.134459   0 #> 660 555.089792   3.502902   0 #> 661 501.032126   2.628296   0 #> 662 500.003659   2.591642   0 #> 663 504.136240   2.810626   0 #> 664 506.227439   2.949440   0 #> 665 500.048594   2.994226   0 #> 666 604.369185   2.646574   0 #> 667 517.187807   2.641656   0 #> 668 548.396271   2.738184   0 #> 669 533.090627   2.757242   0 #> 670 502.181839   2.853984   0 #> 671 500.497524   3.079785   0 #> 672 501.327079   3.972432   0 #> 673 925.641104   3.133185   0 #> 674 533.706638   3.802917   0 #> 675 501.646738   2.544554   0 #> 676 665.457511   4.120831   0 #> 677 501.182452   3.196317   0 #> 678 505.630334   2.961224   0 #> 679 999.306214   3.161076   0 #> 680 500.939299   3.009775   0 #> 681 500.349147   2.710668   0 #> 682 500.006219   2.545932   0 #> 683 500.443410   2.632435   0 #> 684 526.929795   2.589312   0 #> 685 530.242282   2.827273   0 #> 686 936.310633   2.998712   0 #> 687 732.406208   3.483716   0 #> 688 800.252160   3.739290   0 #> 689 500.062101   3.219928   0 #> 690 562.092193   3.309407   0 #> 691 500.036327   2.717856   0 #> 692 524.477685   2.563929   0 #> 693 745.248439   3.021397   0 #> 694 530.085863   2.551497   0 #> 695 545.151008   2.530924   0 #> 696 503.774580   2.669510   0 #> 697 598.478207   2.502835   0 #> 698 500.796338   3.318471   0 #> 699 501.457399   2.572031   0 #> 700 500.035222   3.992256   0 #> 701 500.015782   3.527942   0 #> 702 503.986126   3.251390   0 #> 703 671.907122   2.622454   0 #> 704 502.198665   3.238509   0 #> 705 500.017424   2.583263   0 #> 706 501.095706   2.862196   0 #> 707 502.842443   2.634540   0 #> 708 500.044112   2.936200   0 #> 709 515.261657   2.536900   0 #> 710 501.502060   2.792723   0 #> 711 636.457300   2.707791   0 #> 712 500.136019   3.252661   0 #> 713 640.234257   2.507213   0 #> 714 595.499868   2.632207   0 #> 715 925.734619   2.991675   0 #> 716 513.230361   2.650099   0 #> 717 500.116118   2.509931   0 #> 718 508.291435   2.767383   0 #> 719 501.339421   2.572207   0 #> 720 500.357997   3.400683   0 #> 721 551.411730   2.924748   0 #> 722 506.922837   3.624496   0 #> 723 501.064070   2.621050   0 #> 724 500.349475   2.720173   0 #> 725 817.984280   3.028508   0 #> 726 777.312119   2.699583   0 #> 727 658.850684   2.793712   0 #> 728 500.508162   2.683828   0 #> 729 502.173161   4.129798   0 #> 730 501.422730   2.539483   0 #> 731 500.782655   2.938142   0 #> 732 525.410945   2.664614   0 #> 733 500.004550   2.652845   0 #> 734 502.310536   2.837111   0 #> 735 500.114473   2.951530   0 #> 736 500.118565   2.518650   0 #> 737 500.765976   2.521743   0 #> 738 514.070372   2.850277   0 #> 739 515.032502   2.565633   0 #> 740 502.340206   2.752418   0 #> 741 500.052870   4.004510   0 #> 742 667.355416   2.599048   0 #> 743 599.628333   2.542566   0 #> 744 504.779723   2.502869   0 #> 745 764.337260   2.982459   0 #> 746 501.374535   3.050415   0 #> 747 532.712479   2.610105   0 #> 748 501.954040   2.813916   0 #> 749 504.631360   2.733901   0 #> 750 500.001288   2.555118   0 #> 751 504.947576   3.055337   0 #> 752 506.533666   2.576840   0 #> 753 503.877814   2.678559   0 #> 754 501.666294   3.130876   0 #> 755 507.997297   2.596065   0 #> 756 500.041385   2.862222   0 #> 757 501.041931   3.156377   0 #> 758 500.343933   2.843004   0 #> 759 525.928654   3.677098   0 #> 760 502.017265   3.164795   0 #> 761 500.750826   2.961085   0 #> 762 500.578458   2.514257   0 #> 763 504.082039   4.369907   0 #> 764 505.406585   3.593276   0 #> 765 500.883785   2.744531   0 #> 766 518.864883   2.626204   0 #> 767 501.126393   2.834603   0 #> 768 533.517147   2.851881   0 #> 769 501.826920   2.533879   0 #> 770 500.173925   3.508129   0 #> 771 500.035890   2.742206   0 #> 772 501.038862   3.624059   0 #> 773 503.497558   2.701329   0 #> 774 822.017126   2.684227   0 #> 775 500.682143   2.629638   0 #> 776 503.936970   2.828754   0 #> 777 658.672496   3.109780   0 #> 778 500.465650   3.793947   0 #> 779 502.476962   3.479797   0 #> 780 500.554166   2.695035   0 #> 781 500.005411   3.084389   0 #> 782 500.195136   2.858628   0 #> 783 502.064362   2.580797   0 #> 784 786.699264   2.756800   0 #> 785 529.657431   2.855981   0 #> 786 500.150011   2.608926   0 #> 787 503.283044   3.172969   0 #> 788 500.028088   3.097004   0 #> 789 500.061494   2.557425   0 #> 790 500.700470   3.061684   0 #> 791 501.428458   3.610904   0 #> 792 743.566954   2.501002   0 #> 793 500.587580   2.835747   0 #> 794 507.761181   3.376601   0 #> 795 537.482060   2.606190   0 #> 796 500.112442   2.959103   0 #> 797 500.748668   3.175547   0 #> 798 502.020130   2.508817   0 #> 799 509.957097   2.889088   0 #> 800 502.717861   2.823696   0 #> 801 500.008593   3.892256   0 #> 802 507.763335   3.903581   0 #> 803 500.601991   2.562074   0 #> 804 500.375607   2.553179   0 #> 805 502.381928   3.229211   0 #> 806 502.593673   2.942363   0 #> 807 500.066827   3.824591   0 #> 808 501.364499   2.980572   0 #> 809 515.628029   2.751061   0 #> 810 961.691066   2.520856   0 #> 811 632.483115   2.945059   0 #> 812 500.837320   2.761512   0 #> 813 500.378330   2.504848   0 #> 814 500.182639   2.510786   0 #> 815 687.394041   3.511792   0 #> 816 551.214539   3.898836   0 #> 817 500.417261   3.002431   0 #> 818 500.726405   2.663196   0 #> 819 501.975739   2.537053   0 #> 820 500.125053   2.521862   0 #> 821 549.727257   2.611800   0 #> 822 500.289159   3.183191   0 #> 823 512.135508   3.612797   0 #> 824 985.180164   2.555908   0 #> 825 500.697232   2.931336   0 #> 826 537.672258   3.184140   0 #> 827 500.024190   2.710873   0 #> 828 504.771220   2.508911   0 #> 829 500.161412   2.964215   0 #> 830 501.499883   2.528432   0 #> 831 500.013664   2.886428   0 #> 832 626.033229   2.677141   0 #> 833 527.858313   3.907738   0 #> 834 502.259073   2.653950   0 #> 835 501.170426   2.881271   0 #> 836 503.057026   2.599012   0 #> 837 503.530180   3.428089   0 #> 838 501.521070   2.504930   0 #> 839 618.920817   2.968464   0 #> 840 500.100386   2.829720   0 #> 841 563.169711   2.839725   0 #> 842 504.197501   2.531896   0 #> 843 505.307314   2.832050   0 #> 844 508.207118   2.646625   0 #> 845 500.275439   3.104978   0 #> 846 500.422245   3.231239   0 #> 847 921.309418   3.266989   0 #> 848 500.033970   3.021493   0 #> 849 847.991514   3.272672   0 #> 850 848.050226   2.883725   0 #> 851 526.814991   2.938976   0 #> 852 502.921107   2.595696   0 #> 853 516.179769   2.542046   0 #> 854 641.686596   3.805784   0 #> 855 542.585154   2.535590   0 #> 856 597.464399   2.718440   0 #> 857 501.236990   3.348065   0 #> 858 500.027608   2.696183   0 #> 859 532.610878   2.867122   0 #> 860 500.800338   2.903056   0 #> 861 501.417149   3.126766   0 #> 862 573.838427   2.733789   0 #> 863 791.547596   2.952255   0 #> 864 505.396814   2.852017   0 #> 865 501.954797   4.407165   0 #> 866 596.078950   3.866182   0 #> 867 900.376043   2.541648   0 #> 868 517.778457   2.877882   0 #> 869 500.087288   2.550494   0 #> 870 500.950507   4.036202   0 #> 871 570.636523   3.388873   0 #> 872 501.262605   2.761313   0 #> 873 910.768376   2.690093   0 #> 874 505.555229   2.612339   0 #> 875 500.343825   2.596806   0 #> 876 500.135084   2.556441   0 #> 877 527.874777   2.579020   0 #> 878 678.692247   2.553545   0 #> 879 500.086636   3.615732   0 #> 880 521.034628   2.573942   0 #> 881 569.017128   2.666541   0 #> 882 506.126010   2.741063   0 #> 883 535.220349   2.554994   0 #> 884 501.964605   2.825904   0 #> 885 173.885730   2.570995   1 #> 886 947.383871   3.075088   1 #> 887 307.976594   2.541431   1 #> 888 280.744739   3.709258   1 #> 889 437.262916   2.574012   1 #> 890 185.768206   2.559300   1 #> 891 919.586188   2.511782   1 #> 892 568.525522   2.855435   1 #> 893 254.503386   3.506578   1 #> 894 667.579351   2.620214   1 #> 895 128.923471   3.139817   1 #> 896 844.378074   2.943872   1 #> 897 539.522683   2.728982   1 #> 898 317.783988   2.644590   1 #> 899 920.712267   2.532107   1 #> 900 607.719682   2.689034   1 #> 901 540.953277   2.596679   1 #> 902 629.688979   2.503903   1 #> 903 137.439040   2.634407   1 #> 904 383.048479   2.776157   1 #> 905  66.587782   2.501564   1 #> 906  92.137374   2.650883   1 #> 907 271.805148   2.869218   1 #> 908 731.808466   2.847230   1 #> 909 541.391661   2.883793   1 #> 910  94.485573   2.780883   1 #> 911 164.655444   3.329638   1 #> 912   7.256096   2.777612   1 #> 913 199.940100   2.731898   1 #> 914 180.838781   2.940376   1 #> 915 578.583613   2.605867   1 #> 916 906.523055   2.733348   1 #> 917 402.232015   3.130073   1 #> 918 691.366780   3.148553   1 #> 919 681.187802   2.817814   1 #> 920  46.641523   2.641483   1 #> 921 549.016519   3.490545   1 #> 922 503.781476   2.603402   1 #> 923  80.357032   3.223700   1 #> 924 742.282529   3.371761   1 #> 925 875.307136   2.699794   1 #> 926 307.676254   2.825646   1 #> 927 959.201988   3.097693   1 #> 928  26.629136   2.820951   1 #> 929 134.779138   2.511738   1 #> 930 397.807084   2.520340   1 #> 931 101.671552   3.581022   1 #> 932 377.542446   3.087989   1 #> 933 200.725248   2.986893   1 #> 934 837.279061   3.672993   1 #> 935 155.941329   2.646059   1 #> 936 650.992455   2.725077   1 #> 937 953.849257   3.526434   1 #> 938 462.278262   2.736459   1 #> 939 586.180713   2.509162   1 #> 940 324.703010   2.740497   1 #> 941  89.268200   2.653452   1 #> 942 179.571285   2.731461   1 #> 943 955.862314   2.657268   1 #> 944 916.328846   2.666191   1 #> 945 782.693003   3.136375   1 #> 946 934.487517   2.550920   1 #> 947 619.243847   2.950921   1 #> 948 451.717747   2.830309   1 #> 949 929.544721   2.656579   1 #> 950 955.977479   3.059263   1 #> 951 132.599577   2.701135   1 #> 952 699.640996   2.757246   1 #> 953 148.182312   2.558233   1 #> 954 940.811170   2.559706   1 #> 955  39.961550   2.767403   1 #> 956 918.213069   2.530728   1 #> 957 254.739679   2.905383   1 #> 958 210.044383   2.512626   1 #> 959 334.803923   2.707063   1 #> 960 675.735429   2.742363   1 #> 961 472.044110   2.737346   1 #> 962 242.648565   4.406956   1 #> 963 943.178134   2.848923   1 #> 964 623.384276   2.820263   1 #> 965 435.996526   2.561629   1 #> 966 640.372580   2.546261   1 #> 967 525.727865   3.269962   1 #> 968   6.413735   3.640030   1 #> 969 552.319927   2.616338   1 #> 970  71.679626   3.136847   1 #> 971 381.793014   2.506951   1 #> 972 112.509932   2.561744   1 #> 973 661.882721   2.685606   1 #> 974 288.835986   2.910265   1 #> 975 888.445703   2.574408   1 #> 976 859.384268   2.757226   1 #> 977 831.510681   2.762310   1 #> 978  17.031455   4.189506   1 #> 979 590.962019   2.572190   1 #> 980 954.388819   3.576414   1 #> 981 770.349559   2.877456   1 #> 982 425.176168   2.645513   1 #> 983 555.584499   2.654700   1 #> 984 772.522722   2.806323   1 #> 985 351.702836   2.533790   1 #> 986 350.871490   3.365223   1 #> 987 980.881297   2.646800   1 #> 988 431.216058   2.812504   1 #> 989 278.842559   2.741464   1 #> 990 813.368072   2.704885   1 #> 991 815.137564   5.176076   1 #> 992 232.722546   2.599747   1 #> 993  78.324809   3.862741   1 #> 994 196.746478   2.637976   1 #> 995 429.073248   2.740942   1 #> 996  93.596508   2.538843   1 #>  #> [[3]] #>            ts magnitudes gen #> 1   599.10535   2.625200   2 #> 2   564.80810   2.721811   2 #> 3   772.61398   2.551002   2 #> 4   501.71413   2.831474   2 #> 5   692.38308   3.025009   2 #> 6   500.80095   2.874270   2 #> 7   506.39472   2.797506   2 #> 8   505.76908   3.031096   2 #> 9   673.49571   2.592867   2 #> 10  500.62360   2.519816   2 #> 11  501.43669   2.768842   2 #> 12  500.79817   3.391424   2 #> 13  502.87841   2.503659   2 #> 14  598.99530   2.698417   2 #> 15  584.82688   2.832121   2 #> 16  500.22010   2.734557   2 #> 17  509.29130   2.513403   2 #> 18  532.43622   3.313471   2 #> 19  652.55815   2.797154   2 #> 20  861.47978   3.007952   2 #> 21  759.89690   3.660003   2 #> 22  541.11574   2.613702   2 #> 23  880.51324   2.556064   2 #> 24  895.66253   2.923342   2 #> 25  543.10111   3.301506   2 #> 26  500.08105   2.709906   2 #> 27  606.19600   4.385654   2 #> 28  500.63247   5.089157   2 #> 29  505.69244   3.869406   2 #> 30  502.61374   2.876543   2 #> 31  502.07146   2.617373   2 #> 32  509.23129   2.682550   2 #> 33  549.97138   2.516216   2 #> 34  563.62439   2.570977   2 #> 35  502.99347   2.687600   2 #> 36  516.08153   2.518794   2 #> 37  538.99702   2.557114   2 #> 38  505.37338   2.905810   2 #> 39  514.84355   3.220350   2 #> 40  503.22354   3.237955   2 #> 41  982.03844   3.122993   2 #> 42  779.78957   2.667003   2 #> 43  701.89432   2.781422   2 #> 44  519.19006   2.565801   2 #> 45  609.83167   2.794266   2 #> 46  765.87429   2.610214   2 #> 47  524.56041   2.694793   2 #> 48  500.68502   2.763267   2 #> 49  502.12192   2.547350   2 #> 50  500.36585   3.456308   2 #> 51  605.91947   2.587665   2 #> 52  502.53760   3.081616   2 #> 53  503.06981   3.018321   2 #> 54  585.19988   3.174685   2 #> 55  524.38092   3.116803   2 #> 56  527.04630   2.626998   2 #> 57  502.11276   2.530195   2 #> 58  502.54113   2.529722   2 #> 59  502.97468   3.198660   2 #> 60  503.54544   2.525675   2 #> 61  756.01263   2.759172   2 #> 62  768.23821   2.867065   2 #> 63  510.26013   3.358886   2 #> 64  501.77460   2.965628   2 #> 65  558.77430   2.540060   2 #> 66  558.74821   3.202319   2 #> 67  571.34532   2.557964   2 #> 68  925.02957   2.715797   2 #> 69  607.21351   2.527735   2 #> 70  500.16644   2.564607   2 #> 71  500.07308   2.735968   2 #> 72  511.62299   2.977505   2 #> 73  502.34251   2.643390   2 #> 74  503.77905   3.105581   2 #> 75  501.74558   2.982348   2 #> 76  520.97030   2.911245   2 #> 77  761.12116   2.508510   2 #> 78  507.07061   2.508356   2 #> 79  501.28210   2.672290   2 #> 80  502.22391   2.534778   2 #> 81  500.42843   3.044546   2 #> 82  818.61228   2.990283   2 #> 83  644.60428   2.827726   2 #> 84  565.07742   2.672170   2 #> 85  554.80288   2.510193   2 #> 86  872.54714   3.073580   2 #> 87  622.99068   2.711279   2 #> 88  616.02002   2.633399   2 #> 89  564.93768   2.600593   2 #> 90  522.05930   2.858563   2 #> 91  500.41553   2.842892   2 #> 92  642.10751   2.502969   2 #> 93  500.62345   2.936473   2 #> 94  790.96434   3.052904   2 #> 95  865.38626   2.800902   2 #> 96  510.58762   3.135459   2 #> 97  513.71590   2.666389   2 #> 98  573.28588   2.756212   2 #> 99  659.05273   3.049719   2 #> 100 639.58610   2.513461   2 #> 101 500.06244   2.593455   2 #> 102 524.82103   2.841167   2 #> 103 539.03900   2.566593   2 #> 104 524.85111   2.600370   2 #> 105 511.23583   5.271414   2 #> 106 627.22049   3.653395   2 #> 107 807.05461   3.055006   2 #> 108 696.20074   3.021719   2 #> 109 501.73858   2.870465   2 #> 110 608.88225   2.612292   2 #> 111 501.05737   2.788171   2 #> 112 500.75738   2.836211   2 #> 113 518.62135   2.607825   2 #> 114 543.27402   2.611849   2 #> 115 505.00541   2.999663   2 #> 116 565.75082   3.215583   2 #> 117 501.97652   2.515211   2 #> 118 500.96103   2.567173   2 #> 119 501.70832   3.130849   2 #> 120 503.71627   2.626715   2 #> 121 862.28402   2.794469   2 #> 122 680.64576   2.523519   2 #> 123 533.64685   2.667223   2 #> 124 517.12953   2.772273   2 #> 125 513.39378   3.105353   2 #> 126 512.29349   3.303269   2 #> 127 511.85641   2.797395   2 #> 128 587.07692   3.091752   2 #> 129 652.17216   3.016382   2 #> 130 511.94908   3.383596   2 #> 131 511.53920   3.818162   2 #> 132 511.55036   2.617191   2 #> 133 548.43750   2.857501   2 #> 134 548.60947   2.541717   2 #> 135 521.46662   2.514114   2 #> 136 512.97676   2.763833   2 #> 137 538.10620   3.568188   2 #> 138 528.21295   2.881694   2 #> 139 867.60522   3.100822   2 #> 140 511.74418   2.627828   2 #> 141 512.52593   2.863124   2 #> 142 891.94251   3.122061   2 #> 143 549.72230   2.537799   2 #> 144 846.16871   2.526540   2 #> 145 511.50673   2.531935   2 #> 146 513.26420   3.070605   2 #> 147 511.57150   2.508041   2 #> 148 513.39551   3.715578   2 #> 149 511.60037   4.513497   2 #> 150 535.74799   2.557898   2 #> 151 511.64286   2.766797   2 #> 152 520.98900   4.095744   2 #> 153 511.48002   3.001488   2 #> 154 512.93834   2.632187   2 #> 155 511.62079   3.009489   2 #> 156 575.36068   2.885225   2 #> 157 512.31449   2.546999   2 #> 158 617.08682   3.240977   2 #> 159 512.42446   2.601938   2 #> 160 533.49782   2.706938   2 #> 161 511.69582   2.503464   2 #> 162 577.40286   3.480392   2 #> 163 512.58605   3.312169   2 #> 164 805.74876   2.790762   2 #> 165 512.27807   3.297806   2 #> 166 515.49761   2.517095   2 #> 167 533.22835   2.562744   2 #> 168 519.20470   2.796506   2 #> 169 511.50722   2.838904   2 #> 170 511.67434   2.503380   2 #> 171 511.61382   2.528780   2 #> 172 511.53763   2.645921   2 #> 173 514.30302   2.589693   2 #> 174 511.73882   3.125507   2 #> 175 511.48580   2.747149   2 #> 176 512.17124   3.443637   2 #> 177 511.73707   2.788673   2 #> 178 511.47508   2.800638   2 #> 179 516.75615   2.574491   2 #> 180 556.85403   2.836548   2 #> 181 515.23376   2.950636   2 #> 182 627.91132   2.846590   2 #> 183 511.48901   2.848313   2 #> 184 517.21390   2.762046   2 #> 185 513.38712   3.575404   2 #> 186 511.65372   3.851415   2 #> 187 511.52247   3.325422   2 #> 188 511.73289   2.537525   2 #> 189 650.40842   3.128194   2 #> 190 532.47012   3.009205   2 #> 191 512.20236   2.700685   2 #> 192 511.56092   2.780957   2 #> 193 549.17208   2.634679   2 #> 194 511.50901   3.168970   2 #> 195 641.08738   2.543271   2 #> 196 513.65963   2.968115   2 #> 197 553.44062   2.573669   2 #> 198 749.97248   2.570138   2 #> 199 614.87048   2.660082   2 #> 200 523.63476   4.164962   2 #> 201 517.85963   3.106304   2 #> 202 680.77237   4.471238   2 #> 203 505.29551   2.742382   2 #> 204 557.91065   2.742104   2 #> 205 502.28213   2.536714   2 #> 206 502.38174   2.947472   2 #> 207 526.46862   2.605487   2 #> 208 503.70148   3.871841   2 #> 209 503.44500   2.535203   2 #> 210 501.13271   2.815459   2 #> 211 892.72265   3.386425   2 #> 212 673.52842   2.688044   2 #> 213 677.65982   3.756865   2 #> 214 672.34850   2.966140   2 #> 215 673.29145   3.303647   2 #> 216 679.64844   2.535308   2 #> 217 685.70720   2.805423   2 #> 218 671.65700   2.626234   2 #> 219 671.73290   2.819439   2 #> 220 671.96167   2.790021   2 #> 221 678.79890   3.125886   2 #> 222 678.16322   2.944745   2 #> 223 671.94005   4.370924   2 #> 224 732.24684   2.512876   2 #> 225 673.18356   3.064571   2 #> 226 671.98548   3.370928   2 #> 227 751.64912   3.216706   2 #> 228 756.46749   2.988922   2 #> 229 699.05051   3.835312   2 #> 230 672.55255   3.823934   2 #> 231 706.19281   2.645402   2 #> 232 671.84018   2.634268   2 #> 233 671.68636   3.156222   2 #> 234 671.61357   2.901683   2 #> 235 671.62746   2.596170   2 #> 236 676.13908   2.612301   2 #> 237 514.00520   2.819420   2 #> 238 502.93908   2.502442   2 #> 239 510.88161   3.436154   2 #> 240 542.88294   2.869075   2 #> 241 501.22415   4.518900   2 #> 242 503.30771   2.599950   2 #> 243 539.56060   3.206726   2 #> 244 546.44765   2.506390   2 #> 245 502.84168   2.870114   2 #> 246 502.31164   2.611821   2 #> 247 541.05345   2.568784   2 #> 248 505.21749   2.546478   2 #> 249 579.95883   2.599466   2 #> 250 521.08883   2.711471   2 #> 251 535.66692   2.583900   2 #> 252 617.53611   2.511568   2 #> 253 514.29808   2.520776   2 #> 254 503.91121   2.613324   2 #> 255 535.19938   3.811237   2 #> 256 539.13631   2.671516   2 #> 257 603.97791   4.212012   2 #> 258 506.03495   2.784138   2 #> 259 534.57437   2.516260   2 #> 260 503.12217   3.285852   2 #> 261 502.98856   2.833506   2 #> 262 503.08085   2.885596   2 #> 263 503.31702   2.518197   2 #> 264 595.66535   2.702194   2 #> 265 503.61018   2.633457   2 #> 266 503.28120   2.503972   2 #> 267 506.83106   2.596051   2 #> 268 502.89455   2.720619   2 #> 269 507.58871   3.597799   2 #> 270 503.02115   2.607872   2 #> 271 697.27574   2.738332   2 #> 272 507.20745   2.749520   2 #> 273 514.99171   2.621880   2 #> 274 504.32305   2.552545   2 #> 275 502.85010   2.941926   2 #> 276 504.73801   2.939975   2 #> 277 751.95407   2.717424   2 #> 278 777.30078   2.515121   2 #> 279 775.95237   2.940811   2 #> 280 632.88278   2.627195   2 #> 281 504.44197   2.900624   2 #> 282 509.79421   3.045096   2 #> 283 894.16344   2.967545   2 #> 284 503.14446   3.888263   2 #> 285 502.89736   3.271154   2 #> 286 510.07392   3.257121   2 #> 287 502.85448   2.680847   2 #> 288 513.21939   2.696230   2 #> 289 617.31363   3.090726   2 #> 290 503.35889   2.778103   2 #> 291 503.68204   2.565403   2 #> 292 511.77953   2.553415   2 #> 293 507.48593   2.891038   2 #> 294 578.40738   2.942305   2 #> 295 520.16343   4.222696   2 #> 296 504.15548   3.121672   2 #> 297 757.58095   2.808123   2 #> 298 507.45890   3.000865   2 #> 299 505.81930   2.615004   2 #> 300 533.08611   3.109842   2 #> 301 502.99823   3.497814   2 #> 302 509.85076   2.671828   2 #> 303 538.00712   2.729788   2 #> 304 503.54622   2.772138   2 #> 305 556.88539   2.786010   2 #> 306 567.30600   2.810783   2 #> 307 670.88293   3.363270   2 #> 308 504.31120   2.586221   2 #> 309 532.24036   3.064533   2 #> 310 503.58277   3.294145   2 #> 311 518.92765   2.685704   2 #> 312 503.88319   2.542424   2 #> 313 979.99704   2.530754   2 #> 314 573.48097   2.613665   2 #> 315 516.85863   5.398105   2 #> 316 503.53081   3.041287   2 #> 317 503.49269   3.627842   2 #> 318 635.18500   3.093218   2 #> 319 509.63360   2.507629   2 #> 320 510.71926   4.096951   2 #> 321 503.77855   2.994393   2 #> 322 508.18677   2.655760   2 #> 323 502.85594   2.690806   2 #> 324 587.81686   3.070106   2 #> 325 504.36032   3.183261   2 #> 326 817.00454   2.513441   2 #> 327 532.02849   3.469975   2 #> 328 504.48394   2.635199   2 #> 329 503.18917   2.828317   2 #> 330 514.36865   2.649355   2 #> 331 503.27500   2.521131   2 #> 332 503.64730   2.998229   2 #> 333 525.95128   2.873094   2 #> 334 625.87057   2.703313   2 #> 335 502.91571   2.966353   2 #> 336 503.33268   2.813520   2 #> 337 504.82374   2.768592   2 #> 338 519.64612   2.799394   2 #> 339 542.46301   2.826006   2 #> 340 541.91009   4.040322   2 #> 341 551.10519   2.952562   2 #> 342 502.86788   3.864704   2 #> 343 503.72316   2.556050   2 #> 344 504.06030   2.884883   2 #> 345 523.38653   2.694377   2 #> 346 969.02251   2.664937   2 #> 347 506.03982   2.524742   2 #> 348 503.70127   3.106191   2 #> 349 503.33427   2.736574   2 #> 350 518.74595   2.538277   2 #> 351 502.93393   3.009635   2 #> 352 504.64693   3.305280   2 #> 353 679.01145   2.624899   2 #> 354 507.43249   2.917891   2 #> 355 511.93978   2.549012   2 #> 356 505.20103   2.597415   2 #> 357 962.11899   2.815998   2 #> 358 502.82471   2.928691   2 #> 359 507.41522   2.742114   2 #> 360 659.89724   2.887925   2 #> 361 502.96642   2.900231   2 #> 362 505.51817   2.754850   2 #> 363 844.18730   2.651448   2 #> 364 854.95015   2.652548   2 #> 365 504.15512   2.785626   2 #> 366 515.55308   2.907891   2 #> 367 601.43709   2.528894   2 #> 368 532.97528   2.621691   2 #> 369 507.11445   2.610348   2 #> 370 520.33358   2.576537   2 #> 371 508.42539   2.698930   2 #> 372 502.99759   3.136600   2 #> 373 510.17403   2.723038   2 #> 374 724.57526   3.058650   2 #> 375 712.35846   3.639906   2 #> 376 921.43953   2.978766   2 #> 377 712.97803   2.706639   2 #> 378 739.33408   2.513257   2 #> 379 735.66126   2.818358   2 #> 380 863.58290   3.072746   2 #> 381 963.34912   3.046515   2 #> 382 713.36183   2.704974   2 #> 383 712.26491   3.389941   2 #> 384 805.17537   2.903383   2 #> 385 712.13320   2.557765   2 #> 386 712.48084   2.562930   2 #> 387 730.34830   3.019738   2 #> 388 965.60713   2.585185   2 #> 389 712.58382   2.625094   2 #> 390 934.61374   3.438716   2 #> 391 712.59914   2.533940   2 #> 392 712.30404   2.967244   2 #> 393 714.32139   2.777223   2 #> 394 723.46007   2.641459   2 #> 395 714.42033   2.904138   2 #> 396 748.41891   2.501865   2 #> 397 713.13059   2.675995   2 #> 398 785.89452   2.662012   2 #> 399 716.43676   2.629382   2 #> 400 713.35453   2.556046   2 #> 401 712.55918   2.797461   2 #> 402 537.40573   2.729981   2 #> 403 506.15404   2.890881   2 #> 404 588.56380   2.758280   2 #> 405 588.06114   2.580474   2 #> 406 587.67449   2.706235   2 #> 407 561.04834   3.998779   2 #> 408 513.78386   2.550776   2 #> 409 513.33897   3.557738   2 #> 410 531.78466   2.879835   2 #> 411 527.11387   2.642727   2 #> 412 523.80026   2.549314   2 #> 413 598.62551   2.779567   2 #> 414 697.98569   2.640747   2 #> 415 514.73271   2.979707   2 #> 416 734.11478   3.194389   2 #> 417 971.45117   2.581580   2 #> 418 504.24814   3.344744   2 #> 419 508.21153   2.704916   2 #> 420 509.04255   2.713389   2 #> 421 508.39631   3.771413   2 #> 422 502.64994   3.152248   2 #> 423 519.23777   2.708404   2 #> 424 500.28854   2.570232   2 #> 425 688.61663   3.456928   2 #> 426 500.28001   2.503728   2 #> 427 904.89798   2.837415   2 #> 428 504.23873   2.555758   2 #> 429 601.52956   2.527724   2 #> 430 513.59940   3.197023   2 #> 431 589.10951   2.962051   2 #> 432 621.92438   3.200360   2 #> 433 530.46087   2.560429   2 #> 434 500.52271   3.821309   2 #> 435 500.56680   2.577747   2 #> 436 872.37538   3.156167   2 #> 437 509.17209   3.657578   2 #> 438 501.77945   2.656091   2 #> 439 506.28580   2.961195   2 #> 440 791.82222   2.655164   2 #> 441 500.82294   2.654234   2 #> 442 503.60335   3.949214   2 #> 443 515.03019   2.525874   2 #> 444 535.94907   3.647286   2 #> 445 501.32630   2.636381   2 #> 446 618.92361   2.603831   2 #> 447 521.66189   2.506082   2 #> 448 559.13136   2.873021   2 #> 449 633.43824   2.563397   2 #> 450 504.54398   2.878261   2 #> 451 989.80999   2.989120   2 #> 452 501.35766   2.598593   2 #> 453 669.28615   2.629229   2 #> 454 503.85248   2.943090   2 #> 455 733.75924   2.962452   2 #> 456 500.80108   3.137374   2 #> 457 500.44422   3.259410   2 #> 458 503.97065   2.793692   2 #> 459 554.99581   3.784594   2 #> 460 502.85798   2.553524   2 #> 461 500.35347   2.667827   2 #> 462 508.33100   2.993540   2 #> 463 500.36640   3.277225   2 #> 464 502.47289   3.139461   2 #> 465 540.41175   3.131495   2 #> 466 501.13830   2.545162   2 #> 467 512.99175   2.548031   2 #> 468 618.81528   2.864681   2 #> 469 508.02182   2.941499   2 #> 470 506.04387   2.558426   2 #> 471 505.18602   2.524716   2 #> 472 504.10637   2.897135   2 #> 473 872.46900   3.120869   2 #> 474 505.62898   3.242423   2 #> 475 504.42255   3.139151   2 #> 476 505.90708   3.430580   2 #> 477 504.12008   2.682342   2 #> 478 507.20751   4.558134   2 #> 479 588.62587   2.672214   2 #> 480 882.16147   2.955638   2 #> 481 500.54786   2.580942   2 #> 482 506.70497   3.288948   2 #> 483 504.48681   2.546011   2 #> 484 500.81669   3.571734   2 #> 485 500.91608   3.577668   2 #> 486 642.82467   2.935349   2 #> 487 503.99660   3.379262   2 #> 488 502.49649   2.612006   2 #> 489 529.67647   3.067470   2 #> 490 518.17831   3.499435   2 #> 491 623.14308   2.568784   2 #> 492 500.76245   3.076965   2 #> 493 503.32558   2.591486   2 #> 494 506.54507   3.213283   2 #> 495 691.59949   2.521222   2 #> 496 638.30555   2.592855   2 #> 497 551.25159   3.885507   2 #> 498 502.63900   2.573422   2 #> 499 550.10118   3.089809   2 #> 500 515.62865   2.665873   2 #> 501 538.27872   2.644811   2 #> 502 789.86153   3.389220   2 #> 503 530.22500   3.090504   2 #> 504 503.85105   3.133961   2 #> 505 503.60139   2.708128   2 #> 506 849.67448   2.711567   2 #> 507 651.95333   3.196165   2 #> 508 647.83717   2.834535   2 #> 509 502.44105   2.794202   2 #> 510 816.56801   2.656489   2 #> 511 503.37954   2.637907   2 #> 512 611.21061   4.121184   2 #> 513 706.16904   2.945587   2 #> 514 598.49451   2.939216   2 #> 515 517.79363   2.962508   2 #> 516 517.90302   2.703307   2 #> 517 508.72709   3.298051   2 #> 518 500.97381   2.597287   2 #> 519 501.06505   2.697629   2 #> 520 595.46559   2.750206   2 #> 521 501.09357   2.807314   2 #> 522 539.68071   3.290146   2 #> 523 505.64764   3.158318   2 #> 524 280.78521   3.682323   2 #> 525 281.44044   3.445417   2 #> 526 255.11060   2.568424   2 #> 527 165.22723   4.122076   2 #> 528 344.64056   2.593130   2 #> 529 693.08372   2.551324   2 #> 530 554.35594   3.660649   2 #> 531  80.53654   2.647835   2 #> 532 172.71609   2.622987   2 #> 533 213.48672   3.776756   2 #> 534 102.06815   2.607829   2 #> 535 846.74651   2.556789   2 #> 536 838.16993   2.660485   2 #> 537 844.21693   2.548479   2 #> 538 955.40719   2.519451   2 #> 539 954.19963   2.631181   2 #> 540 325.79053   3.134539   2 #> 541 798.91964   2.540760   2 #> 542 132.74964   2.553469   2 #> 543 677.86680   2.838832   2 #> 544 942.29047   2.824004   2 #> 545 242.75520   2.564346   2 #> 546 252.99329   2.601763   2 #> 547 640.52194   2.691980   2 #> 548  13.36970   2.893760   2 #> 549  10.58953   2.505906   2 #> 550  17.66199   3.257571   2 #> 551  85.98442   2.542347   2 #> 552 954.69032   2.527689   2 #> 553 816.66964   3.102820   2 #> 554 816.57887   2.699952   2 #> 555 817.04343   2.896686   2 #> 556 816.40596   2.653290   2 #> 557 815.78809   2.929757   2 #> 558 815.37495   2.966476   2 #> 559 819.64830   3.238112   2 #> 560 826.78580   2.708411   2 #> 561 815.22122   2.693655   2 #> 562 992.91305   2.583690   2 #> 563 820.59914   2.951766   2 #> 564 822.37913   2.543643   2 #> 565 820.83615   3.117126   2 #> 566 815.33686   2.541720   2 #> 567 816.93453   2.907746   2 #> 568 820.05892   2.948860   2 #> 569 815.17105   2.508344   2 #> 570 823.24566   3.601356   2 #> 571 815.52116   2.809047   2 #> 572 867.99045   2.813184   2 #> 573 815.22168   2.935317   2 #> 574  80.76582   2.941476   2 #>  #> [[4]] #>           ts magnitudes gen #> 1   837.1751   2.669854   3 #> 2   506.1177   2.529741   3 #> 3   505.7825   3.667264   3 #> 4   546.0084   2.661672   3 #> 5   500.8904   2.919744   3 #> 6   792.6248   4.043480   3 #> 7   608.6136   2.787231   3 #> 8   611.0880   2.690612   3 #> 9   607.4781   2.774489   3 #> 10  606.9833   3.279823   3 #> 11  500.8292   3.341145   3 #> 12  503.4236   3.014534   3 #> 13  702.9867   2.894577   3 #> 14  502.0487   3.632460   3 #> 15  500.8218   3.506241   3 #> 16  501.4098   2.820129   3 #> 17  501.2256   3.878491   3 #> 18  879.8379   2.585827   3 #> 19  531.6601   2.894814   3 #> 20  857.7521   2.766976   3 #> 21  514.7507   2.893047   3 #> 22  503.5425   2.764122   3 #> 23  778.0964   2.661063   3 #> 24  500.7817   3.071124   3 #> 25  500.6876   3.594685   3 #> 26  500.7542   2.665933   3 #> 27  500.6348   2.853740   3 #> 28  842.6274   3.436430   3 #> 29  510.9449   2.773759   3 #> 30  503.5777   2.567082   3 #> 31  515.5182   2.583606   3 #> 32  508.2862   3.403264   3 #> 33  613.9875   2.887925   3 #> 34  505.0544   2.505473   3 #> 35  533.7398   2.844027   3 #> 36  559.0246   3.053925   3 #> 37  561.3374   3.394567   3 #> 38  500.1749   2.539899   3 #> 39  564.6506   3.041092   3 #> 40  515.6080   2.838113   3 #> 41  522.0936   2.718673   3 #> 42  659.2151   3.126021   3 #> 43  513.2500   2.879952   3 #> 44  511.4678   3.227385   3 #> 45  518.2917   2.935712   3 #> 46  513.9894   3.722936   3 #> 47  650.1928   3.096886   3 #> 48  511.3106   2.598220   3 #> 49  512.7366   2.865916   3 #> 50  511.4336   2.663998   3 #> 51  516.8591   4.524333   3 #> 52  514.3334   2.671520   3 #> 53  614.5526   3.306732   3 #> 54  666.4639   2.669647   3 #> 55  521.4559   2.740042   3 #> 56  522.0372   3.283611   3 #> 57  512.4517   2.511126   3 #> 58  526.3233   2.693461   3 #> 59  511.2518   2.840974   3 #> 60  511.7724   2.970224   3 #> 61  514.1125   3.962687   3 #> 62  512.9851   2.764330   3 #> 63  558.8260   2.957993   3 #> 64  512.4739   2.777802   3 #> 65  511.2369   3.105899   3 #> 66  523.7411   2.654734   3 #> 67  512.0140   2.685329   3 #> 68  629.5313   3.019911   3 #> 69  511.4114   2.646624   3 #> 70  513.8726   3.224816   3 #> 71  513.1166   2.668211   3 #> 72  511.2798   2.717348   3 #> 73  513.3296   3.036626   3 #> 74  503.6077   2.595829   3 #> 75  643.1878   3.182597   3 #> 76  620.9298   2.764345   3 #> 77  885.1350   3.144850   3 #> 78  513.4084   2.553840   3 #> 79  514.7372   2.586382   3 #> 80  556.1102   2.861454   3 #> 81  715.9997   3.521701   3 #> 82  555.7447   2.767882   3 #> 83  512.8283   2.772887   3 #> 84  581.0652   2.531446   3 #> 85  513.4183   3.198288   3 #> 86  625.4083   2.887883   3 #> 87  804.8554   2.717715   3 #> 88  511.6896   3.121223   3 #> 89  515.6920   2.548157   3 #> 90  515.0022   2.579087   3 #> 91  523.3563   3.055084   3 #> 92  533.3410   2.944686   3 #> 93  515.7034   2.884094   3 #> 94  521.0578   4.253105   3 #> 95  522.5440   2.736332   3 #> 96  531.0269   3.019350   3 #> 97  521.7692   3.604371   3 #> 98  515.2160   2.661197   3 #> 99  617.5626   3.472445   3 #> 100 581.7711   3.472914   3 #> 101 587.6787   3.926136   3 #> 102 619.2825   3.395523   3 #> 103 563.6348   2.950249   3 #> 104 635.9952   2.522460   3 #> 105 847.6438   2.879326   3 #> 106 536.8579   2.949360   3 #> 107 668.4433   2.791775   3 #> 108 640.4579   2.507730   3 #> 109 973.5692   2.810218   3 #> 110 540.5506   2.502103   3 #> 111 848.5793   2.614393   3 #> 112 703.7623   3.356233   3 #> 113 748.3275   3.164933   3 #> 114 702.9578   3.133337   3 #> 115 892.4793   3.043504   3 #> 116 751.0932   2.670132   3 #> 117 681.1798   2.591203   3 #> 118 687.1302   3.060652   3 #> 119 681.1314   3.091398   3 #> 120 681.2887   2.766848   3 #> 121 557.9380   2.513780   3 #> 122 502.8704   2.929134   3 #> 123 528.7981   3.988217   3 #> 124 503.7500   2.526400   3 #> 125 727.7278   2.977426   3 #> 126 706.3858   2.909369   3 #> 127 672.4216   3.248801   3 #> 128 737.5319   3.157809   3 #> 129 708.4867   2.560161   3 #> 130 671.9844   3.149361   3 #> 131 672.0222   2.704121   3 #> 132 763.0045   3.437437   3 #> 133 950.9733   2.504183   3 #> 134 674.8898   3.606052   3 #> 135 672.6712   2.745302   3 #> 136 680.4120   2.591325   3 #> 137 542.9685   2.541156   3 #> 138 501.4142   3.717814   3 #> 139 501.2590   3.916737   3 #> 140 507.6939   3.398207   3 #> 141 501.7240   2.511516   3 #> 142 507.5510   2.527971   3 #> 143 502.3185   2.589778   3 #> 144 502.4923   4.263904   3 #> 145 519.9722   3.301469   3 #> 146 541.0771   2.586021   3 #> 147 766.3438   2.685567   3 #> 148 610.8472   3.543953   3 #> 149 604.7923   2.805615   3 #> 150 609.7432   2.558227   3 #> 151 702.6061   2.918971   3 #> 152 604.8031   2.879104   3 #> 153 562.3974   2.546189   3 #> 154 511.3249   3.358776   3 #> 155 576.1324   2.644812   3 #> 156 556.0244   2.746303   3 #> 157 515.5166   2.628002   3 #> 158 513.4870   2.720078   3 #> 159 503.2408   3.000431   3 #> 160 522.8064   2.716085   3 #> 161 565.0502   2.710526   3 #> 162 520.9846   2.586227   3 #> 163 520.5923   2.573094   3 #> 164 503.6137   3.262323   3 #> 165 658.4746   3.568160   3 #> 166 939.6494   3.901251   3 #> 167 519.6732   2.631705   3 #> 168 517.0511   2.587647   3 #> 169 516.8646   2.910765   3 #> 170 516.8755   2.725208   3 #> 171 559.7072   2.897029   3 #> 172 516.8947   2.627500   3 #> 173 520.3733   2.905050   3 #> 174 526.9026   2.524302   3 #> 175 697.9637   2.531453   3 #> 176 588.1285   3.467783   3 #> 177 546.7954   3.060840   3 #> 178 516.8978   3.256937   3 #> 179 520.1276   2.866253   3 #> 180 519.4474   3.341073   3 #> 181 635.7278   2.919715   3 #> 182 517.4799   2.981054   3 #> 183 525.8317   2.929517   3 #> 184 532.1346   4.381911   3 #> 185 517.7168   2.537421   3 #> 186 523.0735   2.695303   3 #> 187 517.3252   3.678500   3 #> 188 699.8123   3.629503   3 #> 189 517.2582   2.698504   3 #> 190 518.1984   2.529237   3 #> 191 516.8671   2.674780   3 #> 192 530.9495   2.562030   3 #> 193 570.3526   2.978855   3 #> 194 516.8689   2.849242   3 #> 195 520.0344   2.796640   3 #> 196 774.2580   2.653121   3 #> 197 519.4875   3.165319   3 #> 198 561.3323   2.569744   3 #> 199 546.8415   4.625293   3 #> 200 591.3525   2.662249   3 #> 201 541.0791   2.894606   3 #> 202 517.6975   3.548454   3 #> 203 759.2221   3.395670   3 #> 204 517.2966   3.456161   3 #> 205 515.5865   2.677098   3 #> 206 503.9785   2.571155   3 #> 207 570.9709   2.622782   3 #> 208 531.7417   2.545623   3 #> 209 560.6011   3.144701   3 #> 210 552.3359   2.863980   3 #> 211 569.1136   2.693347   3 #> 212 980.6037   2.675619   3 #> 213 520.0166   2.691625   3 #> 214 753.1046   3.095684   3 #> 215 713.8148   3.237991   3 #> 216 920.7361   3.214561   3 #> 217 973.8062   3.309517   3 #> 218 936.7267   2.608041   3 #> 219 792.5294   2.916739   3 #> 220 741.9315   2.515459   3 #> 221 621.7240   2.703351   3 #> 222 973.7178   3.043745   3 #> 223 506.1999   2.662662   3 #> 224 589.2321   2.691328   3 #> 225 501.1175   3.589873   3 #> 226 873.4385   2.881816   3 #> 227 509.2189   2.950327   3 #> 228 546.5948   3.792681   3 #> 229 690.7713   2.526806   3 #> 230 543.8916   2.645873   3 #> 231 559.1889   2.801268   3 #> 232 637.5948   3.330568   3 #> 233 555.9866   2.532464   3 #> 234 560.1767   2.892156   3 #> 235 559.0945   2.941921   3 #> 236 557.0790   2.671100   3 #> 237 674.4766   3.014287   3 #> 238 504.4003   2.910795   3 #> 239 696.8857   2.832458   3 #> 240 504.4918   2.617306   3 #> 241 924.0124   2.645048   3 #> 242 824.7923   3.011420   3 #> 243 894.8984   3.171968   3 #> 244 951.8057   2.652711   3 #> 245 507.7318   2.509277   3 #> 246 538.0927   3.874828   3 #> 247 882.2317   3.263713   3 #> 248 500.8258   2.712967   3 #> 249 509.1451   2.978727   3 #> 250 552.8743   2.553735   3 #> 251 507.5092   3.294991   3 #> 252 506.6532   2.671804   3 #> 253 696.6117   2.931596   3 #> 254 554.2681   3.431429   3 #> 255 552.1104   3.110880   3 #> 256 556.8626   2.764065   3 #> 257 555.2435   2.580221   3 #> 258 552.5332   2.523942   3 #> 259 552.8848   3.066557   3 #> 260 657.1416   2.527432   3 #> 261 602.5848   2.871950   3 #> 262 816.5927   2.852889   3 #> 263 629.7177   3.348314   3 #> 264 611.3240   3.203139   3 #> 265 614.7820   2.545239   3 #> 266 957.9206   2.743186   3 #> 267 782.0679   2.515209   3 #> 268 341.7199   2.609644   3 #> 269 280.8587   2.844868   3 #> 270 183.0886   2.687922   3 #> 271 165.3698   3.401616   3 #> 272 166.0041   4.260122   3 #> 273 165.5262   3.195335   3 #> 274 565.4717   2.502131   3 #> 275 554.4282   3.198805   3 #> 276 172.7551   2.868390   3 #> 277 213.4984   3.202755   3 #> 278 655.4275   3.741182   3 #> 279 954.8985   3.015167   3 #> 280 817.0237   2.852564   3 #> 281 816.8871   3.004930   3 #> 282 901.9176   3.071751   3 #> 283 823.5741   2.655875   3 #> 284 825.0637   2.775674   3 #> 285 869.6890   3.329044   3 #> 286 918.7364   2.620809   3 #>  #> [[5]] #>           ts magnitudes gen #> 1   793.9203   2.744128   4 #> 2   667.7888   3.009884   4 #> 3   704.7446   2.726263   4 #> 4   501.4448   2.584421   4 #> 5   501.4509   2.899927   4 #> 6   501.2335   3.055581   4 #> 7   529.2107   2.508509   4 #> 8   503.9408   2.733294   4 #> 9   503.8563   2.960656   4 #> 10  503.2183   2.635895   4 #> 11  551.8972   2.509348   4 #> 12  748.9576   2.774586   4 #> 13  512.0797   2.671394   4 #> 14  538.5683   2.717964   4 #> 15  516.9720   2.636740   4 #> 16  518.0505   3.291792   4 #> 17  517.3956   2.665098   4 #> 18  521.9260   2.551908   4 #> 19  517.4845   3.187388   4 #> 20  534.6623   2.542287   4 #> 21  514.1201   2.828364   4 #> 22  631.5310   3.008858   4 #> 23  888.2101   2.861532   4 #> 24  716.1591   3.089060   4 #> 25  681.3360   2.748986   4 #> 26  521.7473   6.879441   4 #> 27  642.5927   2.659557   4 #> 28  548.6264   2.883924   4 #> 29  663.8192   2.579892   4 #> 30  531.3364   3.053906   4 #> 31  716.6255   3.408557   4 #> 32  620.3506   3.716874   4 #> 33  581.8476   2.732547   4 #> 34  588.7817   3.118504   4 #> 35  642.1461   2.990249   4 #> 36  848.6802   2.511407   4 #> 37  682.3716   3.300374   4 #> 38  532.2098   2.681685   4 #> 39  530.9073   2.780682   4 #> 40  613.5301   2.712448   4 #> 41  727.8276   2.851908   4 #> 42  677.9284   2.605669   4 #> 43  621.1887   2.793348   4 #> 44  505.1658   2.532494   4 #> 45  502.9176   2.583259   4 #> 46  535.5622   3.107817   4 #> 47  504.3870   3.030935   4 #> 48  504.8566   2.897502   4 #> 49  503.9430   3.230710   4 #> 50  502.7143   3.548361   4 #> 51  504.4954   2.572466   4 #> 52  623.3671   2.872564   4 #> 53  616.5970   2.670643   4 #> 54  612.0506   3.640209   4 #> 55  658.5683   2.533510   4 #> 56  968.4562   2.808716   4 #> 57  940.2016   3.761516   4 #> 58  543.9579   2.528176   4 #> 59  588.1363   3.110277   4 #> 60  590.1523   2.500808   4 #> 61  613.1736   3.196536   4 #> 62  675.7317   3.925176   4 #> 63  651.5488   2.884111   4 #> 64  544.2110   2.535749   4 #> 65  525.2418   2.742267   4 #> 66  700.0012   3.994777   4 #> 67  702.8071   2.753229   4 #> 68  605.4543   3.169454   4 #> 69  554.0962   2.653228   4 #> 70  546.9049   2.863993   4 #> 71  549.4564   2.628393   4 #> 72  548.6639   2.828721   4 #> 73  594.3581   2.554892   4 #> 74  547.6588   2.521171   4 #> 75  630.9563   2.591025   4 #> 76  547.1259   2.563309   4 #> 77  566.7164   2.517866   4 #> 78  856.8149   2.827859   4 #> 79  506.9000   2.840404   4 #> 80  573.5865   2.633816   4 #> 81  628.6543   2.508635   4 #> 82  980.6930   2.641846   4 #> 83  979.4258   2.773277   4 #> 84  799.8698   2.924591   4 #> 85  782.7700   2.645090   4 #> 86  775.1766   2.648689   4 #> 87  640.7800   2.679625   4 #> 88  538.8132   2.949711   4 #> 89  504.9429   3.213941   4 #> 90  615.9849   2.559631   4 #> 91  184.9049   3.244893   4 #> 92  168.3414   2.879526   4 #> 93  166.7549   2.557284   4 #> 94  166.5581   2.721587   4 #> 95  168.0803   3.046911   4 #> 96  168.6319   2.997785   4 #> 97  213.8397   3.323060   4 #> 98  215.0807   4.009755   4 #> 99  214.5233   2.727508   4 #> 100 214.3190   2.562747   4 #> 101 655.4318   2.657934   4 #> 102 822.3299   2.684327   4 #> 103 902.0798   2.584296   4 #> 104 871.2645   2.504296   4 #>  #> [[6]] #>            ts magnitudes gen #> 1    905.3404   3.338168   5 #> 2    628.0241   2.630573   5 #> 3    552.7219   3.392892   5 #> 4    795.0933   2.893940   5 #> 5    518.4117   2.814418   5 #> 6    888.3842   2.712224   5 #> 7    960.5709   2.757626   5 #> 8    525.4952   2.809062   5 #> 9    523.2338   3.204447   5 #> 10   521.9177   2.885977   5 #> 11   528.3942   2.588978   5 #> 12   524.6333   2.617043   5 #> 13   522.0095   2.974697   5 #> 14   598.7043   2.839886   5 #> 15   709.8366   2.590533   5 #> 16   521.7898   3.089218   5 #> 17   522.2436   2.523351   5 #> 18   521.9307   2.679213   5 #> 19   528.5234   2.551917   5 #> 20   521.9743   2.533204   5 #> 21   523.0032   3.882501   5 #> 22   522.2620   2.866375   5 #> 23   522.0769   2.511145   5 #> 24   521.7818   2.550197   5 #> 25   521.9131   2.528721   5 #> 26   524.5949   3.941945   5 #> 27   570.2702   4.460977   5 #> 28   522.1034   2.974726   5 #> 29   761.4037   2.663071   5 #> 30   521.7542   2.519454   5 #> 31   557.4912   2.939230   5 #> 32   522.2768   2.673290   5 #> 33   521.8136   2.814939   5 #> 34   708.7100   3.472165   5 #> 35   521.9867   2.691938   5 #> 36   530.6320   2.511440   5 #> 37   523.1970   2.724797   5 #> 38   522.2631   3.201124   5 #> 39   546.0912   3.256102   5 #> 40   523.8796   3.378970   5 #> 41   521.8540   3.200484   5 #> 42   616.3795   3.431040   5 #> 43   521.7856   2.625716   5 #> 44   521.9677   2.816814   5 #> 45   539.7662   2.560843   5 #> 46   523.5273   2.529690   5 #> 47   523.8961   2.830213   5 #> 48   521.8280   2.540314   5 #> 49   522.0335   2.799250   5 #> 50   521.7741   3.701247   5 #> 51   567.3979   2.790432   5 #> 52   525.1628   2.942164   5 #> 53   525.0542   2.510177   5 #> 54   685.1995   3.319834   5 #> 55   553.0521   3.126685   5 #> 56   542.9610   3.738802   5 #> 57   583.6607   2.869588   5 #> 58   524.2683   2.606872   5 #> 59   521.8029   2.826848   5 #> 60   521.7883   2.557618   5 #> 61   521.7515   2.810684   5 #> 62   522.2446   2.598320   5 #> 63   523.1506   2.608525   5 #> 64   541.9531   2.838858   5 #> 65   522.0864   2.610124   5 #> 66   543.9707   2.579802   5 #> 67   521.8198   2.591534   5 #> 68   524.5078   3.059188   5 #> 69   712.2760   2.613381   5 #> 70   555.0906   3.121347   5 #> 71   522.5160   2.565347   5 #> 72   528.6009   3.880596   5 #> 73   527.9051   3.192735   5 #> 74   566.8033   2.599582   5 #> 75   622.1308   2.522000   5 #> 76   521.7616   2.888317   5 #> 77   540.9086   3.716567   5 #> 78   523.8482   2.528907   5 #> 79   628.8555   2.563260   5 #> 80   527.5569   2.647883   5 #> 81   550.8696   2.540500   5 #> 82   573.3893   3.278510   5 #> 83   529.5417   2.516114   5 #> 84   523.7817   2.627955   5 #> 85   522.8604   3.006819   5 #> 86   524.3899   2.677829   5 #> 87   521.9899   4.573202   5 #> 88   523.4252   2.517977   5 #> 89   545.6188   2.675415   5 #> 90   528.2565   3.552238   5 #> 91   522.8282   2.772760   5 #> 92   522.6677   3.325110   5 #> 93   523.2316   2.612690   5 #> 94   533.2207   2.831764   5 #> 95   564.0539   2.507751   5 #> 96   537.3852   3.069714   5 #> 97   523.5230   4.523554   5 #> 98   550.5119   2.554907   5 #> 99   522.0926   4.029674   5 #> 100  647.5843   2.808906   5 #> 101  528.3404   2.521198   5 #> 102  521.8830   2.611698   5 #> 103  545.5340   2.601414   5 #> 104  521.9455   2.741950   5 #> 105  525.1740   3.155997   5 #> 106  522.0040   2.595920   5 #> 107  521.8582   2.665764   5 #> 108  526.6697   2.634269   5 #> 109  522.1453   4.233193   5 #> 110  565.3653   2.567740   5 #> 111  521.7485   3.741731   5 #> 112  521.9160   2.656078   5 #> 113  567.9829   2.890265   5 #> 114  536.9052   2.613725   5 #> 115  523.7362   2.965604   5 #> 116  521.9145   3.195813   5 #> 117  521.7641   2.904369   5 #> 118  548.9282   2.655481   5 #> 119  521.8209   2.667148   5 #> 120  522.3097   3.142641   5 #> 121  521.8639   2.626801   5 #> 122  521.7527   2.908380   5 #> 123  522.8123   2.897356   5 #> 124  522.7354   2.881804   5 #> 125  528.9753   3.137026   5 #> 126  522.1053   2.668629   5 #> 127  525.3265   2.585243   5 #> 128  522.2077   2.722991   5 #> 129  523.5398   2.674412   5 #> 130  567.2150   2.601918   5 #> 131  522.0391   3.083310   5 #> 132  526.9375   2.861578   5 #> 133  521.9088   2.924918   5 #> 134  524.0078   3.096842   5 #> 135  524.1544   2.633408   5 #> 136  530.4639   3.250795   5 #> 137  522.6216   3.674726   5 #> 138  523.4679   2.842457   5 #> 139  523.9817   2.669981   5 #> 140  521.9958   2.741273   5 #> 141  636.0022   2.533151   5 #> 142  594.5829   2.593308   5 #> 143  523.7172   3.144814   5 #> 144  522.4441   2.509835   5 #> 145  562.6510   2.534317   5 #> 146  527.4472   2.754194   5 #> 147  528.6016   3.221236   5 #> 148  523.4238   2.639433   5 #> 149  721.5902   2.581041   5 #> 150  714.3419   2.903357   5 #> 151  522.7620   3.928490   5 #> 152  521.7667   2.556800   5 #> 153  650.7003   3.228182   5 #> 154  522.6800   3.136775   5 #> 155  521.9683   2.718986   5 #> 156  522.1335   2.836363   5 #> 157  526.2936   3.945080   5 #> 158  934.8323   2.784252   5 #> 159  521.8986   2.993857   5 #> 160  521.7915   2.735804   5 #> 161  523.1588   2.896165   5 #> 162  537.4409   3.400820   5 #> 163  546.4142   3.193610   5 #> 164  543.5180   2.559204   5 #> 165  529.5268   3.051978   5 #> 166  521.8200   2.543047   5 #> 167  521.8293   2.698785   5 #> 168  775.0722   3.090848   5 #> 169  523.6043   3.412136   5 #> 170  522.2117   3.406038   5 #> 171  522.1972   2.753514   5 #> 172  521.7483   3.322790   5 #> 173  521.9628   2.712327   5 #> 174  521.7674   2.967208   5 #> 175  548.6517   2.648357   5 #> 176  529.5239   2.802913   5 #> 177  522.8339   2.556508   5 #> 178  525.4986   2.671306   5 #> 179  521.7836   2.593734   5 #> 180  654.9185   2.606386   5 #> 181  533.9518   2.521870   5 #> 182  522.9181   3.468916   5 #> 183  521.7588   2.677419   5 #> 184  523.2215   2.510974   5 #> 185  522.9169   2.687760   5 #> 186  527.1610   2.996746   5 #> 187  534.9141   2.991660   5 #> 188  810.0499   2.652041   5 #> 189  522.1152   2.638453   5 #> 190  528.0948   2.972383   5 #> 191  521.7947   2.650833   5 #> 192  525.8577   3.322831   5 #> 193  631.4885   2.544589   5 #> 194  522.1549   2.870299   5 #> 195  523.1083   2.641753   5 #> 196  676.7820   2.689036   5 #> 197  522.4840   2.821556   5 #> 198  568.2682   2.746967   5 #> 199  522.9835   2.676446   5 #> 200  521.9834   2.958808   5 #> 201  536.1176   2.588191   5 #> 202  537.7557   2.648738   5 #> 203  522.8970   3.268320   5 #> 204  717.5270   2.668158   5 #> 205  521.8255   2.682171   5 #> 206  726.5671   2.521882   5 #> 207  561.2727   3.453001   5 #> 208  522.0538   2.875698   5 #> 209  521.8277   3.039622   5 #> 210  862.8173   3.550549   5 #> 211  525.9437   3.221265   5 #> 212  597.2386   3.185926   5 #> 213  574.6557   2.714114   5 #> 214  686.1230   2.530452   5 #> 215  623.1966   2.566403   5 #> 216  521.9595   2.511198   5 #> 217  523.3235   3.591975   5 #> 218  521.8235   2.930133   5 #> 219  535.7392   2.643574   5 #> 220  535.8953   2.560983   5 #> 221  623.0154   2.626308   5 #> 222  548.7436   2.771194   5 #> 223  525.5404   2.508864   5 #> 224  521.8365   3.140999   5 #> 225  554.7545   2.911957   5 #> 226  521.7777   2.601692   5 #> 227  946.4096   2.673041   5 #> 228  521.7602   2.736412   5 #> 229  522.7389   2.600547   5 #> 230  529.2170   2.805213   5 #> 231  528.1600   2.627633   5 #> 232  543.9097   3.059818   5 #> 233  522.3827   2.586593   5 #> 234  521.9013   2.736128   5 #> 235  953.7298   2.724874   5 #> 236  643.9838   2.500655   5 #> 237  522.1716   3.723290   5 #> 238  929.9360   2.525226   5 #> 239  522.0053   2.964105   5 #> 240  525.8011   2.552640   5 #> 241  550.7378   3.430711   5 #> 242  556.3698   2.617840   5 #> 243  556.4251   3.503907   5 #> 244  521.8672   2.522184   5 #> 245  983.6852   2.590952   5 #> 246  526.8520   2.525928   5 #> 247  526.7118   3.666035   5 #> 248  646.0187   2.693996   5 #> 249  522.8340   2.708685   5 #> 250  657.5930   2.740629   5 #> 251  523.1579   2.775607   5 #> 252  525.4774   2.751760   5 #> 253  522.5400   5.362529   5 #> 254  521.9440   2.582710   5 #> 255  523.9442   2.648007   5 #> 256  525.3096   2.688961   5 #> 257  543.1863   3.364192   5 #> 258  524.5415   2.611482   5 #> 259  521.7758   4.173878   5 #> 260  972.3589   2.921669   5 #> 261  521.7588   3.523092   5 #> 262  602.8633   2.571704   5 #> 263  521.8422   2.532464   5 #> 264  522.0216   2.875013   5 #> 265  531.9423   2.881772   5 #> 266  554.5278   3.712826   5 #> 267  522.4680   2.824695   5 #> 268  531.0239   2.824932   5 #> 269  733.0119   3.093715   5 #> 270  644.8099   2.510055   5 #> 271  522.3506   2.519875   5 #> 272  521.7688   2.636668   5 #> 273  521.8781   3.037248   5 #> 274  521.8206   2.845154   5 #> 275  564.1185   2.806622   5 #> 276  521.9345   3.110423   5 #> 277  544.3915   2.954446   5 #> 278  747.1326   2.936774   5 #> 279  550.5244   2.542113   5 #> 280  523.4453   2.533441   5 #> 281  523.1402   2.947168   5 #> 282  634.1886   3.114791   5 #> 283  536.2732   3.021165   5 #> 284  522.3949   2.692488   5 #> 285  526.3798   2.602529   5 #> 286  534.0689   2.860205   5 #> 287  523.4255   2.645711   5 #> 288  585.1516   2.793475   5 #> 289  521.8836   2.825678   5 #> 290  523.7635   3.414720   5 #> 291  529.9148   2.638523   5 #> 292  541.3359   2.608465   5 #> 293  528.0170   2.520692   5 #> 294  522.1268   2.851409   5 #> 295  523.1160   4.321714   5 #> 296  522.0045   2.745350   5 #> 297  528.2375   2.851403   5 #> 298  523.3091   2.619876   5 #> 299  521.7625   3.809742   5 #> 300  521.7970   2.589170   5 #> 301  521.8566   3.030904   5 #> 302  586.1114   2.785093   5 #> 303  522.4198   3.000677   5 #> 304  521.7516   2.942026   5 #> 305  558.5077   3.493644   5 #> 306  525.8385   3.951491   5 #> 307  522.1359   3.048514   5 #> 308  524.8726   3.003773   5 #> 309  524.2920   3.402164   5 #> 310  521.8354   2.758388   5 #> 311  521.7978   3.269996   5 #> 312  521.7941   2.654150   5 #> 313  523.6101   2.661910   5 #> 314  522.1205   2.530034   5 #> 315  521.7509   3.532658   5 #> 316  716.2781   3.139070   5 #> 317  521.7838   2.637697   5 #> 318  521.8209   2.838607   5 #> 319  522.8615   2.890738   5 #> 320  522.6482   2.528280   5 #> 321  522.8148   3.426922   5 #> 322  528.2927   3.937293   5 #> 323  526.2808   2.621668   5 #> 324  522.3832   2.537551   5 #> 325  900.4472   3.143963   5 #> 326  521.8939   3.212847   5 #> 327  528.0738   2.658150   5 #> 328  537.9946   2.771180   5 #> 329  521.7609   2.612478   5 #> 330  523.0659   2.798195   5 #> 331  521.8574   2.909126   5 #> 332  522.0771   2.571449   5 #> 333  522.7385   3.968065   5 #> 334  522.0215   3.225676   5 #> 335  567.7979   3.438124   5 #> 336  544.0636   2.908179   5 #> 337  578.1693   2.529683   5 #> 338  609.9525   2.678688   5 #> 339  522.9829   2.560395   5 #> 340  525.9881   2.925304   5 #> 341  785.9911   2.557241   5 #> 342  522.1070   2.744115   5 #> 343  522.3978   2.811665   5 #> 344  521.9245   2.834272   5 #> 345  521.8937   5.126469   5 #> 346  526.7600   2.654644   5 #> 347  576.2895   2.743530   5 #> 348  558.4770   2.886970   5 #> 349  529.3417   2.676598   5 #> 350  523.6448   2.597635   5 #> 351  526.3766   2.743925   5 #> 352  937.0154   2.561121   5 #> 353  528.6975   3.012460   5 #> 354  521.9826   3.031515   5 #> 355  546.5435   2.830625   5 #> 356  524.0168   3.303848   5 #> 357  597.4410   2.828344   5 #> 358  543.3198   2.746725   5 #> 359  526.9544   3.688772   5 #> 360  521.7873   2.680804   5 #> 361  537.0778   2.510830   5 #> 362  763.6882   2.730126   5 #> 363  521.9074   3.193666   5 #> 364  522.9272   3.172157   5 #> 365  557.0881   3.125615   5 #> 366  732.0030   2.762706   5 #> 367  524.9519   2.579986   5 #> 368  591.0085   4.133964   5 #> 369  669.5756   2.851372   5 #> 370  521.9118   2.560350   5 #> 371  656.7007   3.124264   5 #> 372  547.9455   3.390207   5 #> 373  521.9419   2.639821   5 #> 374  529.3133   2.757514   5 #> 375  521.8815   3.126621   5 #> 376  924.4725   2.839591   5 #> 377  524.6512   4.022873   5 #> 378  523.4672   2.654029   5 #> 379  523.9349   3.183091   5 #> 380  527.0628   3.317161   5 #> 381  521.9748   3.275873   5 #> 382  521.9826   2.609427   5 #> 383  521.7888   2.548049   5 #> 384  521.9348   2.765193   5 #> 385  521.7929   2.566651   5 #> 386  524.5563   2.800381   5 #> 387  528.1169   2.779611   5 #> 388  525.0713   2.835242   5 #> 389  521.9829   2.582434   5 #> 390  522.2594   2.625808   5 #> 391  522.4650   2.678868   5 #> 392  521.8744   2.810112   5 #> 393  521.7821   2.577310   5 #> 394  536.1815   2.981427   5 #> 395  524.7569   2.557822   5 #> 396  538.1983   2.920393   5 #> 397  522.2681   2.754853   5 #> 398  561.1561   2.576588   5 #> 399  734.0033   2.774268   5 #> 400  523.7943   2.828914   5 #> 401  522.6171   2.678841   5 #> 402  523.0005   2.690580   5 #> 403  522.0769   2.586782   5 #> 404  683.0398   2.806436   5 #> 405  524.6854   2.760935   5 #> 406  531.3122   2.930241   5 #> 407  565.6683   2.661237   5 #> 408  634.5643   2.670889   5 #> 409  584.3178   4.137128   5 #> 410  535.2360   2.892493   5 #> 411  521.9071   3.067868   5 #> 412  523.3263   3.983659   5 #> 413  521.8267   2.920352   5 #> 414  522.4519   2.565316   5 #> 415  522.1216   3.303473   5 #> 416  547.2383   2.631202   5 #> 417  522.3035   3.358951   5 #> 418  521.8766   2.689468   5 #> 419  546.5435   3.442545   5 #> 420  892.3714   2.579918   5 #> 421  649.2895   2.558927   5 #> 422  521.8354   2.682423   5 #> 423  527.1915   3.035115   5 #> 424  569.7048   3.377724   5 #> 425  529.0825   2.708150   5 #> 426  521.7629   2.765903   5 #> 427  523.3779   2.643351   5 #> 428  524.8483   2.720497   5 #> 429  537.5135   2.652025   5 #> 430  522.0476   2.808951   5 #> 431  534.4726   2.595246   5 #> 432  523.4110   2.533116   5 #> 433  521.7497   2.512314   5 #> 434  522.3761   3.639522   5 #> 435  584.8523   2.527956   5 #> 436  526.8920   2.604641   5 #> 437  522.1962   3.104508   5 #> 438  565.0157   2.556637   5 #> 439  532.3272   2.988482   5 #> 440  529.7360   2.920923   5 #> 441  608.3870   3.078273   5 #> 442  643.3212   3.016118   5 #> 443  528.8634   2.942262   5 #> 444  522.7999   3.070045   5 #> 445  523.7080   2.907930   5 #> 446  526.4637   3.068035   5 #> 447  522.0808   2.557716   5 #> 448  521.8629   2.892899   5 #> 449  521.7680   2.733203   5 #> 450  745.5945   2.631899   5 #> 451  637.3532   2.710629   5 #> 452  522.2177   3.044122   5 #> 453  521.7727   2.770904   5 #> 454  652.9525   2.823126   5 #> 455  521.8476   2.518111   5 #> 456  525.4386   2.803184   5 #> 457  525.1306   2.601718   5 #> 458  551.1061   2.861714   5 #> 459  556.6667   2.737328   5 #> 460  542.1884   2.714091   5 #> 461  534.2807   2.567668   5 #> 462  535.8133   3.056106   5 #> 463  521.7694   2.940735   5 #> 464  524.3636   2.590308   5 #> 465  576.2846   2.700991   5 #> 466  592.8484   2.564569   5 #> 467  522.0052   2.674993   5 #> 468  523.3267   3.140876   5 #> 469  793.9723   3.771800   5 #> 470  523.3395   3.264797   5 #> 471  610.4100   3.529491   5 #> 472  636.9105   2.931336   5 #> 473  545.9916   2.624608   5 #> 474  522.8035   2.556869   5 #> 475  532.2530   2.892196   5 #> 476  564.5581   3.386337   5 #> 477  529.0155   2.562213   5 #> 478  627.3489   3.127065   5 #> 479  599.3673   2.536912   5 #> 480  522.0489   2.602910   5 #> 481  522.7171   2.757493   5 #> 482  873.5438   2.527800   5 #> 483  521.7927   2.531713   5 #> 484  895.1571   3.504181   5 #> 485  872.2717   2.513270   5 #> 486  526.8556   2.864245   5 #> 487  529.2948   3.370749   5 #> 488  598.7496   3.266348   5 #> 489  617.9760   3.505943   5 #> 490  521.7579   2.546427   5 #> 491  627.7926   2.532508   5 #> 492  539.4381   3.928614   5 #> 493  533.1159   2.516845   5 #> 494  527.4468   2.500264   5 #> 495  552.0715   3.843848   5 #> 496  615.5329   2.735168   5 #> 497  522.0850   2.789897   5 #> 498  521.7583   2.733608   5 #> 499  533.1450   2.510186   5 #> 500  521.9601   2.771570   5 #> 501  521.8879   3.657563   5 #> 502  526.7369   2.557663   5 #> 503  602.4649   2.640108   5 #> 504  522.0851   2.741474   5 #> 505  541.0492   3.147533   5 #> 506  595.0993   2.557818   5 #> 507  522.0527   3.278730   5 #> 508  538.9941   3.230729   5 #> 509  537.4472   2.544875   5 #> 510  963.9358   2.806951   5 #> 511  523.0148   2.715236   5 #> 512  896.2128   2.692801   5 #> 513  534.4996   3.149188   5 #> 514  524.8993   2.751587   5 #> 515  523.3745   2.538383   5 #> 516  521.9761   3.172399   5 #> 517  527.0998   3.295661   5 #> 518  790.8407   2.518267   5 #> 519  562.7716   2.744793   5 #> 520  756.5239   2.527401   5 #> 521  556.7847   4.135199   5 #> 522  548.7539   2.530189   5 #> 523  521.7743   2.603300   5 #> 524  537.8742   3.004275   5 #> 525  525.7926   3.244245   5 #> 526  523.7797   3.018851   5 #> 527  521.7844   2.527596   5 #> 528  521.9630   3.004859   5 #> 529  522.0594   2.680337   5 #> 530  522.2065   2.959224   5 #> 531  521.9792   3.096833   5 #> 532  522.5804   2.556448   5 #> 533  525.2206   3.144004   5 #> 534  535.5851   2.834651   5 #> 535  525.4749   2.809156   5 #> 536  606.7472   2.536093   5 #> 537  524.7572   2.967520   5 #> 538  756.6855   3.468147   5 #> 539  525.4397   2.558688   5 #> 540  523.7119   3.053313   5 #> 541  541.3253   2.618226   5 #> 542  576.2941   2.662164   5 #> 543  532.1714   2.505185   5 #> 544  567.1790   2.954430   5 #> 545  523.3684   3.175322   5 #> 546  530.9372   2.885628   5 #> 547  542.0419   2.884835   5 #> 548  523.7044   3.021535   5 #> 549  521.7557   3.050391   5 #> 550  661.3837   2.784887   5 #> 551  521.7898   2.947024   5 #> 552  534.9033   2.779270   5 #> 553  882.7600   2.722295   5 #> 554  521.8148   2.591511   5 #> 555  545.9300   2.519475   5 #> 556  521.8759   2.582681   5 #> 557  522.0500   3.147613   5 #> 558  521.7835   2.605663   5 #> 559  521.9677   2.975835   5 #> 560  523.1659   2.859545   5 #> 561  528.4630   2.512777   5 #> 562  521.9328   3.301982   5 #> 563  522.3995   3.363096   5 #> 564  530.2681   2.550956   5 #> 565  529.0188   2.773737   5 #> 566  522.2520   3.155882   5 #> 567  521.8340   2.694546   5 #> 568  918.4148   2.902990   5 #> 569  522.1974   2.671066   5 #> 570  524.9997   4.201491   5 #> 571  598.1796   2.667275   5 #> 572  522.1939   2.833020   5 #> 573  527.1031   3.796467   5 #> 574  709.0019   2.559362   5 #> 575  522.5339   2.912352   5 #> 576  521.8953   4.364215   5 #> 577  522.2659   2.844795   5 #> 578  522.1591   2.651477   5 #> 579  524.4317   2.591949   5 #> 580  521.7617   3.527330   5 #> 581  521.9313   2.640652   5 #> 582  528.0725   3.315081   5 #> 583  605.0931   2.921701   5 #> 584  521.9411   3.093235   5 #> 585  521.8857   2.577975   5 #> 586  596.9484   3.478031   5 #> 587  882.8354   2.949543   5 #> 588  529.9932   2.729515   5 #> 589  565.1194   3.111230   5 #> 590  531.9413   2.645691   5 #> 591  521.8387   2.841171   5 #> 592  536.3996   2.838018   5 #> 593  561.4820   2.947941   5 #> 594  522.4126   2.610962   5 #> 595  687.0354   3.291054   5 #> 596  522.9093   2.731963   5 #> 597  679.6092   2.607922   5 #> 598  522.9549   2.586349   5 #> 599  521.7978   3.465496   5 #> 600  522.7950   2.624678   5 #> 601  521.8334   3.420419   5 #> 602  521.7529   2.519267   5 #> 603  522.5309   3.069581   5 #> 604  779.3069   2.533544   5 #> 605  536.9192   4.051661   5 #> 606  542.3708   2.619113   5 #> 607  534.3038   2.876796   5 #> 608  522.6860   3.009455   5 #> 609  531.6517   2.671634   5 #> 610  565.4070   2.729721   5 #> 611  586.1730   2.913927   5 #> 612  809.3944   3.232251   5 #> 613  522.5860   3.344424   5 #> 614  521.8223   2.753278   5 #> 615  521.7719   2.585661   5 #> 616  877.4883   3.027848   5 #> 617  524.3924   2.683220   5 #> 618  550.3101   2.589600   5 #> 619  521.7516   2.665322   5 #> 620  522.1780   3.132599   5 #> 621  547.9193   2.653101   5 #> 622  521.9420   4.543751   5 #> 623  527.8808   2.569845   5 #> 624  588.7789   2.536046   5 #> 625  526.5222   3.053044   5 #> 626  529.2352   2.882280   5 #> 627  522.7005   3.422570   5 #> 628  556.7896   3.150227   5 #> 629  563.7891   3.051647   5 #> 630  523.5004   3.420202   5 #> 631  526.6704   2.697384   5 #> 632  522.4655   2.643031   5 #> 633  540.9268   3.573542   5 #> 634  639.7582   2.706805   5 #> 635  523.1829   4.487140   5 #> 636  529.1037   3.302660   5 #> 637  527.0950   3.469001   5 #> 638  542.8432   2.864218   5 #> 639  525.8557   2.850810   5 #> 640  527.1447   2.696342   5 #> 641  521.8671   3.444948   5 #> 642  940.3158   3.283588   5 #> 643  522.1700   2.821997   5 #> 644  523.3088   2.684485   5 #> 645  523.7163   3.233469   5 #> 646  521.7656   2.583079   5 #> 647  538.6260   2.888674   5 #> 648  800.1708   2.616976   5 #> 649  545.9132   2.846461   5 #> 650  530.6463   2.722754   5 #> 651  523.3102   2.865435   5 #> 652  521.9465   2.536585   5 #> 653  524.3518   2.780309   5 #> 654  541.0052   6.166619   5 #> 655  531.7418   2.872171   5 #> 656  527.2789   2.831876   5 #> 657  659.7437   3.727005   5 #> 658  555.1948   3.027227   5 #> 659  523.0565   2.642204   5 #> 660  522.0193   2.606565   5 #> 661  522.3435   3.162687   5 #> 662  764.5976   3.039160   5 #> 663  521.9976   2.989169   5 #> 664  586.4446   2.616067   5 #> 665  522.9636   3.149428   5 #> 666  533.9656   2.564294   5 #> 667  532.3561   2.808251   5 #> 668  523.2648   3.045667   5 #> 669  796.1712   2.551909   5 #> 670  522.1978   3.257897   5 #> 671  523.9416   2.840314   5 #> 672  525.5136   3.162370   5 #> 673  536.5484   2.560790   5 #> 674  967.7430   3.041424   5 #> 675  541.0394   2.777140   5 #> 676  521.8560   2.712332   5 #> 677  521.7894   2.840662   5 #> 678  530.4883   3.803325   5 #> 679  571.5687   3.058230   5 #> 680  528.1436   2.992654   5 #> 681  524.5579   3.225859   5 #> 682  644.9811   2.540964   5 #> 683  909.2503   2.507200   5 #> 684  521.8269   3.635062   5 #> 685  524.6497   2.569368   5 #> 686  522.0388   2.599594   5 #> 687  521.7807   2.886532   5 #> 688  521.7515   2.822346   5 #> 689  547.2721   2.670877   5 #> 690  521.7743   2.680635   5 #> 691  529.6704   2.902824   5 #> 692  529.5933   2.808916   5 #> 693  576.2807   3.021578   5 #> 694  522.6223   2.988286   5 #> 695  521.7662   3.330851   5 #> 696  522.1650   2.615026   5 #> 697  521.9792   2.554925   5 #> 698  543.1865   2.593055   5 #> 699  872.2773   3.626450   5 #> 700  522.8582   2.689642   5 #> 701  522.7111   3.152236   5 #> 702  534.9692   2.674307   5 #> 703  600.7188   3.481727   5 #> 704  773.9521   2.534832   5 #> 705  527.6697   2.740390   5 #> 706  523.2705   3.571704   5 #> 707  557.6754   3.203465   5 #> 708  522.0485   3.029732   5 #> 709  524.0619   2.734334   5 #> 710  633.0268   3.228895   5 #> 711  523.4684   3.134634   5 #> 712  523.3490   2.936309   5 #> 713  562.1914   2.974206   5 #> 714  522.2866   2.524457   5 #> 715  522.2970   2.924487   5 #> 716  556.3968   3.223450   5 #> 717  596.4894   2.616628   5 #> 718  538.4131   2.834674   5 #> 719  562.7419   2.647407   5 #> 720  528.4895   2.934709   5 #> 721  735.7143   3.063160   5 #> 722  626.6520   2.737136   5 #> 723  568.5898   2.639845   5 #> 724  531.7391   3.375245   5 #> 725  526.7569   2.669589   5 #> 726  521.7484   3.122304   5 #> 727  530.2430   2.616734   5 #> 728  522.4739   2.518843   5 #> 729  533.0999   2.855999   5 #> 730  521.8086   2.765842   5 #> 731  524.5003   2.700830   5 #> 732  545.6990   3.261506   5 #> 733  904.9993   2.711267   5 #> 734  521.7800   3.134691   5 #> 735  526.4040   3.892199   5 #> 736  634.0553   3.300321   5 #> 737  593.4342   3.087184   5 #> 738  522.0137   3.378830   5 #> 739  522.0453   2.525729   5 #> 740  521.7678   2.544024   5 #> 741  522.4861   3.361588   5 #> 742  529.2941   3.099537   5 #> 743  522.6485   3.196724   5 #> 744  548.6554   2.725926   5 #> 745  524.6825   3.297385   5 #> 746  521.9055   2.506288   5 #> 747  531.8127   2.505273   5 #> 748  523.4090   2.776045   5 #> 749  536.9537   2.532219   5 #> 750  521.8772   3.100198   5 #> 751  521.8114   2.816865   5 #> 752  565.1982   2.578884   5 #> 753  532.3510   2.623849   5 #> 754  523.8297   2.693712   5 #> 755  522.1040   3.189883   5 #> 756  523.8484   3.468530   5 #> 757  600.8990   2.539525   5 #> 758  521.7497   2.503100   5 #> 759  521.8768   2.514987   5 #> 760  543.2636   2.939727   5 #> 761  525.2781   3.290835   5 #> 762  521.9702   2.532389   5 #> 763  522.6214   2.597739   5 #> 764  824.4071   2.511440   5 #> 765  522.0276   3.348588   5 #> 766  525.8260   3.895934   5 #> 767  535.8653   2.656781   5 #> 768  522.4902   2.750442   5 #> 769  524.1887   2.759620   5 #> 770  522.0581   2.682407   5 #> 771  521.7656   2.760293   5 #> 772  523.8587   3.469403   5 #> 773  933.6102   3.034130   5 #> 774  524.9145   3.469839   5 #> 775  522.0028   2.688212   5 #> 776  523.7660   3.216515   5 #> 777  585.0862   2.690258   5 #> 778  522.5607   2.509077   5 #> 779  523.0288   2.785073   5 #> 780  523.5427   2.967252   5 #> 781  530.2437   3.456035   5 #> 782  527.6857   2.673794   5 #> 783  521.8955   2.675059   5 #> 784  523.1113   3.746916   5 #> 785  538.5387   2.927581   5 #> 786  526.8777   2.749307   5 #> 787  525.0755   2.949166   5 #> 788  748.9537   3.158318   5 #> 789  526.1119   3.994588   5 #> 790  522.1161   2.644550   5 #> 791  522.3391   2.508420   5 #> 792  521.9080   2.747921   5 #> 793  524.2415   3.021868   5 #> 794  617.8337   2.723197   5 #> 795  521.9688   3.370163   5 #> 796  522.0808   3.367940   5 #> 797  522.7418   2.604410   5 #> 798  521.8240   2.950243   5 #> 799  883.7858   2.988854   5 #> 800  531.5986   2.576017   5 #> 801  524.4182   3.557760   5 #> 802  552.3935   2.949265   5 #> 803  521.7629   2.677030   5 #> 804  521.7903   2.713436   5 #> 805  527.8939   2.931071   5 #> 806  521.7797   2.855201   5 #> 807  826.5704   2.554227   5 #> 808  530.8940   3.208744   5 #> 809  521.7957   3.377968   5 #> 810  696.6043   2.512890   5 #> 811  526.9608   3.321535   5 #> 812  522.5441   3.019211   5 #> 813  522.5236   3.504598   5 #> 814  733.2319   2.536926   5 #> 815  543.5525   2.658836   5 #> 816  543.0154   3.020892   5 #> 817  528.6029   2.533094   5 #> 818  521.7612   3.249490   5 #> 819  571.5248   2.792631   5 #> 820  522.3267   2.657703   5 #> 821  546.3387   2.747256   5 #> 822  522.5692   3.394239   5 #> 823  522.6174   3.329598   5 #> 824  522.0286   2.572554   5 #> 825  527.5130   2.775003   5 #> 826  524.5497   2.525573   5 #> 827  521.8221   3.715038   5 #> 828  625.8573   2.555124   5 #> 829  523.2277   2.569052   5 #> 830  522.0850   2.798075   5 #> 831  534.5649   2.903638   5 #> 832  535.8483   2.536329   5 #> 833  522.0119   2.644469   5 #> 834  522.0568   2.845735   5 #> 835  813.9683   2.696886   5 #> 836  553.3009   2.521948   5 #> 837  522.2498   3.362281   5 #> 838  554.4657   2.930762   5 #> 839  534.4104   2.508096   5 #> 840  522.4184   3.305350   5 #> 841  631.9370   3.248486   5 #> 842  528.0332   2.543259   5 #> 843  522.9723   2.619364   5 #> 844  521.7749   2.595980   5 #> 845  529.6586   3.174074   5 #> 846  524.1514   2.730698   5 #> 847  524.6825   2.584584   5 #> 848  533.1486   2.770669   5 #> 849  526.0096   2.739410   5 #> 850  521.7965   2.637113   5 #> 851  734.7973   2.664947   5 #> 852  523.0577   2.625892   5 #> 853  522.7996   2.995363   5 #> 854  521.8255   2.571409   5 #> 855  523.7263   2.555881   5 #> 856  522.0907   2.704608   5 #> 857  546.5747   3.608266   5 #> 858  522.8547   2.629897   5 #> 859  541.2909   2.759048   5 #> 860  527.1686   2.569652   5 #> 861  521.8627   2.818039   5 #> 862  521.8186   2.753766   5 #> 863  521.8865   3.381742   5 #> 864  521.7827   2.698686   5 #> 865  527.4729   3.455031   5 #> 866  521.8327   4.637872   5 #> 867  522.1497   3.719411   5 #> 868  522.5953   2.740361   5 #> 869  522.4707   2.576153   5 #> 870  521.7577   2.803923   5 #> 871  522.1687   3.107875   5 #> 872  522.1359   2.728979   5 #> 873  521.7886   2.801652   5 #> 874  523.6713   3.412654   5 #> 875  529.6253   3.702987   5 #> 876  521.8200   2.813344   5 #> 877  539.1291   2.914590   5 #> 878  647.6936   2.532948   5 #> 879  548.3909   3.172433   5 #> 880  521.9850   3.458683   5 #> 881  535.2035   2.642245   5 #> 882  523.8797   2.782075   5 #> 883  532.0780   4.226461   5 #> 884  527.7051   2.693290   5 #> 885  521.8211   3.249304   5 #> 886  521.9458   3.138723   5 #> 887  545.8457   3.032567   5 #> 888  521.8521   2.723632   5 #> 889  583.2601   2.590778   5 #> 890  711.2774   2.626992   5 #> 891  527.1784   2.855883   5 #> 892  522.3990   3.036625   5 #> 893  523.4289   2.756669   5 #> 894  588.5371   3.194974   5 #> 895  522.7958   2.907878   5 #> 896  530.4475   3.327857   5 #> 897  523.6731   2.544188   5 #> 898  521.7936   2.559361   5 #> 899  539.8184   2.610961   5 #> 900  521.7962   3.074508   5 #> 901  533.7946   2.742925   5 #> 902  942.9935   2.920225   5 #> 903  538.9989   2.701156   5 #> 904  522.3851   2.708154   5 #> 905  523.0459   2.780499   5 #> 906  522.2028   2.548512   5 #> 907  547.6039   2.859633   5 #> 908  578.3436   2.702489   5 #> 909  521.9402   2.933459   5 #> 910  530.9935   2.963740   5 #> 911  523.9119   2.801717   5 #> 912  523.5266   3.292540   5 #> 913  619.6997   2.707988   5 #> 914  523.2103   3.233269   5 #> 915  534.0667   2.500496   5 #> 916  521.7864   2.660789   5 #> 917  776.4665   2.913569   5 #> 918  523.6789   2.680051   5 #> 919  559.9544   2.661956   5 #> 920  522.1573   2.524990   5 #> 921  523.3774   2.917860   5 #> 922  521.8223   2.969873   5 #> 923  526.1066   2.970468   5 #> 924  544.7368   3.894424   5 #> 925  521.9996   3.892992   5 #> 926  525.7691   2.910894   5 #> 927  713.7509   2.767172   5 #> 928  532.5732   2.527281   5 #> 929  522.3409   2.536724   5 #> 930  575.8075   2.943669   5 #> 931  522.2451   2.965237   5 #> 932  705.6072   2.653450   5 #> 933  523.8734   2.800923   5 #> 934  521.7920   2.535754   5 #> 935  550.0431   2.518748   5 #> 936  525.1081   3.034260   5 #> 937  521.8278   2.879687   5 #> 938  667.4602   2.702805   5 #> 939  923.0130   3.924014   5 #> 940  521.8669   2.879952   5 #> 941  521.9783   3.295821   5 #> 942  537.6442   2.611673   5 #> 943  522.2066   3.315062   5 #> 944  524.1511   3.032187   5 #> 945  556.1414   2.714373   5 #> 946  530.0435   2.649490   5 #> 947  717.8653   3.142989   5 #> 948  522.4183   2.544018   5 #> 949  522.1328   3.456095   5 #> 950  525.6211   2.805750   5 #> 951  522.9217   2.851609   5 #> 952  521.8541   2.738194   5 #> 953  522.1247   3.149661   5 #> 954  522.5811   2.538895   5 #> 955  521.9810   3.161932   5 #> 956  698.3300   2.924429   5 #> 957  523.2700   2.675923   5 #> 958  521.9316   2.604083   5 #> 959  521.8201   2.630064   5 #> 960  530.3307   2.935828   5 #> 961  523.2638   3.234473   5 #> 962  524.0467   2.880044   5 #> 963  522.8039   3.206571   5 #> 964  521.9356   2.552611   5 #> 965  529.1902   2.899191   5 #> 966  616.0976   3.514343   5 #> 967  522.0327   2.649031   5 #> 968  522.2417   2.584050   5 #> 969  538.5827   2.538494   5 #> 970  765.4819   2.850366   5 #> 971  525.1010   4.349620   5 #> 972  526.0344   2.891647   5 #> 973  521.7947   2.590305   5 #> 974  588.9077   2.909112   5 #> 975  522.9649   2.621649   5 #> 976  678.3789   3.087707   5 #> 977  521.7522   2.590430   5 #> 978  541.0558   2.975630   5 #> 979  857.5675   2.918410   5 #> 980  522.5875   2.848139   5 #> 981  552.3534   2.543069   5 #> 982  521.7792   2.939395   5 #> 983  521.7605   3.505272   5 #> 984  536.0050   2.846103   5 #> 985  530.3688   3.277900   5 #> 986  522.7531   2.672426   5 #> 987  521.7733   2.922265   5 #> 988  558.0148   2.766155   5 #> 989  521.8853   2.736270   5 #> 990  521.8245   2.889659   5 #> 991  522.0399   2.867180   5 #> 992  521.8092   2.660424   5 #> 993  566.5500   3.777689   5 #> 994  522.3149   2.902568   5 #> 995  528.6442   3.393297   5 #> 996  527.2236   2.643548   5 #> 997  522.4121   2.736645   5 #> 998  522.7901   2.694851   5 #> 999  522.5426   2.984977   5 #> 1000 522.3425   2.561202   5 #> 1001 522.1781   3.236883   5 #> 1002 974.2023   2.760525   5 #> 1003 526.1525   3.458555   5 #> 1004 554.1732   3.175375   5 #> 1005 562.4270   2.776757   5 #> 1006 521.7829   4.127377   5 #> 1007 523.2555   3.023066   5 #> 1008 574.8782   2.626589   5 #> 1009 542.2362   2.524353   5 #> 1010 525.1111   3.158842   5 #> 1011 522.7279   2.773849   5 #> 1012 525.9492   2.724714   5 #> 1013 524.7568   2.625591   5 #> 1014 575.4258   3.928608   5 #> 1015 852.0552   2.695158   5 #> 1016 521.7799   2.779045   5 #> 1017 660.6406   2.561152   5 #> 1018 521.9578   2.814861   5 #> 1019 521.7538   3.838848   5 #> 1020 740.5061   2.817678   5 #> 1021 534.2011   2.502621   5 #> 1022 658.5253   2.504172   5 #> 1023 521.8600   2.502015   5 #> 1024 589.4915   2.997143   5 #> 1025 706.6766   2.834419   5 #> 1026 522.5995   3.005553   5 #> 1027 522.3549   2.670015   5 #> 1028 522.8258   2.771922   5 #> 1029 521.8897   2.529509   5 #> 1030 521.8877   2.881484   5 #> 1031 521.8164   2.940782   5 #> 1032 521.9367   2.889777   5 #> 1033 521.8449   3.046148   5 #> 1034 523.3462   2.977994   5 #> 1035 522.2729   2.863710   5 #> 1036 523.3420   3.322181   5 #> 1037 521.8280   3.105891   5 #> 1038 661.6208   2.521851   5 #> 1039 525.6959   2.827457   5 #> 1040 527.8414   3.077423   5 #> 1041 522.1576   3.360259   5 #> 1042 523.2266   2.543288   5 #> 1043 580.1475   3.149238   5 #> 1044 526.4884   2.538012   5 #> 1045 526.8927   3.505130   5 #> 1046 521.8408   2.627144   5 #> 1047 564.0515   2.761853   5 #> 1048 536.9178   3.601175   5 #> 1049 948.7313   3.288118   5 #> 1050 525.6391   2.696885   5 #> 1051 521.7536   3.824709   5 #> 1052 523.5536   2.678357   5 #> 1053 541.4839   2.646893   5 #> 1054 522.5260   3.408054   5 #> 1055 522.9543   2.837966   5 #> 1056 726.5800   3.055587   5 #> 1057 523.0022   2.515706   5 #> 1058 717.2376   2.524074   5 #> 1059 686.7402   2.865477   5 #> 1060 537.5332   3.179302   5 #> 1061 673.0397   3.240422   5 #> 1062 525.7319   2.532379   5 #> 1063 565.8254   2.568651   5 #> 1064 522.2808   2.979635   5 #> 1065 521.8761   2.675979   5 #> 1066 524.9897   4.090998   5 #> 1067 702.8520   2.580998   5 #> 1068 591.9421   2.976648   5 #> 1069 524.3728   3.405311   5 #> 1070 521.9061   2.860238   5 #> 1071 522.0171   3.226662   5 #> 1072 688.3405   2.660843   5 #> 1073 521.8319   3.257743   5 #> 1074 560.4124   2.553934   5 #> 1075 533.0325   2.767478   5 #> 1076 522.4001   2.522753   5 #> 1077 524.1472   2.569464   5 #> 1078 522.7730   2.524978   5 #> 1079 625.9783   2.835709   5 #> 1080 707.4219   3.102504   5 #> 1081 635.2691   2.526382   5 #> 1082 540.3945   2.556059   5 #> 1083 614.9814   3.134471   5 #> 1084 923.7466   2.830418   5 #> 1085 523.2083   2.822825   5 #> 1086 524.3981   2.511153   5 #> 1087 527.7989   4.445424   5 #> 1088 581.2455   2.698836   5 #> 1089 529.5484   2.652087   5 #> 1090 521.8196   2.807757   5 #> 1091 536.5779   2.535558   5 #> 1092 687.4752   2.602487   5 #> 1093 598.1002   2.995917   5 #> 1094 521.8441   2.604579   5 #> 1095 550.9197   2.693101   5 #> 1096 521.7684   3.054125   5 #> 1097 522.0325   2.788265   5 #> 1098 525.7796   3.002255   5 #> 1099 574.1703   2.716816   5 #> 1100 522.9988   2.603845   5 #> 1101 521.8286   2.876312   5 #> 1102 526.9982   3.175853   5 #> 1103 522.7812   2.527492   5 #> 1104 521.7965   2.873207   5 #> 1105 521.9103   3.233383   5 #> 1106 528.5406   2.598181   5 #> 1107 524.1852   3.514668   5 #> 1108 573.7806   3.205017   5 #> 1109 522.0076   3.995512   5 #> 1110 521.8782   2.644619   5 #> 1111 604.5360   2.522877   5 #> 1112 822.9956   2.722733   5 #> 1113 521.8853   3.556818   5 #> 1114 525.3496   3.054665   5 #> 1115 521.7567   3.102988   5 #> 1116 567.3189   2.914797   5 #> 1117 521.7714   2.606363   5 #> 1118 545.3264   2.569870   5 #> 1119 534.0102   3.378854   5 #> 1120 522.2495   2.764207   5 #> 1121 523.2452   2.511808   5 #> 1122 521.8877   3.159910   5 #> 1123 521.7767   3.980308   5 #> 1124 522.1671   3.012203   5 #> 1125 522.2709   3.113342   5 #> 1126 552.9228   2.946241   5 #> 1127 925.2604   2.914907   5 #> 1128 528.7696   2.530769   5 #> 1129 894.8597   2.621692   5 #> 1130 524.4489   2.585175   5 #> 1131 523.5489   3.049888   5 #> 1132 531.0202   2.632439   5 #> 1133 570.6527   2.602549   5 #> 1134 522.4681   3.399072   5 #> 1135 588.6552   2.958074   5 #> 1136 523.1086   2.530678   5 #> 1137 578.8739   2.860510   5 #> 1138 521.9509   3.057548   5 #> 1139 521.8751   2.562638   5 #> 1140 549.4788   2.600826   5 #> 1141 523.4691   3.062121   5 #> 1142 522.0968   4.435799   5 #> 1143 521.9208   2.703378   5 #> 1144 528.8620   3.090053   5 #> 1145 719.4995   3.999346   5 #> 1146 522.6018   2.540894   5 #> 1147 776.1129   4.103869   5 #> 1148 522.4448   2.502786   5 #> 1149 521.9644   2.703343   5 #> 1150 543.3294   2.520365   5 #> 1151 521.9593   2.609565   5 #> 1152 694.8561   2.764741   5 #> 1153 522.0155   3.275246   5 #> 1154 790.3648   2.976937   5 #> 1155 521.8752   2.716480   5 #> 1156 532.8314   2.651678   5 #> 1157 523.5728   2.522151   5 #> 1158 767.4461   4.290568   5 #> 1159 538.5617   2.790503   5 #> 1160 563.7304   2.777404   5 #> 1161 710.8232   2.730267   5 #> 1162 650.7065   2.672213   5 #> 1163 524.2889   3.692536   5 #> 1164 521.8898   3.024028   5 #> 1165 522.2501   2.810156   5 #> 1166 524.1290   2.798117   5 #> 1167 533.2021   2.808700   5 #> 1168 523.1661   2.710482   5 #> 1169 526.3630   2.830187   5 #> 1170 522.2102   2.814869   5 #> 1171 522.6538   2.791761   5 #> 1172 521.9206   2.543380   5 #> 1173 593.2756   3.515705   5 #> 1174 521.9110   2.697885   5 #> 1175 521.7915   2.796454   5 #> 1176 521.9260   2.584774   5 #> 1177 522.3661   3.762476   5 #> 1178 521.8531   2.532099   5 #> 1179 523.4902   2.557122   5 #> 1180 522.6544   3.266160   5 #> 1181 958.9498   2.888412   5 #> 1182 522.4625   2.676139   5 #> 1183 532.2543   2.724338   5 #> 1184 558.6990   2.542124   5 #> 1185 542.2789   2.526118   5 #> 1186 521.9279   2.728985   5 #> 1187 522.5390   3.028421   5 #> 1188 523.5938   3.112837   5 #> 1189 533.2596   3.200000   5 #> 1190 545.1353   2.586610   5 #> 1191 616.0983   2.668225   5 #> 1192 532.0999   3.035878   5 #> 1193 546.5472   3.068524   5 #> 1194 522.7583   2.515772   5 #> 1195 521.7685   2.569175   5 #> 1196 564.0255   2.674896   5 #> 1197 601.8906   3.101829   5 #> 1198 522.0163   2.530389   5 #> 1199 849.4426   2.803583   5 #> 1200 914.9752   3.128556   5 #> 1201 609.0481   3.193801   5 #> 1202 524.0526   2.501466   5 #> 1203 525.6168   3.206431   5 #> 1204 539.8815   2.655760   5 #> 1205 549.8259   2.616304   5 #> 1206 532.3977   2.720115   5 #> 1207 521.8106   2.634705   5 #> 1208 672.3800   2.794211   5 #> 1209 869.2492   3.863048   5 #> 1210 521.7647   2.550345   5 #> 1211 522.3284   2.923960   5 #> 1212 534.3281   2.702776   5 #> 1213 647.1714   2.647729   5 #> 1214 521.8234   2.520283   5 #> 1215 542.4343   2.735573   5 #> 1216 523.5291   2.562337   5 #> 1217 522.8498   2.534058   5 #> 1218 528.5359   3.016198   5 #> 1219 523.5015   2.805643   5 #> 1220 865.3754   3.819700   5 #> 1221 569.0364   3.089596   5 #> 1222 528.9753   3.618728   5 #> 1223 697.9617   2.682151   5 #> 1224 730.0657   2.733657   5 #> 1225 529.7205   2.625877   5 #> 1226 523.7059   2.501788   5 #> 1227 675.2037   3.025763   5 #> 1228 521.7520   3.207854   5 #> 1229 586.3034   2.833495   5 #> 1230 541.1815   2.516254   5 #> 1231 521.9209   2.740636   5 #> 1232 524.6037   2.760164   5 #> 1233 527.4722   2.563807   5 #> 1234 814.9504   2.687161   5 #> 1235 790.4607   2.788413   5 #> 1236 523.9100   4.021591   5 #> 1237 522.0268   2.644951   5 #> 1238 692.2539   2.832322   5 #> 1239 523.1510   2.843050   5 #> 1240 542.4360   2.504574   5 #> 1241 524.5807   2.979599   5 #> 1242 522.0596   3.173418   5 #> 1243 523.4834   2.817029   5 #> 1244 747.8096   4.426080   5 #> 1245 521.7762   2.810159   5 #> 1246 553.0080   3.428637   5 #> 1247 944.0357   2.543457   5 #> 1248 521.9260   2.808155   5 #> 1249 532.1471   2.647307   5 #> 1250 599.7112   2.543718   5 #> 1251 521.7811   2.648904   5 #> 1252 849.8725   3.697289   5 #> 1253 530.2839   2.576355   5 #> 1254 564.2208   3.537305   5 #> 1255 523.2971   2.852274   5 #> 1256 522.8029   3.399808   5 #> 1257 524.3914   3.289175   5 #> 1258 521.8403   2.957969   5 #> 1259 522.0017   2.783087   5 #> 1260 539.1893   2.623167   5 #> 1261 524.1162   3.166380   5 #> 1262 522.0303   2.730107   5 #> 1263 745.3745   4.262580   5 #> 1264 522.0218   3.097763   5 #> 1265 565.0658   3.438208   5 #> 1266 626.5259   2.532584   5 #> 1267 647.8798   4.084017   5 #> 1268 527.4723   2.671988   5 #> 1269 525.6767   2.825091   5 #> 1270 523.0905   2.649790   5 #> 1271 522.4854   2.692475   5 #> 1272 667.4718   2.669339   5 #> 1273 523.7657   2.624719   5 #> 1274 521.9874   2.973579   5 #> 1275 527.2248   2.883015   5 #> 1276 524.1065   2.688849   5 #> 1277 532.9329   2.688800   5 #> 1278 523.6219   3.166584   5 #> 1279 522.5609   2.745313   5 #> 1280 521.7975   3.439371   5 #> 1281 561.3115   2.834236   5 #> 1282 767.1049   2.940522   5 #> 1283 522.1431   3.022836   5 #> 1284 521.7699   2.825527   5 #> 1285 521.8413   2.528094   5 #> 1286 541.4208   3.036046   5 #> 1287 521.7485   3.181755   5 #> 1288 595.7827   3.575247   5 #> 1289 524.6830   3.354503   5 #> 1290 521.9689   2.617731   5 #> 1291 523.7053   2.898975   5 #> 1292 522.4900   2.645892   5 #> 1293 522.3069   2.637418   5 #> 1294 521.8456   2.946109   5 #> 1295 525.2916   2.641377   5 #> 1296 521.9342   2.709581   5 #> 1297 521.7529   3.198764   5 #> 1298 530.1982   3.012132   5 #> 1299 556.6937   2.867272   5 #> 1300 521.8265   3.379584   5 #> 1301 527.5081   3.203684   5 #> 1302 521.8179   2.530867   5 #> 1303 536.3463   2.734490   5 #> 1304 522.5803   2.526046   5 #> 1305 588.2024   3.132860   5 #> 1306 521.7729   3.089660   5 #> 1307 535.2334   2.793311   5 #> 1308 521.9989   2.513081   5 #> 1309 706.0767   2.615150   5 #> 1310 524.3176   2.837043   5 #> 1311 542.2578   2.772135   5 #> 1312 621.2827   2.815697   5 #> 1313 522.9498   2.830222   5 #> 1314 524.9104   2.703649   5 #> 1315 534.6948   4.216321   5 #> 1316 534.4985   3.950674   5 #> 1317 872.7243   2.785181   5 #> 1318 590.6031   3.063103   5 #> 1319 521.8554   2.611869   5 #> 1320 559.1140   3.750190   5 #> 1321 521.9306   3.589401   5 #> 1322 521.8900   2.837476   5 #> 1323 969.2656   2.994878   5 #> 1324 547.6368   2.533861   5 #> 1325 525.2431   2.654057   5 #> 1326 521.8060   2.558449   5 #> 1327 793.7994   4.008830   5 #> 1328 521.7622   2.593567   5 #> 1329 559.2342   4.338040   5 #> 1330 525.0164   3.576079   5 #> 1331 522.0806   2.989751   5 #> 1332 523.5183   2.776234   5 #> 1333 595.9113   3.451588   5 #> 1334 555.9580   3.201138   5 #> 1335 522.7294   2.748103   5 #> 1336 522.5270   3.044825   5 #> 1337 522.5318   3.487881   5 #> 1338 522.2871   3.171576   5 #> 1339 522.6116   2.680908   5 #> 1340 587.8485   2.624111   5 #> 1341 523.1696   2.571431   5 #> 1342 521.9910   2.795018   5 #> 1343 523.1276   2.617344   5 #> 1344 523.5753   4.214051   5 #> 1345 522.0087   2.805746   5 #> 1346 618.1607   3.364724   5 #> 1347 531.3729   3.028665   5 #> 1348 522.0057   2.727140   5 #> 1349 629.4390   2.868367   5 #> 1350 542.0528   2.565893   5 #> 1351 523.7103   2.546584   5 #> 1352 982.9967   2.884860   5 #> 1353 825.6694   3.007775   5 #> 1354 531.6757   2.635108   5 #> 1355 546.2353   2.562084   5 #> 1356 942.9264   2.695524   5 #> 1357 588.9310   3.003192   5 #> 1358 652.9809   3.354294   5 #> 1359 757.8881   2.544694   5 #> 1360 505.8892   2.581341   5 #> 1361 623.4529   2.580752   5 #> 1362 967.3416   2.634033   5 #> 1363 682.6236   2.800414   5 #> 1364 675.8308   3.131583   5 #> 1365 710.1162   2.968163   5 #> 1366 782.3016   2.604177   5 #> 1367 547.6348   2.647489   5 #> 1368 192.1150   2.525281   5 #> 1369 214.0214   2.892581   5 #> 1370 215.9420   3.217416   5 #> 1371 224.6890   2.703018   5 #>  #> [[7]] #>           ts magnitudes gen #> 1   553.6534   2.718895   6 #> 2   571.4121   2.513374   6 #> 3   583.2449   2.670692   6 #> 4   570.6988   2.816523   6 #> 5   578.5583   2.796866   6 #> 6   571.7777   2.654391   6 #> 7   747.0162   2.550506   6 #> 8   546.8774   3.516163   6 #> 9   622.7847   2.506564   6 #> 10  618.1302   2.504703   6 #> 11  525.5273   2.597738   6 #> 12  685.4007   2.614367   6 #> 13  544.1595   2.741789   6 #> 14  524.1614   3.051498   6 #> 15  718.9976   2.545708   6 #> 16  529.2779   2.685511   6 #> 17  539.5543   3.157058   6 #> 18  530.7304   3.756751   6 #> 19  529.8255   2.786234   6 #> 20  522.8663   2.604304   6 #> 21  698.2322   2.701107   6 #> 22  525.0669   2.580954   6 #> 23  538.8785   4.174917   6 #> 24  522.1355   2.513213   6 #> 25  813.3209   2.593609   6 #> 26  529.9162   2.851383   6 #> 27  523.0198   2.516659   6 #> 28  521.9913   2.671840   6 #> 29  522.1938   2.527723   6 #> 30  522.0451   2.824879   6 #> 31  522.8867   2.507070   6 #> 32  537.4031   2.561779   6 #> 33  574.5787   2.565261   6 #> 34  637.3786   2.507189   6 #> 35  526.6890   3.306341   6 #> 36  523.9376   2.815422   6 #> 37  531.2295   2.668240   6 #> 38  523.8683   3.342711   6 #> 39  523.7930   2.599689   6 #> 40  523.7843   3.219349   6 #> 41  617.8655   2.577507   6 #> 42  523.5632   4.274667   6 #> 43  957.4397   3.244721   6 #> 44  555.0743   3.209905   6 #> 45  595.1559   3.387875   6 #> 46  643.7504   2.672875   6 #> 47  522.2832   2.982402   6 #> 48  522.6549   2.737753   6 #> 49  522.3229   2.879221   6 #> 50  525.3432   2.867620   6 #> 51  537.0676   2.566279   6 #> 52  523.1074   2.979601   6 #> 53  529.9114   2.783746   6 #> 54  524.2849   2.613268   6 #> 55  564.3578   2.982764   6 #> 56  525.0139   2.574416   6 #> 57  523.1566   2.634849   6 #> 58  523.0122   2.609489   6 #> 59  524.2558   2.846650   6 #> 60  566.1833   2.513556   6 #> 61  592.5486   2.785172   6 #> 62  523.9760   3.272018   6 #> 63  538.4573   3.047718   6 #> 64  776.6844   2.535178   6 #> 65  529.8715   3.193698   6 #> 66  527.3402   2.661073   6 #> 67  528.0980   2.608684   6 #> 68  636.8225   3.000100   6 #> 69  820.2120   2.632673   6 #> 70  561.7642   2.794830   6 #> 71  780.2071   2.629542   6 #> 72  545.4489   2.786200   6 #> 73  532.4848   2.693286   6 #> 74  522.2199   3.069940   6 #> 75  579.4997   2.855875   6 #> 76  537.4920   2.603706   6 #> 77  576.7413   2.726633   6 #> 78  536.8237   3.057025   6 #> 79  526.9110   3.486996   6 #> 80  646.0226   2.649008   6 #> 81  661.6178   2.644990   6 #> 82  523.0242   2.934435   6 #> 83  530.4366   2.906842   6 #> 84  524.6734   3.039074   6 #> 85  524.1141   2.651929   6 #> 86  540.7292   2.642581   6 #> 87  522.5797   2.596553   6 #> 88  522.5779   2.964494   6 #> 89  523.1419   2.870569   6 #> 90  523.4562   2.894938   6 #> 91  581.6220   3.024306   6 #> 92  558.3216   2.989867   6 #> 93  809.6840   2.787787   6 #> 94  522.6833   2.855512   6 #> 95  522.8027   3.097242   6 #> 96  525.2979   2.545859   6 #> 97  522.5883   2.799531   6 #> 98  556.7557   2.587293   6 #> 99  526.3166   3.395633   6 #> 100 787.2786   2.680658   6 #> 101 522.5653   2.859838   6 #> 102 528.2584   2.907284   6 #> 103 529.5354   3.970039   6 #> 104 527.6197   2.649138   6 #> 105 527.4677   3.048879   6 #> 106 537.7071   3.106069   6 #> 107 523.0817   3.117486   6 #> 108 528.3753   2.512031   6 #> 109 528.7988   2.639130   6 #> 110 638.2052   2.798848   6 #> 111 522.6923   4.114383   6 #> 112 527.6489   2.564199   6 #> 113 668.2135   3.144245   6 #> 114 532.1853   3.028010   6 #> 115 524.0901   3.168286   6 #> 116 711.2762   2.908689   6 #> 117 539.8226   2.954661   6 #> 118 585.0098   2.693306   6 #> 119 523.7794   2.537002   6 #> 120 543.7452   2.594858   6 #> 121 522.7273   3.198574   6 #> 122 558.6993   3.275623   6 #> 123 574.7599   2.537122   6 #> 124 531.3967   2.561424   6 #> 125 525.9269   2.584077   6 #> 126 521.8468   2.870873   6 #> 127 551.7041   3.697152   6 #> 128 523.8615   2.922158   6 #> 129 527.6664   2.844929   6 #> 130 757.0394   3.400233   6 #> 131 544.7584   2.785277   6 #> 132 782.8820   2.596234   6 #> 133 539.8878   2.862837   6 #> 134 578.3082   4.280618   6 #> 135 533.5242   2.690965   6 #> 136 551.6719   2.882659   6 #> 137 539.0996   3.200057   6 #> 138 526.7602   2.555257   6 #> 139 526.5068   2.897727   6 #> 140 725.4226   2.775326   6 #> 141 607.9601   3.573691   6 #> 142 530.6633   2.598816   6 #> 143 728.9494   2.961798   6 #> 144 522.0120   3.043008   6 #> 145 522.7675   3.034558   6 #> 146 528.2407   3.489485   6 #> 147 540.1180   3.346744   6 #> 148 522.1510   2.764536   6 #> 149 521.9908   2.767271   6 #> 150 525.2837   2.818644   6 #> 151 586.8562   2.633180   6 #> 152 527.3669   3.419491   6 #> 153 524.8569   4.738678   6 #> 154 521.9013   2.747306   6 #> 155 522.6806   3.242335   6 #> 156 522.4233   2.602357   6 #> 157 522.6040   4.116164   6 #> 158 527.2976   2.858243   6 #> 159 835.5993   3.006508   6 #> 160 523.0580   2.583149   6 #> 161 566.7330   2.576865   6 #> 162 522.8407   3.695382   6 #> 163 720.5880   2.719136   6 #> 164 524.2338   2.867633   6 #> 165 526.5085   2.958621   6 #> 166 524.6747   2.688629   6 #> 167 521.9099   2.917989   6 #> 168 521.8982   2.609762   6 #> 169 522.1966   2.679320   6 #> 170 526.8276   2.630107   6 #> 171 522.0717   3.002520   6 #> 172 522.0117   2.534762   6 #> 173 525.2906   3.685941   6 #> 174 528.5951   2.772240   6 #> 175 531.6389   3.287912   6 #> 176 524.1240   2.657817   6 #> 177 539.6448   2.901717   6 #> 178 953.0000   2.632253   6 #> 179 527.0023   2.750525   6 #> 180 834.7591   2.986579   6 #> 181 648.0428   2.565082   6 #> 182 591.7903   2.645398   6 #> 183 591.1150   2.593517   6 #> 184 537.3243   2.881004   6 #> 185 535.5015   2.659913   6 #> 186 533.4614   2.503783   6 #> 187 584.4204   2.910786   6 #> 188 523.3559   2.672054   6 #> 189 544.1619   2.567865   6 #> 190 651.0315   3.131064   6 #> 191 522.5306   3.129705   6 #> 192 535.5086   2.811200   6 #> 193 533.7621   3.261501   6 #> 194 524.1851   2.992690   6 #> 195 627.0588   3.729508   6 #> 196 522.5908   2.512807   6 #> 197 521.9270   3.647015   6 #> 198 523.1911   2.686231   6 #> 199 799.7349   3.175976   6 #> 200 806.7004   2.673425   6 #> 201 523.9981   2.871295   6 #> 202 524.8656   2.966968   6 #> 203 539.5409   2.804361   6 #> 204 732.8725   2.923455   6 #> 205 616.5257   2.740363   6 #> 206 625.0665   3.363404   6 #> 207 523.9898   3.367133   6 #> 208 525.1932   3.149633   6 #> 209 540.3982   2.807145   6 #> 210 557.0272   2.816801   6 #> 211 937.9339   2.859173   6 #> 212 557.1279   4.341685   6 #> 213 818.5407   2.906227   6 #> 214 878.2793   2.778575   6 #> 215 535.6654   2.689614   6 #> 216 580.9485   3.465996   6 #> 217 534.9622   2.521207   6 #> 218 906.7082   2.598760   6 #> 219 528.5653   3.203692   6 #> 220 530.9714   2.782981   6 #> 221 592.2274   2.903199   6 #> 222 560.7513   3.496119   6 #> 223 707.8653   3.220618   6 #> 224 525.3661   2.795819   6 #> 225 525.1456   3.010499   6 #> 226 525.9769   3.341410   6 #> 227 532.6572   2.824192   6 #> 228 647.8056   2.638945   6 #> 229 886.3774   2.518122   6 #> 230 521.9353   2.805249   6 #> 231 523.7964   2.915055   6 #> 232 523.9035   2.853414   6 #> 233 522.9235   2.881031   6 #> 234 539.0218   2.565356   6 #> 235 522.3932   2.707884   6 #> 236 976.9513   3.181344   6 #> 237 855.7988   3.438093   6 #> 238 687.0940   2.889877   6 #> 239 522.0111   2.554269   6 #> 240 566.1535   3.031762   6 #> 241 522.2428   3.284993   6 #> 242 522.2162   3.489348   6 #> 243 542.1067   2.558962   6 #> 244 522.2566   3.282355   6 #> 245 525.5109   2.957479   6 #> 246 588.2529   2.530303   6 #> 247 521.9562   4.231590   6 #> 248 524.1724   3.115653   6 #> 249 522.5346   2.798274   6 #> 250 524.9845   2.705387   6 #> 251 566.6159   2.762745   6 #> 252 580.3614   2.765357   6 #> 253 523.6630   2.532722   6 #> 254 530.4033   2.795221   6 #> 255 524.5606   3.233909   6 #> 256 523.1951   3.432154   6 #> 257 681.0757   3.708830   6 #> 258 543.4656   2.967592   6 #> 259 527.8021   2.654687   6 #> 260 545.2644   2.715311   6 #> 261 541.6784   4.542565   6 #> 262 541.6286   2.994643   6 #> 263 541.0860   4.113168   6 #> 264 579.2980   2.709561   6 #> 265 541.1218   2.634627   6 #> 266 541.1987   3.579167   6 #> 267 719.8733   2.753805   6 #> 268 650.8352   2.616842   6 #> 269 602.0560   2.529019   6 #> 270 541.3007   2.934689   6 #> 271 560.2243   2.977726   6 #> 272 541.3625   3.233132   6 #> 273 646.1561   2.569860   6 #> 274 541.5619   2.502165   6 #> 275 571.6027   2.598219   6 #> 276 542.0590   2.711693   6 #> 277 562.8612   2.996279   6 #> 278 541.2439   2.742233   6 #> 279 541.1489   3.020117   6 #> 280 541.0738   2.610165   6 #> 281 594.7233   2.949020   6 #> 282 752.1710   2.765768   6 #> 283 798.7559   3.972893   6 #> 284 589.7630   3.047192   6 #> 285 541.6631   2.552281   6 #> 286 542.0601   3.994336   6 #> 287 576.9350   2.970247   6 #> 288 541.3725   2.799025   6 #> 289 541.0424   2.601543   6 #> 290 542.6842   3.102856   6 #> 291 541.0845   3.367419   6 #> 292 541.5723   2.741759   6 #> 293 600.7177   2.574578   6 #> 294 545.8179   2.680796   6 #> 295 543.1914   3.033445   6 #> 296 605.7882   2.539040   6 #> 297 648.1555   2.783765   6 #> 298 712.8473   3.048902   6 #> 299 541.9358   3.007425   6 #> 300 542.1965   2.573350   6 #> 301 558.5035   3.449471   6 #> 302 609.7886   2.554009   6 #> 303 541.4753   2.616663   6 #> 304 609.2335   3.107836   6 #> 305 541.2765   2.572574   6 #> 306 551.6783   3.339884   6 #> 307 542.7251   2.521987   6 #> 308 549.3506   2.516051   6 #> 309 649.8479   3.214997   6 #> 310 735.6018   2.514748   6 #> 311 546.1815   3.191889   6 #> 312 541.2681   2.685300   6 #> 313 542.0383   2.885081   6 #> 314 541.6353   3.083492   6 #> 315 542.8381   2.789000   6 #> 316 573.6371   3.035796   6 #> 317 542.9688   3.771439   6 #> 318 541.0136   3.298927   6 #> 319 543.2323   2.546976   6 #> 320 575.7844   3.252236   6 #> 321 544.1543   3.061293   6 #> 322 640.4622   3.523205   6 #> 323 807.0547   2.693631   6 #> 324 815.3844   2.910914   6 #> 325 543.9551   2.598302   6 #> 326 636.9896   2.682830   6 #> 327 683.4099   2.932403   6 #> 328 541.3683   3.236898   6 #> 329 619.4940   2.751946   6 #> 330 547.8466   3.059177   6 #> 331 542.7401   3.162409   6 #> 332 541.8634   2.551275   6 #> 333 801.6281   2.641326   6 #> 334 541.1911   2.817629   6 #> 335 553.3048   4.043537   6 #> 336 541.0417   2.782415   6 #> 337 547.4385   2.674895   6 #> 338 542.7607   2.512598   6 #> 339 541.4069   2.565174   6 #> 340 541.8671   2.646380   6 #> 341 554.6217   3.319455   6 #> 342 554.9670   2.522143   6 #> 343 562.2834   2.745467   6 #> 344 545.9082   2.648138   6 #> 345 542.1785   2.614111   6 #> 346 541.3097   2.980139   6 #> 347 549.8042   2.520767   6 #> 348 543.8499   2.676798   6 #> 349 541.3276   2.644070   6 #> 350 545.6358   2.520757   6 #> 351 597.9000   3.918224   6 #> 352 541.9583   2.906725   6 #> 353 547.0714   2.514771   6 #> 354 542.3637   2.769977   6 #> 355 541.4984   2.656616   6 #> 356 543.0161   2.754045   6 #> 357 541.2191   3.909574   6 #> 358 541.4174   2.820236   6 #> 359 541.0149   3.098235   6 #> 360 548.2181   2.749684   6 #> 361 541.2685   2.697053   6 #> 362 541.1581   2.538728   6 #> 363 543.5205   3.458903   6 #> 364 560.2568   2.696277   6 #> 365 544.8481   2.719055   6 #> 366 580.8925   2.760880   6 #> 367 541.0290   2.562375   6 #> 368 541.4603   2.537683   6 #> 369 541.4089   2.583578   6 #> 370 945.0853   2.921229   6 #> 371 822.0447   3.666834   6 #> 372 767.0616   2.947014   6 #> 373 542.3996   2.844634   6 #> 374 541.4305   2.610391   6 #> 375 542.3136   3.213286   6 #> 376 544.6496   2.536771   6 #> 377 541.1043   2.981455   6 #> 378 541.5784   2.512531   6 #> 379 641.9305   3.367065   6 #> 380 657.0627   3.099133   6 #> 381 547.7358   2.925798   6 #> 382 543.4250   2.588825   6 #> 383 543.3001   3.405617   6 #> 384 542.6892   2.510005   6 #> 385 541.1283   4.380210   6 #> 386 541.9714   2.546567   6 #> 387 559.8007   2.966792   6 #> 388 541.1730   2.714246   6 #> 389 569.6188   3.417636   6 #> 390 541.9812   2.716303   6 #> 391 543.7245   3.598123   6 #> 392 613.1698   2.590568   6 #> 393 545.2507   2.726581   6 #> 394 542.2647   2.553355   6 #> 395 541.1777   3.861845   6 #> 396 541.6887   3.570178   6 #> 397 553.8359   3.282776   6 #> 398 725.9973   2.643156   6 #> 399 543.9658   2.582731   6 #> 400 783.7443   2.596495   6 #> 401 544.6259   2.817309   6 #> 402 541.8906   2.778252   6 #> 403 541.3126   3.095399   6 #> 404 588.9634   2.709576   6 #> 405 544.4952   3.611713   6 #> 406 544.3858   2.609221   6 #> 407 566.0347   2.543898   6 #> 408 816.1859   2.806551   6 #> 409 560.7158   3.645152   6 #> 410 558.9946   2.897134   6 #> 411 627.9627   2.617884   6 #> 412 542.1266   2.894037   6 #> 413 580.9695   2.677000   6 #> 414 552.5742   2.621206   6 #> 415 542.0469   3.216058   6 #> 416 604.1847   2.875491   6 #> 417 541.1174   2.643642   6 #> 418 541.0607   2.840419   6 #> 419 548.6609   3.537210   6 #> 420 801.2909   2.710821   6 #> 421 541.0202   2.531757   6 #> 422 625.2355   3.643731   6 #> 423 570.2258   2.908997   6 #> 424 544.1871   2.950993   6 #> 425 944.3284   2.518115   6 #> 426 541.2119   3.571056   6 #> 427 558.6073   2.682793   6 #> 428 782.3835   2.704598   6 #> 429 541.0665   3.108492   6 #> 430 557.4095   3.457863   6 #> 431 581.9121   2.723832   6 #> 432 793.0071   3.254713   6 #> 433 550.2161   2.708867   6 #> 434 623.2312   2.718300   6 #> 435 549.3554   2.871074   6 #> 436 546.6052   2.502569   6 #> 437 613.8389   3.132940   6 #> 438 541.4756   2.768167   6 #> 439 541.1162   3.518520   6 #> 440 552.4742   2.540245   6 #> 441 541.1317   2.957143   6 #> 442 544.1067   2.538742   6 #> 443 838.9584   2.645909   6 #> 444 541.0268   2.734361   6 #> 445 834.6804   2.562062   6 #> 446 941.1930   2.634296   6 #> 447 541.1554   2.680024   6 #> 448 543.8247   2.857569   6 #> 449 541.4057   2.800039   6 #> 450 541.7228   2.757452   6 #> 451 541.0691   3.401160   6 #> 452 544.5045   3.452924   6 #> 453 545.9416   3.743346   6 #> 454 543.1957   2.753383   6 #> 455 788.7544   3.304296   6 #> 456 717.8240   2.527765   6 #> 457 543.3577   2.577373   6 #> 458 555.4982   2.825309   6 #> 459 542.4168   3.499597   6 #> 460 541.3146   2.756730   6 #> 461 541.5781   2.542983   6 #> 462 542.0776   2.561320   6 #> 463 619.4760   3.213808   6 #> 464 543.8995   2.938839   6 #> 465 541.0860   2.928751   6 #> 466 542.4604   2.585158   6 #> 467 666.0622   4.297667   6 #> 468 541.5403   2.541669   6 #> 469 542.4551   2.533259   6 #> 470 543.3684   3.588897   6 #> 471 566.9764   3.052484   6 #> 472 542.4374   2.654040   6 #> 473 708.5179   2.774323   6 #> 474 541.9549   2.632395   6 #> 475 672.5569   3.597984   6 #> 476 623.4955   3.136690   6 #> 477 554.8260   2.556540   6 #> 478 541.0414   3.053702   6 #> 479 577.7482   2.910799   6 #> 480 578.9233   3.197685   6 #> 481 541.9064   2.877155   6 #> 482 542.0823   2.671168   6 #> 483 541.8936   2.737243   6 #> 484 541.1079   2.638424   6 #> 485 964.7524   2.714730   6 #> 486 563.7950   2.524008   6 #> 487 551.6523   2.516259   6 #> 488 552.3117   2.767104   6 #> 489 542.8672   3.409385   6 #> 490 686.9706   2.553062   6 #> 491 635.9683   2.560631   6 #> 492 692.4299   2.538885   6 #> 493 542.7060   3.435823   6 #> 494 541.0372   3.422192   6 #> 495 561.4463   2.640229   6 #> 496 607.5886   2.772677   6 #> 497 630.4648   3.062289   6 #> 498 541.3901   3.468568   6 #> 499 557.7398   2.876732   6 #> 500 541.4212   3.035540   6 #> 501 543.4214   2.577952   6 #> 502 544.0112   2.649210   6 #> 503 542.5224   3.123501   6 #> 504 541.8289   2.639790   6 #> 505 543.3362   3.937858   6 #> 506 541.4343   2.655832   6 #> 507 555.5854   3.064869   6 #> 508 541.1187   3.620739   6 #> 509 541.5660   2.743448   6 #> 510 541.5834   2.936099   6 #> 511 545.0094   2.846377   6 #> 512 541.0404   3.717302   6 #> 513 551.8298   2.826103   6 #> 514 543.9871   2.554119   6 #> 515 554.2702   2.668948   6 #> 516 549.1730   2.608116   6 #> 517 569.5053   3.400732   6 #> 518 542.0683   2.798513   6 #> 519 541.2972   2.659533   6 #> 520 541.0138   2.895306   6 #> 521 549.4303   2.527616   6 #> 522 602.6713   3.411745   6 #> 523 541.6906   2.542683   6 #> 524 541.0530   2.596214   6 #> 525 879.5371   2.633051   6 #> 526 553.7168   3.001080   6 #> 527 659.7588   2.717924   6 #> 528 643.9466   2.779967   6 #> 529 523.3146   2.766012   6 #> 530 532.8223   3.893050   6 #> 531 535.7399   2.620269   6 #> 532 873.6787   2.697467   6 #> 533 535.7041   3.006036   6 #> 534 523.4134   2.919412   6 #> 535 557.8860   2.890675   6 #> 536 578.1868   3.147489   6 #> 537 676.7575   2.869742   6 #> 538 525.8827   2.779128   6 #> 539 530.6366   2.608804   6 #> 540 530.5727   2.997365   6 #> 541 577.2217   2.527329   6 #> 542 566.6717   2.616971   6 #> 543 695.0313   2.530896   6 #> 544 532.1076   2.604441   6 #> 545 585.2697   3.618685   6 #> 546 674.4107   2.637456   6 #> 547 524.7963   2.687986   6 #> 548 824.5276   2.631027   6 #> 549 850.1785   3.239186   6 #> 550 585.6477   3.940466   6 #> 551 523.8587   2.543057   6 #> 552 534.2619   2.732027   6 #> 553 524.1527   2.574595   6 #> 554 879.4425   2.825234   6 #> 555 907.4798   2.911008   6 #> 556 524.3234   2.511048   6 #> 557 524.1894   2.718647   6 #> 558 595.2706   2.854539   6 #> 559 524.4440   3.285055   6 #> 560 521.8347   3.181972   6 #> 561 522.4492   3.579516   6 #> 562 523.4725   2.726044   6 #> 563 777.3872   2.778385   6 #> 564 949.2034   3.071890   6 #> 565 531.6533   3.486906   6 #> 566 559.3316   3.003645   6 #> 567 662.6502   2.901388   6 #> 568 523.9730   3.341611   6 #> 569 522.2142   3.118551   6 #> 570 527.4791   2.594166   6 #> 571 521.8694   2.517411   6 #> 572 522.4856   3.229230   6 #> 573 534.8518   2.875142   6 #> 574 523.7097   3.029261   6 #> 575 522.0215   2.567804   6 #> 576 522.2781   2.500571   6 #> 577 764.5874   3.679152   6 #> 578 996.5054   2.800597   6 #> 579 529.6719   2.573410   6 #> 580 547.5235   2.708862   6 #> 581 581.6506   2.523197   6 #> 582 541.6486   2.616794   6 #> 583 533.9704   2.995067   6 #> 584 540.0556   2.872287   6 #> 585 546.1164   2.560029   6 #> 586 523.0606   2.607923   6 #> 587 698.9842   2.796868   6 #> 588 525.4258   2.598321   6 #> 589 861.8991   2.969963   6 #> 590 554.1140   2.514646   6 #> 591 524.1297   3.353526   6 #> 592 528.8064   3.105857   6 #> 593 522.0166   2.650657   6 #> 594 523.3102   3.489980   6 #> 595 542.8626   2.572409   6 #> 596 926.1337   2.700463   6 #> 597 548.0912   2.910635   6 #> 598 523.7354   2.770407   6 #> 599 523.1535   2.522269   6 #> 600 590.7278   3.089774   6 #> 601 535.4546   3.748040   6 #> 602 524.9488   3.786382   6 #> 603 524.9271   2.604741   6 #> 604 617.0311   2.554449   6 #> 605 623.1511   4.470284   6 #> 606 768.4121   2.687076   6 #> 607 543.3945   2.574832   6 #> 608 525.1317   2.954502   6 #> 609 525.3998   3.258216   6 #> 610 529.6970   3.338742   6 #> 611 525.1422   3.135969   6 #> 612 525.1928   2.947688   6 #> 613 717.3552   3.078644   6 #> 614 523.0343   2.944060   6 #> 615 533.3696   4.304332   6 #> 616 564.4567   3.389611   6 #> 617 990.0680   2.531558   6 #> 618 528.7868   2.682148   6 #> 619 967.7158   2.921739   6 #> 620 556.7984   3.066785   6 #> 621 526.4272   2.800808   6 #> 622 822.3992   2.788659   6 #> 623 578.6753   2.630416   6 #> 624 522.8888   2.682766   6 #> 625 678.3767   2.701762   6 #> 626 522.0861   2.961859   6 #> 627 539.8854   2.897525   6 #> 628 661.7785   2.814245   6 #> 629 553.2355   3.381261   6 #> 630 570.7001   4.032919   6 #> 631 522.6381   2.706729   6 #> 632 542.3532   2.829547   6 #> 633 528.1471   2.568791   6 #> 634 526.5707   2.850547   6 #> 635 525.0199   2.622950   6 #> 636 565.7397   2.538177   6 #> 637 559.1267   2.554988   6 #> 638 524.3594   2.542356   6 #> 639 924.2069   2.560722   6 #> 640 612.2250   2.732355   6 #> 641 528.3306   3.089091   6 #> 642 528.0544   2.501729   6 #> 643 528.7083   3.816380   6 #> 644 659.9330   3.850169   6 #> 645 523.1959   2.590308   6 #> 646 525.4987   2.527423   6 #> 647 903.3140   3.086847   6 #> 648 574.8825   2.543554   6 #> 649 549.0043   2.883648   6 #> 650 526.7717   2.911333   6 #> 651 532.5986   2.721217   6 #> 652 531.0402   2.538969   6 #> 653 526.1488   3.119261   6 #> 654 677.3745   2.577644   6 #> 655 570.7510   2.877359   6 #> 656 522.4939   3.144990   6 #> 657 660.9273   2.522973   6 #> 658 579.1373   3.091121   6 #> 659 527.2294   2.857583   6 #> 660 522.6542   3.553403   6 #> 661 963.4972   2.686003   6 #> 662 537.4694   2.591548   6 #> 663 524.3896   2.820631   6 #> 664 552.7798   3.792154   6 #> 665 530.3683   2.604907   6 #> 666 719.7554   3.749696   6 #> 667 879.7376   2.519775   6 #> 668 692.8695   2.551501   6 #> 669 757.6533   2.821156   6 #> 670 767.8125   3.125731   6 #> 671 892.5654   3.137045   6 #> 672 767.5380   2.522138   6 #> 673 541.4276   2.827980   6 #> 674 522.4623   3.949350   6 #> 675 531.2321   3.418908   6 #> 676 691.0832   2.951308   6 #> 677 594.3815   3.439393   6 #> 678 531.7521   3.536142   6 #> 679 526.2384   2.638761   6 #> 680 531.5511   2.922942   6 #> 681 533.5283   2.832101   6 #> 682 533.7208   2.534850   6 #> 683 552.5831   2.732102   6 #> 684 532.1118   2.554603   6 #> 685 546.7451   2.823652   6 #> 686 523.1921   2.669344   6 #> 687 874.7072   3.227415   6 #> 688 870.3405   2.536339   6 #> 689 529.6407   3.805640   6 #> 690 556.4368   2.562136   6 #> 691 539.2273   2.940021   6 #> 692 587.0548   2.515063   6 #> 693 524.1284   3.476444   6 #> 694 523.9270   2.783201   6 #> 695 748.0958   2.721117   6 #> 696 760.1898   2.599113   6 #> 697 781.3517   2.573217   6 #> 698 747.9451   2.957991   6 #> 699 523.7672   2.618585   6 #> 700 522.0932   3.204385   6 #> 701 553.9136   3.029790   6 #> 702 566.7565   4.337347   6 #> 703 642.9536   2.936351   6 #> 704 522.4492   2.668505   6 #> 705 746.0575   2.538974   6 #> 706 749.4466   2.714000   6 #> 707 745.9008   2.603830   6 #> 708 777.5412   2.827408   6 #> 709 745.3914   3.982352   6 #> 710 650.6012   3.321429   6 #> 711 647.9305   3.833508   6 #> 712 650.2439   3.617008   6 #> 713 648.2025   2.736297   6 #> 714 541.5406   2.567406   6 #> 715 595.8364   2.627521   6 #> 716 596.1758   2.540871   6 #> 717 595.9586   2.809612   6 #> 718 577.8006   3.606949   6 #> 719 600.4186   2.766562   6 #> 720 534.8352   3.838060   6 #> 721 584.3743   3.018117   6 #> 722 536.7015   2.937182   6 #> 723 522.6391   3.213588   6 #> 724 800.1682   2.591846   6 #> 725 802.5513   2.594155   6 #> 726 583.6772   3.381885   6 #> 727 559.5565   3.513892   6 #> 728 560.2931   2.792806   6 #> 729 565.9552   2.989023   6 #> 730 525.0485   3.043384   6 #> 731 596.2215   2.821075   6 #> 732 522.6291   2.957974   6 #> 733 551.9229   2.515922   6 #> 734 523.7029   2.542101   6 #> 735 524.6052   3.282206   6 #> 736 523.7318   2.698705   6 #> 737 653.0819   2.521294   6 #> 738 653.7014   2.772209   6 #> 739 918.6622   2.541593   6 #> 740 548.5843   2.802061   6 #> 741 226.8566   3.007938   6 #>  #> [[8]] #>           ts magnitudes gen #> 1   649.3477   2.772728   7 #> 2   540.8104   2.648566   7 #> 3   532.2398   3.111817   7 #> 4   541.2429   3.248497   7 #> 5   539.9083   2.519003   7 #> 6   541.5974   2.764407   7 #> 7   530.1587   2.501298   7 #> 8   686.9585   2.517392   7 #> 9   685.5473   2.628783   7 #> 10  526.4298   2.569312   7 #> 11  524.4875   2.883702   7 #> 12  524.2576   2.644309   7 #> 13  523.6099   3.570210   7 #> 14  523.6474   2.668984   7 #> 15  909.2223   2.909101   7 #> 16  551.4228   2.629303   7 #> 17  957.4789   2.676652   7 #> 18  662.0663   3.473460   7 #> 19  524.9984   3.235558   7 #> 20  928.1546   3.948289   7 #> 21  769.3500   3.653359   7 #> 22  579.6163   3.085193   7 #> 23  552.5572   2.529289   7 #> 24  530.7069   2.565148   7 #> 25  547.9638   5.215703   7 #> 26  529.4063   2.537357   7 #> 27  528.7231   3.630990   7 #> 28  528.9009   2.784331   7 #> 29  525.2708   2.604511   7 #> 30  525.3245   2.503689   7 #> 31  558.7112   3.059253   7 #> 32  552.0129   2.599254   7 #> 33  577.4783   2.590366   7 #> 34  552.2389   2.511674   7 #> 35  524.1590   3.257284   7 #> 36  807.9051   3.226567   7 #> 37  690.3578   4.261963   7 #> 38  589.3567   2.730420   7 #> 39  542.5366   2.661005   7 #> 40  562.5435   2.993693   7 #> 41  608.4994   3.442007   7 #> 42  633.0077   2.779542   7 #> 43  524.8934   3.141685   7 #> 44  528.6722   4.008470   7 #> 45  524.9533   4.551817   7 #> 46  688.6105   2.608029   7 #> 47  547.1336   2.507344   7 #> 48  524.9572   2.654012   7 #> 49  548.7090   3.391741   7 #> 50  630.0114   2.698008   7 #> 51  524.6859   2.965024   7 #> 52  525.4133   3.527433   7 #> 53  539.0456   2.669869   7 #> 54  539.9788   2.829827   7 #> 55  656.5066   3.083204   7 #> 56  627.1384   2.913479   7 #> 57  522.4526   3.152206   7 #> 58  638.5747   2.662492   7 #> 59  586.1997   3.182728   7 #> 60  526.6625   3.080961   7 #> 61  596.3040   2.540514   7 #> 62  537.1605   2.645444   7 #> 63  522.9371   2.559368   7 #> 64  525.8175   2.973885   7 #> 65  522.2813   2.820860   7 #> 66  525.7459   2.553175   7 #> 67  521.9915   2.729388   7 #> 68  537.5148   2.530787   7 #> 69  524.4014   4.245635   7 #> 70  594.6884   2.710924   7 #> 71  543.1225   2.624475   7 #> 72  819.6770   2.947333   7 #> 73  714.5954   2.882168   7 #> 74  545.0223   2.750444   7 #> 75  541.7302   3.383405   7 #> 76  674.7972   2.565644   7 #> 77  555.1281   2.866134   7 #> 78  562.3376   3.069451   7 #> 79  542.0284   4.395180   7 #> 80  605.8021   2.501098   7 #> 81  928.6605   2.789997   7 #> 82  541.3786   2.655112   7 #> 83  564.2250   2.663879   7 #> 84  777.0029   5.175078   7 #> 85  611.2001   2.552492   7 #> 86  575.9409   2.528626   7 #> 87  837.7781   2.574736   7 #> 88  543.5230   2.749279   7 #> 89  547.0689   3.426227   7 #> 90  562.6317   2.907398   7 #> 91  642.0641   2.560889   7 #> 92  805.1513   2.696659   7 #> 93  544.7247   2.611273   7 #> 94  644.7207   3.112401   7 #> 95  807.8982   3.158060   7 #> 96  561.5066   2.526847   7 #> 97  553.5876   2.737877   7 #> 98  549.2681   2.763078   7 #> 99  548.0194   2.508462   7 #> 100 723.9245   2.634442   7 #> 101 542.1105   3.507753   7 #> 102 566.0104   3.097808   7 #> 103 543.1275   4.743593   7 #> 104 541.8678   2.527929   7 #> 105 592.7167   3.190000   7 #> 106 545.6511   2.661627   7 #> 107 542.4092   3.085483   7 #> 108 545.4014   2.821312   7 #> 109 541.1348   3.141540   7 #> 110 590.9046   2.589085   7 #> 111 565.6169   3.597344   7 #> 112 555.8811   2.556771   7 #> 113 547.5956   4.466149   7 #> 114 542.9525   2.716061   7 #> 115 563.8754   2.518253   7 #> 116 757.6344   2.568153   7 #> 117 615.1548   3.741819   7 #> 118 548.8720   2.549393   7 #> 119 844.7034   2.855783   7 #> 120 901.0852   4.127884   7 #> 121 627.9786   4.215317   7 #> 122 799.0259   2.679562   7 #> 123 779.1774   3.955835   7 #> 124 816.3333   3.965666   7 #> 125 547.5172   2.501531   7 #> 126 553.3267   3.045697   7 #> 127 545.9768   2.704816   7 #> 128 546.2689   3.164954   7 #> 129 941.4592   2.788884   7 #> 130 667.0194   2.835281   7 #> 131 666.2529   2.643244   7 #> 132 666.3497   2.891611   7 #> 133 666.5081   3.183467   7 #> 134 682.0014   2.587489   7 #> 135 543.6157   2.785066   7 #> 136 567.1112   3.514038   7 #> 137 566.9772   2.878673   7 #> 138 570.6183   2.548599   7 #> 139 542.6561   2.664410   7 #> 140 544.2719   2.635050   7 #> 141 541.0763   3.405129   7 #> 142 733.1595   2.707709   7 #> 143 542.4221   3.435015   7 #> 144 541.4663   2.934442   7 #> 145 543.4625   3.272877   7 #> 146 550.0904   2.635683   7 #> 147 546.8627   2.581652   7 #> 148 533.8582   3.654858   7 #> 149 532.8780   3.613803   7 #> 150 533.6053   2.602581   7 #> 151 537.4549   3.424571   7 #> 152 678.2092   2.710633   7 #> 153 850.6090   2.509986   7 #> 154 853.1728   3.384938   7 #> 155 609.9691   2.696695   7 #> 156 585.7886   3.266580   7 #> 157 818.5739   3.584514   7 #> 158 530.6318   3.034018   7 #> 159 752.8616   3.052361   7 #> 160 905.9036   2.741252   7 #> 161 594.7457   3.297544   7 #> 162 711.7674   3.400173   7 #> 163 696.2415   3.085128   7 #> 164 624.2357   2.629049   7 #> 165 623.5181   2.681457   7 #> 166 624.5563   2.660137   7 #> 167 623.1903   3.363233   7 #> 168 876.2241   2.926227   7 #> 169 645.1475   2.900119   7 #> 170 536.4455   3.036628   7 #> 171 566.1877   2.602358   7 #> 172 567.7846   3.089368   7 #> 173 554.1697   3.225285   7 #> 174 579.9445   2.723483   7 #> 175 900.8109   2.767972   7 #> 176 570.8589   2.522672   7 #> 177 600.3332   3.608108   7 #> 178 525.1443   2.746759   7 #> 179 545.2586   3.004490   7 #> 180 852.3033   2.952705   7 #> 181 579.2105   3.672136   7 #> 182 528.2384   2.577957   7 #> 183 552.8869   2.572730   7 #> 184 701.9973   3.432197   7 #> 185 552.8274   2.593614   7 #> 186 554.9602   3.607955   7 #> 187 543.0315   3.469578   7 #> 188 554.6704   3.947666   7 #> 189 531.3880   2.678364   7 #> 190 594.7041   2.573769   7 #> 191 614.3428   3.215738   7 #> 192 535.4856   2.778934   7 #> 193 544.9052   3.183722   7 #> 194 569.6620   2.617170   7 #> 195 603.5297   2.657056   7 #> 196 567.2598   2.529124   7 #> 197 745.5204   2.565735   7 #> 198 747.9036   3.282570   7 #> 199 873.2681   2.838962   7 #> 200 841.9564   2.634490   7 #> 201 580.7136   3.784954   7 #> 202 601.8596   3.005279   7 #> 203 534.8419   2.579585   7 #> 204 544.6427   2.754518   7 #> 205 535.5492   2.614623   7 #> 206 587.9557   2.609022   7 #> 207 585.1738   3.255532   7 #> 208 559.6037   3.653753   7 #> 209 560.6353   2.971424   7 #> 210 525.4062   3.089739   7 #> 211 557.4532   3.180590   7 #> 212 653.8279   2.526354   7 #> 213 980.0991   2.597422   7 #>  #> [[9]] #>           ts magnitudes gen #> 1   532.1902   2.712390   8 #> 2   624.6686   3.538955   8 #> 3   929.5143   2.746676   8 #> 4   928.3731   2.915460   8 #> 5   548.3125   2.713593   8 #> 6   549.4349   2.672249   8 #> 7   548.1141   3.929504   8 #> 8   695.1602   2.743465   8 #> 9   548.3721   2.770098   8 #> 10  548.0483   2.622228   8 #> 11  927.2940   2.546326   8 #> 12  548.5397   3.944776   8 #> 13  548.0474   3.117419   8 #> 14  548.4031   2.910077   8 #> 15  547.9661   3.074182   8 #> 16  548.1019   2.533993   8 #> 17  932.3543   2.572636   8 #> 18  810.5026   2.913573   8 #> 19  548.0104   3.092172   8 #> 20  549.2788   2.956033   8 #> 21  548.2235   3.016077   8 #> 22  553.9775   3.072292   8 #> 23  549.0150   3.244598   8 #> 24  552.8204   2.603360   8 #> 25  550.5242   2.969051   8 #> 26  548.7065   2.889073   8 #> 27  683.9381   4.337571   8 #> 28  548.8284   2.653614   8 #> 29  561.3072   3.065686   8 #> 30  530.4515   2.598871   8 #> 31  691.0624   2.519034   8 #> 32  690.8028   2.535476   8 #> 33  705.5387   2.855271   8 #> 34  608.5010   2.707996   8 #> 35  622.2898   2.567365   8 #> 36  529.0601   4.093960   8 #> 37  530.3599   2.563530   8 #> 38  899.3086   3.077449   8 #> 39  538.9244   5.754609   8 #> 40  524.9846   2.848778   8 #> 41  807.3695   4.594757   8 #> 42  527.4033   3.284354   8 #> 43  531.2250   2.521196   8 #> 44  707.0118   2.908233   8 #> 45  525.4133   3.286924   8 #> 46  528.3220   2.561956   8 #> 47  523.2078   2.607999   8 #> 48  524.4850   3.670186   8 #> 49  525.0287   3.452440   8 #> 50  527.1684   3.231631   8 #> 51  525.2131   2.503685   8 #> 52  715.2107   3.216152   8 #> 53  545.2765   2.593638   8 #> 54  542.1434   2.740039   8 #> 55  610.2079   2.717822   8 #> 56  578.5402   2.827982   8 #> 57  542.1270   2.524558   8 #> 58  549.2184   2.901443   8 #> 59  544.5100   3.069349   8 #> 60  543.5056   3.089241   8 #> 61  563.1789   2.592586   8 #> 62  777.0446   2.661349   8 #> 63  840.6495   2.526102   8 #> 64  777.3418   2.565744   8 #> 65  777.9126   2.594976   8 #> 66  778.2193   2.929425   8 #> 67  777.1759   2.896113   8 #> 68  879.5550   3.770173   8 #> 69  790.4991   2.606970   8 #> 70  777.0515   2.683299   8 #> 71  786.3204   2.584523   8 #> 72  777.0147   2.555543   8 #> 73  784.3794   2.703492   8 #> 74  777.1024   2.559423   8 #> 75  826.2128   3.114957   8 #> 76  784.9726   2.628676   8 #> 77  780.0984   2.678575   8 #> 78  777.1154   2.708061   8 #> 79  545.8717   2.575853   8 #> 80  706.4115   3.082662   8 #> 81  560.3119   3.060352   8 #> 82  544.3554   3.936632   8 #> 83  545.5371   2.880837   8 #> 84  543.3631   3.118001   8 #> 85  544.1592   2.573507   8 #> 86  543.4229   2.727673   8 #> 87  550.9740   2.991674   8 #> 88  543.3226   2.716613   8 #> 89  543.7764   3.645550   8 #> 90  546.7490   3.011971   8 #> 91  543.4437   2.914160   8 #> 92  694.1669   2.552647   8 #> 93  570.9574   2.919041   8 #> 94  563.0179   2.594424   8 #> 95  764.6192   2.829977   8 #> 96  549.4265   2.630889   8 #> 97  609.9872   2.912208   8 #> 98  901.2459   2.976008   8 #> 99  966.9995   2.884686   8 #> 100 956.7321   2.778975   8 #> 101 628.0083   3.192566   8 #> 102 779.2416   2.800480   8 #> 103 918.7224   3.190352   8 #> 104 666.8566   3.113093   8 #> 105 542.8324   2.987932   8 #> 106 548.4565   3.093642   8 #> 107 991.6452   2.550605   8 #> 108 772.6689   3.157126   8 #> 109 545.1949   3.178566   8 #> 110 543.8327   2.580748   8 #> 111 534.0079   2.584076   8 #> 112 541.9629   2.640054   8 #> 113 852.7326   2.506957   8 #> 114 856.5876   2.882766   8 #> 115 820.4776   3.046572   8 #> 116 597.4456   2.854508   8 #> 117 712.7308   2.592541   8 #> 118 711.8118   3.361417   8 #> 119 623.5442   2.956645   8 #> 120 905.8935   3.251244   8 #> 121 600.3837   3.608766   8 #> 122 585.1166   2.523529   8 #> 123 553.1108   2.765249   8 #> 124 705.6365   2.591038   8 #> 125 702.1043   2.786151   8 #> 126 714.7072   2.935276   8 #> 127 543.4848   2.694944   8 #> 128 554.8643   2.582054   8 #> 129 581.5863   2.586635   8 #> 130 614.3544   2.574611   8 #> 131 594.9893   2.637956   8 #> 132 745.6591   2.703624   8 #> 133 557.9800   2.517941   8 #> 134 589.6508   3.362849   8 #>  #> [[10]] #>           ts magnitudes gen #> 1   548.2734   2.952967   9 #> 2   548.5121   3.016687   9 #> 3   548.5406   3.728981   9 #> 4   548.2011   2.512757   9 #> 5   700.8468   2.771927   9 #> 6   684.2622   2.510785   9 #> 7   684.0167   2.863634   9 #> 8   685.8468   2.681158   9 #> 9   842.5133   2.515549   9 #> 10  561.3402   2.940316   9 #> 11  831.0170   2.579489   9 #> 12  635.4002   3.281287   9 #> 13  865.6983   3.050818   9 #> 14  593.7181   3.093208   9 #> 15  529.3906   2.735824   9 #> 16  536.9331   2.628211   9 #> 17  614.9343   3.545266   9 #> 18  642.4423   2.590902   9 #> 19  539.9158   2.575778   9 #> 20  542.3074   3.051077   9 #> 21  574.6173   2.879875   9 #> 22  582.4904   3.048431   9 #> 23  539.1401   2.950403   9 #> 24  539.0662   2.809271   9 #> 25  560.0415   2.816965   9 #> 26  705.1049   3.466339   9 #> 27  539.1835   3.501394   9 #> 28  538.9269   3.002799   9 #> 29  539.2174   3.096312   9 #> 30  539.7040   3.217124   9 #> 31  985.7242   3.600086   9 #> 32  539.2879   2.844332   9 #> 33  541.0099   3.329047   9 #> 34  571.0364   3.031408   9 #> 35  538.9433   2.792323   9 #> 36  596.9757   3.043135   9 #> 37  542.2035   2.503165   9 #> 38  542.6585   2.926132   9 #> 39  539.1527   2.528772   9 #> 40  539.9337   2.859750   9 #> 41  600.9052   2.566629   9 #> 42  977.8056   3.008280   9 #> 43  607.4726   3.007468   9 #> 44  541.0928   2.504073   9 #> 45  539.4854   2.555488   9 #> 46  539.8120   2.569751   9 #> 47  538.9516   3.090271   9 #> 48  541.2469   3.328263   9 #> 49  539.5620   2.568977   9 #> 50  539.7087   2.820732   9 #> 51  624.5110   2.570631   9 #> 52  539.6122   2.525597   9 #> 53  541.8358   3.287366   9 #> 54  873.9640   2.667522   9 #> 55  541.0715   3.276552   9 #> 56  618.9076   3.407413   9 #> 57  562.8838   3.552505   9 #> 58  538.9346   3.647108   9 #> 59  539.7211   3.104583   9 #> 60  539.6402   2.971256   9 #> 61  544.8342   3.379689   9 #> 62  543.0143   4.015912   9 #> 63  842.1646   3.045042   9 #> 64  539.4029   3.167745   9 #> 65  541.5807   2.514110   9 #> 66  539.8188   2.521422   9 #> 67  540.0959   3.007508   9 #> 68  539.0027   3.187005   9 #> 69  616.7897   2.576028   9 #> 70  549.4227   2.684673   9 #> 71  539.0549   2.600254   9 #> 72  561.2639   2.767093   9 #> 73  543.6363   2.600998   9 #> 74  540.2716   2.511082   9 #> 75  572.4458   3.172053   9 #> 76  706.5461   2.920126   9 #> 77  581.0864   3.047455   9 #> 78  540.0478   3.632453   9 #> 79  686.8563   3.143730   9 #> 80  840.1210   2.658844   9 #> 81  544.9918   2.633170   9 #> 82  547.0857   2.829624   9 #> 83  555.9872   2.583092   9 #> 84  550.8977   2.534390   9 #> 85  540.4002   2.692402   9 #> 86  541.6750   2.705688   9 #> 87  721.6182   2.673606   9 #> 88  546.6854   2.880061   9 #> 89  553.3744   3.114834   9 #> 90  599.8248   4.870392   9 #> 91  568.5355   2.550801   9 #> 92  541.3507   2.607427   9 #> 93  544.9220   2.675602   9 #> 94  540.7531   2.960066   9 #> 95  539.1192   2.752177   9 #> 96  549.0965   3.115187   9 #> 97  546.2185   3.205998   9 #> 98  539.8001   2.500763   9 #> 99  553.2856   2.747729   9 #> 100 538.9263   3.489217   9 #> 101 576.5196   2.711482   9 #> 102 539.4079   2.998515   9 #> 103 554.6020   3.043986   9 #> 104 663.7582   3.064707   9 #> 105 539.5310   2.631338   9 #> 106 558.0821   3.792292   9 #> 107 539.4176   2.962893   9 #> 108 539.0097   2.533427   9 #> 109 539.1746   3.364367   9 #> 110 543.0316   4.143815   9 #> 111 539.0367   3.321445   9 #> 112 594.9608   2.794685   9 #> 113 558.7045   2.826754   9 #> 114 589.1366   3.287019   9 #> 115 593.1427   2.755863   9 #> 116 542.3777   3.313147   9 #> 117 550.7002   3.456941   9 #> 118 595.3737   2.552341   9 #> 119 553.3285   2.731407   9 #> 120 538.9711   2.776230   9 #> 121 835.8577   2.913432   9 #> 122 623.0559   2.798388   9 #> 123 995.0666   3.333892   9 #> 124 538.9291   3.373770   9 #> 125 538.9627   2.764497   9 #> 126 582.3034   2.804007   9 #> 127 568.0678   2.846251   9 #> 128 587.7681   2.752589   9 #> 129 808.3831   2.700200   9 #> 130 809.6948   4.405114   9 #> 131 814.8486   2.520283   9 #> 132 807.7542   2.598246   9 #> 133 837.0815   2.706692   9 #> 134 907.3509   2.523041   9 #> 135 809.4553   2.589898   9 #> 136 532.9085   2.634038   9 #> 137 574.4923   2.534156   9 #> 138 529.4776   2.522855   9 #> 139 524.4914   2.658690   9 #> 140 543.0372   2.552854   9 #> 141 532.2902   2.587454   9 #> 142 551.4338   2.782267   9 #> 143 549.9554   4.820644   9 #> 144 793.1973   3.624137   9 #> 145 810.7366   2.530112   9 #> 146 879.9704   2.780843   9 #> 147 785.5724   2.528583   9 #> 148 774.4448   3.342981   9 #> 149 737.6914   3.260522   9 #> 150 543.9997   2.949007   9 #> 151 772.7388   2.766533   9 #> 152 605.3964   2.572311   9 #> 153 928.4867   2.972970   9 #> 154 774.7206   3.004609   9 #> 155 600.4945   3.094022   9 #> 156 600.4478   2.556075   9 #> 157 613.0107   2.514911   9 #> 158 618.4377   3.442517   9 #>  #> [[11]] #>          ts magnitudes gen #> 1  593.7538   2.624908  10 #> 2  907.9222   2.903877  10 #> 3  615.0301   3.271551  10 #> 4  542.3586   3.661164  10 #> 5  592.0363   3.608293  10 #> 6  547.4476   2.593309  10 #> 7  547.0308   4.832851  10 #> 8  614.7746   2.720967  10 #> 9  541.4031   2.890181  10 #> 10 689.0746   2.656022  10 #> 11 593.3838   3.188932  10 #> 12 547.6204   2.788466  10 #> 13 585.4307   2.809486  10 #> 14 825.3236   3.725600  10 #> 15 556.7731   2.881545  10 #> 16 564.7622   2.915716  10 #> 17 687.3147   2.557651  10 #> 18 555.6830   3.688712  10 #> 19 606.4596   2.500065  10 #> 20 600.2130   2.710436  10 #> 21 633.1821   3.312196  10 #> 22 601.9362   3.184131  10 #> 23 600.4888   2.575549  10 #> 24 600.1275   2.948435  10 #> 25 975.2788   2.642837  10 #> 26 602.6704   3.142920  10 #> 27 652.4815   2.573467  10 #> 28 602.3197   2.537535  10 #> 29 880.1126   2.757493  10 #> 30 920.8418   2.622457  10 #> 31 600.2254   2.510608  10 #> 32 599.9395   4.110960  10 #> 33 599.9696   2.630278  10 #> 34 541.6888   4.420212  10 #> 35 596.6438   3.020177  10 #> 36 545.0114   2.797515  10 #> 37 539.1737   3.544443  10 #> 38 653.6327   2.912331  10 #> 39 558.3340   2.784114  10 #> 40 543.0584   2.821108  10 #> 41 550.2458   3.343539  10 #> 42 658.3273   2.558761  10 #> 43 763.1078   3.240377  10 #> 44 551.9963   2.613625  10 #> 45 836.0458   3.298939  10 #> 46 623.2406   2.513394  10 #> 47 604.0063   2.889308  10 #> 48 591.4975   2.995534  10 #> 49 810.2110   2.505877  10 #> 50 809.7059   4.118696  10 #> 51 810.7653   2.990658  10 #> 52 550.9305   2.516623  10 #> 53 551.7420   2.932032  10 #> 54 766.3388   3.001837  10 #> 55 619.3638   3.164984  10 #> 56 550.0019   2.687741  10 #> 57 644.7401   2.556158  10 #> 58 549.9628   2.891993  10 #> 59 550.2561   3.088832  10 #> 60 550.4276   2.720289  10 #> 61 610.2255   4.141308  10 #> 62 557.2662   2.637634  10 #> 63 588.4074   2.678695  10 #> 64 793.6482   2.560541  10 #> 65 880.8987   2.958716  10 #> 66 774.4783   2.821598  10 #> 67 611.1052   2.851840  10 #> 68 680.6619   2.542431  10 #> 69 823.5051   2.925377  10 #>  #> [[12]] #>          ts magnitudes gen #> 1  547.1440   3.270724  11 #> 2  548.9328   2.748711  11 #> 3  550.0517   2.518015  11 #> 4  548.6740   3.507378  11 #> 5  547.5638   2.610437  11 #> 6  555.8394   2.678271  11 #> 7  548.4356   2.688771  11 #> 8  547.3434   2.660843  11 #> 9  547.7465   2.600187  11 #> 10 547.0610   2.815117  11 #> 11 547.2932   2.677147  11 #> 12 547.3456   2.693324  11 #> 13 566.6322   2.659024  11 #> 14 547.9713   3.366321  11 #> 15 731.4905   2.906465  11 #> 16 551.5922   2.535114  11 #> 17 834.0716   3.100835  11 #> 18 825.3833   2.652558  11 #> 19 564.7759   2.818292  11 #> 20 555.8865   2.573005  11 #> 21 556.6683   2.592146  11 #> 22 600.1785   2.959685  11 #> 23 661.0054   3.027107  11 #> 24 836.3521   2.512509  11 #> 25 975.7715   2.794170  11 #> 26 551.8911   2.879200  11 #> 27 541.8441   3.302976  11 #> 28 543.2037   2.757062  11 #> 29 660.2803   2.568770  11 #> 30 560.4196   2.684176  11 #> 31 609.0006   5.240196  11 #> 32 554.4645   2.702803  11 #> 33 765.1498   3.185661  11 #> 34 896.3156   3.018143  11 #> 35 859.3981   3.486612  11 #> 36 809.7607   2.540317  11 #> 37 811.4116   2.677583  11 #> 38 784.6967   2.880168  11 #> 39 953.0453   2.699701  11 #> 40 612.5967   2.506656  11 #> 41 775.2200   2.576977  11 #>  #> [[13]] #>          ts magnitudes gen #> 1  547.2866   2.576412  12 #> 2  550.1709   2.591611  12 #> 3  559.3626   2.861433  12 #> 4  566.3789   2.578351  12 #> 5  838.0868   2.529142  12 #> 6  661.0310   2.520872  12 #> 7  609.1533   2.930903  12 #> 8  615.4566   3.709811  12 #> 9  611.5288   2.516999  12 #> 10 609.0355   2.923140  12 #> 11 615.0416   2.823427  12 #> 12 611.5923   2.610600  12 #> 13 611.7739   2.513619  12 #> 14 625.8307   2.663448  12 #> 15 972.1003   2.989282  12 #> 16 721.9936   2.879370  12 #> 17 611.5783   2.991422  12 #> 18 609.1491   2.757312  12 #> 19 611.3069   2.701457  12 #> 20 609.6728   3.104645  12 #> 21 609.0911   2.832892  12 #> 22 648.3978   2.976995  12 #> 23 609.2554   2.830492  12 #> 24 612.9810   2.516473  12 #> 25 609.1258   2.710617  12 #> 26 610.0625   2.613205  12 #> 27 610.7891   2.788804  12 #> 28 959.8346   3.070569  12 #> 29 609.1575   2.797997  12 #> 30 622.9639   2.968109  12 #> 31 611.2279   2.901048  12 #> 32 609.1897   2.826367  12 #> 33 878.1402   3.441157  12 #> 34 610.4576   2.722857  12 #> 35 609.3167   2.799535  12 #> 36 786.2136   2.602559  12 #>  #> [[14]] #>         ts magnitudes gen #> 1 840.7920   2.542662  13 #> 2 618.0368   4.000974  13 #> 3 609.1742   3.134793  13 #> 4 887.0513   2.760994  13 #> 5 643.2014   2.651692  13 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Number cores used n.samp exceeds max.batch. Default 1","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 2.888605 3.002863 2.835340 3.842840 2.599301 3.035144 2.722830 2.728184 #>   [9] 2.596581 2.935914 2.749685 3.531013 2.822419 2.549090 3.065709 2.582221 #>  [17] 2.798241 2.692647 3.516375 2.509978 2.575869 3.049194 3.003433 2.640765 #>  [25] 3.112359 2.764909 2.687665 2.666814 2.774692 4.362740 2.554999 2.593828 #>  [33] 2.575059 2.677027 3.705139 2.963504 2.984756 3.128454 3.655141 2.579403 #>  [41] 2.641163 2.505053 2.561958 2.657915 2.883818 2.700980 2.950009 3.056174 #>  [49] 2.972679 3.739552 2.645939 2.652396 2.971721 3.608626 2.577947 2.901994 #>  [57] 2.625347 2.518945 2.903825 3.102851 4.328770 2.623711 3.907845 3.034489 #>  [65] 2.514449 2.636327 3.872286 3.124749 2.702381 3.748776 2.913556 3.446574 #>  [73] 2.696093 2.933708 3.057970 2.702234 2.649068 3.796702 2.622463 2.576971 #>  [81] 2.812994 2.564973 2.914095 2.797610 2.648531 2.661876 2.603918 2.631510 #>  [89] 2.608659 3.253078 3.970252 2.545730 3.008203 3.119314 3.209225 3.661685 #>  [97] 3.320585 2.554205 2.557567 2.668698"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore number compute cores use","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   500.6815   2.921474 #> 2   514.7280   2.501826 #> 3   534.4467   2.590735 #> 4   521.0534   3.496716 #> 5   538.0613   2.552830 #> 6   502.6904   2.502596 #> 7   898.4928   3.312281 #> 8   515.1760   4.462513 #> 9   500.8534   2.753916 #> 10  655.1387   2.833775 #> 11  500.4203   3.148489 #> 12  500.0142   3.982232 #> 13  500.0115   2.581859 #> 14  506.0868   3.046967 #> 15  501.5921   3.229441 #> 16  502.1336   2.716967 #> 17  500.4359   3.019114 #> 18  518.1930   3.471941 #> 19  500.1168   2.663429 #> 20  521.5899   2.704248 #> 21  536.4378   3.203770 #> 22  502.9234   2.996004 #> 23  500.2446   3.098100 #> 24  523.7160   2.645879 #> 25  502.7438   2.564433 #> 26  503.3003   2.537321 #> 27  500.1176   2.614245 #> 28  771.2084   2.729828 #> 29  545.9912   2.793946 #> 30  500.8003   2.832832 #> 31  622.7021   3.353592 #> 32  500.0052   2.977206 #> 33  677.1351   2.761463 #> 34  500.5611   2.691829 #> 35  500.6714   2.906088 #> 36  560.3380   4.014843 #> 37  504.2709   2.594906 #> 38  563.0470   2.705540 #> 39  501.6370   3.267572 #> 40  538.4254   2.827220 #> 41  500.7236   3.425038 #> 42  536.3187   2.731827 #> 43  515.7701   2.607337 #> 44  524.8009   2.500763 #> 45  501.0724   3.542033 #> 46  500.4005   2.558087 #> 47  500.5444   2.502825 #> 48  503.9211   3.431772 #> 49  500.9847   2.519700 #> 50  668.0389   2.536216 #> 51  503.0427   2.849532 #> 52  501.0521   2.703832 #> 53  608.2209   2.645896 #> 54  501.2428   3.103260 #> 55  500.0403   2.673741 #> 56  500.3698   2.509600 #> 57  502.4372   3.565769 #> 58  502.1205   3.694791 #> 59  500.9789   3.658313 #> 60  511.1665   3.525189 #> 61  500.4379   3.016955 #> 62  500.0103   3.054233 #> 63  500.0922   2.764953 #> 64  500.2790   2.603165 #> 65  828.3634   2.783765 #> 66  503.2009   2.688007 #> 67  516.1793   2.501359 #> 68  504.0891   2.795993 #> 69  500.2082   2.829348 #> 70  502.5891   2.804603 #> 71  502.7946   2.874665 #> 72  653.4600   3.104989 #> 73  500.4506   2.975621 #> 74  713.1125   2.887349 #> 75  501.1132   2.852784 #> 76  561.7052   2.583526 #> 77  500.0249   2.620956 #> 78  555.4298   2.565926 #> 79  503.1404   2.690295 #> 80  500.7103   2.534350 #> 81  500.3815   2.675409 #> 82  536.0221   3.685873 #> 83  537.1483   2.620293 #> 84  500.6632   3.482123 #> 85  500.2331   2.640815 #> 86  575.3068   3.639952 #> 87  500.3485   3.178555 #> 88  500.1322   3.069563 #> 89  504.5022   2.879631 #> 90  500.7628   3.147392 #> 91  535.0693   3.229414 #> 92  500.3254   2.713429 #> 93  500.0320   2.721440 #> 94  500.7650   2.810659 #> 95  637.4107   3.039809 #> 96  782.5138   3.082015 #> 97  500.0149   2.635602 #> 98  500.2939   2.634537 #> 99  501.1625   2.914389 #> 100 500.0658   3.526511 #> 101 507.4710   3.093360 #> 102 751.4487   3.030807 #> 103 501.0336   2.709919 #> 104 500.0757   2.638795 #> 105 559.9542   3.039330 #> 106 521.4491   3.006095 #> 107 502.3141   3.104896 #> 108 846.7674   2.622222 #> 109 501.6804   3.053238 #> 110 522.8720   3.298920 #> 111 502.5685   3.738651 #> 112 502.9157   2.890755 #> 113 515.5078   2.547809 #> 114 500.0142   2.879600 #> 115 500.7718   2.888969 #> 116 500.2015   3.132746 #> 117 502.2312   2.696508 #> 118 503.7029   3.935497 #> 119 500.2025   4.311541 #> 120 585.7973   3.070901 #> 121 500.2271   3.215256 #> 122 540.0272   2.767602 #> 123 510.2964   2.650764 #> 124 836.6378   3.206856 #> 125 884.5846   2.878449 #> 126 586.8884   2.517006 #> 127 569.0081   3.184169 #> 128 501.5405   2.712600 #> 129 530.0971   4.186403 #> 130 500.5209   3.315630 #> 131 500.8014   2.504785 #> 132 805.1998   2.866220 #> 133 501.0003   3.633097 #> 134 570.6142   3.064930 #> 135 500.0225   2.509176 #> 136 500.0164   3.330341 #> 137 500.3116   2.582873 #> 138 500.6398   2.641386 #> 139 643.6776   2.543537 #> 140 504.3301   3.475729 #> 141 500.5898   2.516479 #> 142 505.1651   3.071877 #> 143 501.5265   2.596342 #> 144 503.0838   4.589230 #> 145 501.1585   2.670363 #> 146 509.5947   2.686351 #> 147 533.8567   2.732791 #> 148 501.7292   2.631093 #> 149 500.9639   2.545389 #> 150 501.5075   3.015435 #> 151 500.3469   3.905692 #> 152 500.6020   3.584794 #> 153 541.8376   3.317952 #> 154 511.2669   2.629487 #> 155 500.0847   3.326489 #> 156 501.7298   2.591680 #> 157 500.3124   2.545759 #> 158 505.5957   2.665303 #> 159 500.9483   2.984886 #> 160 500.2257   2.594963 #> 161 500.2948   4.545400 #> 162 500.3427   2.745385 #> 163 500.6227   3.518063 #> 164 501.3773   2.694065 #> 165 540.5933   3.100106 #> 166 504.6006   2.779658 #> 167 501.1229   3.208299 #> 168 559.2974   2.541475 #> 169 500.2368   2.553048 #> 170 505.3906   3.134213 #> 171 500.0282   3.600208 #> 172 764.1974   2.544073 #> 173 503.6855   2.570412 #> 174 510.2718   2.669327 #> 175 500.2470   2.640981 #> 176 522.0902   2.632670 #> 177 502.6634   2.813817 #> 178 500.5619   3.250888 #> 179 517.5180   2.822997 #> 180 503.1283   2.592281 #> 181 579.9588   2.739661 #> 182 501.1170   3.179278 #> 183 500.0314   2.822590 #> 184 502.9624   3.723353 #> 185 500.1375   2.519545 #> 186 531.6250   2.561783 #> 187 501.0224   2.604433 #> 188 500.1158   3.079196 #> 189 531.3997   2.589724 #> 190 500.1551   2.715243 #> 191 677.7505   2.511877 #> 192 500.6717   2.701257 #> 193 600.2906   3.056371 #> 194 539.3918   2.964822 #> 195 503.4144   2.625267 #> 196 500.1403   2.896362 #> 197 559.0184   3.481495 #> 198 500.0086   2.585255 #> 199 501.0789   3.427137 #> 200 647.3129   2.615669 #> 201 583.9105   2.909274 #> 202 879.4629   2.532475 #> 203 500.0423   2.833695 #> 204 500.0206   2.548082 #> 205 501.0856   2.527087 #> 206 503.6021   2.583219 #> 207 500.4443   2.912744 #> 208 509.5023   2.814739 #> 209 500.0190   2.988996 #> 210 500.1056   2.847988 #> 211 500.0514   2.699795 #> 212 754.2124   3.029775 #> 213 536.4095   3.541945 #> 214 500.0257   2.778990 #> 215 500.0178   2.721106 #> 216 885.7425   2.650298 #> 217 500.1951   2.544796 #> 218 577.1195   3.229606 #> 219 587.6650   2.610871 #> 220 503.3326   2.922156 #> 221 500.3186   4.027898 #> 222 967.1651   2.876243 #> 223 704.2354   2.726179 #> 224 624.4241   2.631181 #> 225 539.6552   2.509361 #> 226 614.2507   4.307649 #> 227 558.8269   3.705460 #> 228 500.0262   4.581959 #> 229 500.1444   2.614211 #> 230 500.3688   3.098993 #> 231 506.2129   4.120681 #> 232 662.4010   3.469492 #> 233 500.4740   3.514622 #> 234 501.3266   2.695676 #> 235 502.1570   2.745894 #> 236 508.2048   2.703079 #> 237 696.2121   2.504329 #> 238 655.3025   3.662605 #> 239 500.0056   2.554170 #> 240 680.7778   2.667507 #> 241 500.1342   2.644506 #> 242 677.2904   2.679563 #> 243 502.1934   2.609359 #> 244 500.0203   2.860726 #> 245 546.1614   2.995289 #> 246 518.8884   2.710805 #> 247 500.1873   2.592385 #> 248 500.2570   2.557698 #> 249 882.5787   2.782384 #> 250 500.2916   2.789128 #> 251 565.4549   2.544908 #> 252 502.9840   2.650241 #> 253 506.3909   3.187637 #> 254 505.3909   3.267777 #> 255 501.3473   2.841704 #> 256 630.1625   2.713354 #> 257 501.3826   2.905831 #> 258 507.2719   2.508611 #> 259 597.6465   2.642292 #> 260 500.6723   2.974361 #> 261 503.2923   2.555597 #> 262 672.9516   2.586897 #> 263 500.0213   2.693291 #> 264 507.8387   2.632669 #> 265 500.1369   2.531065 #> 266 502.5348   4.265240 #> 267 689.8562   3.528450 #> 268 500.0322   3.367197 #> 269 501.5448   2.633562 #> 270 815.4179   2.914242 #> 271 646.4991   2.971769 #> 272 506.3485   3.150917 #> 273 546.1793   2.822518 #> 274 500.5791   3.328841 #> 275 500.0006   2.551673 #> 276 500.5768   3.529843 #> 277 501.2998   2.602738 #> 278 526.0545   3.343013 #> 279 501.9574   3.057770 #> 280 650.4892   2.709876 #> 281 503.8841   2.564157 #> 282 502.4309   2.516678 #> 283 907.4377   3.368649 #> 284 505.3051   2.723061 #> 285 500.0440   3.571903 #> 286 500.2043   2.961465 #> 287 503.0392   2.816416 #> 288 525.0224   2.712500 #> 289 503.2788   2.844355 #> 290 500.0706   2.675394 #> 291 500.4048   2.762537 #> 292 500.1191   3.115388 #> 293 500.8143   3.405020 #> 294 511.2897   2.527414 #> 295 500.2495   2.876334 #> 296 500.0594   3.276980 #> 297 647.2696   3.167954 #> 298 502.4725   2.636064 #> 299 500.6979   2.684773 #> 300 500.1513   2.807564 #> 301 510.8182   2.578000 #> 302 696.6372   2.723620 #> 303 504.3411   2.516187 #> 304 501.4041   2.682421 #> 305 906.6034   2.685244 #> 306 500.0496   3.098638 #> 307 500.0844   2.735105 #> 308 500.2480   3.086204 #> 309 523.9081   2.565900 #> 310 508.8048   2.682469 #> 311 683.8439   2.554710 #> 312 500.0059   2.896010 #> 313 532.9238   2.535512 #> 314 667.6950   3.040515 #> 315 509.3633   2.882644 #> 316 500.0121   2.978968 #> 317 504.2004   2.524069 #> 318 503.7599   3.111105 #> 319 500.0151   3.369083 #> 320 500.2492   2.708185 #> 321 500.5227   2.657720 #> 322 501.2781   2.529907 #> 323 500.0164   2.634735 #> 324 705.4421   2.718307 #> 325 598.3121   2.879965 #> 326 518.4708   2.750401 #> 327 500.0409   2.760525 #> 328 531.9650   2.507865 #> 329 896.8133   2.566771 #> 330 500.2816   2.614642 #> 331 500.6887   2.536900 #> 332 556.7138   2.515512 #> 333 500.3328   2.986161 #> 334 747.6446   2.987316 #> 335 576.5884   2.566221 #> 336 501.2385   2.515094 #> 337 510.1869   2.850136 #> 338 500.1024   2.520754 #> 339 521.5799   2.547836 #> 340 536.9088   2.863650 #> 341 510.7413   3.661857 #> 342 500.8137   2.509242 #> 343 659.2392   2.819469 #> 344 507.7779   2.909450 #> 345 546.2750   3.566313 #> 346 501.3251   2.794982 #> 347 500.2062   2.554285 #> 348 504.1223   3.153091 #> 349 500.4118   2.514687 #> 350 529.1346   2.531306 #> 351 507.2322   2.626266 #> 352 535.8935   2.676662 #> 353 501.8903   2.850166 #> 354 500.5181   2.968284 #> 355 500.1626   3.767828 #> 356 528.5282   4.209585 #> 357 586.6867   2.687987 #> 358 500.1450   2.894808 #> 359 536.5182   3.076448 #> 360 548.4997   3.308654 #> 361 500.3293   2.551557 #> 362 570.2201   2.727774 #> 363 500.2932   4.189227 #> 364 500.1320   2.864979 #> 365 647.5530   2.714676 #> 366 501.2561   2.786352 #> 367 639.5813   2.860284 #> 368 500.5166   2.667392 #> 369 568.7459   2.664232 #> 370 504.6247   2.801208 #> 371 500.0738   2.782080 #> 372 508.6022   2.935242 #> 373 500.0929   2.977518 #> 374 884.2949   4.082337 #> 375 500.0233   4.063983 #> 376 982.9187   2.544630 #> 377 502.9394   3.158340 #> 378 508.6122   3.022515 #> 379 500.4088   6.407124 #> 380 500.0656   2.766395 #> 381 500.0086   2.739667 #> 382 541.9766   2.861018 #> 383 885.7372   3.566320 #> 384 503.8778   3.182208 #> 385 880.6256   2.549922 #> 386 500.4531   2.706443 #> 387 500.1437   3.627108 #> 388 501.9960   2.504349 #> 389 535.9160   3.004127 #> 390 563.0141   2.589384 #> 391 515.0442   2.877976 #> 392 590.4227   2.752207 #> 393 500.6847   3.017281 #> 394 538.2864   2.739519 #> 395 500.0091   2.588880 #> 396 509.7963   2.593585 #> 397 507.7223   3.352639 #> 398 820.5065   2.756810 #> 399 522.9391   2.549358 #> 400 520.4602   2.769126 #> 401 671.9885   2.534753 #> 402 500.4933   3.208510 #> 403 501.6832   2.704624 #> 404 509.3120   2.584280 #> 405 500.3779   4.396727 #> 406 501.0673   3.227536 #> 407 501.2092   2.796249 #> 408 526.6004   4.031074 #> 409 529.0396   3.266141 #> 410 500.1574   3.064598 #> 411 522.2897   2.727457 #> 412 500.6891   3.074205 #> 413 508.5144   3.054008 #> 414 500.2714   3.445746 #> 415 500.0229   2.557307 #> 416 504.2033   3.234194 #> 417 691.2174   2.622720 #> 418 523.1036   2.662070 #> 419 500.3921   2.708965 #> 420 500.5305   2.539700 #> 421 535.9706   3.021939 #> 422 728.9232   2.866384 #> 423 505.5721   2.537754 #> 424 675.3854   3.502144 #> 425 504.4675   2.506510 #> 426 526.5520   2.556706 #> 427 508.0108   2.532045 #> 428 500.5556   4.048772 #> 429 500.1415   2.535391 #> 430 501.9951   2.940325 #> 431 500.0458   2.718163 #> 432 500.4171   2.818280 #> 433 501.4875   2.882431 #> 434 510.7982   3.161749 #> 435 504.5113   3.102837 #> 436 579.9463   2.675512 #> 437 550.5171   4.268309 #> 438 500.0250   2.721533 #> 439 539.9365   2.526355 #> 440 508.4662   2.509325 #> 441 500.5593   2.966946 #> 442 500.2014   3.040396 #> 443 504.5034   2.663703 #> 444 561.9013   3.247340 #> 445 500.8785   2.541240 #> 446 582.8244   2.958420 #> 447 741.2623   2.897942 #> 448 513.0507   3.009636 #> 449 503.0564   3.735706 #> 450 538.2556   2.683657 #> 451 547.4150   3.040796 #> 452 502.7343   3.106129 #> 453 500.0722   2.594186 #> 454 542.1772   3.318613 #> 455 522.3104   2.629176 #> 456 500.0176   2.871420 #> 457 501.6098   2.596086 #> 458 500.5326   3.228339 #> 459 506.9134   3.098199 #> 460 500.2452   2.783973 #> 461 500.3881   3.512311 #> 462 501.0714   4.026255 #> 463 532.3333   2.832634 #> 464 500.0958   2.667036 #> 465 662.7790   3.089476 #> 466 509.7555   2.883621 #> 467 797.6303   2.803572 #> 468 508.5514   2.676861 #> 469 513.1354   2.746638 #> 470 500.2545   2.597983 #> 471 643.6257   2.500838 #> 472 894.1115   2.884842 #> 473 503.9932   3.066673 #> 474 521.2167   3.113621 #> 475 501.0020   2.977955 #> 476 501.5206   2.739961 #> 477 500.4916   2.791074 #> 478 543.4933   2.500372 #> 479 503.5354   3.062373 #> 480 501.3854   3.546318 #> 481 503.6821   2.505492 #> 482 501.3695   2.622825 #> 483 500.3040   3.669996 #> 484 567.4974   2.792044 #> 485 513.7372   2.593763 #> 486 509.2961   4.752530 #> 487 500.8490   2.812564 #> 488 876.9377   2.592775 #> 489 500.9633   2.587087 #> 490 677.2884   2.773300 #> 491 810.5014   2.957841 #> 492 500.3703   2.554920 #> 493 500.6772   2.781313 #> 494 531.1165   2.736990 #> 495 502.1957   2.801763 #> 496 500.0075   3.052222 #> 497 509.4767   2.736233 #> 498 546.0015   3.814956 #> 499 524.9258   3.013505 #> 500 511.9490   2.854272 #> 501 500.3366   3.020474 #> 502 920.7515   2.660418 #> 503 509.2588   2.580681 #> 504 507.9113   3.233162 #> 505 500.0040   4.859557 #> 506 764.5310   2.599485 #> 507 502.5664   3.047350 #> 508 509.5866   3.780633 #> 509 526.3249   3.898007 #> 510 508.1539   4.112351 #> 511 500.0742   2.751630 #> 512 500.0205   2.982671 #> 513 503.1401   3.806370 #> 514 502.9250   2.689811 #> 515 500.0788   2.867813 #> 516 583.6207   2.732010 #> 517 501.3326   2.551768 #> 518 518.8858   2.530035 #> 519 532.9022   2.749564 #> 520 508.3183   2.715783 #> 521 504.8948   2.720036 #> 522 657.9168   3.908637 #> 523 501.4622   2.545343 #> 524 555.2574   3.602887 #> 525 516.5469   2.506940 #> 526 500.2675   2.659394 #> 527 524.4975   2.764186 #> 528 589.0034   2.561285 #> 529 545.3979   2.991394 #> 530 770.1378   2.785849 #> 531 502.9541   2.504410 #> 532 500.0850   3.342885 #> 533 500.2007   4.117333 #> 534 705.6954   2.773940 #> 535 500.9166   3.488933 #> 536 515.1794   2.696944 #> 537 501.0620   2.517779 #> 538 500.5344   3.104579 #> 539 611.1638   3.937359 #> 540 595.4227   2.821227 #> 541 500.9578   2.714472 #> 542 510.9425   2.558683 #> 543 500.2024   3.657548 #> 544 500.3647   3.276326 #> 545 540.5218   2.867964 #> 546 544.4847   2.632197 #> 547 503.8647   2.589872 #> 548 500.2145   2.931679 #> 549 500.0132   2.914613 #> 550 502.0630   2.616496 #> 551 512.2340   2.759979 #> 552 534.3416   3.481875 #> 553 544.5017   2.623415 #> 554 500.2428   3.319626 #> 555 500.0393   2.819679 #> 556 500.2136   2.596968 #> 557 503.9399   3.464861 #> 558 500.0121   2.782182 #> 559 502.8309   4.348380 #> 560 501.3793   3.273608 #> 561 500.4836   3.025255 #> 562 502.0269   2.803564 #> 563 500.4534   2.660502 #> 564 500.0213   3.833355 #> 565 500.0529   2.906117 #> 566 500.7175   2.607223 #> 567 501.0155   2.751859 #> 568 579.0235   2.633161 #> 569 500.1113   3.091352 #> 570 501.5962   2.604867 #> 571 516.6633   2.792854 #> 572 500.2107   2.501877 #> 573 500.9854   2.838455 #> 574 500.5357   3.374616 #> 575 507.0403   2.500354 #> 576 938.9211   2.696918 #> 577 505.0226   2.851393 #> 578 500.8081   2.897479 #> 579 500.1352   3.101298 #> 580 697.0752   2.917948 #> 581 530.2008   3.027365 #> 582 527.8374   2.728039 #> 583 622.9851   3.114453 #> 584 510.4043   2.750902 #> 585 505.1900   2.881034 #> 586 501.0135   2.543644 #> 587 502.1533   3.805883 #> 588 511.5707   3.180775 #> 589 502.4217   2.790908 #> 590 503.5258   3.331578 #> 591 500.4166   2.793309 #> 592 501.5442   2.697461 #> 593 500.0054   2.577959 #> 594 500.0220   3.097571 #> 595 500.0673   2.543109 #> 596 504.6083   2.961099 #> 597 500.3480   3.177900 #> 598 500.0125   4.017028 #> 599 606.0674   2.992009 #> 600 540.9439   3.176524 #> 601 505.5796   2.681407 #> 602 517.8103   2.719132 #> 603 508.5893   2.883809 #> 604 500.3068   3.814135 #> 605 503.3440   2.601232 #> 606 505.7128   2.833406 #> 607 501.8262   2.540299 #> 608 558.4718   2.946756 #> 609 500.1796   3.992019 #> 610 519.1677   2.677363 #> 611 500.8627   2.709107 #> 612 513.6543   2.666667 #> 613 504.2890   3.292830 #> 614 824.7491   2.818601 #> 615 500.1250   2.731777 #> 616 897.0359   2.663851 #> 617 500.2704   3.445462 #> 618 532.4992   2.766224 #> 619 723.3869   2.614892 #> 620 505.6368   2.651000 #> 621 509.4128   2.729588 #> 622 507.1030   2.522049 #> 623 504.4987   2.519514 #> 624 519.3580   3.292397 #> 625 500.4916   2.709861 #> 626 500.2166   2.578002 #> 627 500.3605   2.636054 #> 628 500.4377   2.780327 #> 629 502.3629   2.602583 #> 630 500.3136   2.803169 #> 631 500.8364   2.524266 #> 632 501.6961   2.573766 #> 633 500.3170   3.037998 #> 634 502.6031   2.801521 #> 635 509.2897   2.500471 #> 636 777.0879   2.530329 #> 637 840.3221   2.594822 #> 638 524.4772   2.745136 #> 639 500.0197   2.907226 #> 640 500.0718   2.592943 #> 641 502.5676   2.598555 #> 642 989.1249   2.987265 #> 643 514.2915   2.599107 #> 644 623.3053   2.778576 #> 645 522.3359   2.792173 #> 646 503.9171   2.920666 #> 647 528.1427   3.078347 #> 648 507.2935   2.852438 #> 649 506.5114   2.738430 #> 650 525.0267   3.558977 #> 651 595.9809   2.523366 #> 652 507.7532   3.487611 #> 653 500.6924   2.733066 #> 654 500.0107   2.506193 #> 655 828.5272   3.290323 #> 656 815.6785   2.525641 #> 657 501.3730   3.752445 #> 658 548.8907   2.506620 #> 659 500.4198   2.920752 #> 660 589.9524   2.578569 #> 661 501.7774   3.384503 #> 662 698.1934   3.152163 #> 663 504.3135   3.032013 #> 664 501.2626   2.539797 #> 665 600.3870   2.915548 #> 666 500.2674   2.660204 #> 667 532.3674   2.703167 #> 668 500.0724   2.533211 #> 669 793.5196   2.678039 #> 670 507.1008   2.995872 #> 671 723.3029   2.541989 #> 672 732.9262   2.969254 #> 673 500.2749   2.693794 #> 674 500.2778   2.643919 #> 675 504.2671   2.967050 #> 676 500.1990   2.556194 #> 677 511.9812   2.587016 #> 678 625.3903   5.262507 #> 679 500.4035   2.669141 #> 680 500.3886   3.662836 #> 681 500.0427   2.661233 #> 682 500.8235   2.984606 #> 683 508.1700   3.261409 #> 684 551.5775   2.906421 #> 685 501.0505   2.797714 #> 686 500.2567   2.704359 #> 687 500.0260   3.287380 #> 688 505.3011   2.702811 #> 689 871.4061   3.922756 #> 690 519.4253   2.788528 #> 691 505.3498   3.377708 #> 692 500.2863   2.638726 #> 693 501.9645   2.523563 #> 694 514.9445   2.664053 #> 695 512.5044   2.597448 #> 696 500.4285   3.016434 #> 697 501.4112   2.616134 #> 698 505.9377   2.807819 #> 699 516.4581   3.642873 #> 700 500.8341   2.896723 #> 701 500.9813   2.579831 #> 702 500.2121   3.173885 #> 703 503.5135   2.959308 #> 704 501.5096   4.656340 #> 705 521.3010   2.740944 #> 706 521.4594   2.504836 #> 707 501.1719   4.303717 #> 708 500.0092   3.063759 #> 709 500.4464   2.724537 #> 710 501.2734   2.656332 #> 711 513.5319   2.804024 #> 712 862.6804   2.619614 #> 713 500.0446   2.554850 #> 714 744.7298   2.909690 #> 715 500.2575   2.954399 #> 716 536.7448   3.324787 #> 717 574.5497   2.598709 #> 718 500.0024   2.619691 #> 719 500.7226   3.225452 #> 720 501.6393   2.798339 #> 721 521.6105   2.516920 #> 722 513.6829   2.756598 #> 723 501.0515   2.526299 #> 724 615.7172   2.591654 #> 725 500.6462   3.044013 #> 726 500.6104   2.795978 #> 727 834.1640   2.635888 #> 728 583.9257   2.975740 #> 729 797.0606   2.811561 #> 730 519.4723   2.962358 #> 731 503.8135   2.637425 #> 732 556.6323   3.040003 #> 733 500.1993   2.549898 #> 734 500.3495   2.813742 #> 735 500.0745   2.770313 #> 736 521.1440   2.705822 #> 737 505.1602   3.167232 #> 738 502.4097   3.479939 #> 739 500.3120   2.629364 #> 740 612.2997   3.095766 #> 741 575.6512   2.699455 #> 742 502.3588   2.732241 #> 743 500.1970   2.810612 #> 744 513.9211   3.664859 #> 745 504.0050   2.543816 #> 746 504.2829   3.070292 #> 747 517.3262   3.005065 #> 748 500.1061   2.563484 #> 749 500.9074   2.542473 #> 750 501.5873   2.647096 #> 751 508.4211   4.138860 #> 752 683.1295   2.735097 #> 753 631.1736   2.628219 #> 754 500.5503   2.567429 #> 755 596.3217   2.805037 #> 756 500.1034   2.549062 #> 757 500.0675   2.793720 #> 758 500.0278   3.032880 #> 759 502.6623   2.524838 #> 760 501.7815   2.783921 #> 761 500.8003   2.992951 #> 762 662.4116   2.791183 #> 763 722.8231   2.707270 #> 764 525.8826   3.163450 #> 765 633.3237   2.749479 #> 766 502.4446   2.716734 #> 767 500.9611   2.761115 #> 768 501.7228   3.118981 #> 769 505.8755   3.003973 #> 770 647.0687   2.769083 #> 771 538.9106   2.827206 #> 772 502.1892   2.671317 #> 773 514.3559   2.519186 #> 774 684.9765   2.797813 #> 775 500.2914   2.620438 #> 776 503.8064   2.680459 #> 777 812.4751   2.683507 #> 778 500.0103   2.754294 #> 779 500.5498   2.511526 #> 780 521.3312   3.365148 #> 781 704.9577   2.865640 #> 782 502.2213   3.001452 #> 783 821.7307   2.654739 #> 784 500.7414   3.235767 #> 785 500.1135   4.152979 #> 786 531.3124   2.782437 #> 787 500.3552   2.739369 #> 788 689.0804   2.594561 #> 789 501.4744   2.504261 #> 790 502.6212   2.778516 #> 791 501.1025   3.074841 #> 792 504.1361   2.777848 #> 793 501.3045   2.618838 #> 794 500.1240   2.507051 #> 795 500.0179   2.931611 #> 796 543.8635   2.504138 #> 797 500.3859   2.623096 #> 798 500.0278   2.509725 #> 799 501.6354   3.525821 #> 800 505.9483   3.311313 #> 801 709.1310   2.577349 #> 802 941.6546   4.386597 #> 803 543.6980   2.734309 #> 804 504.7898   3.185942 #> 805 588.1292   2.833561 #> 806 685.4816   2.884233 #> 807 505.9898   2.593588 #> 808 503.3795   3.629459 #> 809 500.0964   3.036387 #> 810 963.1463   2.790202 #> 811 501.0474   2.509231 #> 812 500.3298   3.534956 #> 813 500.2851   2.956798 #> 814 504.9829   2.768180 #> 815 546.1181   3.603122 #> 816 501.9877   2.502387 #> 817 515.3976   3.013806 #> 818 501.2512   3.198253 #> 819 613.8407   4.011163 #> 820 572.8095   2.511507 #> 821 537.0395   2.944911 #> 822 500.5113   2.539259 #> 823 659.0363   2.916555 #> 824 501.7443   2.547175 #> 825 582.8288   2.636024 #> 826 500.4600   2.795452 #> 827 518.4650   3.816609 #> 828 500.0964   2.539220 #> 829 528.2654   2.657523 #> 830 521.0394   2.596787 #> 831 500.5121   2.507026 #> 832 500.0625   2.580378 #> 833 540.6686   3.863431 #> 834 500.3078   2.879377 #> 835 502.6832   2.708688 #> 836 500.3094   2.990180 #> 837 508.4077   2.655536 #> 838 515.1993   2.752934 #> 839 538.2338   4.390298 #> 840 648.4376   2.943614 #> 841 500.2354   2.646890 #> 842 541.9823   2.831603 #> 843 507.2693   2.643305 #> 844 500.0211   2.566277 #> 845 626.7766   3.139088 #> 846 503.7847   2.548564 #> 847 502.2056   2.926159 #> 848 500.9620   2.635731 #> 849 501.3178   2.505339 #> 850 502.8878   2.668682 #> 851 521.0993   2.730821 #> 852 883.4330   2.529878 #> 853 500.4819   3.470170 #> 854 502.4002   2.989677 #> 855 596.1047   2.695646 #> 856 500.4883   2.815261 #> 857 500.0598   2.849397 #> 858 503.4964   3.288945 #> 859 500.4725   3.394218 #> 860 500.3317   2.803567 #> 861 501.0454   2.682441 #> 862 513.4129   2.905877 #> 863 506.1414   2.721641 #> 864 502.8008   2.697203 #> 865 500.2197   3.257713 #> 866 503.9301   2.563200 #> 867 505.7468   2.531009 #> 868 522.1427   2.529724 #> 869 500.0869   3.376125 #> 870 500.3135   2.779308 #> 871 500.0263   3.682991 #> 872 500.4582   2.737815 #> 873 647.6850   2.513744 #> 874 500.2929   3.359791 #> 875 500.0606   2.593913 #> 876 725.8158   2.714771 #> 877 528.5011   2.628142 #> 878 714.8813   2.696795 #> 879 500.0303   2.985981 #> 880 500.5012   3.972657 #> 881 500.3190   3.385520 #> 882 779.9610   2.844320 #> 883 500.0580   3.423148 #> 884 500.9155   2.977307 #> 885 502.0677   2.926353 #> 886 613.1620   2.576626 #> 887 500.3759   2.523926 #> 888 502.3372   3.082699 #> 889 500.5502   3.125629 #> 890 500.0209   2.754154 #> 891 517.2588   3.458853 #> 892 531.6585   2.520458 #> 893 500.3789   2.554165 #> 894 790.8629   2.697702 #> 895 503.0146   3.112148 #> 896 507.4852   2.796223 #> 897 500.1289   3.421127 #> 898 959.2616   2.568989 #> 899 500.8925   2.505132 #> 900 504.0159   2.536314 #> 901 500.0007   2.646323 #> 902 514.5017   2.533903 #> 903 500.1316   2.584848 #> 904 500.1025   2.611018 #> 905 500.1823   3.331289 #> 906 527.6574   2.502258 #> 907 502.2690   2.526196 #> 908 524.2783   3.703332 #> 909 500.4818   2.544896 #> 910 500.8591   3.153065 #> 911 505.9764   3.260041 #> 912 506.7878   3.884094 #> 913 504.0571   2.520761 #> 914 639.9223   2.919756 #> 915 500.1852   2.582376 #> 916 501.2262   2.628772 #> 917 502.6683   2.788113 #> 918 500.0790   2.883945 #> 919 500.4997   3.222794 #> 920 500.0163   2.756772 #> 921 845.1128   2.943561 #> 922 500.8901   2.576908 #> 923 500.2819   3.484085 #> 924 531.5078   2.605445 #> 925 500.0686   2.547929 #> 926 500.0236   2.576108"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
