[{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load Packages","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"library(ETAS.inlabru) library(ggplot2)  library(rnaturalearth) library(terra) library(sf) library(ggspatial) library(rnaturalearthdata)  library(lubridate)  ## This is just the EPSG equivalent of WGS84 crs_wgs84 <- st_crs('EPSG:4326')"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"load-an-earthquake-catalogue","dir":"Articles","previous_headings":"","what":"Load an earthquake catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. subset (see data-raw/horus.R subset created) information Horus catalogue can loaded using data reports earthquake time string (time_string), longitude (lon) latitude (lat) epicentre, depth kilometres (depth), moment magnitude (M).","code":"# load ISIDE catalogue data(horus, package = \"ETAS.inlabru\")  # transform time string in Date object horus$time_date <- as.POSIXct(   horus$time_string,   format = \"%Y-%m-%dT%H:%M:%OS\" )  head(horus) #>           time_string     lon     lat depth    M           time_date #> 1 1960-01-03T20:19:34 15.3000 39.3000   290 6.34 1960-01-03 20:19:34 #> 2 1960-01-04T09:20:00 13.1667 43.1333     0 3.94 1960-01-04 09:20:00 #> 3 1960-01-06T15:17:34 12.7000 46.4833     4 4.69 1960-01-06 15:17:34 #> 4 1960-01-06T15:20:53 12.7000 46.4667     0 4.14 1960-01-06 15:20:53 #> 5 1960-01-06T15:31:00 12.7500 46.4333     0 3.00 1960-01-06 15:31:00 #> 6 1960-01-06T15:45:00 12.7500 46.4333     0 3.00 1960-01-06 15:45:00  df_cat <- horus  # add event number df_cat$event_num <- seq.int(nrow(df_cat))  # sf version of the catalogue df_cat.sf<- st_as_sf(df_cat,                      coords = c(\"lon\", \"lat\"),                      crs = crs_wgs84)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"get-map-and-extract-crs-for-the-map","dir":"Articles","previous_headings":"","what":"Get map and extract crs for the map","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"italy.map <- ne_countries(country = 'Italy', returnclass = \"sf\", scale = 'medium') italy.crs <- crs(italy.map) print(italy.crs) #> [1] \"BOUNDCRS[\\n    SOURCECRS[\\n        GEOGCRS[\\\"unknown\\\",\\n            DATUM[\\\"World Geodetic System 1984\\\",\\n                ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                    LENGTHUNIT[\\\"metre\\\",1]],\\n                ID[\\\"EPSG\\\",6326]],\\n            PRIMEM[\\\"Greenwich\\\",0,\\n                ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n                ID[\\\"EPSG\\\",8901]],\\n            CS[ellipsoidal,2],\\n                AXIS[\\\"longitude\\\",east,\\n                    ORDER[1],\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                        ID[\\\"EPSG\\\",9122]]],\\n                AXIS[\\\"latitude\\\",north,\\n                    ORDER[2],\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                        ID[\\\"EPSG\\\",9122]]]]],\\n    TARGETCRS[\\n        GEOGCRS[\\\"WGS 84\\\",\\n            DATUM[\\\"World Geodetic System 1984\\\",\\n                ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                    LENGTHUNIT[\\\"metre\\\",1]]],\\n            PRIMEM[\\\"Greenwich\\\",0,\\n                ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n            CS[ellipsoidal,2],\\n                AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n                    ORDER[1],\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n                AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n                    ORDER[2],\\n                    ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n            ID[\\\"EPSG\\\",4326]]],\\n    ABRIDGEDTRANSFORMATION[\\\"Transformation from unknown to WGS84\\\",\\n        METHOD[\\\"Geocentric translations (geog2D domain)\\\",\\n            ID[\\\"EPSG\\\",9603]],\\n        PARAMETER[\\\"X-axis translation\\\",0,\\n            ID[\\\"EPSG\\\",8605]],\\n        PARAMETER[\\\"Y-axis translation\\\",0,\\n            ID[\\\"EPSG\\\",8606]],\\n        PARAMETER[\\\"Z-axis translation\\\",0,\\n            ID[\\\"EPSG\\\",8607]]]]\"  ggplot() + geom_sf(data = italy.map) + theme_bw()"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"histogram-of-event-depths","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Histogram of event depths","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"hist(df_cat$depth, breaks=seq(650,-5,-1), xlim=c(-5,40), main=\"Histogram of depths\" )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"plot-of-event-magnitudes-using-natural-time","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Plot of event magnitudes using natural time","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"ggplot(df_cat, aes(x=event_num, y=M))  + geom_point(size = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"plot-of-event-magnitudes-using-date-time","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Plot of event magnitudes using date-time","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"ggplot(df_cat, aes(x=time_date, y=M)) +    geom_point(size = 0.1) +   ggtitle(\"Horus catalogue magnitude time series\") #> Warning: Removed 1 rows containing missing values (`geom_point()`). # Filtered for M>4 ggplot(df_cat[df_cat$M>4,], aes(x=time_date, y=M)) +    geom_point(size = 0.1) +   ggtitle(\"Whole catalogue magnitude timeseries for M>4\") #> Warning: Removed 1 rows containing missing values (`geom_point()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"frequency-magnitude-analysis-for-horus-catalogue","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Frequency-magnitude analysis for Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"minMag <- 3 maxMag <- max(df_cat$M)  mags <- df_cat[df_cat$M>minMag,]$M  tmp <- hist(mags, breaks=seq(minMag-0.05,maxMag+0.1,0.1), plot=FALSE)  N.counts <- length( tmp$counts) tmp$cumulativeCounts <- cumsum(tmp$counts[N.counts:1])[N.counts:1]  m.min <- 4 bin_m.min <- which(tmp$mids==m.min) freq_m.min <- tmp$counts[bin_m.min] b <- 1.1 x <- tmp$mids y <- freq_m.min * 10^(-b*(x-m.min)) y.cum <- tmp$cumulativeCounts[bin_m.min] * 10^(-b*(x-m.min))  ggplot() +   geom_point( aes(x=tmp$mids, y=tmp$counts) ) +   geom_point( aes(x=tmp$mids, y=tmp$cumulativeCounts) , color='red', pch=\"+\", size=2) +   scale_y_log10() +   ggtitle(paste(\"Frequency-magnitude plot with arbitary GR dist: b =\", b)) +   xlab(\"Magnitude\") +   ylab(\"log10(Frequency)\") +   geom_line(aes(x=x, y=y)) +   geom_line(aes(x=x, y=y.cum), color='red') +   geom_vline( xintercept=m.min, lty=2 ) #> Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"b-value-stability-plot-for-the-events-in-the-horis-catalogue","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"b-value stability plot for the events in the Horis catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"minMag <- 0 maxMag <- max(df_cat$M, na.rm=TRUE) mags <- df_cat[df_cat$M>=minMag,]$M  x <- seq(minMag,maxMag,0.1)  b.stability.list <- c() b.error.list <- c() m.mean <- c()  b_utsu <- c() b_guttorp <- c() b_elst <- c() delta_b_utsu <- c() b_elst_lower <- c() b_elst_upper <- c()  max.index.x <- length(x)-5  for( i in 1:max.index.x ){   mag.threshold <- x[i]   mags.subset <- mags[mags > mag.threshold]      N <- length(mags.subset)   b_utsu[i] <- 1/( log(10)*(mean(mags.subset)-mag.threshold+0.05))   delta_b_utsu[i] <- log(10)*b_utsu[i]**2 * sqrt( sum((mags.subset - mean(mags.subset))**2)/(N*(N-1)))        b_guttorp[i] = 1/( 2*0.05*log(10))*log((mean(mags.subset)-mag.threshold+2*0.05)/(mean(mags.subset)-mag.threshold))        deltaMags <- diff(mags.subset)   deltaMags_p <- deltaMags[deltaMags>0.1]   N <- length(deltaMags_p)   b_elst[i] <- 1/(2*0.05* log(10)) * log((mean(deltaMags_p))/(mean(deltaMags_p)-0.1))   c = 10**(0.1*b_elst[i])   b_elst_lower[i] <- 1/(0.1 * log(10)) * log((c+sqrt(c/N))/(1+sqrt(c/N)))   b_elst_upper[i] <- 1/(0.1 * log(10)) * log((c-sqrt(c/N))/(1-sqrt(c/N))) }  ggplot() +   geom_line( aes(x=x[1:max.index.x], y=b_utsu) ) +   geom_line( aes(x=x[1:max.index.x], y=b_utsu+delta_b_utsu), color=2, lty=2 ) +   geom_line( aes(x=x[1:max.index.x], y=b_utsu-delta_b_utsu), color=2, lty=2 ) +   geom_line( aes(x=x[1:max.index.x], y=b_guttorp), color=3, lty=1 ) +   xlab(\"Magnitude threshold\") +   ylab(\"b-value estimate\") +   geom_hline(yintercept = 1, lty=3) +   geom_hline(yintercept = 0.85, lty=3) +   ggtitle(\"b-value stability plot for Horus catalogue\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"heatmap-of-the-events-in-the-horus-catalogue","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Heatmap of the events in the Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"ggplot() +   geom_hex(data = df_cat[df_cat$M>3,], aes(x = lon, y = lat), bins = 50) +   scale_fill_continuous(type = \"viridis\") +   geom_sf(data = italy.map, fill=alpha(\"lightgrey\", 0), color = 'orange', size=0.2) +    ggtitle(\"Density plot for M>3 events\") +   theme_bw() #> Warning: Computation failed in `stat_binhex()` #> Caused by error in `compute_group()`: #> ! The package \"hexbin\" is required for `stat_binhex()`"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"map-of-the-events-in-the-italian-horus-catalogue","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Map of the events in the Italian Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"# L’Aquila Sequence focus L Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. start.date = “2009-04-06 00:00:00 BST” end.date = “2010-01-01 00:00:00 BST” magnitude.completeness = 2.49 min.longitude = 13.00 max.longitude = 13.75 min.latitude = 42.2 max.latitude = 42.5","code":"ggplot() +   geom_sf(data = df_cat.sf[df_cat$M>3,], size = 0.05) +   geom_sf(data = italy.map, fill=alpha(\"lightgrey\", 0), color = 'green', linewidth=0.7) +   geom_sf(data = df_cat.sf[df_cat$M>5,], size = 0.5, color='orange') +   geom_sf(data = df_cat.sf[df_cat$M>6,], size = 0.5, color='red') +   ggtitle(\"Map of event locations\") eventDate <- ymd_hms( '2009-04-06 00:00:00' ) endDate <- eventDate + days(400) startDate <- eventDate - days(50) deltaLat <- 2.4 latLims <- c( 42.2,42.5) longLims <- c( 13, 13.75)  minMAG <- 0  # Subset the main catalogue df_cat.subset <- df_cat[df_cat$M >= minMAG, ] df_cat.subset <- df_cat.subset[ (df_cat.subset$lat>latLims[1]), ] df_cat.subset <- df_cat.subset[ (df_cat.subset$lat<latLims[2]), ] df_cat.subset <- df_cat.subset[ (df_cat.subset$lon>longLims[1]), ] df_cat.subset <- df_cat.subset[ (df_cat.subset$lon<longLims[2]), ]  head(df_cat.subset) #>             time_string     lon     lat depth    M           time_date #> 243 1961-03-25T10:40:00 13.3167 42.4333     0 3.64 1961-03-25 10:40:00 #> 295 1961-10-05T19:59:35 13.0167 42.3500     3 0.00 1961-10-05 19:59:35 #> 302 1961-10-31T00:00:00 13.0167 42.3500    10 3.94 1961-10-31 00:00:00 #> 303 1961-10-31T00:00:00 13.0167 42.3500    10 3.94 1961-10-31 00:00:00 #> 304 1961-10-31T13:37:18 13.0833 42.4167     4 4.64 1961-10-31 13:37:18 #> 305 1961-10-31T13:41:59 13.0833 42.4167     0 4.14 1961-10-31 13:41:59 #>     event_num #> 243       243 #> 295       295 #> 302       302 #> 303       303 #> 304       304 #> 305       305"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"plot-of-the-event-magnitude-time-series-laquila","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"Plot of the event magnitude time series: l’Aquila","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"ggplot() +    geom_point(data=df_cat.subset[df_cat.subset$M>3,], aes(time_date, lat), size=0.1) +   geom_point(data=df_cat.subset[df_cat.subset$M>5,], aes(time_date, lat), size=1.2, color='orange') +   geom_point(data=df_cat.subset[df_cat.subset$M>6,], aes(time_date, lat), size=1.5, color='red') +   ggtitle(\"L'Aquila latitude-time plot\") +   geom_rect(aes(xmin = as.POSIXct(startDate), xmax = as.POSIXct(endDate), ymin = latLims[1], ymax = latLims[2]), alpha = 0.4, fill='blue', color='blue') minMag <- 0 maxMag <- max(df_cat.subset$M, na.rm=TRUE)  mags <- df_cat.subset[df_cat.subset$M>=minMag,]$M  tmp <- hist(mags, breaks=seq(minMag-0.05,maxMag+0.4,0.1), plot=FALSE)  N.counts <- length( tmp$counts) tmp$cumulativeCounts <- cumsum(tmp$counts[N.counts:1])[N.counts:1]  m.min <- 4 bin_m.min <- which(tmp$mids==m.min) freq_m.min <- tmp$counts[bin_m.min] b <- 1. x <- tmp$mids y <- freq_m.min * 10^(-b*(x-m.min)) y.cum <- tmp$cumulativeCounts[bin_m.min] * 10^(-b*(x-m.min))  ggplot() +   geom_point( aes(x=tmp$mids, y=tmp$counts) ) +   geom_point( aes(x=tmp$mids, y=tmp$cumulativeCounts) , color='red', pch=\"+\") +   scale_y_log10() +   ggtitle(paste(\"Frequency-magnitude plot with arbitary GR dist: b =\", b)) +   xlab(\"Magnitude\") +   ylab(\"log10(Frequency)\") +   geom_line(aes(x=x, y=y)) +   geom_line(aes(x=x, y=y.cum), color='red') +   geom_vline( xintercept=m.min, lty=2 ) #> Warning: Transformation introduced infinite values in continuous y-axis #> Transformation introduced infinite values in continuous y-axis"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"b-value-stability-plot-laquila","dir":"Articles","previous_headings":"EDA for the whole Mediteranian catalogue","what":"b-value stability plot: l’Aquila","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"minMag <- 0 maxMag <- max(df_cat.subset$M, na.rm=TRUE) mags <- df_cat.subset[df_cat.subset$M>=minMag,]$M  x <- seq(minMag,maxMag,0.1)  b.stability.list <- c() b.error.list <- c() m.mean <- c()  b_utsu <- c() b_guttorp <- c() b_elst <- c() delta_b_utsu <- c() b_elst_lower <- c() b_elst_upper <- c()  max.index.x <- length(x)-5  for( i in 1:max.index.x ){   mag.threshold <- x[i]   mags.subset <- mags[mags > mag.threshold]      N <- length(mags.subset)   b_utsu[i] <- 1/( log(10)*(mean(mags.subset)-mag.threshold+0.05))   delta_b_utsu[i] <- log(10)*b_utsu[i]**2 * sqrt( sum((mags.subset - mean(mags.subset))**2)/(N*(N-1)))        b_guttorp[i] = 1/( 2*0.05*log(10))*log((mean(mags.subset)-mag.threshold+2*0.05)/(mean(mags.subset)-mag.threshold))        deltaMags <- diff(mags.subset)   deltaMags_p <- deltaMags[deltaMags>0.1]   N <- length(deltaMags_p)   b_elst[i] <- 1/(2*0.05* log(10)) * log((mean(deltaMags_p))/(mean(deltaMags_p)-0.1))   c = 10**(0.1*b_elst[i])   b_elst_lower[i] <- 1/(0.1 * log(10)) * log((c+sqrt(c/N))/(1+sqrt(c/N)))   b_elst_upper[i] <- 1/(0.1 * log(10)) * log((c-sqrt(c/N))/(1-sqrt(c/N))) }  ggplot() +   geom_line( aes(x=x[1:max.index.x], y=b_utsu) ) +   geom_line( aes(x=x[1:max.index.x], y=b_utsu+delta_b_utsu), color=2, lty=2 ) +   geom_line( aes(x=x[1:max.index.x], y=b_utsu-delta_b_utsu), color=2, lty=2 ) +   geom_line( aes(x=x[1:max.index.x], y=b_guttorp), color=3, lty=1 ) +   xlab(\"Magnitude threshold\") +   ylab(\"b-value estimate\") +   geom_hline(yintercept = 1, lty=3) +   geom_hline(yintercept = 0.85, lty=3) +   ggtitle(\"b-value stability plot for Horus catalogue\") #> Warning: Removed 2 rows containing missing values (`geom_line()`). #> Removed 2 rows containing missing values (`geom_line()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"2a Temporal Model: Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  ggplot() +   geom_point(data = samp.etas.list[[1]], aes(x = ts, y = magnitudes), color = \"red\") +   geom_point(data = samp.etas.list[[2]], aes(x = ts, y = magnitudes), color = \"green\") +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") combined.M7.ETAS.cat <- bind_rows(samp.etas.list)  combined.M7.ETAS.cat <- bind_rows(samp.etas.list) combined.M7.ETAS.cat <- combined.M7.ETAS.cat[order(combined.M7.ETAS.cat$ts), ]  combined.M7.ETAS.cat$ID <- seq(1, length(combined.M7.ETAS.cat$ts))  ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sampleFromETASpriors.html","id":"sampling-etas-priors","dir":"Articles","previous_headings":"","what":"Sampling ETAS Priors","title":"2b Temporal Model: Presenting samples drawn from the ETAS priors","text":"important check priors broad enough expect model parameterisation lie within . notebook shows draw samples priors present resulting triggering functions.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase num.threads if you have more cores on your computer INLA::inla.setOption(num.threads = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.247297  #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.4751322  #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  5.345253 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 91.59%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 123.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1600% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 38.26%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1980% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 106%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 748% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 61.8%, Contract #> iinla: Step rescaling: 24.35%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 676% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 103.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 327% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 305% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 102.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 245% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 219% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 194% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 174% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 158% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 144% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 132% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 121% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 111% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 103% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 94.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 87.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 80.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 74.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 69.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 64.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 59.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 55.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 51.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 47.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 44.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 41.1% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 38.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 35.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 33.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 30.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 24.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 20% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 40 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 41 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 42 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 43 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 44 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 45 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 46 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 47 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 48 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 49 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.87% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 50 [max:100] #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  5.381907 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 102.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 64.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 59.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 54.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 50.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 47.1% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 43.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 40.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 37.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 35.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 32.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 30.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 24.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 22.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.76% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 29 [max:100] #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 49 rows containing missing values (`geom_line()`). #> Warning: Removed 9 rows containing missing values (`geom_line()`). plt #> NULL  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 49 rows containing missing values (`geom_line()`). #> Warning: Removed 9 rows containing missing values (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1299] #> 8 8 (1-3,1-1) arrange text[GRID.text.1300]  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"2d Temporal Model: Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exist, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p > 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"2d Temporal Model: Tutorial on real data","text":"Bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter \\(\\) rate \\(b\\). distribution mean \\(/b\\) variance \\(/b^2\\). unit_t(X, , b) Uniform distribution \\(\\) \\(b\\). exp_t(X, r) Exponential distribution rate \\(r\\). loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm \\(m\\) standard deviation logarithm \\(s\\). code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"2d Temporal Model: Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide subset HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. See data-raw/horus.R details subset created original data set. HORUS catalogue subset can accessed directly using horus ETAS.inlabru::horus: documentation data set available via ?horus. data reports earthquake time string (time_string), longitude (lon) latitude (lat) epicentre, depth kilometres (depth), moment magnitude (M). focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load ISIDE catalogue head(horus) #>           time_string     lon     lat depth    M #> 1 1960-01-03T20:19:34 15.3000 39.3000   290 6.34 #> 2 1960-01-04T09:20:00 13.1667 43.1333     0 3.94 #> 3 1960-01-06T15:17:34 12.7000 46.4833     4 4.69 #> 4 1960-01-06T15:20:53 12.7000 46.4667     0 4.14 #> 5 1960-01-06T15:31:00 12.7500 46.4333     0 3.00 #> 6 1960-01-06T15:45:00 12.7500 46.4333     0 3.00 # transform time string in Date object horus$time_date <- as.POSIXct(   horus$time_string,   format = \"%Y-%m-%dT%H:%M:%OS\" )  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01T00:00:00\", format = \"%Y-%m-%dT%H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01T00:00:00\", format = \"%Y-%m-%dT%H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"2d Temporal Model: Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Note: option list, one can also set number threads allowed INLA , e.g. num.threads = 8. override global option set beginning tutorial. code likely run many different systems, using global setting easier manage.","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(     difftime(aquila$time_date, start.date, units = \"days\")   ),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init # parameters' initial values )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"2d Temporal Model: Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  2.090111"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"2d Temporal Model: Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"2d Temporal Model: Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"2d Temporal Model: Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 )  head(post.samp) #>          mu         K    alpha          c        p #> 1 0.2881288 0.1235935 2.442520 0.07836114 1.170021 #> 2 0.2858357 0.1263480 2.486586 0.05300893 1.137231 #> 3 0.2521266 0.1280863 2.406083 0.10075938 1.255019 #> 4 0.3095548 0.1335662 2.427529 0.06332112 1.136954 #> 5 0.3389851 0.1272357 2.436334 0.07267415 1.159080 #> 6 0.2748806 0.1334293 2.436822 0.06941541 1.166152 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"2d Temporal Model: Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"2d Temporal Model: Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"2d Temporal Model: Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"2d Temporal Model: Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = 3 ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 25 rows containing non-finite values (`stat_bin()`). #> Warning: Removed 2 rows containing missing values (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2c Temporal Model: Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"2c Temporal Model: Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL,   ncore = 1 ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     288     112     176 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"2c Temporal Model: Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"2c Temporal Model: Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.5592325"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"2c Temporal Model: Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"2c Temporal Model: Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) head(post.samp) #>          mu          K    alpha         c        p #> 1 0.3042808 0.05747126 2.615845 0.1733123 1.344989 #> 2 0.3377762 0.05210763 2.441359 0.3965055 1.555587 #> 3 0.2952340 0.02886752 2.737202 0.2594090 1.448885 #> 4 0.3051313 0.04720604 2.541863 0.1767612 1.274644 #> 5 0.2757544 0.03444807 2.699596 0.1570168 1.312062 #> 6 0.3249915 0.03626175 2.470457 0.3082489 1.253210"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"2c Temporal Model: Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"2c Temporal Model: Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>          N N.bkg N.after #> first  288   112     176 #> second 408   104     304 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.7834785 input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Dr Francesco Serafini Dr Mark Naylor , School GeoSciences, University Edinburgh Prof Finn Lindgren , School Mathematics, University Edinburgh Dr Kirsty Bayliss , Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"study funded yhe Real-Time Earthquake Risk Reduction Resilient Europe RISE project , received funding European Union’s Horizon 2020 Research Innovation Program grant Agreement 821115. Naylor additionally funded NSFGEO-NERC grant NE/R000794/1. Bayliss funded EPSRC Studentship.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package Implement time varying incompleteness model Farnaz Kamranzad","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@newcastle.ac.uk (ORCID) Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore number cores used generate synthetic catalogues parallel.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x556d7f170908> #> <environment: 0x556d7f173158> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x556d7f170630> #> <environment: 0x556d7f173158> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x556d7f170358> #> <environment: 0x556d7f173158> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x556d7f170080> #> <environment: 0x556d7f173158> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x556d7f16fda8> #> <environment: 0x556d7f173158> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   ncore = 1 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. ncore Integer number compute cores use.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"data.frame temporal catalogue columns [t_i, M_i, gen_i] , t_i times,  M_i magnitudes, gen_i includes information generation number","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>             ts magnitudes gen #> 1   371.023212   3.026511   1 #> 2   463.005973   2.711125   1 #> 3   403.379531   3.101457   1 #> 4   930.923886   2.747419   1 #> 5   671.572370   2.961352   1 #> 6   723.641553   2.995741   1 #> 7   696.848954   2.702481   1 #> 8   425.473247   2.710820   1 #> 9   472.861923   3.303859   1 #> 10  772.989893   2.576636   1 #> 11  607.702873   3.282518   1 #> 12  825.303545   3.007933   1 #> 13  113.860130   2.679856   1 #> 14  213.089919   2.635192   1 #> 15  847.036986   2.509787   1 #> 16  632.223450   2.642591   1 #> 17  688.613354   2.732223   1 #> 18  382.635183   2.500680   1 #> 19   43.860611   3.033339   1 #> 20  706.096839   2.761922   1 #> 21  175.554704   3.573856   1 #> 22  370.132650   2.805100   1 #> 23  939.210938   3.909171   1 #> 24  373.593719   2.787001   1 #> 25  278.868167   3.523939   1 #> 26  759.302790   2.653624   1 #> 27  328.804027   2.890061   1 #> 28  942.202297   2.509793   1 #> 29  137.037763   2.703734   1 #> 30  582.931245   2.822921   1 #> 31  500.115054   2.649283   1 #> 32  393.062282   2.836677   1 #> 33  773.752677   2.556525   1 #> 34  127.081112   3.605457   1 #> 35  308.631646   2.543335   1 #> 36  929.951111   2.626669   1 #> 37  480.145150   2.870701   1 #> 38  450.600473   3.622049   1 #> 39  849.461322   2.555080   1 #> 40    9.260921   2.511128   1 #> 41  739.650092   3.165400   1 #> 42  930.753219   2.538722   1 #> 43  844.743367   2.513571   1 #> 44  532.937194   2.565604   1 #> 45  291.858720   2.833236   1 #> 46  416.355522   2.982119   1 #> 47  395.933445   2.751401   1 #> 48  728.703160   2.625707   1 #> 49  141.647298   2.547336   1 #> 50  856.447747   2.888903   1 #> 51  933.714218   3.207048   1 #> 52  747.116452   2.645716   1 #> 53  864.137015   2.818353   1 #> 54   39.792550   3.170552   1 #> 55  324.497717   2.619126   1 #> 56  773.992043   2.511791   1 #> 57  401.484971   2.745568   1 #> 58  337.507095   2.596109   1 #> 59  782.104828   2.819465   1 #> 60  130.584117   3.535567   1 #> 61  574.916291   3.057339   1 #> 62  274.347524   2.575810   1 #> 63  734.035790   2.974188   1 #> 64  448.388322   2.795377   1 #> 65  616.261139   2.791721   1 #> 66  725.099281   2.647413   1 #> 67  640.746933   3.862814   1 #> 68  423.721384   3.138077   1 #> 69  510.782521   3.029224   1 #> 70  306.697128   4.286753   1 #> 71  437.050245   2.542604   1 #> 72  714.274127   2.636024   1 #> 73  117.419915   2.561244   1 #> 74  738.348241   2.738703   1 #> 75  182.439287   3.210996   1 #> 76  291.046455   2.774518   1 #> 77  270.640175   2.924067   1 #> 78  879.739557   3.008080   1 #> 79  212.140641   3.172777   1 #> 80  916.291302   2.817657   1 #> 81  178.566313   3.094008   1 #> 82  529.687737   2.792079   1 #> 83   67.548698   2.643748   1 #> 84  111.915719   2.614153   1 #> 85  639.169354   2.661192   1 #> 86   33.087021   2.520866   1 #> 87  224.833787   2.749649   1 #> 88  392.413573   2.599002   1 #> 89  339.683778   2.839342   1 #> 90  956.768456   3.084713   1 #> 91  308.222754   2.559644   1 #> 92  389.563498   2.683426   1 #> 93  818.850703   2.622810   1 #> 94  462.344184   2.529321   1 #> 95  192.572343   2.762865   1 #> 96    6.293966   2.561576   1 #> 97    2.813330   3.068893   1 #> 98  277.135285   4.170805   1 #> 99  606.313175   4.509403   1 #> 100 102.832429   2.754188   1 #> 101 142.485933   2.531941   1 #> 102 189.377948   2.713900   1 #> 103 734.036205   2.518988   1 #> 104  69.793536   2.651702   1 #> 105 213.246800   2.815258   1 #> 106 144.855840   3.433104   1 #> 107 372.087621   2.669699   1 #> 108  36.916172   2.635355   1 #>  #> [[2]] #>          ts magnitudes gen #> 1  404.7357   2.945671   2 #> 2  481.0574   3.027157   2 #> 3  607.7303   2.834088   2 #> 4  684.9759   2.600111   2 #> 5  176.4616   2.962396   2 #> 6  421.9243   2.514759   2 #> 7  614.6401   2.898571   2 #> 8  451.0175   2.920985   2 #> 9  822.2646   3.098501   2 #> 10 849.7451   2.519947   2 #> 11 297.0750   3.359599   2 #> 12 117.5335   3.168098   2 #> 13 337.6340   2.622436   2 #> 14 222.9093   3.603223   2 #> 15 654.6110   2.621364   2 #> 16 641.2994   3.199134   2 #> 17 648.7000   2.748209   2 #> 18 661.1729   3.219978   2 #> 19 644.0687   2.767226   2 #> 20 423.8097   3.046074   2 #> 21 346.4791   2.582885   2 #> 22 311.2350   2.825784   2 #> 23 310.2383   2.550836   2 #> 24 429.2352   2.619134   2 #> 25 307.9064   2.769256   2 #> 26 746.5016   3.664006   2 #> 27 280.3228   3.364638   2 #> 28 409.8836   3.533326   2 #> 29 302.3390   2.617703   2 #> 30 278.8430   2.727529   2 #> 31 290.4788   3.452130   2 #> 32 277.2035   3.783157   2 #> 33 606.4799   2.571950   2 #> 34 606.3497   2.905245   2 #> 35 606.3275   2.681178   2 #> 36 606.5574   2.644375   2 #> 37 606.8574   2.793205   2 #> 38 606.3517   3.086118   2 #> 39 611.3889   2.986268   2 #> 40 703.8215   2.518614   2 #> 41 150.5519   2.520543   2 #>  #> [[3]] #>          ts magnitudes gen #> 1  484.2483   2.940239   3 #> 2  426.1366   2.833443   3 #> 3  899.0419   2.850176   3 #> 4  423.8485   2.513785   3 #> 5  613.0615   3.985730   3 #> 6  747.8780   3.331870   3 #> 7  916.1203   3.161534   3 #> 8  747.7878   4.193636   3 #> 9  280.5837   3.029319   3 #> 10 409.8994   4.433069   3 #> 11 409.9499   2.773090   3 #> 12 291.6836   2.812977   3 #> 13 277.8164   2.850211   3 #> 14 318.0036   2.670780   3 #>  #> [[4]] #>         ts magnitudes gen #> 1 916.3860   2.663046   4 #> 2 747.8199   2.575307   4 #> 3 410.4332   2.717130   4 #> 4 411.4277   2.780697   4 #> 5 410.9727   2.579667   4 #> 6 411.8032   2.571367   4 #> 7 413.3016   3.041758   4 #> 8 373.7800   3.176368   4 #>  #> [[5]] #>         ts magnitudes gen #> 1 748.2371   2.506361   5 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>             ts magnitudes gen #> 1   503.178300   2.500922   0 #> 2   524.881605   2.747331   0 #> 3   500.059551   2.590156   0 #> 4   507.016190   3.912566   0 #> 5   500.467138   2.585506   0 #> 6   501.150953   3.074426   0 #> 7   500.097021   2.514881   0 #> 8   500.924286   2.776806   0 #> 9   504.948371   3.035134   0 #> 10  509.869653   2.898555   0 #> 11  502.548012   3.602184   0 #> 12  516.530936   2.963448   0 #> 13  695.211283   2.623127   0 #> 14  541.337824   2.641747   0 #> 15  500.606482   3.005867   0 #> 16  533.348765   3.326226   0 #> 17  512.514590   2.510791   0 #> 18  501.049848   2.686691   0 #> 19  514.792429   4.804754   0 #> 20  515.884132   2.538315   0 #> 21  902.187423   2.516635   0 #> 22  575.385238   2.856870   0 #> 23  510.148864   3.834658   0 #> 24  500.277019   2.672736   0 #> 25  554.138073   2.739907   0 #> 26  568.756177   2.618651   0 #> 27  500.039887   2.627587   0 #> 28  542.987029   2.591781   0 #> 29  500.330087   2.506778   0 #> 30  508.760492   3.768907   0 #> 31  509.019692   2.784878   0 #> 32  507.691392   3.464130   0 #> 33  501.945951   2.814886   0 #> 34  658.542371   2.807227   0 #> 35  502.145542   2.683501   0 #> 36  506.610740   2.595064   0 #> 37  598.118583   3.284923   0 #> 38  539.573248   3.457780   0 #> 39  501.258452   3.242387   0 #> 40  506.684294   3.079794   0 #> 41  834.830178   2.983590   0 #> 42  600.678413   3.205203   0 #> 43  827.455405   3.782259   0 #> 44  500.754009   2.552069   0 #> 45  577.979504   2.558289   0 #> 46  564.067251   2.618660   0 #> 47  500.037524   2.814947   0 #> 48  500.453555   3.240721   0 #> 49  503.319047   3.011320   0 #> 50  500.077456   3.187935   0 #> 51  543.245645   2.613575   0 #> 52  503.704348   2.506615   0 #> 53  500.038099   2.543169   0 #> 54  516.794357   3.818957   0 #> 55  959.439994   3.018661   0 #> 56  500.012370   3.632364   0 #> 57  500.068146   3.210733   0 #> 58  500.159967   3.632383   0 #> 59  502.856481   2.786078   0 #> 60  533.274268   2.695540   0 #> 61  500.000283   2.886867   0 #> 62  523.754529   2.548347   0 #> 63  500.171166   3.499916   0 #> 64  693.230555   2.878706   0 #> 65  901.255481   2.641129   0 #> 66  593.661383   2.912779   0 #> 67  500.575477   2.897169   0 #> 68  571.448899   2.719281   0 #> 69  532.064276   2.529383   0 #> 70  526.591016   2.704999   0 #> 71  696.119480   2.578057   0 #> 72  504.641666   3.382809   0 #> 73  526.614632   2.787577   0 #> 74  551.899194   3.173215   0 #> 75  506.882526   3.707435   0 #> 76  844.479494   2.896122   0 #> 77  505.734809   2.617761   0 #> 78  603.377367   2.883871   0 #> 79  500.166484   3.402298   0 #> 80  500.837647   2.864293   0 #> 81  501.924535   2.643139   0 #> 82  500.016350   3.245543   0 #> 83  500.716959   4.233873   0 #> 84  509.799983   2.602643   0 #> 85  513.288434   3.139636   0 #> 86  500.004913   2.778541   0 #> 87  500.953391   2.683964   0 #> 88  500.495402   3.138624   0 #> 89  506.273940   2.519772   0 #> 90  502.839139   3.503474   0 #> 91  500.062301   2.921328   0 #> 92  505.663079   3.399666   0 #> 93  500.198312   2.613188   0 #> 94  507.148728   3.030491   0 #> 95  501.168352   2.507334   0 #> 96  516.718423   2.570482   0 #> 97  538.740425   2.551864   0 #> 98  500.664939   3.107279   0 #> 99  506.921333   3.436191   0 #> 100 538.784162   2.804354   0 #> 101 515.092934   2.906611   0 #> 102 500.099365   2.836317   0 #> 103 503.189185   2.600966   0 #> 104 501.240385   2.916927   0 #> 105 500.059525   4.480859   0 #> 106 505.113387   2.671009   0 #> 107 521.796330   3.167197   0 #> 108 506.953948   3.413295   0 #> 109 539.945411   2.510922   0 #> 110 501.115436   2.518555   0 #> 111 501.634954   2.722020   0 #> 112 500.166452   3.416373   0 #> 113 574.391954   3.712761   0 #> 114 500.068871   2.823929   0 #> 115 566.172473   3.755398   0 #> 116 508.953519   3.656224   0 #> 117 503.149184   2.874506   0 #> 118 500.814237   3.017352   0 #> 119 500.156933   2.649611   0 #> 120 515.057922   2.859974   0 #> 121 500.091134   2.775500   0 #> 122 501.045436   2.627506   0 #> 123 518.182953   3.602830   0 #> 124 502.772749   2.552384   0 #> 125 501.087268   2.796529   0 #> 126 531.913601   2.869809   0 #> 127 566.489037   2.701331   0 #> 128 533.106403   2.844981   0 #> 129 504.971243   2.781252   0 #> 130 500.706980   2.672950   0 #> 131 500.709650   2.611266   0 #> 132 500.653489   3.121151   0 #> 133 881.416723   2.592661   0 #> 134 500.039511   2.788361   0 #> 135 505.155883   2.589403   0 #> 136 500.027509   2.558314   0 #> 137 500.381719   2.771177   0 #> 138 500.017035   2.972187   0 #> 139 559.525354   2.877918   0 #> 140 505.614624   2.803491   0 #> 141 501.234833   2.767576   0 #> 142 513.860256   3.168845   0 #> 143 500.467165   3.288305   0 #> 144 656.162629   2.779791   0 #> 145 524.665354   4.101600   0 #> 146 500.355044   2.935353   0 #> 147 503.228480   2.693067   0 #> 148 520.586395   4.449106   0 #> 149 601.139540   2.559944   0 #> 150 501.970735   2.871186   0 #> 151 509.229017   2.768108   0 #> 152 502.563017   3.088926   0 #> 153 500.085478   2.833477   0 #> 154 508.470117   3.685796   0 #> 155 501.454488   2.751166   0 #> 156 500.033434   2.713526   0 #> 157 503.488292   2.688812   0 #> 158 505.546606   2.685660   0 #> 159 506.304907   3.759946   0 #> 160 503.911920   2.555789   0 #> 161 506.585095   3.813665   0 #> 162 503.271227   3.207313   0 #> 163 500.244308   2.577364   0 #> 164 527.136366   3.181545   0 #> 165 509.476393   3.597033   0 #> 166 524.896696   2.580973   0 #> 167 501.300763   3.290603   0 #> 168 900.803277   3.114076   0 #> 169 505.527107   2.826303   0 #> 170 536.904888   2.949199   0 #> 171 500.441766   2.591807   0 #> 172 848.213907   3.119042   0 #> 173 520.943916   3.445420   0 #> 174 500.546787   2.563315   0 #> 175 500.288212   2.804409   0 #> 176 501.072803   2.655566   0 #> 177 629.995151   3.744180   0 #> 178 507.876252   2.584241   0 #> 179 515.767940   2.640671   0 #> 180 500.393758   3.162199   0 #> 181 507.655557   2.606912   0 #> 182 516.136780   2.747465   0 #> 183 500.947949   2.742323   0 #> 184 511.905215   3.104437   0 #> 185 500.046914   2.882766   0 #> 186 504.133469   2.793094   0 #> 187 545.548671   3.125831   0 #> 188 501.485496   2.831803   0 #> 189 501.485674   2.578490   0 #> 190 528.385493   2.756478   0 #> 191 500.998738   2.584940   0 #> 192 500.116069   3.172026   0 #> 193 523.063303   4.074419   0 #> 194 500.715333   2.551983   0 #> 195 574.046207   3.892015   0 #> 196 538.452475   2.684560   0 #> 197 511.946052   3.175397   0 #> 198 550.847681   2.756258   0 #> 199 873.098592   2.516042   0 #> 200 538.076806   2.538759   0 #> 201 506.730959   3.072507   0 #> 202 501.227082   2.952691   0 #> 203 502.339225   2.520483   0 #> 204 500.189275   2.933723   0 #> 205 501.551631   3.213219   0 #> 206 944.472719   3.286875   0 #> 207 501.261602   2.519977   0 #> 208 501.451330   2.697195   0 #> 209 500.076951   2.550342   0 #> 210 668.038732   5.904016   0 #> 211 850.541217   3.352659   0 #> 212 500.447359   3.079521   0 #> 213 506.318271   2.887118   0 #> 214 571.794373   2.561480   0 #> 215 501.822691   2.535797   0 #> 216 848.862230   2.647104   0 #> 217 500.390912   2.951373   0 #> 218 500.046812   3.063209   0 #> 219 500.612249   3.360334   0 #> 220 673.421187   2.844675   0 #> 221 527.031127   3.258377   0 #> 222 530.351517   2.962455   0 #> 223 501.217621   3.491966   0 #> 224 502.122307   2.752903   0 #> 225 504.286164   2.796458   0 #> 226 502.142057   2.724340   0 #> 227 500.786665   2.770629   0 #> 228 508.188310   2.855791   0 #> 229 514.686231   2.881088   0 #> 230 500.297825   2.552678   0 #> 231 511.712044   2.532575   0 #> 232 500.692913   2.962055   0 #> 233 500.390657   3.515442   0 #> 234 500.144363   2.920302   0 #> 235 500.050626   2.896197   0 #> 236 504.296401   2.699420   0 #> 237 524.198625   2.538998   0 #> 238 500.218525   2.915010   0 #> 239 500.002029   2.942738   0 #> 240 586.323856   2.604029   0 #> 241 528.100823   3.092083   0 #> 242 508.064692   2.539629   0 #> 243 507.183541   3.212114   0 #> 244 690.937467   2.778888   0 #> 245 500.878607   2.695646   0 #> 246 505.592035   2.609107   0 #> 247 500.804910   2.845726   0 #> 248 500.033132   2.517843   0 #> 249 527.159661   2.745931   0 #> 250 500.297397   2.776431   0 #> 251 504.117378   3.244035   0 #> 252 500.021414   3.285444   0 #> 253 529.240050   2.846888   0 #> 254 969.648907   2.682328   0 #> 255 500.441886   2.512639   0 #> 256 517.811669   2.889102   0 #> 257 677.858082   3.108469   0 #> 258 597.180195   3.764776   0 #> 259 500.186390   2.642596   0 #> 260 501.082857   2.664021   0 #> 261 502.040653   3.405093   0 #> 262 603.564248   3.373895   0 #> 263 500.082649   2.624604   0 #> 264 502.328855   3.824184   0 #> 265 500.049851   4.484495   0 #> 266 500.170436   2.710167   0 #> 267 502.617688   4.875406   0 #> 268 500.950370   2.710643   0 #> 269 500.122779   2.578554   0 #> 270 502.336120   2.549354   0 #> 271 500.434897   2.511173   0 #> 272 503.091102   2.560317   0 #> 273 500.192338   2.786879   0 #> 274 522.809761   3.714865   0 #> 275 500.040105   2.707275   0 #> 276 503.175358   2.608276   0 #> 277 504.600243   2.681858   0 #> 278 799.403796   3.170011   0 #> 279 597.598587   2.640417   0 #> 280 500.131619   2.790635   0 #> 281 719.367164   2.794710   0 #> 282 515.932320   3.027126   0 #> 283 560.797256   2.681369   0 #> 284 513.343600   2.666651   0 #> 285 531.854603   3.469317   0 #> 286 678.524768   3.634231   0 #> 287 502.112778   3.624465   0 #> 288 508.673941   2.824224   0 #> 289 500.431344   3.486490   0 #> 290 520.570916   3.762164   0 #> 291 500.446179   3.382108   0 #> 292 500.118891   2.528016   0 #> 293 502.359538   3.426102   0 #> 294 523.337797   2.582791   0 #> 295 500.985663   3.485160   0 #> 296 500.080631   2.544762   0 #> 297 500.405905   2.791317   0 #> 298 625.689513   2.947440   0 #> 299 509.006235   3.415255   0 #> 300 500.569376   2.500019   0 #> 301 500.005803   2.579797   0 #> 302 500.357225   2.705000   0 #> 303 633.246541   2.632093   0 #> 304 506.651425   2.504292   0 #> 305 508.533730   2.685694   0 #> 306 500.365363   2.751285   0 #> 307 500.041684   2.521886   0 #> 308 500.351300   2.502508   0 #> 309 539.689325   4.362141   0 #> 310 501.763535   3.023503   0 #> 311 501.006956   2.877200   0 #> 312 616.620884   3.574079   0 #> 313 734.510902   3.870106   0 #> 314 601.410203   2.763345   0 #> 315 508.508651   2.969710   0 #> 316 500.264936   2.967390   0 #> 317 500.276141   2.599188   0 #> 318 509.149413   2.736275   0 #> 319 592.627189   2.942482   0 #> 320 519.441352   3.136845   0 #> 321 503.807593   2.709431   0 #> 322 508.216017   2.605608   0 #> 323 501.934176   2.590024   0 #> 324 502.413212   3.044651   0 #> 325 500.126567   2.693230   0 #> 326 500.213040   2.545541   0 #> 327 507.929353   2.874488   0 #> 328 500.188645   2.655428   0 #> 329 507.393687   2.575312   0 #> 330 501.959865   2.584828   0 #> 331 501.061643   3.301213   0 #> 332 501.640206   2.797668   0 #> 333 500.139318   3.154208   0 #> 334 594.085567   2.538504   0 #> 335 500.799479   4.336682   0 #> 336 538.884356   2.700149   0 #> 337 500.516764   2.706158   0 #> 338 500.744369   2.748645   0 #> 339 509.279756   2.523003   0 #> 340 500.061435   2.522986   0 #> 341 555.828410   2.527581   0 #> 342 515.523022   2.645043   0 #> 343 511.167038   2.542253   0 #> 344 500.925802   2.622766   0 #> 345 507.871756   2.788909   0 #> 346 502.632326   3.652912   0 #> 347 506.589659   2.887281   0 #> 348 506.771680   3.111836   0 #> 349 528.794140   3.192601   0 #> 350 504.819854   2.805660   0 #> 351 501.798621   2.556692   0 #> 352 509.282513   2.605176   0 #> 353 500.111931   2.758991   0 #> 354 507.252971   2.843009   0 #> 355 502.317601   2.515370   0 #> 356 501.306477   2.584737   0 #> 357 500.179727   2.872569   0 #> 358 751.732955   2.755106   0 #> 359 500.835287   2.704678   0 #> 360 514.918149   5.777382   0 #> 361 500.026788   2.837175   0 #> 362 507.790700   3.181086   0 #> 363 526.341792   3.414585   0 #> 364 621.036530   2.539136   0 #> 365 508.107550   2.826788   0 #> 366 507.219992   2.627377   0 #> 367 715.073809   2.526573   0 #> 368 534.918650   2.802278   0 #> 369 500.061109   3.014272   0 #> 370 620.298515   2.530475   0 #> 371 501.111135   3.076391   0 #> 372 511.579909   2.509911   0 #> 373 502.108604   2.553054   0 #> 374 595.034350   2.561978   0 #> 375 502.231354   2.531328   0 #> 376 500.007361   3.033814   0 #> 377 500.628685   3.478767   0 #> 378 500.139984   2.575565   0 #> 379 505.040835   2.622596   0 #> 380 500.359011   3.651556   0 #> 381 500.597652   2.634293   0 #> 382 512.064499   2.844373   0 #> 383 527.248110   2.528096   0 #> 384 500.156895   2.782400   0 #> 385 507.790944   2.989051   0 #> 386 501.750180   3.031470   0 #> 387 993.817235   3.567583   0 #> 388 508.651122   4.816592   0 #> 389 793.959481   2.696147   0 #> 390 519.511853   2.686144   0 #> 391 520.736349   3.626992   0 #> 392 503.625211   2.706706   0 #> 393 535.526052   2.539172   0 #> 394 500.318464   3.150898   0 #> 395 500.016846   2.883330   0 #> 396 921.351756   3.787794   0 #> 397 501.579946   3.044819   0 #> 398 619.643993   2.618158   0 #> 399 505.486694   4.036660   0 #> 400 728.959444   3.088649   0 #> 401 500.502155   2.539774   0 #> 402 500.670646   3.216121   0 #> 403 506.655961   2.557056   0 #> 404 726.385631   3.128267   0 #> 405 501.538304   2.878631   0 #> 406 503.510599   4.463487   0 #> 407 688.808122   3.275211   0 #> 408 500.637733   2.637160   0 #> 409 512.055862   2.566983   0 #> 410 505.760189   2.832419   0 #> 411 505.076865   2.658285   0 #> 412 596.383858   2.553763   0 #> 413 501.828669   3.218520   0 #> 414 536.161486   3.348507   0 #> 415 501.492610   3.172965   0 #> 416 501.512460   3.071281   0 #> 417 502.180138   2.727745   0 #> 418 507.505823   2.736890   0 #> 419 517.698843   2.861046   0 #> 420 501.971440   3.416441   0 #> 421 503.287579   2.750638   0 #> 422 501.441117   2.734929   0 #> 423 503.553171   2.528330   0 #> 424 500.194201   3.751801   0 #> 425 539.362446   3.522469   0 #> 426 501.564164   2.645057   0 #> 427 502.597538   2.684189   0 #> 428 500.293460   2.784105   0 #> 429 513.625401   2.693324   0 #> 430 500.075547   2.900409   0 #> 431 500.005135   3.097899   0 #> 432 611.737155   2.893924   0 #> 433 504.647979   2.799899   0 #> 434 604.684349   3.293464   0 #> 435 807.387216   4.981946   0 #> 436 748.508972   2.576820   0 #> 437 501.808255   2.548783   0 #> 438 500.944190   2.643260   0 #> 439 500.470901   2.698380   0 #> 440 500.494072   2.787067   0 #> 441 528.325273   4.005838   0 #> 442 904.100711   2.522164   0 #> 443 508.146952   2.512144   0 #> 444 525.647836   3.268854   0 #> 445 623.559150   2.759091   0 #> 446 516.166490   2.694653   0 #> 447 500.760151   2.731989   0 #> 448 518.112786   2.706483   0 #> 449 522.216592   2.802491   0 #> 450 500.034496   2.596344   0 #> 451 500.374776   3.074831   0 #> 452 501.159977   2.774849   0 #> 453 502.146901   4.774397   0 #> 454 895.733049   2.733508   0 #> 455 570.569769   3.300235   0 #> 456 500.863557   2.522806   0 #> 457 514.916791   2.632309   0 #> 458 513.567521   2.747239   0 #> 459 500.069218   2.609059   0 #> 460 501.433468   2.631779   0 #> 461 500.075359   2.948800   0 #> 462 558.825132   2.879099   0 #> 463 512.456853   2.809092   0 #> 464 609.952438   2.524803   0 #> 465 501.115783   2.684828   0 #> 466 500.678163   5.721644   0 #> 467 503.821736   3.502889   0 #> 468 505.130151   3.058303   0 #> 469 538.689493   2.624547   0 #> 470 545.367627   2.538383   0 #> 471 508.030479   4.216859   0 #> 472 828.346604   3.789745   0 #> 473 500.710989   2.801570   0 #> 474 516.848208   3.023360   0 #> 475 500.019944   2.770220   0 #> 476 502.823498   2.505168   0 #> 477 502.173739   2.844672   0 #> 478 501.407101   4.290768   0 #> 479 517.138572   2.517261   0 #> 480 500.201313   3.017099   0 #> 481 519.244371   3.014042   0 #> 482 503.135829   2.510277   0 #> 483 500.291006   3.433881   0 #> 484 524.917280   3.301064   0 #> 485 527.038891   2.582670   0 #> 486 500.407546   2.720119   0 #> 487 519.934704   2.676766   0 #> 488 500.216866   2.515071   0 #> 489 500.293608   2.566385   0 #> 490 500.635625   2.513331   0 #> 491 523.197221   2.826426   0 #> 492 500.292363   2.661429   0 #> 493 704.528223   3.163838   0 #> 494 556.355265   2.791017   0 #> 495 500.026738   3.224587   0 #> 496 523.927571   2.702633   0 #> 497 500.145334   2.735080   0 #> 498 500.024758   3.423071   0 #> 499 769.629469   2.703183   0 #> 500 501.053500   2.641977   0 #> 501 500.209462   2.534700   0 #> 502 500.090042   2.869898   0 #> 503 502.386140   3.034625   0 #> 504 500.087745   3.002415   0 #> 505 520.138874   2.863320   0 #> 506 519.280122   2.787583   0 #> 507 591.201602   2.772012   0 #> 508 603.004129   2.749061   0 #> 509 509.645688   2.740135   0 #> 510 884.731483   2.883234   0 #> 511 500.285208   3.525456   0 #> 512 500.255948   2.578587   0 #> 513 511.079432   2.946009   0 #> 514 869.489634   2.652800   0 #> 515 500.276985   3.009015   0 #> 516 505.605319   2.841710   0 #> 517 519.428799   2.969202   0 #> 518 500.016614   3.164409   0 #> 519 500.351530   3.908854   0 #> 520 507.815100   2.827773   0 #> 521 501.036950   2.670130   0 #> 522 500.391566   3.244049   0 #> 523 529.121290   2.777324   0 #> 524 500.422783   2.557716   0 #> 525 556.467227   2.552919   0 #> 526 515.396209   2.969347   0 #> 527 501.726127   2.536799   0 #> 528 500.638855   2.741137   0 #> 529 505.720053   2.754386   0 #> 530 500.311943   3.513037   0 #> 531 517.587591   2.918012   0 #> 532 500.028775   2.530764   0 #> 533 504.533293   2.786604   0 #> 534 500.300410   3.158893   0 #> 535 501.122960   2.783781   0 #> 536 500.006432   3.903365   0 #> 537 500.493501   2.793802   0 #> 538 501.360198   3.336418   0 #> 539 500.182530   2.775810   0 #> 540 571.248246   2.763665   0 #> 541 692.661046   2.955511   0 #> 542 500.744766   2.646646   0 #> 543 506.953723   2.802062   0 #> 544 506.292638   2.727985   0 #> 545 671.018440   2.878616   0 #> 546 500.488697   2.658775   0 #> 547 500.280816   3.023802   0 #> 548 567.659026   3.197527   0 #> 549 505.336244   3.100336   0 #> 550 500.147697   2.555377   0 #> 551 502.608930   2.518364   0 #> 552 501.894172   2.898276   0 #> 553 500.467135   3.088805   0 #> 554 502.317985   3.274810   0 #> 555 500.221001   3.255354   0 #> 556 500.163443   3.309850   0 #> 557 504.796311   3.512776   0 #> 558 545.291528   3.055957   0 #> 559 500.602566   2.640558   0 #> 560 546.142287   3.403833   0 #> 561 500.044434   2.551684   0 #> 562 501.497471   2.566082   0 #> 563 659.469210   2.695982   0 #> 564 541.885771   3.330303   0 #> 565 524.391988   2.530731   0 #> 566 500.024542   3.487649   0 #> 567 534.122096   2.805525   0 #> 568 500.378890   2.647723   0 #> 569 500.149383   2.689840   0 #> 570 505.833718   2.877727   0 #> 571 516.875141   2.676686   0 #> 572 573.290208   2.726547   0 #> 573 500.511201   2.543062   0 #> 574 504.794836   3.017522   0 #> 575 534.698676   2.598187   0 #> 576 502.576520   3.064955   0 #> 577 627.534162   3.659426   0 #> 578 502.323702   2.780129   0 #> 579 578.039572   2.796051   0 #> 580 518.497838   2.544279   0 #> 581 639.686810   2.941778   0 #> 582 500.589203   2.990755   0 #> 583 500.119135   2.828095   0 #> 584 500.008471   2.724428   0 #> 585 500.198791   2.531785   0 #> 586 556.107402   3.323016   0 #> 587 501.396002   2.726225   0 #> 588 504.749608   2.829576   0 #> 589 845.354283   3.458188   0 #> 590 917.048472   2.505063   0 #> 591 507.900867   2.654175   0 #> 592 535.967454   3.735366   0 #> 593 505.560558   3.001421   0 #> 594 510.547410   2.790327   0 #> 595 500.040933   2.518489   0 #> 596 899.814571   2.778488   0 #> 597 500.882575   2.719621   0 #> 598 767.182797   2.979689   0 #> 599 520.163513   2.559820   0 #> 600 500.121227   3.086671   0 #> 601 734.187655   3.062990   0 #> 602 563.701832   2.604771   0 #> 603 501.095223   2.728209   0 #> 604 500.089032   2.627011   0 #> 605 505.929484   2.733940   0 #> 606 502.130772   2.686456   0 #> 607 500.260752   2.545332   0 #> 608 513.114944   3.132906   0 #> 609 559.112400   2.719608   0 #> 610 512.182012   3.003465   0 #> 611 670.101172   2.683716   0 #> 612 501.423100   5.224294   0 #> 613 501.881466   2.786778   0 #> 614 501.450868   2.577800   0 #> 615 509.329924   2.758026   0 #> 616 502.434554   2.878612   0 #> 617 502.492154   3.537358   0 #> 618 541.970423   2.685739   0 #> 619 500.303863   2.864814   0 #> 620 500.371715   2.557808   0 #> 621 505.397203   2.720637   0 #> 622 733.011391   2.870581   0 #> 623 500.089232   3.026024   0 #> 624 524.405987   3.242401   0 #> 625 500.040217   2.904348   0 #> 626 501.895449   2.874446   0 #> 627 503.042980   2.844160   0 #> 628 500.581777   3.953961   0 #> 629 719.011367   2.626062   0 #> 630 531.333436   2.686617   0 #> 631 827.921741   3.059246   0 #> 632 538.519897   2.656102   0 #> 633 502.585886   3.190371   0 #> 634 992.426891   2.638845   0 #> 635 701.675802   2.692883   0 #> 636 501.363797   3.489377   0 #> 637 500.695355   2.518331   0 #> 638 530.072055   3.068910   0 #> 639 500.568177   3.250740   0 #> 640 502.228708   2.633573   0 #> 641 500.115090   2.552447   0 #> 642 501.438666   2.531219   0 #> 643 988.289690   2.583117   0 #> 644 503.858470   2.939541   0 #> 645 500.045077   2.934275   0 #> 646 500.538931   2.920957   0 #> 647 541.666082   3.783696   0 #> 648 586.792425   3.131751   0 #> 649 567.104452   2.906350   0 #> 650 727.740628   2.546419   0 #> 651 504.711153   3.867872   0 #> 652 574.962472   2.648574   0 #> 653 500.376544   3.216974   0 #> 654 534.168431   2.601069   0 #> 655 500.024260   2.914112   0 #> 656 690.888306   2.515941   0 #> 657 502.177096   2.612872   0 #> 658 552.236172   2.767878   0 #> 659 500.073853   3.038863   0 #> 660 500.399397   2.999081   0 #> 661 501.750831   2.515397   0 #> 662 500.024188   2.569284   0 #> 663 500.390384   2.972201   0 #> 664 503.378277   2.793590   0 #> 665 500.874919   2.568006   0 #> 666 501.042489   2.794889   0 #> 667 512.381143   2.524784   0 #> 668 501.148354   2.523677   0 #> 669 511.427603   2.522705   0 #> 670 506.272009   2.583903   0 #> 671 500.399463   2.847487   0 #> 672 500.618481   2.874087   0 #> 673 515.026785   2.631761   0 #> 674 500.481171   2.573225   0 #> 675 516.755288   2.520365   0 #> 676 500.146705   2.538129   0 #> 677 500.215090   3.129471   0 #> 678 500.090717   2.906109   0 #> 679 573.518518   3.363926   0 #> 680 524.802470   3.055402   0 #> 681 732.904639   2.841955   0 #> 682 500.414411   2.545193   0 #> 683 500.713595   3.978929   0 #> 684 510.990250   2.652863   0 #> 685 500.342706   2.660885   0 #> 686 505.634771   4.222094   0 #> 687 954.515089   2.518707   0 #> 688 500.282948   2.536101   0 #> 689 500.476003   3.923492   0 #> 690 573.105172   2.528584   0 #> 691 507.663100   3.925270   0 #> 692 500.029900   2.517786   0 #> 693 551.432381   2.762416   0 #> 694 503.269378   3.380010   0 #> 695 500.095143   2.835371   0 #> 696 500.292150   2.504623   0 #> 697 503.395290   2.858091   0 #> 698 512.996622   2.635259   0 #> 699 500.378724   3.252908   0 #> 700 542.832991   2.833489   0 #> 701 501.188237   2.734684   0 #> 702 500.880207   2.572503   0 #> 703 802.600109   3.414528   0 #> 704 500.485711   2.730803   0 #> 705 500.253511   2.529007   0 #> 706 500.517601   3.057280   0 #> 707 500.254618   2.560402   0 #> 708 500.337336   2.612822   0 #> 709 500.025834   2.891869   0 #> 710 773.611525   3.406175   0 #> 711 501.036798   2.511644   0 #> 712 845.550845   2.704466   0 #> 713 500.843834   2.784814   0 #> 714 501.326736   2.727575   0 #> 715 503.553693   2.902785   0 #> 716 506.580042   2.616914   0 #> 717 514.322126   2.819404   0 #> 718 520.848707   2.647415   0 #> 719 500.696159   2.551200   0 #> 720 500.129972   2.618691   0 #> 721 500.689163   2.780371   0 #> 722 851.516914   2.711014   0 #> 723 500.046514   2.844955   0 #> 724 500.097129   2.865889   0 #> 725 504.725715   3.972773   0 #> 726 500.973136   3.088968   0 #> 727 506.830854   2.916032   0 #> 728 788.669935   2.598459   0 #> 729 594.228466   2.662718   0 #> 730 505.759616   2.796002   0 #> 731 750.140920   2.602813   0 #> 732 620.371702   4.405959   0 #> 733 502.580456   3.090045   0 #> 734 501.295156   3.238396   0 #> 735 500.009487   2.500244   0 #> 736 581.631905   3.090728   0 #> 737 691.714777   3.393099   0 #> 738 526.943741   2.543570   0 #> 739 844.597322   3.244305   0 #> 740 501.891952   2.659001   0 #> 741 512.780411   3.311427   0 #> 742 543.820161   3.019855   0 #> 743 506.308134   2.973652   0 #> 744 501.022689   2.681241   0 #> 745 500.038264   2.835632   0 #> 746 501.053620   3.928736   0 #> 747 510.126989   3.121734   0 #> 748 602.278332   2.688058   0 #> 749 509.818229   2.940661   0 #> 750 564.326581   2.627451   0 #> 751 500.025519   2.779510   0 #> 752 500.032128   3.196273   0 #> 753 500.431543   2.513402   0 #> 754 505.349529   2.715453   0 #> 755 570.810730   3.620354   0 #> 756 503.095360   2.636443   0 #> 757 512.556238   2.542920   0 #> 758 580.495159   2.740787   0 #> 759 500.000597   2.503886   0 #> 760 501.154851   2.904322   0 #> 761 500.131485   3.183242   0 #> 762 523.678012   2.868229   0 #> 763 500.082327   2.585609   0 #> 764 500.746561   3.759257   0 #> 765 500.200401   2.618310   0 #> 766 506.386670   3.143564   0 #> 767 500.032238   4.887933   0 #> 768 500.141092   2.912143   0 #> 769 500.848907   2.786126   0 #> 770 557.156639   2.680417   0 #> 771 500.252217   4.215007   0 #> 772 622.423096   2.518164   0 #> 773 500.045360   2.534933   0 #> 774 504.743887   4.117320   0 #> 775 500.429890   2.999825   0 #> 776 500.035953   2.703901   0 #> 777 500.038391   3.029025   0 #> 778 557.925045   2.604878   0 #> 779 520.371682   2.586436   0 #> 780 505.351841   2.642096   0 #> 781 551.708600   3.427453   0 #> 782 916.060751   3.441447   0 #> 783 609.558872   3.276526   0 #> 784 775.263494   3.615743   0 #> 785 952.037017   3.191501   0 #> 786 711.717799   4.455056   0 #> 787 500.009057   2.599735   0 #> 788 501.167704   2.676909   0 #> 789 500.067914   2.642041   0 #> 790 500.092010   2.511609   0 #> 791 502.212403   2.504433   0 #> 792 501.176430   2.826319   0 #> 793 501.331159   2.567201   0 #> 794 641.033232   2.503751   0 #> 795 500.373144   2.543330   0 #> 796 500.366037   2.548969   0 #> 797 508.485547   3.023985   0 #> 798 500.169236   2.696356   0 #> 799 532.075301   2.713276   0 #> 800 640.804516   2.961135   0 #> 801 500.061677   2.870404   0 #> 802 517.069421   2.767912   0 #> 803 500.015756   2.845704   0 #> 804 500.014421   3.248896   0 #> 805 500.278016   3.014478   0 #> 806 679.260341   2.866677   0 #> 807 542.317392   3.601553   0 #> 808 502.744535   2.540066   0 #> 809 520.414201   3.027840   0 #> 810 526.109605   3.124402   0 #> 811 800.552933   4.002429   0 #> 812 660.853739   2.765812   0 #> 813 504.276364   2.544196   0 #> 814 500.321179   2.943651   0 #> 815 537.998117   3.109608   0 #> 816 533.340406   3.116225   0 #> 817 500.380842   2.709456   0 #> 818 500.178614   2.517068   0 #> 819 574.519908   2.857549   0 #> 820 631.946537   2.686252   0 #> 821 500.687917   2.889554   0 #> 822 501.384934   2.804957   0 #> 823 640.972320   3.020036   0 #> 824 502.471515   3.342838   0 #> 825 503.652045   2.984036   0 #> 826 500.190597   3.620602   0 #> 827 500.228426   2.983960   0 #> 828 521.839476   2.561931   0 #> 829 513.189886   3.118021   0 #> 830 500.325761   2.726400   0 #> 831 502.464258   2.532934   0 #> 832 503.151438   3.003642   0 #> 833 526.738470   3.130587   0 #> 834 750.888601   2.644562   0 #> 835 500.138905   2.532880   0 #> 836 501.726722   2.518033   0 #> 837 500.136657   2.998333   0 #> 838 502.863127   2.634617   0 #> 839 960.770457   2.517938   0 #> 840 505.300313   3.784322   0 #> 841 510.652346   4.076823   0 #> 842 511.292141   2.508838   0 #> 843 500.045063   2.647348   0 #> 844 685.371897   2.597536   0 #> 845 516.882656   3.123964   0 #> 846 501.234932   2.926523   0 #> 847 517.298642   3.706625   0 #> 848 516.940584   4.796933   0 #> 849 500.643474   3.155798   0 #> 850 528.247816   3.256189   0 #> 851 633.055200   3.282255   0 #> 852 550.428250   2.511610   0 #> 853 500.176829   3.513826   0 #> 854 509.989209   2.857943   0 #> 855 512.098349   2.886538   0 #> 856 500.490756   4.672080   0 #> 857 510.718203   2.713386   0 #> 858 538.922186   2.537793   0 #> 859 832.558882   3.847225   0 #> 860 530.141818   3.429372   0 #> 861 500.044816   2.553400   0 #> 862 502.752113   3.311120   0 #> 863 518.206410   2.693328   0 #> 864 500.726800   2.643915   0 #> 865 500.594796   2.694617   0 #> 866 500.304647   2.580511   0 #> 867 500.391883   3.543908   0 #> 868 504.461452   2.584746   0 #> 869 500.483530   3.103307   0 #> 870 522.661152   2.609078   0 #> 871 500.246286   2.963233   0 #> 872 613.877483   2.518114   0 #> 873 583.376275   2.755885   0 #> 874 501.070087   3.092109   0 #> 875 509.246276   3.026977   0 #> 876 684.616837   2.742356   0 #> 877 500.136221   3.190453   0 #> 878 736.392864   2.514321   0 #> 879 500.009168   2.683923   0 #> 880 500.259552   2.822325   0 #> 881 500.078081   2.671715   0 #> 882 509.362549   3.423956   0 #> 883 545.384333   3.415190   0 #> 884 500.078243   2.697856   0 #> 885 515.694557   2.751575   0 #> 886 503.652508   3.016122   0 #> 887 501.635547   2.836438   0 #> 888 501.160643   2.673379   0 #> 889 385.919610   2.623090   1 #> 890  12.781266   2.600938   1 #> 891 714.049474   2.983759   1 #> 892 618.465966   3.005908   1 #> 893 851.400213   2.860873   1 #> 894 905.973146   2.607658   1 #> 895 961.781917   2.652701   1 #> 896 164.600398   2.566478   1 #> 897 541.239397   3.754279   1 #> 898 452.075377   2.656448   1 #> 899 574.460542   2.751749   1 #> 900 247.412303   2.797286   1 #> 901 283.568291   2.739721   1 #> 902 166.779345   2.633494   1 #> 903 926.283865   2.790289   1 #> 904 224.975037   3.499887   1 #> 905 579.303108   3.074319   1 #> 906 492.280083   2.601911   1 #> 907 282.535444   3.339200   1 #> 908 397.187480   2.845311   1 #> 909 401.922982   2.644809   1 #> 910  47.091449   3.453969   1 #> 911 326.114336   2.595372   1 #> 912 587.626933   2.838492   1 #> 913  40.648009   3.240619   1 #> 914 353.474132   2.958615   1 #> 915 896.456489   2.710246   1 #> 916 722.201621   2.812204   1 #> 917 137.654900   3.338845   1 #> 918  35.741625   2.502156   1 #> 919 432.434911   2.636969   1 #> 920 814.188031   2.864551   1 #> 921 641.623848   2.963888   1 #> 922 283.478963   2.617168   1 #> 923 422.009925   3.255920   1 #> 924 429.203632   3.177943   1 #> 925 536.799103   2.562972   1 #> 926 638.287143   2.768262   1 #> 927 164.669117   4.657552   1 #> 928 220.740338   2.709346   1 #> 929 174.916537   3.285772   1 #> 930 919.028897   2.942721   1 #> 931 190.517822   2.509036   1 #> 932 356.141767   2.807762   1 #> 933 165.968270   2.761116   1 #> 934 139.197746   3.481163   1 #> 935 783.306819   4.078395   1 #> 936  80.014872   3.186513   1 #> 937  19.652851   2.579789   1 #> 938 800.049805   2.507562   1 #> 939 739.123394   3.300860   1 #> 940 291.723467   2.912556   1 #> 941 259.418613   2.532468   1 #> 942 783.848224   2.815706   1 #> 943 364.082196   3.483556   1 #> 944 735.751400   2.565430   1 #> 945 553.526201   2.884203   1 #> 946 444.133267   3.013011   1 #> 947 333.453004   2.508697   1 #> 948 802.025958   2.569033   1 #> 949  31.635032   2.671704   1 #> 950 921.660601   2.823679   1 #> 951 441.137679   2.536485   1 #> 952  56.279696   2.567901   1 #> 953 241.896536   3.125350   1 #> 954 699.487781   3.920214   1 #> 955 675.953456   3.464486   1 #> 956 206.430519   2.585181   1 #> 957 691.310524   3.851776   1 #> 958 864.621368   2.518715   1 #> 959 266.727407   3.361186   1 #> 960  68.373572   2.611220   1 #> 961 291.314622   2.631075   1 #> 962 771.141269   2.677037   1 #> 963 687.893182   2.801729   1 #> 964 489.524669   3.237143   1 #> 965 568.263606   2.752210   1 #> 966 198.408260   2.957021   1 #> 967 205.424141   2.896582   1 #> 968 311.305782   3.032766   1 #> 969 986.243211   2.600525   1 #> 970 645.334065   3.234693   1 #> 971 828.631178   3.385110   1 #> 972 899.995807   3.213734   1 #> 973 940.013326   3.255948   1 #> 974 501.955305   2.937638   1 #> 975  94.461864   2.947750   1 #> 976 849.388721   2.955370   1 #> 977 425.702813   2.543274   1 #> 978 453.039265   2.694280   1 #> 979 747.225483   3.270585   1 #> 980 394.049788   2.963540   1 #> 981   3.926907   3.174484   1 #> 982 483.076175   2.515863   1 #> 983 279.984026   2.712153   1 #> 984 362.207716   3.091968   1 #> 985 615.921899   2.945362   1 #> 986 592.492775   2.718937   1 #> 987 376.376805   3.860034   1 #>  #> [[3]] #>            ts magnitudes gen #> 1   501.49212   3.405276   2 #> 2   512.29457   2.504242   2 #> 3   511.24275   2.527591   2 #> 4   574.34036   2.560950   2 #> 5   550.73524   2.517257   2 #> 6   534.96914   2.752734   2 #> 7   560.78747   3.479382   2 #> 8   514.95712   2.609885   2 #> 9   524.81497   2.529769   2 #> 10  516.24955   3.045504   2 #> 11  514.82368   2.536161   2 #> 12  524.12301   2.665195   2 #> 13  514.99427   3.427453   2 #> 14  514.88417   3.691882   2 #> 15  623.55922   2.574988   2 #> 16  515.40878   2.754280   2 #> 17  673.07938   2.655302   2 #> 18  516.19362   2.559487   2 #> 19  604.08919   2.865896   2 #> 20  510.37916   2.561404   2 #> 21  602.61190   4.056403   2 #> 22  509.54911   3.408187   2 #> 23  508.84289   2.817555   2 #> 24  829.59082   3.074264   2 #> 25  506.40004   2.880720   2 #> 26  518.91533   2.531180   2 #> 27  517.57300   2.512847   2 #> 28  507.46781   3.383148   2 #> 29  500.87905   2.582917   2 #> 30  502.77241   2.577900   2 #> 31  503.30478   3.902265   2 #> 32  513.47567   3.342447   2 #> 33  949.62774   2.697710   2 #> 34  501.26683   3.947576   2 #> 35  652.52212   2.971872   2 #> 36  502.11605   2.892653   2 #> 37  575.94605   3.118555   2 #> 38  500.46075   2.504292   2 #> 39  559.65392   2.590792   2 #> 40  544.78398   2.747080   2 #> 41  510.24493   2.899363   2 #> 42  577.47704   2.542180   2 #> 43  618.05620   2.628788   2 #> 44  514.10186   2.515937   2 #> 45  527.55165   3.170871   2 #> 46  706.63898   3.833268   2 #> 47  525.41238   2.624972   2 #> 48  538.91951   3.091940   2 #> 49  522.49047   2.834279   2 #> 50  520.59243   3.321227   2 #> 51  521.36902   2.526773   2 #> 52  967.35884   3.660029   2 #> 53  520.60005   3.250149   2 #> 54  979.77630   3.105911   2 #> 55  507.43239   3.124095   2 #> 56  507.67590   2.786149   2 #> 57  506.75541   3.414546   2 #> 58  744.18292   2.833102   2 #> 59  512.46784   3.788529   2 #> 60  527.37497   2.754874   2 #> 61  528.09854   2.935765   2 #> 62  991.60356   3.158755   2 #> 63  553.11679   2.514195   2 #> 64  518.09495   3.118228   2 #> 65  528.10977   3.691815   2 #> 66  629.65158   2.527213   2 #> 67  545.55822   2.514586   2 #> 68  524.54490   3.697686   2 #> 69  611.60157   3.132189   2 #> 70  525.29476   2.654898   2 #> 71  529.13660   2.662027   2 #> 72  574.06043   2.930245   2 #> 73  574.14559   2.830400   2 #> 74  580.94013   2.729881   2 #> 75  945.07646   2.658836   2 #> 76  502.11519   2.636260   2 #> 77  669.97998   2.562712   2 #> 78  672.56007   2.715355   2 #> 79  673.61605   2.581866   2 #> 80  669.56773   3.287459   2 #> 81  670.02478   2.522249   2 #> 82  675.84920   3.067808   2 #> 83  677.41850   3.382257   2 #> 84  683.09929   3.514501   2 #> 85  722.36080   2.938225   2 #> 86  673.37386   2.612280   2 #> 87  693.77344   3.148056   2 #> 88  716.14487   2.884238   2 #> 89  668.09609   2.571537   2 #> 90  668.80575   2.543044   2 #> 91  693.95726   3.038057   2 #> 92  800.06296   2.834944   2 #> 93  695.31868   2.562993   2 #> 94  668.71028   2.963065   2 #> 95  833.47632   2.520295   2 #> 96  818.83094   2.513621   2 #> 97  668.16729   3.387632   2 #> 98  674.40758   2.953085   2 #> 99  669.77221   2.651854   2 #> 100 675.26511   2.585689   2 #> 101 674.57626   2.690507   2 #> 102 669.29802   2.666194   2 #> 103 668.20518   2.916273   2 #> 104 670.45654   2.876222   2 #> 105 717.61453   3.404691   2 #> 106 682.02947   2.800934   2 #> 107 674.13263   2.977903   2 #> 108 668.04506   2.606381   2 #> 109 668.46209   2.739550   2 #> 110 668.27521   2.925179   2 #> 111 668.09570   2.672746   2 #> 112 670.08457   2.907314   2 #> 113 670.81373   2.570848   2 #> 114 669.12111   2.784436   2 #> 115 673.64069   2.509885   2 #> 116 693.30276   2.868657   2 #> 117 668.92126   2.649999   2 #> 118 668.29330   2.608989   2 #> 119 668.29933   2.967220   2 #> 120 793.55035   2.583278   2 #> 121 668.44646   3.793304   2 #> 122 691.09012   2.536125   2 #> 123 668.47650   2.979139   2 #> 124 904.63145   2.861163   2 #> 125 677.67216   3.016129   2 #> 126 668.10714   2.661424   2 #> 127 670.08035   3.144851   2 #> 128 672.18806   2.692633   2 #> 129 668.74855   2.643230   2 #> 130 917.05992   3.219900   2 #> 131 669.45138   2.518501   2 #> 132 671.76506   2.806862   2 #> 133 669.88588   2.525740   2 #> 134 668.72518   3.807119   2 #> 135 670.16250   2.530695   2 #> 136 671.58955   2.857363   2 #> 137 668.54866   2.987202   2 #> 138 668.09256   3.138245   2 #> 139 689.05375   2.874410   2 #> 140 743.32926   2.597350   2 #> 141 668.09464   3.425816   2 #> 142 669.17578   2.979946   2 #> 143 750.85098   2.907648   2 #> 144 668.54804   3.186183   2 #> 145 668.05525   2.708080   2 #> 146 668.10976   4.751297   2 #> 147 700.50985   2.959140   2 #> 148 940.35395   2.581759   2 #> 149 766.98320   2.823867   2 #> 150 669.68457   2.784894   2 #> 151 668.36501   2.615341   2 #> 152 685.42696   3.645686   2 #> 153 668.04693   3.476168   2 #> 154 668.13216   4.692533   2 #> 155 668.27142   2.679865   2 #> 156 668.05152   2.602665   2 #> 157 670.41491   3.135134   2 #> 158 668.06975   3.045711   2 #> 159 678.11881   3.374234   2 #> 160 732.55392   3.989484   2 #> 161 739.87263   2.539855   2 #> 162 837.04792   2.933081   2 #> 163 669.39927   2.572054   2 #> 164 678.07327   3.374236   2 #> 165 668.94978   3.936831   2 #> 166 669.82183   2.833698   2 #> 167 913.53454   2.670835   2 #> 168 669.53370   4.966942   2 #> 169 669.04185   2.800429   2 #> 170 725.00504   2.593204   2 #> 171 670.70168   2.911764   2 #> 172 699.76552   3.453599   2 #> 173 668.16051   3.439443   2 #> 174 732.29663   2.663278   2 #> 175 668.12246   3.820981   2 #> 176 668.07962   2.911918   2 #> 177 768.57009   2.594375   2 #> 178 668.89789   2.740016   2 #> 179 678.56008   2.630944   2 #> 180 668.09798   2.506801   2 #> 181 728.13493   3.110691   2 #> 182 668.08700   2.707900   2 #> 183 682.72262   2.643745   2 #> 184 672.68514   3.218215   2 #> 185 668.71613   2.972406   2 #> 186 798.27560   2.687003   2 #> 187 672.25670   3.969898   2 #> 188 668.16756   3.236063   2 #> 189 668.04560   2.806514   2 #> 190 671.83102   2.605328   2 #> 191 707.75974   2.845373   2 #> 192 668.48711   2.736958   2 #> 193 668.24996   2.685995   2 #> 194 670.88087   2.774466   2 #> 195 668.34740   3.230793   2 #> 196 733.84162   2.820068   2 #> 197 668.74297   2.807008   2 #> 198 501.57259   3.386226   2 #> 199 500.06137   3.316746   2 #> 200 506.16472   2.728199   2 #> 201 543.06513   3.137432   2 #> 202 511.03047   4.197880   2 #> 203 504.02760   2.791907   2 #> 204 502.69104   3.423482   2 #> 205 500.06091   2.941465   2 #> 206 515.43411   3.080768   2 #> 207 610.84535   2.603764   2 #> 208 500.42587   2.705883   2 #> 209 500.36844   2.564042   2 #> 210 503.66426   3.495598   2 #> 211 992.43982   2.525830   2 #> 212 502.81676   2.521139   2 #> 213 525.72630   2.931336   2 #> 214 624.26755   2.617293   2 #> 215 502.81102   2.716379   2 #> 216 508.10146   2.627856   2 #> 217 504.91052   2.553657   2 #> 218 516.65617   2.673572   2 #> 219 502.70390   2.585291   2 #> 220 503.00719   3.132280   2 #> 221 819.65446   3.975494   2 #> 222 502.67496   2.945146   2 #> 223 504.45988   4.501532   2 #> 224 525.97716   2.908776   2 #> 225 719.98474   2.662914   2 #> 226 520.79884   2.901443   2 #> 227 521.59386   3.321657   2 #> 228 516.04496   4.387830   2 #> 229 637.66200   2.805170   2 #> 230 507.02193   2.831609   2 #> 231 517.53015   2.700362   2 #> 232 501.23384   4.608964   2 #> 233 545.65298   2.594285   2 #> 234 542.27985   2.694050   2 #> 235 705.96803   2.973872   2 #> 236 523.85140   2.696392   2 #> 237 502.48410   3.358293   2 #> 238 504.87381   3.394153   2 #> 239 502.71936   2.659563   2 #> 240 739.11221   3.200687   2 #> 241 511.24897   2.635328   2 #> 242 509.00447   2.832889   2 #> 243 567.02049   2.548869   2 #> 244 517.73681   2.553391   2 #> 245 544.56213   3.189301   2 #> 246 517.15241   2.531191   2 #> 247 515.45337   2.599850   2 #> 248 529.54308   2.651362   2 #> 249 520.71499   2.558617   2 #> 250 526.22596   2.568344   2 #> 251 615.91027   3.318836   2 #> 252 515.02160   2.938879   2 #> 253 515.56987   3.152680   2 #> 254 514.95232   2.716814   2 #> 255 515.00323   2.755641   2 #> 256 515.66341   2.664448   2 #> 257 525.96770   3.270751   2 #> 258 519.96610   3.034811   2 #> 259 515.19349   2.638923   2 #> 260 535.44999   2.723007   2 #> 261 516.70313   2.974300   2 #> 262 521.21515   2.568024   2 #> 263 652.77147   2.871240   2 #> 264 522.40810   2.519308   2 #> 265 515.02372   2.517432   2 #> 266 520.69209   2.632860   2 #> 267 515.39561   2.776897   2 #> 268 516.22587   2.756497   2 #> 269 916.88660   2.708951   2 #> 270 514.98533   2.575100   2 #> 271 665.27397   2.592395   2 #> 272 516.64115   2.543029   2 #> 273 522.99492   3.119546   2 #> 274 516.76582   2.867299   2 #> 275 515.11370   2.587950   2 #> 276 516.33988   2.630382   2 #> 277 532.94940   2.831418   2 #> 278 835.34999   2.666745   2 #> 279 515.17839   2.629062   2 #> 280 565.75020   3.008920   2 #> 281 516.47106   3.271182   2 #> 282 550.84478   2.996704   2 #> 283 515.12819   2.824844   2 #> 284 515.84417   3.176777   2 #> 285 517.18775   3.797019   2 #> 286 515.07580   2.784868   2 #> 287 521.94226   2.680789   2 #> 288 515.29736   2.991063   2 #> 289 957.86966   2.965619   2 #> 290 523.41716   3.080182   2 #> 291 515.52131   2.813610   2 #> 292 516.23557   2.761091   2 #> 293 558.11003   2.935404   2 #> 294 514.92410   2.695378   2 #> 295 515.00161   2.650354   2 #> 296 518.85983   2.522025   2 #> 297 519.61880   2.746208   2 #> 298 515.67323   2.726367   2 #> 299 515.06583   2.526469   2 #> 300 517.46376   2.899498   2 #> 301 517.36416   2.633691   2 #> 302 515.11557   2.611406   2 #> 303 515.23546   2.547982   2 #> 304 515.06425   2.553922   2 #> 305 554.96663   4.362374   2 #> 306 862.43137   3.091931   2 #> 307 604.19467   2.557397   2 #> 308 515.33317   2.597896   2 #> 309 523.54393   3.168222   2 #> 310 663.50494   2.725528   2 #> 311 515.44770   2.661096   2 #> 312 515.08047   3.259062   2 #> 313 590.05914   3.129812   2 #> 314 515.79491   2.537057   2 #> 315 515.43854   3.327656   2 #> 316 608.09805   2.782087   2 #> 317 515.92758   2.515898   2 #> 318 518.89443   2.648387   2 #> 319 888.72274   2.767950   2 #> 320 525.49696   2.723139   2 #> 321 788.91217   3.456295   2 #> 322 515.05554   2.528445   2 #> 323 610.34515   2.573760   2 #> 324 993.58752   2.787620   2 #> 325 517.78355   2.929720   2 #> 326 515.48372   2.610666   2 #> 327 516.27834   3.393803   2 #> 328 519.15642   2.577731   2 #> 329 521.23364   2.905678   2 #> 330 551.64842   2.901212   2 #> 331 573.78008   2.531191   2 #> 332 519.34042   2.720500   2 #> 333 534.07579   2.674578   2 #> 334 525.17604   2.537656   2 #> 335 515.90358   3.077974   2 #> 336 534.85111   2.580434   2 #> 337 516.51942   2.587110   2 #> 338 602.95269   3.550292   2 #> 339 516.29234   2.817938   2 #> 340 514.93680   4.792705   2 #> 341 515.24669   3.515164   2 #> 342 518.73454   2.529200   2 #> 343 579.16118   2.547730   2 #> 344 618.11452   2.911055   2 #> 345 517.21371   2.773900   2 #> 346 541.67422   3.178703   2 #> 347 518.55233   3.051749   2 #> 348 616.02773   3.204438   2 #> 349 501.52645   2.539398   2 #> 350 830.30679   2.741336   2 #> 351 508.07153   3.393816   2 #> 352 993.89832   2.745854   2 #> 353 520.36853   3.199054   2 #> 354 508.66595   2.907235   2 #> 355 514.00422   2.829455   2 #> 356 508.76676   3.535315   2 #> 357 516.92742   2.820670   2 #> 358 529.91792   2.946387   2 #> 359 510.94318   2.589917   2 #> 360 510.38663   2.903494   2 #> 361 542.84430   2.932811   2 #> 362 508.92914   2.763314   2 #> 363 508.67243   3.124862   2 #> 364 660.13650   2.979301   2 #> 365 953.76923   3.186012   2 #> 366 924.26895   2.699372   2 #> 367 509.93334   2.991617   2 #> 368 504.49061   2.777441   2 #> 369 503.96725   2.938924   2 #> 370 512.83131   2.821710   2 #> 371 503.86210   3.372056   2 #> 372 503.88497   2.511028   2 #> 373 502.85445   2.973466   2 #> 374 501.69469   2.697371   2 #> 375 715.40119   6.000639   2 #> 376 503.22080   2.580577   2 #> 377 605.37948   3.349855   2 #> 378 539.49420   2.640093   2 #> 379 826.60809   2.631974   2 #> 380 808.64067   2.517296   2 #> 381 912.56941   2.703339   2 #> 382 819.48322   2.521267   2 #> 383 872.49055   2.553956   2 #> 384 832.53604   2.845333   2 #> 385 808.02367   2.668222   2 #> 386 807.70044   4.411606   2 #> 387 807.47141   2.981971   2 #> 388 807.89491   2.841366   2 #> 389 848.71306   2.588921   2 #> 390 841.65448   3.013953   2 #> 391 810.54074   3.396592   2 #> 392 832.43771   2.893284   2 #> 393 821.71129   2.520211   2 #> 394 807.45727   2.500024   2 #> 395 807.46526   3.161960   2 #> 396 808.23822   3.223023   2 #> 397 818.17351   2.662669   2 #> 398 847.32594   2.507866   2 #> 399 811.58929   3.042735   2 #> 400 808.95830   2.831388   2 #> 401 534.31972   2.706677   2 #> 402 817.98192   3.197990   2 #> 403 581.88343   2.680067   2 #> 404 540.64155   2.544430   2 #> 405 528.42902   2.519189   2 #> 406 524.46339   3.074980   2 #> 407 502.73972   3.087709   2 #> 408 511.44355   2.640753   2 #> 409 502.41470   2.782874   2 #> 410 548.24368   2.913880   2 #> 411 517.82663   2.658953   2 #> 412 505.73420   2.814444   2 #> 413 502.50000   2.523851   2 #> 414 502.22960   3.143892   2 #> 415 514.29083   2.535556   2 #> 416 519.28288   2.576068   2 #> 417 500.71062   2.759101   2 #> 418 505.79496   2.610256   2 #> 419 638.39310   2.629436   2 #> 420 572.52539   3.597984   2 #> 421 503.23726   2.942639   2 #> 422 506.73869   2.819408   2 #> 423 569.29986   2.901594   2 #> 424 579.27105   2.513268   2 #> 425 500.83518   3.967276   2 #> 426 961.85808   2.550910   2 #> 427 500.92916   5.478828   2 #> 428 554.50815   2.884047   2 #> 429 531.22867   3.794034   2 #> 430 501.35174   2.516018   2 #> 431 501.34464   3.302277   2 #> 432 500.72449   2.505810   2 #> 433 501.02462   2.954556   2 #> 434 829.39253   2.924693   2 #> 435 501.40535   2.566048   2 #> 436 500.71408   2.774110   2 #> 437 502.03833   3.583904   2 #> 438 504.83542   2.903491   2 #> 439 502.51152   2.652646   2 #> 440 508.51558   2.656594   2 #> 441 502.74714   2.877939   2 #> 442 500.85763   2.720739   2 #> 443 555.18823   3.100850   2 #> 444 502.14555   2.740169   2 #> 445 503.78075   3.108314   2 #> 446 520.80858   2.701772   2 #> 447 500.79847   2.618577   2 #> 448 501.63906   2.973767   2 #> 449 501.25237   2.857887   2 #> 450 500.75904   2.979331   2 #> 451 503.91853   2.861309   2 #> 452 509.77340   3.260954   2 #> 453 552.03932   3.071745   2 #> 454 501.59975   2.990901   2 #> 455 502.50395   2.752482   2 #> 456 535.94030   2.816478   2 #> 457 500.97682   2.700386   2 #> 458 504.43270   2.725177   2 #> 459 500.78250   2.648574   2 #> 460 500.71160   2.559057   2 #> 461 510.56673   2.924778   2 #> 462 501.06107   2.718537   2 #> 463 501.02273   3.079122   2 #> 464 501.50242   2.762569   2 #> 465 501.17891   2.616476   2 #> 466 522.03226   2.539696   2 #> 467 510.87444   3.060048   2 #> 468 612.40927   2.606978   2 #> 469 505.10784   2.566557   2 #> 470 592.30899   3.411125   2 #> 471 540.43186   2.834223   2 #> 472 501.21383   3.606681   2 #> 473 509.55605   2.641524   2 #> 474 501.21929   2.523180   2 #> 475 512.72547   3.130298   2 #> 476 502.74803   2.658894   2 #> 477 531.40473   3.012236   2 #> 478 500.75302   3.073939   2 #> 479 501.97036   2.783888   2 #> 480 501.18446   3.230485   2 #> 481 607.84100   2.650852   2 #> 482 506.39173   2.652507   2 #> 483 539.02183   2.539568   2 #> 484 500.95524   2.722326   2 #> 485 925.55872   2.875337   2 #> 486 501.52051   3.275290   2 #> 487 612.94767   2.827610   2 #> 488 500.79303   3.227034   2 #> 489 872.81689   2.524420   2 #> 490 503.48783   2.533602   2 #> 491 535.37512   2.849077   2 #> 492 519.63523   2.554502   2 #> 493 500.83020   3.192934   2 #> 494 512.29326   2.634114   2 #> 495 501.21240   3.710037   2 #> 496 500.82888   3.287143   2 #> 497 500.88673   2.962967   2 #> 498 500.96512   2.678762   2 #> 499 511.85844   2.925795   2 #> 500 515.83649   2.513420   2 #> 501 636.83279   2.520603   2 #> 502 529.06491   2.847463   2 #> 503 848.03139   2.713531   2 #> 504 821.58518   2.511555   2 #> 505 503.07895   3.533189   2 #> 506 538.98903   3.384455   2 #> 507 501.34648   3.927178   2 #> 508 501.35932   3.155191   2 #> 509 500.72484   2.728839   2 #> 510 628.75522   2.764685   2 #> 511 997.65154   2.542492   2 #> 512 533.33448   2.711685   2 #> 513 840.17865   2.625890   2 #> 514 523.72327   2.846372   2 #> 515 500.69465   2.628157   2 #> 516 727.92021   2.629811   2 #> 517 500.74185   2.514668   2 #> 518 502.11160   2.558347   2 #> 519 550.56307   3.179551   2 #> 520 501.18022   3.692430   2 #> 521 510.51574   3.114616   2 #> 522 520.54967   3.359844   2 #> 523 506.03893   2.695778   2 #> 524 507.96072   3.055264   2 #> 525 520.29609   2.697063   2 #> 526 502.65042   2.670410   2 #> 527 562.38621   2.728351   2 #> 528 829.49868   3.405506   2 #> 529 830.25042   2.535447   2 #> 530 537.89600   2.580221   2 #> 531 501.43990   2.698032   2 #> 532 524.99360   2.639033   2 #> 533 951.28833   3.083802   2 #> 534 502.70516   2.654271   2 #> 535 960.32474   2.993151   2 #> 536 534.21263   2.692976   2 #> 537 505.64257   2.831744   2 #> 538 500.43034   2.589257   2 #> 539 500.42103   2.559440   2 #> 540 510.44650   2.900377   2 #> 541 501.72776   2.556884   2 #> 542 501.12281   3.511373   2 #> 543 507.17481   2.592590   2 #> 544 673.85806   2.618938   2 #> 545 500.43313   2.981779   2 #> 546 536.50052   2.571696   2 #> 547 500.42098   2.650312   2 #> 548 678.75664   3.448532   2 #> 549 628.00217   3.279092   2 #> 550 638.93711   2.936492   2 #> 551 706.14998   3.951292   2 #> 552 666.16572   3.050511   2 #> 553 972.70901   2.770566   2 #> 554 510.66369   2.885242   2 #> 555 517.57579   3.193459   2 #> 556 502.30080   2.507314   2 #> 557 568.01007   3.238180   2 #> 558 560.22061   3.032605   2 #> 559 502.05516   3.052777   2 #> 560 505.60429   2.650610   2 #> 561 501.45719   2.838910   2 #> 562 502.03504   2.713114   2 #> 563 521.93915   2.782049   2 #> 564 554.06384   2.811922   2 #> 565 506.38831   4.825073   2 #> 566 504.54921   2.644268   2 #> 567 525.42981   2.918982   2 #> 568 501.46997   2.591276   2 #> 569 892.72739   3.530973   2 #> 570 501.50737   2.853610   2 #> 571 511.38555   2.606113   2 #> 572 502.11412   2.747117   2 #> 573 501.52674   2.722367   2 #> 574 502.02678   3.144429   2 #> 575 502.99678   2.871586   2 #> 576 521.96270   3.584944   2 #> 577 501.54758   3.645339   2 #> 578 501.51473   2.592052   2 #> 579 508.13743   2.806132   2 #> 580 503.56216   2.767284   2 #> 581 509.77499   2.508528   2 #> 582 502.00100   2.756808   2 #> 583 913.34524   2.708190   2 #> 584 505.51812   2.764435   2 #> 585 650.37278   2.712979   2 #> 586 502.38290   3.015068   2 #> 587 520.07925   3.073152   2 #> 588 602.18550   5.612450   2 #> 589 751.67371   2.637710   2 #> 590 504.87288   2.564740   2 #> 591 506.41467   3.060205   2 #> 592 501.40498   2.703546   2 #> 593 509.71769   2.579649   2 #> 594 515.83710   2.788260   2 #> 595 500.58641   3.147413   2 #> 596 630.61999   2.991661   2 #> 597 500.71383   3.949655   2 #> 598 501.03335   2.593256   2 #> 599 500.74369   3.069131   2 #> 600 529.70323   2.735688   2 #> 601 501.57922   2.636235   2 #> 602 508.25274   3.411663   2 #> 603 520.82200   2.509351   2 #> 604 507.77163   2.689331   2 #> 605 500.16374   2.625029   2 #> 606 504.16229   2.538911   2 #> 607 589.65815   2.586508   2 #> 608 581.62809   2.939250   2 #> 609 595.89057   3.025524   2 #> 610 544.28953   2.767487   2 #> 611 878.43046   2.706445   2 #> 612 525.17781   2.535112   2 #> 613 505.04093   2.508012   2 #> 614 518.06360   2.971096   2 #> 615 507.43751   2.808529   2 #> 616 622.09377   2.974071   2 #> 617 620.44027   2.868847   2 #> 618 620.91081   3.238165   2 #> 619 622.20509   2.880304   2 #> 620 626.11349   3.636311   2 #> 621 625.29611   2.724220   2 #> 622 620.99786   2.599484   2 #> 623 502.64766   2.843542   2 #> 624 696.75751   3.603525   2 #> 625 501.16418   3.581802   2 #> 626 518.86900   2.872077   2 #> 627 501.12566   2.592924   2 #> 628 501.17806   3.211562   2 #> 629 540.11247   2.645665   2 #> 630 571.28519   2.688106   2 #> 631 570.91350   2.519568   2 #> 632 507.02501   3.691449   2 #> 633 539.28379   2.642923   2 #> 634 503.40686   2.792428   2 #> 635 500.06641   3.061425   2 #> 636 501.71877   2.676092   2 #> 637 665.73854   2.696141   2 #> 638 507.84928   3.103028   2 #> 639 503.30077   2.643724   2 #> 640 555.32457   2.578529   2 #> 641 929.10282   2.998036   2 #> 642 500.43435   3.102020   2 #> 643 504.23797   3.483609   2 #> 644 605.20125   2.556187   2 #> 645 500.54487   3.085311   2 #> 646 508.51785   3.957080   2 #> 647 586.64225   2.699187   2 #> 648 743.86309   2.635590   2 #> 649 501.30737   2.635400   2 #> 650 647.07100   4.416540   2 #> 651 508.47807   2.590719   2 #> 652 625.96811   2.985878   2 #> 653 507.51817   2.548305   2 #> 654 563.57879   3.333222   2 #> 655 957.91642   3.234486   2 #> 656 713.45493   3.057701   2 #> 657 711.79384   3.381628   2 #> 658 713.81370   3.449708   2 #> 659 739.26038   2.939204   2 #> 660 715.05659   2.958381   2 #> 661 500.65253   3.488224   2 #> 662 655.05949   3.985464   2 #> 663 527.30635   2.690036   2 #> 664 803.40248   2.551741   2 #> 665 801.29469   3.887762   2 #> 666 800.86105   2.744387   2 #> 667 953.16981   2.747403   2 #> 668 552.17673   2.552834   2 #> 669 503.13638   2.751484   2 #> 670 524.75413   2.592711   2 #> 671 502.50895   3.611895   2 #> 672 503.29778   2.883375   2 #> 673 690.40557   2.607106   2 #> 674 515.00251   2.648765   2 #> 675 520.77865   2.875823   2 #> 676 519.53071   4.795842   2 #> 677 598.79716   3.055352   2 #> 678 517.09340   2.901067   2 #> 679 517.01453   2.523889   2 #> 680 522.39820   2.571982   2 #> 681 517.29202   3.129316   2 #> 682 518.57944   3.228891   2 #> 683 517.01961   2.533144   2 #> 684 517.05973   2.704177   2 #> 685 516.95201   2.532659   2 #> 686 709.41101   2.549682   2 #> 687 517.87263   2.789778   2 #> 688 644.62078   2.817887   2 #> 689 614.40238   3.138311   2 #> 690 502.35405   2.563917   2 #> 691 517.43086   2.942543   2 #> 692 523.17739   3.380015   2 #> 693 500.77542   2.530730   2 #> 694 519.73626   2.801800   2 #> 695 500.53252   2.525809   2 #> 696 510.50862   2.935050   2 #> 697 539.29589   2.657493   2 #> 698 885.11405   2.754850   2 #> 699 832.72974   2.836596   2 #> 700 782.61453   2.888230   2 #> 701 502.91757   2.902880   2 #> 702 500.30853   2.871110   2 #> 703 510.24735   3.343325   2 #> 704 582.99335   2.735260   2 #> 705 510.20897   3.175164   2 #> 706 552.91942   3.065932   2 #> 707 520.94492   2.559009   2 #> 708 512.98545   4.102703   2 #> 709 387.17224   2.681292   2 #> 710 541.38669   2.517837   2 #> 711 453.13024   2.753981   2 #> 712 304.42211   2.879596   2 #> 713 733.81523   2.681756   2 #> 714 316.73511   2.756718   2 #> 715  47.50631   2.540617   2 #> 716 336.61311   2.656059   2 #> 717  87.62579   2.610461   2 #> 718 370.68844   3.135822   2 #> 719 248.50166   2.681308   2 #> 720 915.73679   3.385276   2 #> 721 174.39861   2.951764   2 #> 722 174.15195   2.643814   2 #> 723 169.65729   3.076081   2 #> 724 176.13513   2.629642   2 #> 725 227.71302   3.580508   2 #> 726 279.40169   2.722019   2 #> 727 165.04246   3.422270   2 #> 728 438.62948   3.512307   2 #> 729 723.01256   2.786772   2 #> 730 193.40809   2.669716   2 #> 731 139.38242   2.763115   2 #> 732 783.54975   2.699589   2 #> 733 804.81078   3.295048   2 #> 734 784.87995   3.128216   2 #> 735  89.30357   2.525685   2 #> 736  82.52786   2.709683   2 #> 737 739.24923   2.674473   2 #> 738 314.71169   2.637667   2 #> 739 956.90609   4.244313   2 #> 740 364.13589   2.737327   2 #> 741 559.07207   2.778421   2 #> 742 718.05610   2.561612   2 #> 743 717.96782   3.038536   2 #> 744 694.84323   2.842880   2 #> 745 691.59555   2.518380   2 #> 746 489.53039   2.716729   2 #> 747 832.19642   2.814777   2 #> 748 844.40205   2.506012   2 #> 749 828.85654   3.378020   2 #> 750 942.25610   2.689198   2 #>  #> [[4]] #>           ts magnitudes gen #> 1   512.6867   2.630704   3 #> 2   501.6156   2.732564   3 #> 3   604.1191   3.324693   3 #> 4   604.3550   2.644407   3 #> 5   504.5531   2.659634   3 #> 6   501.9245   2.529037   3 #> 7   501.7120   4.413961   3 #> 8   539.2825   2.505884   3 #> 9   531.8133   2.892745   3 #> 10  967.3923   2.760594   3 #> 11  510.3791   2.793042   3 #> 12  513.2991   2.725272   3 #> 13  512.5274   2.868738   3 #> 14  512.8219   3.218193   3 #> 15  528.4339   2.687066   3 #> 16  525.3838   2.840743   3 #> 17  593.3622   2.518986   3 #> 18  502.5458   2.636648   3 #> 19  733.0920   2.686709   3 #> 20  710.2746   3.841906   3 #> 21  770.4024   3.649530   3 #> 22  668.8997   3.310929   3 #> 23  806.5392   2.542382   3 #> 24  905.3168   2.589125   3 #> 25  681.4140   2.564983   3 #> 26  668.8696   4.239109   3 #> 27  668.2140   2.514429   3 #> 28  701.6839   4.061788   3 #> 29  670.8106   2.700292   3 #> 30  709.8723   2.571484   3 #> 31  668.7553   2.526031   3 #> 32  668.1249   3.327076   3 #> 33  682.2145   2.802997   3 #> 34  681.8510   2.752330   3 #> 35  683.1652   2.751610   3 #> 36  742.5609   2.583295   3 #> 37  761.7898   2.757450   3 #> 38  668.5679   2.600789   3 #> 39  668.5974   2.629023   3 #> 40  668.1531   3.217571   3 #> 41  669.8667   2.775490   3 #> 42  672.2307   2.928372   3 #> 43  669.7239   2.827128   3 #> 44  707.0143   3.507087   3 #> 45  809.1561   2.570580   3 #> 46  884.0949   2.607493   3 #> 47  818.0200   2.508760   3 #> 48  771.9679   2.675941   3 #> 49  683.0267   2.900874   3 #> 50  669.7097   2.522286   3 #> 51  669.5795   3.898530   3 #> 52  770.6314   2.794799   3 #> 53  803.2812   2.752711   3 #> 54  689.8275   2.647160   3 #> 55  669.5586   2.662073   3 #> 56  670.4211   3.592015   3 #> 57  684.5907   3.296814   3 #> 58  670.1190   2.887091   3 #> 59  710.8776   2.536120   3 #> 60  697.6763   2.593156   3 #> 61  670.5561   2.502568   3 #> 62  669.5706   2.903904   3 #> 63  814.4401   4.260923   3 #> 64  669.8163   2.651992   3 #> 65  725.0338   2.591966   3 #> 66  670.9497   3.221029   3 #> 67  709.6551   2.655645   3 #> 68  676.8483   2.966489   3 #> 69  688.6472   2.850711   3 #> 70  668.3183   3.955968   3 #> 71  714.2980   2.515174   3 #> 72  778.4113   2.559854   3 #> 73  672.6991   2.522683   3 #> 74  674.2233   3.037815   3 #> 75  681.4753   2.815011   3 #> 76  675.0402   2.730954   3 #> 77  669.0249   3.506152   3 #> 78  515.7903   2.649751   3 #> 79  538.0604   3.193418   3 #> 80  511.1492   5.042199   3 #> 81  540.6610   3.098929   3 #> 82  689.4885   3.320303   3 #> 83  507.1983   3.010767   3 #> 84  504.4763   2.783906   3 #> 85  511.5823   2.774190   3 #> 86  504.7815   3.124913   3 #> 87  533.7999   2.532068   3 #> 88  510.0154   2.733440   3 #> 89  521.7413   2.738086   3 #> 90  561.5332   2.796421   3 #> 91  522.2547   2.641330   3 #> 92  516.9680   2.597414   3 #> 93  582.5378   2.819812   3 #> 94  516.4260   2.604730   3 #> 95  516.6806   3.846064   3 #> 96  501.7088   2.523819   3 #> 97  501.2660   2.672107   3 #> 98  517.9612   3.398660   3 #> 99  513.1717   2.643820   3 #> 100 567.5518   2.733837   3 #> 101 670.6068   2.739228   3 #> 102 534.3246   2.956380   3 #> 103 553.7401   3.172864   3 #> 104 508.9107   2.829428   3 #> 105 549.5781   2.684608   3 #> 106 506.6726   2.616617   3 #> 107 842.5109   3.358860   3 #> 108 761.2417   2.536884   3 #> 109 518.6261   2.661054   3 #> 110 515.6324   2.607569   3 #> 111 516.8112   2.730538   3 #> 112 528.0681   2.897845   3 #> 113 971.8709   2.885174   3 #> 114 520.7854   2.874963   3 #> 115 520.5134   2.626789   3 #> 116 515.6719   2.524422   3 #> 117 814.4579   2.927300   3 #> 118 555.4421   3.016335   3 #> 119 863.2937   2.637819   3 #> 120 516.8197   2.546031   3 #> 121 793.6497   3.910275   3 #> 122 567.5034   2.926942   3 #> 123 514.9502   2.693789   3 #> 124 514.9654   2.832714   3 #> 125 520.5084   3.221683   3 #> 126 516.4010   2.673683   3 #> 127 520.5518   2.750867   3 #> 128 568.5106   3.562487   3 #> 129 515.6199   2.549564   3 #> 130 509.7461   2.775691   3 #> 131 994.9779   2.909434   3 #> 132 521.3215   2.713538   3 #> 133 593.5749   3.062796   3 #> 134 587.4351   2.512088   3 #> 135 893.4023   3.091885   3 #> 136 716.2672   2.667738   3 #> 137 747.8672   3.166164   3 #> 138 723.7712   2.885788   3 #> 139 718.3910   2.618552   3 #> 140 718.5565   2.737560   3 #> 141 933.9064   3.005680   3 #> 142 721.1262   3.130744   3 #> 143 733.3941   2.968663   3 #> 144 715.5613   2.550114   3 #> 145 715.8002   2.564055   3 #> 146 715.5102   2.618963   3 #> 147 718.5638   2.980479   3 #> 148 715.5534   2.649197   3 #> 149 745.6484   3.277520   3 #> 150 715.5000   2.990749   3 #> 151 716.6816   2.579892   3 #> 152 737.8753   3.230328   3 #> 153 717.8123   3.315307   3 #> 154 951.1833   2.688763   3 #> 155 715.4957   2.782772   3 #> 156 743.6693   3.335392   3 #> 157 740.3381   2.777369   3 #> 158 715.4842   2.534086   3 #> 159 715.4834   3.008963   3 #> 160 715.4607   2.908493   3 #> 161 716.8160   3.254370   3 #> 162 718.3060   3.570479   3 #> 163 716.9207   3.371668   3 #> 164 715.7494   2.964446   3 #> 165 717.3994   2.967499   3 #> 166 715.4103   2.867657   3 #> 167 715.5598   2.770517   3 #> 168 721.7286   2.776245   3 #> 169 718.3390   2.747474   3 #> 170 716.2189   2.655919   3 #> 171 715.7311   2.529482   3 #> 172 720.0754   2.636086   3 #> 173 716.4224   2.831199   3 #> 174 730.2259   3.167602   3 #> 175 715.4911   2.706662   3 #> 176 718.0960   2.501037   3 #> 177 715.6605   3.126652   3 #> 178 715.8477   2.766432   3 #> 179 742.3311   3.114393   3 #> 180 716.1659   3.216845   3 #> 181 715.4844   3.131800   3 #> 182 715.8496   2.668205   3 #> 183 715.5080   2.506641   3 #> 184 716.2771   2.691282   3 #> 185 745.3129   2.620569   3 #> 186 715.4022   2.637645   3 #> 187 716.7746   2.803061   3 #> 188 720.5288   3.214914   3 #> 189 716.0935   3.503781   3 #> 190 715.7384   2.927626   3 #> 191 719.0904   2.652332   3 #> 192 734.6621   3.283048   3 #> 193 715.6929   2.593330   3 #> 194 717.4146   3.203768   3 #> 195 724.1805   4.628554   3 #> 196 715.4093   3.294575   3 #> 197 729.0512   3.064073   3 #> 198 724.4180   3.382822   3 #> 199 750.1889   2.881584   3 #> 200 809.9146   2.661518   3 #> 201 741.7302   2.822421   3 #> 202 715.4517   2.550801   3 #> 203 748.8971   2.671991   3 #> 204 716.0019   2.552660   3 #> 205 894.5635   3.146659   3 #> 206 784.9382   2.915756   3 #> 207 720.5585   2.633582   3 #> 208 718.0128   2.900128   3 #> 209 715.4530   2.941213   3 #> 210 745.8653   3.006458   3 #> 211 725.3836   2.843520   3 #> 212 715.5213   3.077237   3 #> 213 715.6867   2.614992   3 #> 214 921.8200   2.510047   3 #> 215 794.2842   2.695358   3 #> 216 839.4855   2.685812   3 #> 217 724.3137   2.810187   3 #> 218 716.8516   2.601546   3 #> 219 840.0026   2.620069   3 #> 220 718.4197   2.709861   3 #> 221 715.6337   2.751363   3 #> 222 715.5591   2.513780   3 #> 223 763.3148   3.568304   3 #> 224 716.6415   2.636332   3 #> 225 716.1289   2.610239   3 #> 226 775.7268   2.658353   3 #> 227 715.6928   4.459182   3 #> 228 715.7373   2.829982   3 #> 229 715.4847   2.833825   3 #> 230 719.4554   2.778176   3 #> 231 733.1666   2.561472   3 #> 232 874.7795   2.841868   3 #> 233 716.1265   2.740239   3 #> 234 715.4068   2.587221   3 #> 235 915.0918   3.287389   3 #> 236 715.8615   2.504983   3 #> 237 715.4662   3.120164   3 #> 238 780.5917   2.563907   3 #> 239 733.9485   2.850123   3 #> 240 720.2453   3.641696   3 #> 241 715.4196   3.019163   3 #> 242 717.5173   2.503461   3 #> 243 724.3311   3.739610   3 #> 244 715.6418   3.542399   3 #> 245 910.6492   3.143490   3 #> 246 716.0103   2.604944   3 #> 247 720.7346   3.320714   3 #> 248 715.8481   3.249927   3 #> 249 757.0482   2.551484   3 #> 250 716.7063   2.927513   3 #> 251 756.7577   4.038855   3 #> 252 716.2434   2.701451   3 #> 253 733.8941   2.581599   3 #> 254 716.4893   2.660739   3 #> 255 753.8581   2.755463   3 #> 256 718.4267   2.982891   3 #> 257 719.0237   2.903643   3 #> 258 719.7584   2.826826   3 #> 259 715.4039   2.751129   3 #> 260 715.4461   3.053629   3 #> 261 755.7193   3.562289   3 #> 262 732.4614   2.631745   3 #> 263 715.4306   2.514814   3 #> 264 715.7937   3.891232   3 #> 265 717.7941   2.550347   3 #> 266 724.4525   4.008450   3 #> 267 764.1619   3.071813   3 #> 268 740.2471   2.673199   3 #> 269 720.0519   2.758163   3 #> 270 729.9081   3.203438   3 #> 271 721.8206   3.254593   3 #> 272 715.4664   2.577335   3 #> 273 775.7296   2.893452   3 #> 274 720.2092   2.784867   3 #> 275 715.6029   2.565795   3 #> 276 715.8810   2.506961   3 #> 277 715.8845   2.942111   3 #> 278 715.8909   3.091136   3 #> 279 736.1768   2.523531   3 #> 280 715.5253   3.401462   3 #> 281 715.5751   2.593671   3 #> 282 716.3636   2.858257   3 #> 283 721.8641   2.849362   3 #> 284 723.1617   2.591881   3 #> 285 754.5456   2.673267   3 #> 286 856.3153   2.777750   3 #> 287 716.6680   2.654003   3 #> 288 759.9462   2.634732   3 #> 289 715.6205   3.091151   3 #> 290 715.8908   2.601450   3 #> 291 723.1952   3.542264   3 #> 292 715.6652   3.537763   3 #> 293 716.0323   3.113528   3 #> 294 715.6243   2.859756   3 #> 295 715.4624   2.805037   3 #> 296 742.8156   3.353917   3 #> 297 776.3981   3.266330   3 #> 298 716.2677   2.797337   3 #> 299 717.8352   2.548129   3 #> 300 715.6195   2.515825   3 #> 301 716.1655   2.921737   3 #> 302 717.6746   2.581915   3 #> 303 715.4112   2.544977   3 #> 304 718.1104   3.714180   3 #> 305 715.7150   2.879042   3 #> 306 716.1706   2.571988   3 #> 307 852.4915   2.680507   3 #> 308 843.6564   2.503251   3 #> 309 808.5297   2.500565   3 #> 310 809.4689   3.126456   3 #> 311 813.1253   2.596400   3 #> 312 808.8296   2.503899   3 #> 313 841.6627   3.773303   3 #> 314 842.1698   2.628857   3 #> 315 810.9509   2.898529   3 #> 316 818.0088   2.769762   3 #> 317 557.0331   3.209363   3 #> 318 515.4508   2.865985   3 #> 319 508.1955   3.089522   3 #> 320 556.4744   2.568405   3 #> 321 524.3939   2.582311   3 #> 322 501.2279   3.200273   3 #> 323 501.6709   2.778111   3 #> 324 557.0188   2.541976   3 #> 325 512.5675   2.832298   3 #> 326 501.0439   2.632193   3 #> 327 506.6028   3.336248   3 #> 328 684.8448   3.594858   3 #> 329 611.4328   3.115220   3 #> 330 501.5981   3.191079   3 #> 331 539.1023   3.068077   3 #> 332 500.9719   2.887989   3 #> 333 893.5865   2.612528   3 #> 334 500.9500   2.648453   3 #> 335 605.5604   2.660533   3 #> 336 682.6782   2.937619   3 #> 337 502.5642   3.297848   3 #> 338 843.2071   2.837489   3 #> 339 508.6943   2.723249   3 #> 340 504.3666   2.781194   3 #> 341 502.0750   3.263545   3 #> 342 559.4993   3.022639   3 #> 343 509.7341   3.076027   3 #> 344 509.4468   2.531354   3 #> 345 663.6166   3.963573   3 #> 346 662.9628   3.091686   3 #> 347 946.5929   2.590384   3 #> 348 647.9206   2.557073   3 #> 349 501.8536   2.720614   3 #> 350 501.4454   2.672285   3 #> 351 540.9166   2.862695   3 #> 352 503.7258   2.603622   3 #> 353 521.4898   3.118038   3 #> 354 575.9017   2.704513   3 #> 355 501.8119   3.200645   3 #> 356 502.5517   2.736863   3 #> 357 564.9414   2.522888   3 #> 358 501.1871   3.065963   3 #> 359 501.7613   4.761014   3 #> 360 567.0077   2.639125   3 #> 361 501.8176   2.555998   3 #> 362 510.3035   2.692037   3 #> 363 589.4660   2.549994   3 #> 364 501.6714   2.609062   3 #> 365 501.0620   2.738796   3 #> 366 501.5289   3.638192   3 #> 367 748.1797   3.017025   3 #> 368 572.2054   2.621503   3 #> 369 533.0819   3.211876   3 #> 370 535.6257   2.546793   3 #> 371 670.1371   2.670307   3 #> 372 530.9657   2.720436   3 #> 373 618.1821   2.704292   3 #> 374 695.4205   2.958744   3 #> 375 605.9546   2.688711   3 #> 376 572.6429   2.647847   3 #> 377 505.2980   2.811638   3 #> 378 870.1727   2.666031   3 #> 379 501.4474   2.689255   3 #> 380 925.6931   2.814968   3 #> 381 612.7679   2.689814   3 #> 382 503.5652   2.907102   3 #> 383 502.0212   2.725436   3 #> 384 504.8824   2.931406   3 #> 385 502.3406   3.438313   3 #> 386 654.9877   2.571522   3 #> 387 525.9952   4.121712   3 #> 388 518.4769   3.953246   3 #> 389 638.9056   4.077739   3 #> 390 521.8440   3.042060   3 #> 391 914.4905   2.802306   3 #> 392 960.6710   3.354129   3 #> 393 540.3249   2.831700   3 #> 394 507.3839   2.751127   3 #> 395 830.2376   4.065775   3 #> 396 628.7397   2.856990   3 #> 397 692.4320   3.756013   3 #> 398 640.4514   2.549346   3 #> 399 707.5540   2.581376   3 #> 400 518.0308   3.197612   3 #> 401 782.1775   2.828785   3 #> 402 518.1667   2.811646   3 #> 403 507.9418   3.586635   3 #> 404 506.8335   3.494081   3 #> 405 509.4943   3.009873   3 #> 406 506.6301   3.752796   3 #> 407 512.4622   2.726304   3 #> 408 546.9262   2.563218   3 #> 409 764.0878   2.511950   3 #> 410 507.3909   2.631813   3 #> 411 523.3650   3.521332   3 #> 412 509.5108   3.076428   3 #> 413 506.4539   2.740007   3 #> 414 509.9250   2.832230   3 #> 415 516.4097   3.537162   3 #> 416 506.5291   2.614431   3 #> 417 506.8426   2.675168   3 #> 418 502.0791   3.627513   3 #> 419 522.6108   2.666783   3 #> 420 602.2550   3.132219   3 #> 421 602.4913   2.854393   3 #> 422 603.4589   2.882959   3 #> 423 602.3109   2.863089   3 #> 424 606.0163   3.425195   3 #> 425 632.6888   2.611005   3 #> 426 607.7180   2.549219   3 #> 427 617.8850   2.581480   3 #> 428 626.4433   2.877767   3 #> 429 768.4584   2.665133   3 #> 430 604.1681   3.790078   3 #> 431 602.3389   3.125517   3 #> 432 610.9473   3.044192   3 #> 433 612.3401   2.787067   3 #> 434 602.9386   2.823522   3 #> 435 617.0322   2.556406   3 #> 436 817.6265   2.544464   3 #> 437 602.3966   2.903448   3 #> 438 602.2486   3.367539   3 #> 439 602.2033   2.651245   3 #> 440 602.4217   2.899583   3 #> 441 603.3183   2.822412   3 #> 442 602.2389   2.920368   3 #> 443 748.4825   2.577749   3 #> 444 721.4237   2.513006   3 #> 445 602.5219   2.965504   3 #> 446 605.2068   3.024550   3 #> 447 614.8427   2.588460   3 #> 448 602.3485   2.995558   3 #> 449 602.8814   2.963033   3 #> 450 604.5674   2.676614   3 #> 451 602.4138   2.857295   3 #> 452 603.5604   2.747252   3 #> 453 792.9282   2.614276   3 #> 454 605.7262   2.789704   3 #> 455 602.5016   3.042194   3 #> 456 602.2256   3.057654   3 #> 457 602.8007   3.805277   3 #> 458 628.2016   2.973677   3 #> 459 609.0997   2.628915   3 #> 460 604.7666   2.557346   3 #> 461 602.3350   3.576885   3 #> 462 604.2513   2.563737   3 #> 463 682.1632   2.561016   3 #> 464 602.2770   3.231953   3 #> 465 752.8973   2.834931   3 #> 466 718.5791   2.618825   3 #> 467 602.2012   2.645151   3 #> 468 602.3201   3.426415   3 #> 469 610.4239   2.602342   3 #> 470 602.5016   2.599368   3 #> 471 606.5414   2.668645   3 #> 472 602.3831   2.501230   3 #> 473 606.2534   2.598312   3 #> 474 897.0204   2.789247   3 #> 475 711.9518   2.615545   3 #> 476 602.4537   2.611300   3 #> 477 667.0412   4.529513   3 #> 478 604.2874   2.661345   3 #> 479 602.2170   2.822256   3 #> 480 734.3918   2.543421   3 #> 481 868.1403   2.693700   3 #> 482 602.3312   2.727154   3 #> 483 605.4474   2.797501   3 #> 484 856.9512   3.385236   3 #> 485 603.1497   2.513150   3 #> 486 602.3662   2.570847   3 #> 487 602.2421   2.788772   3 #> 488 504.4042   3.784251   3 #> 489 504.0954   3.068750   3 #> 490 728.4986   2.505156   3 #> 491 627.5019   2.822119   3 #> 492 640.2749   2.766039   3 #> 493 950.7987   3.515030   3 #> 494 697.4763   2.847269   3 #> 495 503.3191   2.729050   3 #> 496 501.8999   3.288884   3 #> 497 571.4081   2.717346   3 #> 498 516.9751   2.622852   3 #> 499 508.0259   2.772749   3 #> 500 511.5921   5.173379   3 #> 501 504.8025   3.134586   3 #> 502 670.0130   3.062993   3 #> 503 744.0474   3.146018   3 #> 504 510.9440   3.442401   3 #> 505 647.6610   2.945221   3 #> 506 917.8640   3.977824   3 #> 507 647.1221   2.559168   3 #> 508 655.9406   2.876047   3 #> 509 681.5666   2.875777   3 #> 510 647.1923   2.691886   3 #> 511 648.3089   3.113728   3 #> 512 714.1146   2.526181   3 #> 513 766.1060   2.961925   3 #> 514 763.5979   2.559409   3 #> 515 800.2086   2.512194   3 #> 516 504.5950   2.647028   3 #> 517 858.2772   2.783879   3 #> 518 725.8243   2.791558   3 #> 519 851.5871   2.539872   3 #> 520 524.9146   2.654476   3 #> 521 510.4736   2.546123   3 #> 522 507.4025   3.375426   3 #> 523 530.4025   3.352092   3 #> 524 532.2818   2.634818   3 #> 525 526.5047   3.401577   3 #> 526 599.1005   3.142668   3 #> 527 568.7024   3.237079   3 #> 528 520.1829   2.648323   3 #> 529 519.6168   2.976993   3 #> 530 601.6472   2.871757   3 #> 531 519.8496   2.915089   3 #> 532 520.1399   2.520816   3 #> 533 521.3689   2.811413   3 #> 534 552.9137   3.208921   3 #> 535 555.0470   2.513212   3 #> 536 849.8481   2.959213   3 #> 537 733.5928   2.588143   3 #> 538 609.0765   2.725594   3 #> 539 529.2632   3.234676   3 #> 540 520.8668   2.906294   3 #> 541 513.4693   3.236394   3 #> 542 526.7884   2.913548   3 #> 543 373.7876   3.444825   3 #> 544 227.7524   2.803096   3 #> 545 227.7965   2.889259   3 #> 546 229.4871   3.080726   3 #> 547 281.6964   2.580096   3 #> 548 446.9509   3.071381   3 #> 549 496.8525   3.774162   3 #> 550 441.9837   3.639473   3 #> 551 143.4767   2.528545   3 #> 552 965.2258   2.577227   3 #> 553 956.9118   2.533812   3 #> 554 972.9471   2.531795   3 #> 555 740.9337   2.680541   3 #>  #> [[5]] #>           ts magnitudes gen #> 1   604.3156   4.837682   4 #> 2   502.6983   2.990661   4 #> 3   501.8510   3.018255   4 #> 4   501.8059   3.370651   4 #> 5   566.8552   3.164088   4 #> 6   509.6226   4.673438   4 #> 7   502.6399   3.520796   4 #> 8   735.7987   2.822195   4 #> 9   674.3696   3.386893   4 #> 10  668.9444   3.322624   4 #> 11  694.6780   2.553375   4 #> 12  731.9055   2.890701   4 #> 13  675.6479   2.942293   4 #> 14  703.7707   3.412705   4 #> 15  701.9247   2.714251   4 #> 16  913.5751   2.573869   4 #> 17  889.6917   2.812607   4 #> 18  913.4289   2.594709   4 #> 19  772.1380   2.594946   4 #> 20  670.8940   2.669519   4 #> 21  810.0341   2.881100   4 #> 22  825.5097   2.525701   4 #> 23  815.5569   2.734161   4 #> 24  815.2316   2.946550   4 #> 25  697.8714   3.405411   4 #> 26  668.5186   2.670028   4 #> 27  843.6429   3.026750   4 #> 28  668.7757   2.631373   4 #> 29  672.4043   2.946727   4 #> 30  540.5075   2.784444   4 #> 31  538.8978   2.650589   4 #> 32  511.5739   2.845214   4 #> 33  511.1521   2.795632   4 #> 34  516.6162   3.170193   4 #> 35  541.0321   3.324029   4 #> 36  543.2312   2.861963   4 #> 37  511.3952   3.116572   4 #> 38  511.3631   2.981659   4 #> 39  582.2469   3.026919   4 #> 40  511.1572   2.867596   4 #> 41  511.2268   2.576389   4 #> 42  511.6935   2.619919   4 #> 43  515.8058   2.677915   4 #> 44  514.0149   2.520831   4 #> 45  511.2608   2.728851   4 #> 46  515.2047   3.925137   4 #> 47  511.7663   3.085979   4 #> 48  511.2093   2.859668   4 #> 49  512.0547   2.614554   4 #> 50  532.6991   2.737133   4 #> 51  582.0200   3.213897   4 #> 52  532.8894   2.636283   4 #> 53  525.7787   2.699345   4 #> 54  567.6496   2.698893   4 #> 55  534.9665   2.729380   4 #> 56  796.4798   3.013250   4 #> 57  596.6991   2.546507   4 #> 58  746.9254   2.756854   4 #> 59  646.9786   2.500410   4 #> 60  559.5604   2.695550   4 #> 61  534.2066   3.770680   4 #> 62  760.5612   2.946454   4 #> 63  718.7692   2.591403   4 #> 64  936.6049   3.338595   4 #> 65  715.9192   3.348791   4 #> 66  720.4597   2.554269   4 #> 67  718.6000   2.626222   4 #> 68  721.8487   3.091421   4 #> 69  727.7481   3.208054   4 #> 70  736.9522   2.874037   4 #> 71  788.2341   3.247051   4 #> 72  742.5388   2.802776   4 #> 73  742.6049   2.754062   4 #> 74  717.9682   2.934561   4 #> 75  724.3029   2.560034   4 #> 76  724.3958   2.526673   4 #> 77  724.2894   3.034220   4 #> 78  767.4030   2.539569   4 #> 79  755.4271   2.533727   4 #> 80  728.1562   2.577841   4 #> 81  724.2780   3.690545   4 #> 82  787.7205   2.575807   4 #> 83  724.2841   2.799862   4 #> 84  831.0267   2.544322   4 #> 85  747.8217   2.927930   4 #> 86  716.2025   3.043875   4 #> 87  780.5038   2.543415   4 #> 88  797.9040   2.730195   4 #> 89  716.5274   2.992203   4 #> 90  848.0576   2.564314   4 #> 91  716.5003   2.930720   4 #> 92  722.6795   3.165731   4 #> 93  720.5734   2.670780   4 #> 94  722.1132   3.059239   4 #> 95  733.9448   2.623351   4 #> 96  730.3086   2.544005   4 #> 97  732.8824   2.561763   4 #> 98  742.1908   2.798072   4 #> 99  723.5978   2.578506   4 #> 100 726.3365   3.416032   4 #> 101 722.0958   2.813148   4 #> 102 745.0620   2.603953   4 #> 103 723.6257   2.656724   4 #> 104 759.6838   2.707617   4 #> 105 768.3545   3.542605   4 #> 106 719.5629   2.846989   4 #> 107 745.8061   2.536719   4 #> 108 893.7934   2.894846   4 #> 109 830.5995   3.345450   4 #> 110 846.5675   3.034740   4 #> 111 818.0578   2.513220   4 #> 112 501.7764   2.546438   4 #> 113 696.8488   2.992824   4 #> 114 563.0451   3.439609   4 #> 115 720.2363   2.738797   4 #> 116 677.4150   2.856954   4 #> 117 665.5419   3.082198   4 #> 118 520.0824   3.310934   4 #> 119 578.4951   2.662114   4 #> 120 501.3808   2.902386   4 #> 121 831.5753   3.010448   4 #> 122 502.2657   3.176066   4 #> 123 502.4371   3.891022   4 #> 124 543.1791   2.557115   4 #> 125 613.0836   4.224442   4 #> 126 899.0303   2.785614   4 #> 127 568.0872   2.638169   4 #> 128 527.3598   2.610097   4 #> 129 662.7013   2.549151   4 #> 130 939.3531   2.513400   4 #> 131 616.0147   2.866892   4 #> 132 518.9843   2.521487   4 #> 133 646.0093   2.923806   4 #> 134 703.4673   3.093491   4 #> 135 701.5896   2.679110   4 #> 136 508.1828   2.546159   4 #> 137 506.8460   2.692846   4 #> 138 570.9871   3.179732   4 #> 139 635.6298   2.568875   4 #> 140 612.5529   2.508578   4 #> 141 628.4932   3.445708   4 #> 142 626.5529   4.406303   4 #> 143 945.2156   3.020851   4 #> 144 705.2508   2.881609   4 #> 145 607.0892   4.526295   4 #> 146 898.3818   2.649010   4 #> 147 602.7019   3.035990   4 #> 148 677.1958   4.157560   4 #> 149 690.8527   2.913825   4 #> 150 670.2376   3.920519   4 #> 151 667.4623   3.513932   4 #> 152 679.1152   2.545317   4 #> 153 857.3981   3.142595   4 #> 154 527.2525   2.638543   4 #> 155 519.5423   2.897185   4 #> 156 511.0790   2.710440   4 #> 157 506.9801   3.509448   4 #> 158 950.8072   2.563286   4 #> 159 542.0169   3.167104   4 #> 160 514.3662   3.696436   4 #> 161 512.3003   3.088397   4 #> 162 906.1305   3.111591   4 #> 163 513.7694   2.702926   4 #> 164 511.6459   2.837675   4 #> 165 706.4029   2.542152   4 #> 166 531.2610   3.622056   4 #> 167 511.6526   2.582682   4 #> 168 556.6402   2.874865   4 #> 169 512.0407   3.327209   4 #> 170 833.7338   3.362655   4 #> 171 585.0008   3.110228   4 #> 172 511.5966   2.664321   4 #> 173 584.7423   2.739452   4 #> 174 517.6638   3.142661   4 #> 175 750.2350   2.545703   4 #> 176 511.7424   2.912613   4 #> 177 514.6345   3.028597   4 #> 178 758.9897   2.970738   4 #> 179 666.4559   3.690676   4 #> 180 511.5935   2.760516   4 #> 181 513.9304   2.528941   4 #> 182 513.8470   3.009798   4 #> 183 668.3701   2.733998   4 #> 184 552.8346   2.504548   4 #> 185 512.2512   2.686308   4 #> 186 512.1432   3.768358   4 #> 187 511.5996   3.251636   4 #> 188 746.4911   2.766601   4 #> 189 671.3703   2.627580   4 #> 190 511.1374   3.094071   4 #> 191 965.1606   3.638781   4 #> 192 919.7376   3.678849   4 #> 193 730.7483   2.850083   4 #> 194 510.5810   2.989799   4 #> 195 532.3136   2.838300   4 #> 196 529.2428   2.701470   4 #> 197 553.0234   2.676672   4 #> 198 555.9864   2.701282   4 #> 199 610.3989   2.697196   4 #> 200 373.9487   3.230281   4 #> 201 376.6568   2.659861   4 #> 202 282.3042   2.581207   4 #> 203 524.9527   2.694561   4 #> 204 497.8299   2.772750   4 #> 205 445.4156   3.338321   4 #>  #> [[6]] #>          ts magnitudes gen #> 1  622.1970   2.617102   5 #> 2  608.7016   2.709805   5 #> 3  614.3606   2.679370   5 #> 4  613.0801   3.591046   5 #> 5  629.6077   2.795324   5 #> 6  624.3945   2.549315   5 #> 7  604.8819   2.644238   5 #> 8  674.0357   3.265917   5 #> 9  743.2833   4.144170   5 #> 10 614.6475   2.607655   5 #> 11 643.2874   3.161995   5 #> 12 607.2102   2.858501   5 #> 13 513.4058   2.533450   5 #> 14 681.8518   3.159017   5 #> 15 511.3543   2.696569   5 #> 16 632.9422   2.551865   5 #> 17 510.1504   3.196191   5 #> 18 511.6934   2.706625   5 #> 19 509.6267   3.038287   5 #> 20 510.7247   2.779094   5 #> 21 985.1555   2.898928   5 #> 22 509.8865   3.024374   5 #> 23 502.8718   3.465966   5 #> 24 674.5717   2.986520   5 #> 25 884.0990   3.021556   5 #> 26 910.4747   2.543353   5 #> 27 772.1990   2.508632   5 #> 28 694.7508   2.664083   5 #> 29 515.2117   2.975718   5 #> 30 515.9165   3.458311   5 #> 31 522.9084   3.359901   5 #> 32 515.2091   2.957316   5 #> 33 624.6942   2.661602   5 #> 34 670.3369   2.568805   5 #> 35 534.4491   2.685343   5 #> 36 716.0653   3.062947   5 #> 37 844.3232   2.545216   5 #> 38 717.9355   3.479349   5 #> 39 903.8169   2.765452   5 #> 40 864.7590   3.146625   5 #> 41 945.7627   2.585404   5 #> 42 716.8354   2.508993   5 #> 43 858.9351   2.698770   5 #> 44 570.7408   3.006233   5 #> 45 504.2510   2.541200   5 #> 46 516.8074   2.590628   5 #> 47 613.1077   3.054216   5 #> 48 966.2387   2.803454   5 #> 49 613.7682   2.662223   5 #> 50 647.1825   2.787506   5 #> 51 646.5654   2.958669   5 #> 52 703.8376   2.797367   5 #> 53 573.7851   3.129280   5 #> 54 920.3735   2.503653   5 #> 55 636.6050   2.593857   5 #> 56 626.6102   2.518036   5 #> 57 627.3193   2.558246   5 #> 58 644.5256   2.855984   5 #> 59 627.5747   3.084643   5 #> 60 634.3492   2.565254   5 #> 61 724.8353   2.709789   5 #> 62 629.3839   2.590868   5 #> 63 999.9820   3.339113   5 #> 64 807.2982   2.907624   5 #> 65 608.1788   2.554745   5 #> 66 607.1729   2.967482   5 #> 67 610.1324   3.150648   5 #> 68 608.2773   2.922126   5 #> 69 628.0941   3.641526   5 #> 70 608.6748   2.595102   5 #> 71 609.1616   3.632690   5 #> 72 822.6268   2.790729   5 #> 73 608.2174   2.754581   5 #> 74 612.7625   2.902350   5 #> 75 625.3154   2.725746   5 #> 76 690.9188   2.566683   5 #> 77 671.1667   3.198608   5 #> 78 696.4749   2.951684   5 #> 79 514.8305   3.057757   5 #> 80 520.0953   2.500142   5 #> 81 572.0372   2.838069   5 #> 82 514.6573   2.888326   5 #> 83 666.8084   3.586475   5 #> 84 512.0581   2.994502   5 #> 85 513.0802   2.538993   5 #> 86 502.9242   2.501567   5 #> 87 592.7716   2.947066   5 #> 88 447.1761   2.516092   5 #>  #> [[7]] #>          ts magnitudes gen #> 1  630.8760   2.632722   6 #> 2  613.2830   3.244931   6 #> 3  613.0982   3.795600   6 #> 4  614.8397   2.706454   6 #> 5  642.3255   2.542721   6 #> 6  743.3483   2.702555   6 #> 7  780.0425   3.170630   6 #> 8  752.9912   3.308043   6 #> 9  744.5961   3.218617   6 #> 10 660.7735   3.115226   6 #> 11 514.9382   3.366807   6 #> 12 638.0159   2.635309   6 #> 13 515.1636   3.298859   6 #> 14 910.3080   2.560577   6 #> 15 519.6647   3.573660   6 #> 16 548.4958   2.860705   6 #> 17 671.2006   2.771649   6 #> 18 722.2961   2.676744   6 #> 19 864.9105   2.553984   6 #> 20 727.8638   2.766730   6 #> 21 617.3420   2.563773   6 #> 22 643.7759   2.916147   6 #> 23 914.5186   4.274024   6 #> 24 690.9429   2.521371   6 #> 25 672.1290   2.704596   6 #> 26 696.5837   3.110111   6 #> 27 696.7046   2.577897   6 #> 28 516.4528   3.437605   6 #> 29 519.6072   2.706712   6 #>  #> [[8]] #>         ts magnitudes gen #> 1 615.2379   2.676451   7 #> 2 636.7825   2.577369   7 #> 3 613.9626   2.969040   7 #> 4 764.0548   2.765146   7 #> 5 745.1107   2.725266   7 #> 6 847.7313   3.075047   7 #> 7 515.4871   2.614122   7 #> 8 916.1944   2.962231   7 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":null,"dir":"Reference","previous_headings":"","what":"HORUS Ita Catalogue — horus","title":"HORUS Ita Catalogue — horus","text":"HOmogenized instRUmental Seismic catalog (HORUS) Italy 1960 present, limited limited 1960-2019.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HORUS Ita Catalogue — horus","text":"","code":"horus"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HORUS Ita Catalogue — horus","text":"Original file format: Year: Origin Time (OT) year Mo: OT month Da: OT day Ho: OT hour Mi OT minute Se OT seconds fractions Lat epicenter N latitude (degrees) Lon epicenter E longitude (degrees) Depth hypocenter depth (km) Mw true proxy moment magnitude sigMw moment magnitude uncertainty Geo.Ita \"*\" indicates epicenter within Italian mainland territory, otherwise \" \" Geo.CPTI15 \"*\" indicates epicenter within spatial window CPTI15 catalog (Rovida et al., 2020, Bull Earth Eng, doi: 10.1007/s10518-020-00818-y) Ev..type \"x\" indicates event earthquake (e.g. explosion, eruption, landslide, ...) (since May 1st 2012) Iside.n. ISIDe id number (since April 16th 2005) ETAS.inlabru format: time_string: Data-time event, ISO 8601 format; format = \"%Y-%m-%dT%H:%M:%OS\" use .POSIXct() lon: Original Lon lat: Original Lat depth Original Depth M: Original Mw","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HORUS Ita Catalogue — horus","text":"http://horus.bo.ingv./","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HORUS Ita Catalogue — horus","text":"original entire HORUS catalog provided single tab separated ascii file: HORUS_Ita_Catalog.txt random second decimal digit added ML Md INGV bulletin (ISIDe) computing Mw proxies (Lolli et al., Seism. Res. Lett., 91, 3208-3222, doi: 10.1785/0220200148), HORUS_Ita_Catalog_o.txt original ML Md used compute Mw proxies. ETAS.inlabru includes reformatted version data HORUS_Ita_Catalog.txt data.frame, limited 1960-2019. data provided , express implied warranty given.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HORUS Ita Catalogue — horus","text":"Barbara Lolli(1), Daniele Randazzo(1), Gianfranco Vannucci(1) Paolo Gasperini (2),(1) (2020). Homogenized Instrumental Seismic Catalog (HORUS) Italy 1960 Present, Seismol. Res. Lett, doi: 10.1785/0220200148. (1) Istituto Nazionale di Geofisica e Vulcanologia, Sezione di Bologna (2) Dipartimento di Fisica e Astronomia, Università di Bologna","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Number cores used n.samp exceeds max.batch. Default 1","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 3.782411 2.882975 2.636240 2.635088 3.051574 3.279676 2.523098 3.178869 #>   [9] 2.797164 2.577356 2.564729 2.541284 2.698569 3.200097 2.593103 3.997489 #>  [17] 2.564679 2.535377 2.760022 3.384844 3.143720 2.724627 3.536243 4.099784 #>  [25] 2.739050 2.923180 2.912347 2.779520 2.531256 2.506728 2.846683 2.928756 #>  [33] 2.986639 3.148837 2.781374 2.613431 2.780962 2.640830 2.761699 3.417692 #>  [41] 2.509729 2.576234 2.512377 2.904925 2.917346 3.036495 2.593355 3.179065 #>  [49] 3.212861 2.692665 2.550265 2.995275 2.834230 2.539322 2.796439 2.758306 #>  [57] 3.002400 2.653811 3.037151 2.892939 3.818341 4.269291 2.856068 2.940818 #>  [65] 2.649670 3.020772 2.630095 2.932609 3.060205 2.690585 2.912065 2.825443 #>  [73] 2.857264 3.642672 3.073019 2.597036 2.629205 2.960152 3.195328 3.339618 #>  [81] 3.042801 3.200441 2.580331 2.740955 2.514472 4.817742 2.864164 3.016500 #>  [89] 2.718052 2.528462 2.850257 3.029099 2.671009 2.937640 2.555874 2.669804 #>  [97] 2.720096 3.014481 2.913222 2.652641"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore number compute cores use","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   505.5789   2.754875 #> 2   988.7438   2.619158 #> 3   500.0304   3.475357 #> 4   512.9177   2.907884 #> 5   506.3365   3.323773 #> 6   500.0131   2.892468 #> 7   501.9936   2.746852 #> 8   500.6043   3.034901 #> 9   505.3167   3.163619 #> 10  500.0113   2.625334 #> 11  500.5502   4.205636 #> 12  538.6268   2.606354 #> 13  507.1246   3.190183 #> 14  500.6223   3.186322 #> 15  500.2226   3.050590 #> 16  500.0705   2.673088 #> 17  632.7242   2.916469 #> 18  573.2716   2.606810 #> 19  502.2191   3.066973 #> 20  503.9266   3.012643 #> 21  507.8722   2.836795 #> 22  503.1395   3.127172 #> 23  500.0244   2.503272 #> 24  531.1017   2.959192 #> 25  544.9581   3.327998 #> 26  500.0291   2.670757 #> 27  502.1779   2.520475 #> 28  500.5192   2.506501 #> 29  500.3204   3.010155 #> 30  609.0372   3.031038 #> 31  500.5235   2.849581 #> 32  505.9646   2.752970 #> 33  502.1777   3.974392 #> 34  503.4150   2.502056 #> 35  503.8550   3.677069 #> 36  500.9757   2.862050 #> 37  968.1102   2.925021 #> 38  522.9686   3.980111 #> 39  756.6814   3.024415 #> 40  624.8262   3.480887 #> 41  507.6815   2.606151 #> 42  501.5053   2.609126 #> 43  549.8844   2.634645 #> 44  683.2149   2.538745 #> 45  500.2072   3.875958 #> 46  516.2178   2.576734 #> 47  500.0566   2.640039 #> 48  500.1971   2.731393 #> 49  500.9924   2.575026 #> 50  500.0418   3.226221 #> 51  500.3482   2.526727 #> 52  500.5922   3.434098 #> 53  500.3260   2.655978 #> 54  501.8012   3.252370 #> 55  500.6604   2.611558 #> 56  500.6179   3.027011 #> 57  501.0338   2.692828 #> 58  501.2240   3.506478 #> 59  500.2544   3.080540 #> 60  744.3348   2.779207 #> 61  809.9002   4.170224 #> 62  500.9536   3.637518 #> 63  500.0751   2.770605 #> 64  501.5134   2.621895 #> 65  549.3104   2.507133 #> 66  514.5922   3.083392 #> 67  564.9877   2.914301 #> 68  507.6604   2.768919 #> 69  502.2050   3.315341 #> 70  777.1850   2.921197 #> 71  500.5823   2.760421 #> 72  500.5810   3.189608 #> 73  900.2897   3.187446 #> 74  616.0913   3.767600 #> 75  524.2099   2.656451 #> 76  536.5100   3.393787 #> 77  719.9322   3.150965 #> 78  500.3143   2.740109 #> 79  500.9113   2.596675 #> 80  501.1840   2.692570 #> 81  504.1198   3.061566 #> 82  875.5854   2.747334 #> 83  570.1219   3.532130 #> 84  500.4346   2.524371 #> 85  503.9514   2.627737 #> 86  522.7390   3.166332 #> 87  520.3833   3.182591 #> 88  502.4025   3.172941 #> 89  515.7228   2.822050 #> 90  531.5375   2.685652 #> 91  537.6988   2.810049 #> 92  505.5176   3.419032 #> 93  504.5340   3.239396 #> 94  500.0313   2.589987 #> 95  500.4454   3.683529 #> 96  500.8881   2.814763 #> 97  501.1663   3.655281 #> 98  558.0769   2.714555 #> 99  631.3776   2.521036 #> 100 501.0775   2.601315 #> 101 660.8778   2.832532 #> 102 500.0233   3.212460 #> 103 504.2233   2.968225 #> 104 541.6323   3.571600 #> 105 501.0416   3.129856 #> 106 504.9731   2.723612 #> 107 605.9686   2.995580 #> 108 500.1742   3.276628 #> 109 613.3355   3.137984 #> 110 501.9756   2.688813 #> 111 511.9337   3.416056 #> 112 502.7777   3.133108 #> 113 500.2985   3.518580 #> 114 502.3101   2.676295 #> 115 511.5234   2.550788 #> 116 541.1793   2.595493 #> 117 606.9095   2.990079 #> 118 594.9325   2.769995 #> 119 943.9922   3.158490 #> 120 500.4101   2.944683 #> 121 500.1134   2.763441 #> 122 674.1344   2.864951 #> 123 505.6125   3.733909 #> 124 531.0425   2.992183 #> 125 500.0871   2.704723 #> 126 677.3241   2.707592 #> 127 505.6234   2.882735 #> 128 501.4671   2.956674 #> 129 520.3596   3.258881 #> 130 500.5607   2.544078 #> 131 509.7859   2.663176 #> 132 500.8401   3.401153 #> 133 500.4304   3.339008 #> 134 506.7296   3.070533 #> 135 500.4714   2.564241 #> 136 500.1521   2.593331 #> 137 500.3143   2.786319 #> 138 526.0690   2.504444 #> 139 520.8993   2.513185 #> 140 523.1721   2.718255 #> 141 501.4997   2.760351 #> 142 601.9822   2.954314 #> 143 629.9359   2.611237 #> 144 821.8410   2.731042 #> 145 500.8445   2.513163 #> 146 501.1633   3.273099 #> 147 811.0323   2.930477 #> 148 503.8732   3.710626 #> 149 683.5018   2.671368 #> 150 507.8687   3.528530 #> 151 500.9885   2.864945 #> 152 503.4691   3.096573 #> 153 510.2762   3.505005 #> 154 520.3586   2.505446 #> 155 502.1968   2.515817 #> 156 500.1090   2.967967 #> 157 501.0982   3.275478 #> 158 505.6276   2.801542 #> 159 501.8206   2.738435 #> 160 529.6411   2.514711 #> 161 500.0173   2.860116 #> 162 502.2702   2.579473 #> 163 500.0510   2.562060 #> 164 916.2994   3.338111 #> 165 500.1044   2.552700 #> 166 529.2247   2.608164 #> 167 500.2991   3.528549 #> 168 500.0409   2.591518 #> 169 512.2833   3.208035 #> 170 505.9799   4.297555 #> 171 508.9909   2.719588 #> 172 667.1960   2.549879 #> 173 504.0178   2.833675 #> 174 501.9449   2.762787 #> 175 500.9437   2.651290 #> 176 503.5975   3.722235 #> 177 523.2889   3.735498 #> 178 550.4113   2.701352 #> 179 500.4649   2.575161 #> 180 608.2224   3.104379 #> 181 500.1025   2.629502 #> 182 500.9438   2.937672 #> 183 500.0006   2.509256 #> 184 500.1187   3.137627 #> 185 515.8101   4.033168 #> 186 527.6037   3.155270 #> 187 500.1287   2.741153 #> 188 506.9084   2.623065 #> 189 500.1239   2.980878 #> 190 508.9122   2.927416 #> 191 510.3911   3.246143 #> 192 504.0357   2.536567 #> 193 500.2129   2.877579 #> 194 500.6938   3.348194 #> 195 500.0684   2.651450 #> 196 500.5875   2.731934 #> 197 500.2673   2.847663 #> 198 504.9494   3.540255 #> 199 500.0691   2.524427 #> 200 506.4746   3.011272 #> 201 516.0453   2.820728 #> 202 562.2255   2.647804 #> 203 500.3332   2.568191 #> 204 500.2210   2.744486 #> 205 500.0356   3.132002 #> 206 962.3045   2.506841 #> 207 501.0805   3.176546 #> 208 505.4994   3.027487 #> 209 500.0038   2.555804 #> 210 721.3910   3.087230 #> 211 506.5523   2.536892 #> 212 500.7898   2.724907 #> 213 672.4826   2.924351 #> 214 500.4997   2.632912 #> 215 500.5382   2.639229 #> 216 515.2540   3.401324 #> 217 501.3900   4.545828 #> 218 653.2495   2.567551 #> 219 502.5997   2.822791 #> 220 500.1672   2.959349 #> 221 539.2122   3.536719 #> 222 501.3992   2.566263 #> 223 501.4430   3.225650 #> 224 881.3393   2.574790 #> 225 761.2520   2.632086 #> 226 500.0554   2.688947 #> 227 528.7406   2.500573 #> 228 500.1523   2.608332 #> 229 508.3834   3.203293 #> 230 525.7740   2.686484 #> 231 502.8646   2.548095 #> 232 500.0087   2.726817 #> 233 500.1035   3.587592 #> 234 683.0872   2.753596 #> 235 510.6422   2.725801 #> 236 500.5769   2.505843 #> 237 506.1483   2.587595 #> 238 500.0381   3.334034 #> 239 502.3355   3.142217 #> 240 762.0342   2.805406 #> 241 500.4376   2.815450 #> 242 514.5352   2.678666 #> 243 747.7924   2.760114 #> 244 500.1474   2.749831 #> 245 503.2512   2.500554 #> 246 500.2994   2.563660 #> 247 504.3044   3.481532 #> 248 500.2878   2.577063 #> 249 756.9707   3.098601 #> 250 500.1885   2.615352 #> 251 503.6104   2.652812 #> 252 500.0508   2.787238 #> 253 522.0860   2.805540 #> 254 501.9045   2.571134 #> 255 500.1439   3.015345 #> 256 671.6013   2.505943 #> 257 501.6581   3.764419 #> 258 511.0656   3.132586 #> 259 504.0186   3.135365 #> 260 515.0628   2.704837 #> 261 510.1556   2.684323 #> 262 509.2837   2.540028 #> 263 500.6561   3.291607 #> 264 500.2903   2.641308 #> 265 500.0857   3.056145 #> 266 502.5045   2.588629 #> 267 965.7468   2.682758 #> 268 626.9414   2.900977 #> 269 500.0798   2.822418 #> 270 504.5664   2.889515 #> 271 500.0690   2.732030 #> 272 768.4577   2.761688 #> 273 501.5917   2.545206 #> 274 500.6987   3.284576 #> 275 501.6482   2.644763 #> 276 500.0139   2.530595 #> 277 972.2906   3.810194 #> 278 768.4267   3.074615 #> 279 500.1765   3.430169 #> 280 524.5201   2.621259 #> 281 504.0112   2.709769 #> 282 500.9531   2.763186 #> 283 510.5408   2.533168 #> 284 505.5472   2.695490 #> 285 540.9636   2.737897 #> 286 500.0622   3.291496 #> 287 500.9919   2.557406 #> 288 500.1949   3.003231 #> 289 504.0843   2.667545 #> 290 500.4713   2.625107 #> 291 500.5593   2.604554 #> 292 500.0078   2.684086 #> 293 500.0273   2.687217 #> 294 500.1582   2.587752 #> 295 503.1589   2.958761 #> 296 667.4764   2.769393 #> 297 502.1578   2.529339 #> 298 500.2876   2.603571 #> 299 506.1995   3.382029 #> 300 648.7018   3.696763 #> 301 500.3457   2.945956 #> 302 500.7734   3.552862 #> 303 697.9209   2.888548 #> 304 516.8184   2.538626 #> 305 500.1217   2.566517 #> 306 501.3404   2.648534 #> 307 521.3960   3.460692 #> 308 500.1096   3.048908 #> 309 565.8619   2.599749 #> 310 509.8470   3.039676 #> 311 552.9324   3.099203 #> 312 526.4782   3.085525 #> 313 501.0944   3.012729 #> 314 500.5255   2.530630 #> 315 502.5403   3.626330 #> 316 500.2936   3.129319 #> 317 603.4409   2.566073 #> 318 556.8130   2.981841 #> 319 726.7612   2.695152 #> 320 543.4881   2.589052 #> 321 502.5724   5.906815 #> 322 567.1131   2.518053 #> 323 502.0788   2.792402 #> 324 570.8247   2.544699 #> 325 575.2933   2.937465 #> 326 532.3542   4.798589 #> 327 513.5994   2.819627 #> 328 500.3989   4.678547 #> 329 502.3107   2.943221 #> 330 533.3907   2.906079 #> 331 501.6504   2.502010 #> 332 535.6425   3.120806 #> 333 501.7299   2.540486 #> 334 502.7870   2.940282 #> 335 524.5803   2.618898 #> 336 521.0827   2.515456 #> 337 509.2917   2.823034 #> 338 800.2017   2.732420 #> 339 510.2111   2.881605 #> 340 500.4291   3.113204 #> 341 500.1509   2.627324 #> 342 507.5493   2.986011 #> 343 516.7635   2.626511 #> 344 501.2186   2.969304 #> 345 500.1169   2.754669 #> 346 804.0821   2.557056 #> 347 500.2489   2.533023 #> 348 500.4474   2.516999 #> 349 508.9327   3.006121 #> 350 501.5844   3.540314 #> 351 612.5364   2.630455 #> 352 500.0765   2.971802 #> 353 743.1800   3.128006 #> 354 500.3504   3.220493 #> 355 728.0169   2.687617 #> 356 513.2865   3.348186 #> 357 500.0148   2.915930 #> 358 510.2093   2.941831 #> 359 708.6838   3.047400 #> 360 564.3100   2.732108 #> 361 500.3825   3.436625 #> 362 596.0935   2.566228 #> 363 979.2224   3.047734 #> 364 500.0577   2.684853 #> 365 823.5700   2.508472 #> 366 501.0649   4.107703 #> 367 750.0041   2.505389 #> 368 501.5707   3.286761 #> 369 500.0427   2.668962 #> 370 935.5532   2.565663 #> 371 502.3365   2.751493 #> 372 500.0523   2.722329 #> 373 500.5695   3.028970 #> 374 502.8293   3.064611 #> 375 534.5425   2.901177 #> 376 509.4276   3.083583 #> 377 527.7343   2.882690 #> 378 504.5188   2.612701 #> 379 500.1441   2.522141 #> 380 500.2593   2.651905 #> 381 564.5557   2.865023 #> 382 502.4376   2.561511 #> 383 741.5332   3.206630 #> 384 500.1147   3.329159 #> 385 513.1117   2.504183 #> 386 661.5930   2.542926 #> 387 502.0309   2.515243 #> 388 921.6441   2.859927 #> 389 500.5175   2.851348 #> 390 500.3599   2.982826 #> 391 525.3424   3.067148 #> 392 735.5754   2.608877 #> 393 500.7143   2.985561 #> 394 500.3108   2.826755 #> 395 509.0895   2.942463 #> 396 829.4299   2.535753 #> 397 512.5639   2.661971 #> 398 500.5803   4.071858 #> 399 500.0924   2.841428 #> 400 535.0947   2.653862 #> 401 711.4112   2.877825 #> 402 743.8028   2.529517 #> 403 500.2385   2.995771 #> 404 500.2068   2.768369 #> 405 500.0111   2.545865 #> 406 535.0628   2.870679 #> 407 522.2462   4.178796 #> 408 500.2907   2.574315 #> 409 500.0921   2.797544 #> 410 507.1388   2.713048 #> 411 655.4335   2.963006 #> 412 916.7024   3.196403 #> 413 500.0568   2.658842 #> 414 697.5087   3.532085 #> 415 501.8724   2.962135 #> 416 501.1521   2.633332 #> 417 500.1917   2.589879 #> 418 500.8480   2.547030 #> 419 500.8887   2.844113 #> 420 500.0771   3.094685 #> 421 800.2501   2.582713 #> 422 514.2647   2.941298 #> 423 501.6505   3.597674 #> 424 983.0009   2.538466 #> 425 699.0448   2.959537 #> 426 500.3588   2.680711 #> 427 818.7329   3.043354 #> 428 505.2434   3.179191 #> 429 504.7705   2.660326 #> 430 500.0385   3.131713 #> 431 500.0026   3.225844 #> 432 558.3090   3.643389 #> 433 502.8825   2.792291 #> 434 503.5728   3.110025 #> 435 615.9955   2.874696 #> 436 502.5113   2.773798 #> 437 513.9273   3.184095 #> 438 502.6384   2.664476 #> 439 500.8093   2.668966 #> 440 502.3180   2.836230 #> 441 507.4684   2.519642 #> 442 512.5290   3.055215 #> 443 501.8447   2.617620 #> 444 500.2140   2.682531 #> 445 669.8134   2.918552 #> 446 508.5624   3.872865 #> 447 522.6680   3.628295 #> 448 663.3097   2.843711 #> 449 512.8878   4.241959 #> 450 586.3419   3.127027 #> 451 509.4827   3.247436 #> 452 500.6184   3.644608 #> 453 901.2554   3.521205 #> 454 564.7182   3.161128 #> 455 693.4585   2.553196 #> 456 653.1976   2.643243 #> 457 502.0317   2.645234 #> 458 500.7719   3.263587 #> 459 501.9404   2.576569 #> 460 642.1976   3.082587 #> 461 578.3126   2.576022 #> 462 500.1490   2.916307 #> 463 512.0734   3.032972 #> 464 500.2955   2.638122 #> 465 500.1430   2.550437 #> 466 972.9849   2.845035 #> 467 506.8029   2.574928 #> 468 500.6013   2.759842 #> 469 517.7133   2.621506 #> 470 532.1897   2.553583 #> 471 500.1287   2.854271 #> 472 500.5531   2.688599 #> 473 528.1224   2.920046 #> 474 503.2024   2.700108 #> 475 548.6881   2.586903 #> 476 506.1603   2.838551 #> 477 500.0785   2.699418 #> 478 500.8040   2.596005 #> 479 500.6984   3.064938 #> 480 500.1180   3.167700 #> 481 500.0172   2.640815 #> 482 520.1288   2.846119 #> 483 500.9233   2.586253 #> 484 504.3173   2.731671 #> 485 531.6452   3.046650 #> 486 501.0080   3.267966 #> 487 508.3816   2.610404 #> 488 500.0155   2.889494 #> 489 734.1710   2.592819 #> 490 500.7618   2.859657 #> 491 952.3743   2.557108 #> 492 500.4222   3.596558 #> 493 897.4654   2.874793 #> 494 500.0353   2.857234 #> 495 500.1898   3.513755 #> 496 500.7100   2.674246 #> 497 500.2874   2.827542 #> 498 821.5665   2.882362 #> 499 500.5360   2.503804 #> 500 506.7250   2.974402 #> 501 500.5267   3.073162 #> 502 500.1462   3.604463 #> 503 501.5312   3.219382 #> 504 581.7488   2.690003 #> 505 500.0311   2.902976 #> 506 507.5668   2.529505 #> 507 663.8407   2.635951 #> 508 502.8417   2.811613 #> 509 501.2528   2.609583 #> 510 500.1345   2.721329 #> 511 500.4237   2.776397 #> 512 500.0262   2.750372 #> 513 607.8168   3.466519 #> 514 500.3315   3.123085 #> 515 661.6556   2.632561 #> 516 503.0386   2.626215 #> 517 755.4511   2.612265 #> 518 500.2110   2.866600 #> 519 913.6995   2.748611 #> 520 500.0344   3.676994 #> 521 500.3092   3.194090 #> 522 500.6868   2.560061 #> 523 593.3215   2.557623 #> 524 540.1192   2.637269 #> 525 500.1246   3.053803 #> 526 500.2713   2.828813 #> 527 520.9545   2.740111 #> 528 500.0398   3.104144 #> 529 504.7837   3.527663 #> 530 503.9331   3.250954 #> 531 501.0646   3.188093 #> 532 504.5952   2.807480 #> 533 515.5399   3.006432 #> 534 500.4156   2.710090 #> 535 502.6513   2.818577 #> 536 500.1427   2.599980 #> 537 500.1576   2.659530 #> 538 506.4593   3.021879 #> 539 570.9428   2.536410 #> 540 500.3508   2.864341 #> 541 511.5045   2.656902 #> 542 500.7237   2.662510 #> 543 500.1161   3.251382 #> 544 545.4057   3.893296 #> 545 500.8714   2.560980 #> 546 501.3417   3.229595 #> 547 500.5505   4.409966 #> 548 690.0063   2.937751 #> 549 555.3039   2.563254 #> 550 500.1485   2.553134 #> 551 500.6708   2.635748 #> 552 924.8465   2.537044 #> 553 513.2661   2.764479 #> 554 500.0032   2.672880 #> 555 503.1162   2.825910 #> 556 509.5248   2.599324 #> 557 500.1001   2.564622 #> 558 500.8543   2.757779 #> 559 500.1440   2.526983 #> 560 546.9575   2.867137 #> 561 587.4733   3.565602 #> 562 527.2032   2.792985 #> 563 500.5513   2.666405 #> 564 670.6373   2.600632 #> 565 540.2428   3.094950 #> 566 527.9128   2.847982 #> 567 500.0481   2.591321 #> 568 521.0250   2.500978 #> 569 500.0402   4.366183 #> 570 534.6909   3.234752 #> 571 507.8461   2.906642 #> 572 657.4308   3.117351 #> 573 500.3399   2.570110 #> 574 782.2888   2.573307 #> 575 554.6626   2.659611 #> 576 501.1471   2.574152 #> 577 500.2674   2.709044 #> 578 502.3299   2.501516 #> 579 500.1057   2.957454 #> 580 723.4964   2.524966 #> 581 501.3435   4.126023 #> 582 509.4094   2.807265 #> 583 573.4677   2.866166 #> 584 500.2071   2.686391 #> 585 500.3180   3.293554 #> 586 905.3649   2.590223 #> 587 501.5046   2.519624 #> 588 510.2177   2.631691 #> 589 500.2882   2.761977 #> 590 697.8428   3.210664 #> 591 666.0798   2.711419 #> 592 501.5274   4.239104 #> 593 501.6076   2.699143 #> 594 539.6883   2.500011 #> 595 611.8916   2.609289 #> 596 555.7409   2.539394 #> 597 917.5083   3.141323 #> 598 500.2408   2.540645 #> 599 501.8116   3.170035 #> 600 547.8043   4.153454 #> 601 690.7416   2.535823 #> 602 713.8558   2.752049 #> 603 505.6484   3.646253 #> 604 501.4136   2.704566 #> 605 500.5640   4.223560 #> 606 803.8662   2.617941 #> 607 501.5424   3.459877 #> 608 543.6400   2.594828 #> 609 676.4367   2.876535 #> 610 504.2548   2.726027 #> 611 556.4375   2.587641 #> 612 501.0167   3.145299 #> 613 500.8801   4.595628 #> 614 500.2771   3.185020 #> 615 502.7535   2.903354 #> 616 501.0135   3.455793 #> 617 500.2332   2.559140 #> 618 502.3995   2.612510 #> 619 500.1238   2.521448 #> 620 501.1948   2.596887 #> 621 500.3238   3.205371 #> 622 500.0602   2.836769 #> 623 536.0628   2.896881 #> 624 803.9596   2.526953 #> 625 500.0440   2.841646 #> 626 500.0030   2.787178 #> 627 502.5299   2.679106 #> 628 705.1154   2.700173 #> 629 500.1373   2.689418 #> 630 500.0669   2.908035 #> 631 511.2667   2.719670 #> 632 642.9262   2.621898 #> 633 500.1404   2.559933 #> 634 500.6244   2.575383 #> 635 520.1470   2.647493 #> 636 500.8547   2.516391 #> 637 501.3501   2.624120 #> 638 500.3536   3.259694 #> 639 527.2779   2.937054 #> 640 517.3096   2.547607 #> 641 516.1254   2.502776 #> 642 500.0787   2.879035 #> 643 500.0224   3.164276 #> 644 500.1481   2.519653 #> 645 690.3819   2.719218 #> 646 500.0820   2.954276 #> 647 502.5412   2.549334 #> 648 606.0367   2.541225 #> 649 519.2278   2.745783 #> 650 510.1812   2.513761 #> 651 500.0143   3.191166 #> 652 971.3042   2.942608 #> 653 500.7066   3.966039 #> 654 500.6694   2.539588 #> 655 500.5097   3.369378 #> 656 918.2243   2.640302 #> 657 501.2050   2.586594 #> 658 508.8138   3.165456 #> 659 502.6623   2.542460 #> 660 506.4522   2.609718 #> 661 500.1969   2.659318 #> 662 501.7717   2.938432 #> 663 500.0240   2.734548 #> 664 717.6621   3.016556 #> 665 500.5889   3.169243 #> 666 500.2831   2.509736 #> 667 504.6585   2.908222 #> 668 500.1117   2.826382 #> 669 520.2858   3.136599 #> 670 942.5422   2.759661 #> 671 500.0413   3.024504 #> 672 672.0985   3.945603 #> 673 977.3935   2.706353 #> 674 500.0154   3.441592 #> 675 737.0516   2.570083 #> 676 508.9011   2.735755 #> 677 526.8856   2.820687 #> 678 500.5229   2.832507 #> 679 715.6719   2.839827 #> 680 500.0344   2.921606 #> 681 500.1797   2.800493 #> 682 512.0106   2.671012 #> 683 500.1087   3.210133 #> 684 555.6886   2.554239 #> 685 645.4836   2.550613 #> 686 504.1529   2.804890 #> 687 509.1073   3.176405 #> 688 500.0640   2.637257 #> 689 500.3760   2.874432 #> 690 500.4469   3.050629 #> 691 524.5354   3.296431 #> 692 500.8963   3.130081 #> 693 501.5875   4.415895 #> 694 508.2939   2.985024 #> 695 500.2047   2.782097 #> 696 502.4273   2.977654 #> 697 500.1200   3.186229 #> 698 500.6188   2.770402 #> 699 500.0918   3.037458 #> 700 500.0010   2.560461 #> 701 931.2317   2.871499 #> 702 529.9218   3.104132 #> 703 500.0993   2.582840 #> 704 501.5389   2.578450 #> 705 519.5484   3.387874 #> 706 550.6660   2.627574 #> 707 518.1726   2.782132 #> 708 504.1626   2.504858 #> 709 500.0387   2.864660 #> 710 530.1000   3.445510 #> 711 514.3125   2.783381 #> 712 500.1528   3.593583 #> 713 869.0856   2.538372 #> 714 524.3312   3.119655 #> 715 610.3151   2.740518 #> 716 500.2422   3.153803 #> 717 502.2228   2.525915 #> 718 504.8836   2.944503 #> 719 502.6946   2.767992 #> 720 509.7802   2.734900 #> 721 500.0188   2.688031 #> 722 500.0207   2.710695 #> 723 500.1253   3.210592 #> 724 500.1491   2.745262 #> 725 790.1034   2.690358 #> 726 500.2045   2.509506 #> 727 504.1069   2.891496 #> 728 501.0002   4.149121 #> 729 504.8438   2.689761 #> 730 502.5818   2.940321 #> 731 500.0476   3.346374 #> 732 501.9039   3.745960 #> 733 570.7509   3.516188 #> 734 534.1547   3.424013 #> 735 500.2997   3.111041 #> 736 533.4127   2.958608 #> 737 504.0226   2.594800 #> 738 501.3504   3.202577 #> 739 500.2075   2.724883 #> 740 552.6776   3.419777 #> 741 611.4315   3.107739 #> 742 556.5311   2.520931 #> 743 512.7526   2.838974 #> 744 639.7401   2.974847 #> 745 504.8226   2.781225 #> 746 500.3026   2.884706 #> 747 559.9710   3.035585 #> 748 517.9195   2.776724 #> 749 517.8164   2.565356 #> 750 597.5738   2.877484 #> 751 521.9724   2.751911 #> 752 506.5306   2.915472 #> 753 504.7686   2.769088 #> 754 514.6487   2.627541 #> 755 500.0638   2.565224 #> 756 506.1201   2.977207 #> 757 988.0497   2.573942 #> 758 501.5826   2.638578 #> 759 504.3365   2.842625 #> 760 862.6221   2.680900 #> 761 508.8437   2.546139 #> 762 500.6696   2.512305 #> 763 501.8773   3.088706 #> 764 566.1114   3.240465 #> 765 664.4527   2.616901 #> 766 551.1947   3.597764 #> 767 500.5139   3.336093 #> 768 523.5061   2.710436 #> 769 504.6540   3.298069 #> 770 500.1127   3.262231 #> 771 567.3575   3.046163 #> 772 540.5833   3.384310 #> 773 504.3683   2.723704 #> 774 500.3995   3.933615 #> 775 656.7331   2.908596 #> 776 501.8514   2.539342 #> 777 626.5266   2.760079 #> 778 501.5216   2.507741 #> 779 500.7745   2.761734 #> 780 501.2984   3.025611 #> 781 513.6824   3.291989 #> 782 500.9908   2.685012 #> 783 500.1222   3.090577 #> 784 894.9946   3.169278 #> 785 511.9581   2.912082 #> 786 534.4297   2.982561 #> 787 862.5818   2.582431 #> 788 506.0221   2.593428 #> 789 558.1448   2.538515 #> 790 502.4155   2.560921 #> 791 500.0449   3.752559 #> 792 556.7502   2.764445 #> 793 502.7878   3.830910 #> 794 500.1240   2.828751 #> 795 515.9427   2.597133 #> 796 502.7472   3.501277 #> 797 500.5581   2.811521 #> 798 505.1369   2.854764 #> 799 509.9912   2.596760 #> 800 502.2850   2.580712 #> 801 505.8961   2.505559 #> 802 509.4686   2.964685 #> 803 573.1978   2.847543 #> 804 502.0944   3.521612 #> 805 587.1580   3.049958 #> 806 503.5974   2.611829 #> 807 501.5803   2.894672 #> 808 503.1488   2.536781 #> 809 501.8615   2.691767 #> 810 505.1078   2.790409 #> 811 501.4163   2.801762 #> 812 500.0176   4.033728 #> 813 503.2339   2.689712 #> 814 501.7573   2.913853 #> 815 501.6902   3.054398 #> 816 500.1473   2.825268 #> 817 503.9346   3.615834 #> 818 578.4207   3.187031 #> 819 500.3415   3.610616 #> 820 501.5153   3.807373 #> 821 500.2261   2.726142 #> 822 500.2035   2.593669 #> 823 933.6165   3.003087 #> 824 515.1068   2.674615 #> 825 504.1129   2.960478 #> 826 611.7106   2.924082 #> 827 501.3312   3.125059 #> 828 525.3309   2.601410 #> 829 500.1168   2.840812 #> 830 598.2100   2.664777 #> 831 548.4067   3.172200 #> 832 502.0608   2.691302 #> 833 500.3044   3.365818 #> 834 500.5700   3.254912 #> 835 571.6978   3.392151 #> 836 500.0393   2.822522 #> 837 643.7961   3.744504 #> 838 500.3306   2.518499 #> 839 634.0375   2.598788 #> 840 500.3291   2.520771 #> 841 500.0153   2.502127 #> 842 500.0002   3.199285 #> 843 500.4226   2.542629 #> 844 501.4498   2.748560 #> 845 670.2582   2.978067 #> 846 504.8103   2.630030 #> 847 507.4411   3.971300 #> 848 569.1616   2.649478 #> 849 502.4320   2.621912 #> 850 634.6652   3.933849 #> 851 593.2056   3.807041 #> 852 503.9478   3.005235 #> 853 727.9944   4.666413 #> 854 500.3803   3.349603 #> 855 500.5777   3.062365 #> 856 672.0306   2.618349 #> 857 507.1787   2.603983 #> 858 525.5183   2.581847 #> 859 501.7312   2.891638 #> 860 504.0480   2.530890 #> 861 571.9365   2.941017 #> 862 500.2572   3.559293 #> 863 500.7291   2.746064 #> 864 575.8866   2.737101 #> 865 510.2501   2.992432 #> 866 502.5139   2.732480 #> 867 500.0425   2.519143 #> 868 504.0947   2.623899 #> 869 500.0443   2.915138 #> 870 522.4903   2.620887 #> 871 501.0109   2.515213 #> 872 927.9793   2.739662 #> 873 500.2894   3.496267 #> 874 652.8214   2.947681 #> 875 502.2774   2.884950 #> 876 517.0569   2.744509 #> 877 541.8148   2.656677 #> 878 500.1418   2.567297 #> 879 500.3200   3.228959 #> 880 506.6104   2.550771 #> 881 521.6998   2.657589 #> 882 503.3318   3.084272 #> 883 505.5759   2.507153 #> 884 508.5472   2.873496 #> 885 505.4851   2.680918 #> 886 500.2263   2.639372 #> 887 500.3305   2.621501"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
