[{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  ggplot() +   geom_point(data = samp.etas.list[[1]], aes(x = ts, y = magnitudes), color = \"red\") +   geom_point(data = samp.etas.list[[2]], aes(x = ts, y = magnitudes), color = \"green\") +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") combined.M7.ETAS.cat <- bind_rows(samp.etas.list)  combined.M7.ETAS.cat <- bind_rows(samp.etas.list) combined.M7.ETAS.cat <- combined.M7.ETAS.cat[order(combined.M7.ETAS.cat$ts), ]  combined.M7.ETAS.cat$ID <- seq(1, length(combined.M7.ETAS.cat$ts))  ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase num.threads if you have more cores on your computer INLA::inla.setOption(num.threads = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.3959773  #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.3590217  #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  4.851905 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 90.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 128.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1470% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 38.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 2160% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 104.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 527% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 61.8%, Contract #> iinla: Step rescaling: 23.61%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 669% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 105.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 289% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 317% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 105.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 159% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 152% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 126% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 115% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 105% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 95.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 88% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 81.1% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 74.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 69% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 63.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 59% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 54.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 50.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 46.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 43.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 40.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 37.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 34.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 32.1% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 29.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 27.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 25.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 22.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 20.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 40 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 41 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 42 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 43 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.78% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 44 [max:100] #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  4.836574 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 103.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 40.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 30.1% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 24.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.53% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 19 [max:100] #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 6 rows containing missing values (`geom_line()`). #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 6 rows containing missing values (`geom_line()`). plt #> NULL  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 6 rows containing missing values (`geom_line()`). #> Warning: Removed 1 row containing missing values (`geom_line()`). #> Warning: Removed 6 rows containing missing values (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1299] #> 8 8 (1-3,1-1) arrange text[GRID.text.1300]  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exist, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p > 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Tutorial on real data","text":"Bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter \\(\\) rate \\(b\\). distribution mean \\(/b\\) variance \\(/b^2\\). unit_t(X, , b) Uniform distribution \\(\\) \\(b\\). exp_t(X, r) Exponential distribution rate \\(r\\). loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm \\(m\\) standard deviation logarithm \\(s\\). code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide subset HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. See data-raw/horus.R details subset created original data set. HORUS catalogue subset can accessed directly using horus ETAS.inlabru::horus: documentation data set available via ?horus. data reports earthquake time string (time_string), longitude (lon) latitude (lat) epicentre, depth kilometres (depth), moment magnitude (M). focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load ISIDE catalogue head(horus) #>           time_string     lon     lat depth    M #> 1 1960-01-03T20:19:34 15.3000 39.3000   290 6.34 #> 2 1960-01-04T09:20:00 13.1667 43.1333     0 3.94 #> 3 1960-01-06T15:17:34 12.7000 46.4833     4 4.69 #> 4 1960-01-06T15:20:53 12.7000 46.4667     0 4.14 #> 5 1960-01-06T15:31:00 12.7500 46.4333     0 3.00 #> 6 1960-01-06T15:45:00 12.7500 46.4333     0 3.00 # transform time string in Date object horus$time_date <- as.POSIXct(   horus$time_string,   format = \"%Y-%m-%dT%H:%M:%OS\" )  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01T00:00:00\", format = \"%Y-%m-%dT%H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01T00:00:00\", format = \"%Y-%m-%dT%H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Note: option list, one can also set number threads allowed INLA , e.g. num.threads = 8. override global option set beginning tutorial. code likely run many different systems, using global setting easier manage.","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(     difftime(aquila$time_date, start.date, units = \"days\")   ),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init # parameters' initial values )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  2.569268"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 )  head(post.samp) #>          mu         K    alpha          c        p #> 1 0.3768182 0.1692115 2.441901 0.04524287 1.121663 #> 2 0.2649694 0.1327542 2.419628 0.07328110 1.170722 #> 3 0.3336394 0.1228850 2.395974 0.10756716 1.244615 #> 4 0.3240704 0.1485059 2.439128 0.05362865 1.129319 #> 5 0.3267632 0.1497352 2.455251 0.06347121 1.199290 #> 6 0.2920085 0.1280860 2.437500 0.07423324 1.159560 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = 3 ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 37 rows containing non-finite values (`stat_bin()`). #> Warning: Removed 2 rows containing missing values (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL,   ncore = 1 ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     288     112     176 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.710361"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) head(post.samp) #>          mu          K    alpha         c        p #> 1 0.3541587 0.04469755 2.697617 0.1284345 1.283834 #> 2 0.2970337 0.06138893 2.509669 0.1526330 1.237986 #> 3 0.3783799 0.04308519 2.580395 0.3650492 1.527435 #> 4 0.3115789 0.04645309 2.538297 0.2312597 1.345073 #> 5 0.3349728 0.05178490 2.559067 0.1781860 1.302755 #> 6 0.3165936 0.03913663 2.500160 0.4441407 1.520866"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>          N N.bkg N.after #> first  288   112     176 #> second 408   104     304 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.9776268 input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Dr Francesco Serafini Dr Mark Naylor , School GeoSciences, University Edinburgh Prof Finn Lindgren , School Mathematics, University Edinburgh Dr Kirsty Bayliss , Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"study funded yhe Real-Time Earthquake Risk Reduction Resilient Europe RISE project , received funding European Union’s Horizon 2020 Research Innovation Program grant Agreement 821115. Naylor additionally funded NSFGEO-NERC grant NE/R000794/1. Bayliss funded EPSRC Studentship.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package Implement time varying incompleteness model Farnaz Kamranzad","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@newcastle.ac.uk (ORCID) Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore number cores used generate synthetic catalogues parallel.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x55dc1b639b18> #> <environment: 0x55dc1b63c368> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x55dc1b639840> #> <environment: 0x55dc1b63c368> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x55dc1b639568> #> <environment: 0x55dc1b63c368> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x55dc1b63d0c0> #> <environment: 0x55dc1b63c368> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x55dc1b63cde8> #> <environment: 0x55dc1b63c368> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   ncore = 1 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. ncore Integer number compute cores use.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"data.frame temporal catalogue columns [t_i, M_i, gen_i] , t_i times,  M_i magnitudes, gen_i includes information generation number","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>            ts magnitudes gen #> 1    50.91198   2.738343   1 #> 2   617.07991   2.573965   1 #> 3   561.66979   2.778381   1 #> 4   680.46280   3.521604   1 #> 5   835.78010   2.658102   1 #> 6   693.39959   3.510807   1 #> 7   101.13751   3.028838   1 #> 8   393.74228   2.986531   1 #> 9   554.71262   3.145813   1 #> 10  342.95844   3.230345   1 #> 11   63.99744   3.542408   1 #> 12   90.94952   2.774514   1 #> 13  334.35692   2.640266   1 #> 14  387.21829   3.428197   1 #> 15  583.55245   2.546273   1 #> 16  817.61708   2.695885   1 #> 17  789.39493   2.859197   1 #> 18  201.97773   2.879837   1 #> 19  901.48673   2.732265   1 #> 20  882.14906   2.744984   1 #> 21  864.58116   2.530650   1 #> 22  434.79204   2.910450   1 #> 23  255.59432   3.204118   1 #> 24  582.08874   2.571248   1 #> 25  268.50443   2.651337   1 #> 26  204.74558   2.655068   1 #> 27  397.05384   2.957572   1 #> 28  833.23390   2.754481   1 #> 29  630.84532   2.762000   1 #> 30  851.23438   4.177439   1 #> 31  999.12034   2.776692   1 #> 32  582.42993   2.566958   1 #> 33  619.63657   2.509406   1 #> 34  727.94733   3.099091   1 #> 35  940.74771   2.961414   1 #> 36  903.76355   2.507210   1 #> 37  348.66668   2.693990   1 #> 38  995.03174   2.605725   1 #> 39  589.16186   2.552574   1 #> 40  702.04483   2.745817   1 #> 41  910.92004   2.547566   1 #> 42   18.78248   2.605473   1 #> 43  759.39397   3.298560   1 #> 44  789.35499   2.797824   1 #> 45  171.71977   3.803972   1 #> 46  740.37085   2.655733   1 #> 47  544.73700   2.500574   1 #> 48  288.55827   2.913064   1 #> 49  235.83141   2.617927   1 #> 50  505.74915   2.911330   1 #> 51   39.22330   2.585358   1 #> 52  311.67324   2.543633   1 #> 53  254.65917   2.567864   1 #> 54  717.51890   2.724902   1 #> 55  989.44415   2.705994   1 #> 56  836.32763   2.916915   1 #> 57  705.78193   2.927265   1 #> 58  603.78929   2.543275   1 #> 59  919.12804   2.526194   1 #> 60  786.14304   2.665843   1 #> 61  182.00260   3.120598   1 #> 62  263.56242   2.764989   1 #> 63  309.78841   3.521729   1 #> 64  908.28580   2.763501   1 #> 65  563.95168   2.695162   1 #> 66  131.64543   3.445049   1 #> 67  829.87443   3.372981   1 #> 68  119.22265   2.816349   1 #> 69  447.32061   3.013987   1 #> 70  727.20567   2.553830   1 #> 71  485.91404   3.037233   1 #> 72  896.06743   2.621063   1 #> 73  227.92135   2.504577   1 #> 74  101.12871   3.045005   1 #> 75  616.93030   2.733257   1 #> 76  157.93425   2.540073   1 #> 77  387.76401   2.613752   1 #> 78  670.86184   2.596676   1 #> 79  520.83261   2.650375   1 #> 80  428.05630   2.591661   1 #> 81  729.37018   2.506942   1 #> 82  907.10167   2.586988   1 #> 83  400.54688   2.972537   1 #> 84  867.51454   2.511410   1 #> 85  380.19370   2.967243   1 #> 86  237.82245   2.507107   1 #> 87  628.77767   2.562898   1 #> 88  759.45865   3.125328   1 #> 89   13.22492   3.740537   1 #> 90  348.61081   2.542302   1 #> 91  352.98190   3.247914   1 #> 92  490.67576   2.937307   1 #> 93  382.35917   2.972460   1 #> 94  281.86480   2.700938   1 #> 95   85.22818   3.177742   1 #> 96   49.93759   2.763191   1 #> 97   99.06692   3.519965   1 #> 98  540.26760   3.334591   1 #> 99   45.00574   2.774296   1 #> 100 511.77376   2.717346   1 #> 101 423.42331   2.511586   1 #> 102 707.29720   2.738878   1 #> 103  20.10905   3.875819   1 #> 104 222.78834   2.685514   1 #> 105 296.95570   2.795394   1 #> 106 492.47359   2.853147   1 #> 107 239.63612   2.930788   1 #>  #> [[2]] #>           ts magnitudes gen #> 1  680.47351   2.673589   2 #> 2  682.16225   3.330923   2 #> 3  835.48274   2.764050   2 #> 4  511.62575   2.725473   2 #> 5  851.37853   2.926287   2 #> 6  867.03171   2.502531   2 #> 7  605.60637   3.319856   2 #> 8  921.67914   2.615378   2 #> 9  889.30001   2.527904   2 #> 10 442.52686   4.447892   2 #> 11  62.54742   2.618682   2 #> 12 284.12592   3.666135   2 #> 13 113.09328   2.718277   2 #> 14 718.65219   2.760802   2 #> 15  20.28886   2.540731   2 #> 16  20.15502   3.226316   2 #> 17  47.30781   3.159501   2 #> 18  20.17761   2.617583   2 #>  #> [[3]] #>          ts magnitudes gen #> 1 610.88367   3.935954   3 #> 2 925.66582   2.746417   3 #> 3 641.63207   3.236702   3 #> 4 494.34560   2.505733   3 #> 5 453.85941   2.510499   3 #> 6 454.99342   2.629928   3 #> 7 442.62554   2.645540   3 #> 8 285.76529   3.098862   3 #> 9  24.67377   2.809952   3 #>  #> [[4]] #>         ts magnitudes gen #> 1 700.8731   3.844963   4 #>  #> [[5]] #>         ts magnitudes gen #> 1 701.0735   2.633815   5 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>              ts magnitudes gen #> 1    529.714799   3.105540   0 #> 2    503.988488   3.288309   0 #> 3    836.016158   2.730042   0 #> 4    506.799928   2.808527   0 #> 5    501.046363   2.595055   0 #> 6    501.728415   3.296764   0 #> 7    525.286293   2.666209   0 #> 8    518.771405   2.637115   0 #> 9    500.840905   3.382145   0 #> 10   535.560010   3.097205   0 #> 11   500.102934   3.198549   0 #> 12   502.484957   4.139806   0 #> 13   500.530918   3.768057   0 #> 14   500.113791   2.912939   0 #> 15   513.454614   2.582465   0 #> 16   878.892990   2.622974   0 #> 17   530.590670   2.972185   0 #> 18   512.270124   3.339400   0 #> 19   604.805260   2.747389   0 #> 20   500.103115   3.055803   0 #> 21   500.109742   2.539199   0 #> 22   529.834993   2.693458   0 #> 23   851.502683   2.751057   0 #> 24   576.128469   2.646532   0 #> 25   500.533421   2.524526   0 #> 26   603.656166   3.511631   0 #> 27   530.777413   2.869010   0 #> 28   801.961985   2.858049   0 #> 29   522.850555   3.086466   0 #> 30   500.137630   2.686339   0 #> 31   505.741409   3.099960   0 #> 32   506.899615   2.520764   0 #> 33   500.151736   3.171403   0 #> 34   503.522023   3.285726   0 #> 35   500.759657   2.911633   0 #> 36   500.186865   2.640481   0 #> 37   500.076954   3.835804   0 #> 38   501.568319   2.845194   0 #> 39   509.448954   2.908169   0 #> 40   502.452274   2.585339   0 #> 41   500.264688   2.875895   0 #> 42   518.625234   3.106486   0 #> 43   503.965905   2.555175   0 #> 44   504.893964   3.022545   0 #> 45   516.677893   2.656357   0 #> 46   586.225467   2.540976   0 #> 47   500.999872   2.641734   0 #> 48   522.219595   3.464789   0 #> 49   500.581239   2.594466   0 #> 50   500.631951   2.855323   0 #> 51   501.037529   2.718198   0 #> 52   507.424166   2.863240   0 #> 53   503.907487   2.717495   0 #> 54   501.201268   2.713154   0 #> 55   744.102974   3.485507   0 #> 56   503.233718   2.833782   0 #> 57   542.575733   2.592249   0 #> 58   677.507750   2.686540   0 #> 59   557.214176   3.245963   0 #> 60   510.106239   5.082208   0 #> 61   509.737960   3.914844   0 #> 62   671.274540   2.724202   0 #> 63   500.262699   2.695982   0 #> 64   798.752217   2.563661   0 #> 65   500.670097   2.949381   0 #> 66   533.314215   2.543769   0 #> 67   611.236161   2.556062   0 #> 68   942.453978   3.191909   0 #> 69   782.756665   2.505396   0 #> 70   500.264614   2.610494   0 #> 71   527.627254   2.930609   0 #> 72   501.508920   2.781625   0 #> 73   500.268599   2.834259   0 #> 74   500.216149   3.473294   0 #> 75   503.837543   2.525977   0 #> 76   506.613616   3.729029   0 #> 77   786.806296   2.701377   0 #> 78   518.708003   2.927070   0 #> 79   500.980507   2.723637   0 #> 80   500.314934   3.353575   0 #> 81   619.766170   2.690871   0 #> 82   502.946818   2.789293   0 #> 83   506.307913   4.188475   0 #> 84   631.342596   3.191812   0 #> 85   500.529149   3.013559   0 #> 86   510.098181   2.786310   0 #> 87   500.763062   3.253458   0 #> 88   504.682306   2.699715   0 #> 89   500.069834   2.699755   0 #> 90   548.473955   2.889603   0 #> 91   500.457972   2.578422   0 #> 92   501.263941   3.179075   0 #> 93   500.405414   2.915579   0 #> 94   568.051562   4.263962   0 #> 95   615.215032   2.572407   0 #> 96   800.108510   2.866302   0 #> 97   504.614376   3.315997   0 #> 98   500.841753   2.526139   0 #> 99   500.066386   2.670030   0 #> 100  509.743984   2.689007   0 #> 101  500.136185   4.257320   0 #> 102  536.246586   2.503373   0 #> 103  500.199231   2.847997   0 #> 104  612.416532   3.372616   0 #> 105  502.618953   2.662753   0 #> 106  501.467703   3.681884   0 #> 107  514.989981   2.592706   0 #> 108  500.152810   2.885959   0 #> 109  501.171698   3.026538   0 #> 110  651.404826   2.532585   0 #> 111  504.129486   2.934635   0 #> 112  500.183495   2.617760   0 #> 113  507.729302   2.680862   0 #> 114  500.834329   4.562094   0 #> 115  500.030550   2.712046   0 #> 116  539.378283   3.629709   0 #> 117  513.355317   2.590756   0 #> 118  500.062849   2.975920   0 #> 119  565.540665   2.569177   0 #> 120  678.526421   4.176717   0 #> 121  643.201271   2.501062   0 #> 122  537.419295   2.660757   0 #> 123  520.443648   2.861491   0 #> 124  501.104717   4.106999   0 #> 125  502.680743   3.386697   0 #> 126  501.670236   3.276880   0 #> 127  592.648496   2.636640   0 #> 128  500.436713   2.510564   0 #> 129  568.570740   2.726705   0 #> 130  500.041397   2.949011   0 #> 131  500.280605   3.067067   0 #> 132  600.765407   2.554087   0 #> 133  501.200551   2.693225   0 #> 134  500.112818   2.577106   0 #> 135  899.509981   4.348980   0 #> 136  500.584771   4.647580   0 #> 137  501.012142   2.536715   0 #> 138  990.122077   2.507454   0 #> 139  500.202657   2.606209   0 #> 140  502.231169   2.960855   0 #> 141  502.553862   2.515964   0 #> 142  506.792146   2.779380   0 #> 143  536.913998   2.708928   0 #> 144  534.931132   2.769638   0 #> 145  508.185826   2.643254   0 #> 146  508.459755   2.668126   0 #> 147  602.563669   2.878345   0 #> 148  500.008649   2.781340   0 #> 149  505.182942   4.270637   0 #> 150  900.748098   2.524150   0 #> 151  500.086752   2.592605   0 #> 152  989.062690   2.591922   0 #> 153  500.126214   2.610695   0 #> 154  500.737370   3.214071   0 #> 155  500.453222   2.850680   0 #> 156  500.268928   2.614804   0 #> 157  503.904503   2.579325   0 #> 158  645.678993   3.768487   0 #> 159  501.493753   2.873637   0 #> 160  697.028794   2.515545   0 #> 161  558.123023   3.053004   0 #> 162  502.109904   2.593781   0 #> 163  514.415954   2.996826   0 #> 164  500.990840   2.841197   0 #> 165  500.518326   2.568180   0 #> 166  500.157343   3.176358   0 #> 167  503.426336   3.749181   0 #> 168  605.621238   2.643217   0 #> 169  893.610602   3.586877   0 #> 170  500.136970   2.820053   0 #> 171  508.663510   2.680275   0 #> 172  500.856709   2.613462   0 #> 173  500.100095   2.908871   0 #> 174  502.403613   2.803016   0 #> 175  503.473328   3.244642   0 #> 176  501.017842   2.636407   0 #> 177  554.010102   3.466321   0 #> 178  500.080293   3.534476   0 #> 179  513.058143   2.869723   0 #> 180  638.434943   2.782827   0 #> 181  500.209364   2.989179   0 #> 182  500.472958   3.677874   0 #> 183  509.139186   2.546873   0 #> 184  500.024150   3.178856   0 #> 185  501.551451   3.017672   0 #> 186  510.890492   3.390093   0 #> 187  500.068282   2.695923   0 #> 188  503.186692   2.519025   0 #> 189  505.187761   2.832029   0 #> 190  501.358016   2.822522   0 #> 191  558.820972   2.578703   0 #> 192  858.164245   2.577119   0 #> 193  506.334384   2.959597   0 #> 194  572.954624   2.766999   0 #> 195  595.077662   2.629488   0 #> 196  530.558850   2.774653   0 #> 197  515.001421   3.028357   0 #> 198  508.626339   3.255175   0 #> 199  501.242736   2.832747   0 #> 200  503.468337   3.080060   0 #> 201  500.457977   3.578434   0 #> 202  501.500006   2.695943   0 #> 203  558.340858   3.512453   0 #> 204  539.803097   2.672677   0 #> 205  500.291895   2.785740   0 #> 206  505.339098   2.680647   0 #> 207  550.397694   4.005564   0 #> 208  500.139090   3.058122   0 #> 209  501.817106   2.649053   0 #> 210  535.954449   2.652698   0 #> 211  503.376064   3.464915   0 #> 212  579.771408   3.089459   0 #> 213  507.097420   2.949089   0 #> 214  504.456620   4.048674   0 #> 215  501.800241   2.775318   0 #> 216  501.414285   2.827563   0 #> 217  500.009676   2.845504   0 #> 218  549.875229   2.538373   0 #> 219  577.729589   2.737692   0 #> 220  503.983916   3.171953   0 #> 221  621.867835   2.907007   0 #> 222  501.197009   3.410833   0 #> 223  501.336363   3.910371   0 #> 224  508.295721   3.277586   0 #> 225  517.413961   3.785210   0 #> 226  525.838694   2.552055   0 #> 227  512.239132   2.679513   0 #> 228  536.308195   2.765766   0 #> 229  512.940416   3.737901   0 #> 230  500.799842   3.069080   0 #> 231  509.311374   2.507490   0 #> 232  501.292241   2.899538   0 #> 233  566.367037   3.471777   0 #> 234  542.897277   3.081216   0 #> 235  510.154351   3.107884   0 #> 236  501.132486   3.004091   0 #> 237  526.214997   3.168102   0 #> 238  502.689443   2.581988   0 #> 239  500.281643   3.278525   0 #> 240  636.949397   3.779722   0 #> 241  527.433503   2.504703   0 #> 242  500.706936   3.738111   0 #> 243  556.325421   2.559776   0 #> 244  501.002955   4.707516   0 #> 245  516.485927   2.757048   0 #> 246  501.560157   2.637971   0 #> 247  705.016851   3.468573   0 #> 248  502.657056   2.721507   0 #> 249  500.036881   2.563683   0 #> 250  510.770502   2.897959   0 #> 251  501.027458   2.825580   0 #> 252  726.701196   2.973180   0 #> 253  500.201972   2.655616   0 #> 254  503.899317   5.549110   0 #> 255  501.664677   3.015238   0 #> 256  500.009789   2.535122   0 #> 257  500.782247   3.015666   0 #> 258  500.125043   3.662947   0 #> 259  502.376958   2.682189   0 #> 260  500.071577   2.980130   0 #> 261  509.991602   2.710971   0 #> 262  535.079515   2.930713   0 #> 263  500.457709   3.255311   0 #> 264  501.506416   2.707555   0 #> 265  556.343564   3.164422   0 #> 266  500.014000   2.596134   0 #> 267  504.739582   2.737590   0 #> 268  514.011236   2.668357   0 #> 269  519.674951   3.650873   0 #> 270  500.228736   4.008626   0 #> 271  501.715554   2.732018   0 #> 272  500.071203   2.630187   0 #> 273  501.456791   2.726522   0 #> 274  500.548624   2.752022   0 #> 275  507.165730   2.766410   0 #> 276  522.444569   2.631738   0 #> 277  500.028338   3.540462   0 #> 278  500.154863   2.608929   0 #> 279  500.049581   2.619008   0 #> 280  500.161645   2.869486   0 #> 281  500.550446   2.849039   0 #> 282  501.755803   3.732579   0 #> 283  500.672516   2.590916   0 #> 284  500.063738   3.766985   0 #> 285  500.874670   3.950916   0 #> 286  500.210783   2.530909   0 #> 287  500.004933   3.635955   0 #> 288  510.285110   2.966499   0 #> 289  500.376455   2.564569   0 #> 290  501.350259   2.536675   0 #> 291  517.236491   3.422390   0 #> 292  504.641152   2.718985   0 #> 293  500.156551   3.997993   0 #> 294  558.049900   2.565156   0 #> 295  512.719457   2.572043   0 #> 296  515.511573   3.234221   0 #> 297  509.550600   3.238637   0 #> 298  500.324281   2.609416   0 #> 299  502.057074   2.706232   0 #> 300  515.155323   2.655056   0 #> 301  655.451809   2.537614   0 #> 302  526.702717   2.649314   0 #> 303  722.026341   3.726520   0 #> 304  500.047839   2.857486   0 #> 305  511.467971   2.781085   0 #> 306  500.596117   3.178249   0 #> 307  500.570157   2.905430   0 #> 308  694.601613   2.684091   0 #> 309  500.137452   2.553971   0 #> 310  600.080598   3.808877   0 #> 311  537.559407   2.919620   0 #> 312  504.361493   3.023694   0 #> 313  500.282634   2.790607   0 #> 314  500.192695   2.530859   0 #> 315  500.322857   3.175974   0 #> 316  502.578628   3.137309   0 #> 317  518.949647   2.709384   0 #> 318  500.804147   2.620388   0 #> 319  500.099634   2.527489   0 #> 320  500.579997   2.533292   0 #> 321  515.508677   2.768695   0 #> 322  500.085579   2.948403   0 #> 323  500.764111   2.765974   0 #> 324  714.009384   3.408144   0 #> 325  925.500362   2.577652   0 #> 326  528.412440   2.613605   0 #> 327  503.855823   2.850603   0 #> 328  500.164126   3.659827   0 #> 329  639.238083   2.626399   0 #> 330  501.433437   3.060878   0 #> 331  500.186483   5.555818   0 #> 332  530.370396   4.279269   0 #> 333  501.533495   2.804121   0 #> 334  563.693136   2.643696   0 #> 335  500.017353   2.942479   0 #> 336  871.935168   2.852183   0 #> 337  567.926470   3.344283   0 #> 338  503.904880   2.515006   0 #> 339  546.445200   2.533729   0 #> 340  501.987523   2.659586   0 #> 341  508.231427   2.787174   0 #> 342  520.047336   2.809993   0 #> 343  500.483786   3.243226   0 #> 344  738.490495   2.750907   0 #> 345  513.604300   2.756177   0 #> 346  501.719197   2.983076   0 #> 347  550.916105   2.764218   0 #> 348  500.694813   2.593470   0 #> 349  548.926391   2.724542   0 #> 350  527.436369   2.508639   0 #> 351  546.999247   3.513704   0 #> 352  775.876695   2.571706   0 #> 353  500.161956   2.504684   0 #> 354  632.513149   3.392882   0 #> 355  500.013567   2.505100   0 #> 356  502.042466   2.626827   0 #> 357  500.926579   2.587517   0 #> 358  500.203253   2.936146   0 #> 359  500.200239   3.037390   0 #> 360  500.259520   2.778647   0 #> 361  500.675426   3.757812   0 #> 362  969.669003   2.675299   0 #> 363  761.954746   3.556493   0 #> 364  500.104095   3.404145   0 #> 365  500.157770   2.771919   0 #> 366  500.372795   2.568401   0 #> 367  501.063551   4.137363   0 #> 368  534.063229   2.687567   0 #> 369  515.333266   3.514971   0 #> 370  501.904750   2.860034   0 #> 371  515.050209   2.652840   0 #> 372  502.270883   2.547830   0 #> 373  500.670317   3.017776   0 #> 374  858.304831   2.895697   0 #> 375  645.986667   2.543236   0 #> 376  500.125535   2.633502   0 #> 377  549.031084   3.337955   0 #> 378  500.006631   2.931442   0 #> 379  502.114727   3.010633   0 #> 380  500.054533   2.518501   0 #> 381  504.665511   2.533654   0 #> 382  533.060284   3.030053   0 #> 383  550.958117   3.267338   0 #> 384  500.316277   3.245946   0 #> 385  500.160178   3.643996   0 #> 386  500.135178   3.833651   0 #> 387  511.723738   2.703027   0 #> 388  530.390929   2.805965   0 #> 389  501.876254   2.614449   0 #> 390  500.021003   3.121167   0 #> 391  512.402938   2.538545   0 #> 392  518.871826   3.765881   0 #> 393  979.718932   3.108114   0 #> 394  506.925768   2.982558   0 #> 395  505.439454   2.961634   0 #> 396  501.718450   2.852468   0 #> 397  500.214311   2.785926   0 #> 398  515.231878   2.802890   0 #> 399  500.051405   2.599293   0 #> 400  515.610882   2.739845   0 #> 401  506.063863   2.706120   0 #> 402  500.007835   2.984591   0 #> 403  500.056710   3.199071   0 #> 404  500.022137   2.916702   0 #> 405  500.472362   2.986645   0 #> 406  500.148586   2.620867   0 #> 407  503.604613   2.916411   0 #> 408  949.623294   2.568032   0 #> 409  525.267927   3.706763   0 #> 410  500.762499   3.525705   0 #> 411  500.041635   4.722080   0 #> 412  510.410701   2.876635   0 #> 413  543.354295   2.919472   0 #> 414  500.111973   3.111111   0 #> 415  500.413598   2.611134   0 #> 416  501.320435   2.803814   0 #> 417  892.850432   2.566173   0 #> 418  691.075620   2.574946   0 #> 419  500.000823   2.775383   0 #> 420  500.077921   2.501120   0 #> 421  520.218575   2.873540   0 #> 422  505.520644   2.581376   0 #> 423  506.775153   2.564711   0 #> 424  526.989790   3.580270   0 #> 425  505.215566   2.539939   0 #> 426  500.556436   3.140245   0 #> 427  505.557113   3.836112   0 #> 428  500.174236   2.957190   0 #> 429  500.194061   3.055957   0 #> 430  518.817581   2.802490   0 #> 431  500.105452   2.555755   0 #> 432  732.071068   3.067499   0 #> 433  500.193175   2.697945   0 #> 434  605.735926   2.604168   0 #> 435  513.527055   2.639633   0 #> 436  534.701081   3.262491   0 #> 437  521.892838   2.894946   0 #> 438  501.088740   2.748475   0 #> 439  542.440030   2.709394   0 #> 440  500.758458   3.272621   0 #> 441  501.618319   3.087225   0 #> 442  501.559527   3.885313   0 #> 443  551.615383   3.438212   0 #> 444  501.054606   2.631392   0 #> 445  664.863643   2.531726   0 #> 446  501.182263   3.455096   0 #> 447  614.390230   2.761136   0 #> 448  555.851284   2.768749   0 #> 449  500.117655   2.672611   0 #> 450  500.020759   3.387589   0 #> 451  736.233716   2.549686   0 #> 452  510.536465   2.777221   0 #> 453  530.956036   2.754594   0 #> 454  503.911118   2.509332   0 #> 455  501.582182   2.961677   0 #> 456  500.923915   2.599851   0 #> 457  501.063411   2.511166   0 #> 458  500.089896   2.723142   0 #> 459  500.121327   3.003696   0 #> 460  587.151046   2.875548   0 #> 461  531.403878   2.814230   0 #> 462  517.000009   2.539352   0 #> 463  508.596913   2.985008   0 #> 464  501.193159   3.213501   0 #> 465  500.222977   2.789600   0 #> 466  655.374899   3.839435   0 #> 467  952.821121   2.654296   0 #> 468  508.581765   2.538063   0 #> 469  500.985805   3.333077   0 #> 470  500.254245   2.601121   0 #> 471  500.129604   2.603209   0 #> 472  678.933854   2.829827   0 #> 473  501.800069   4.308747   0 #> 474  653.616027   3.787880   0 #> 475  501.637450   2.562764   0 #> 476  502.045315   2.704047   0 #> 477  501.317104   3.271782   0 #> 478  731.630300   3.087203   0 #> 479  504.942762   2.713692   0 #> 480  522.640193   2.620833   0 #> 481  500.068254   2.732209   0 #> 482  506.822288   2.502670   0 #> 483  501.072349   2.866009   0 #> 484  501.268246   2.539343   0 #> 485  500.233126   2.806779   0 #> 486  504.016232   2.731129   0 #> 487  506.731360   2.746013   0 #> 488  513.095843   3.053995   0 #> 489  503.230263   2.918495   0 #> 490  500.410738   2.571070   0 #> 491  506.506275   3.249514   0 #> 492  500.202633   3.576044   0 #> 493  559.002530   3.593900   0 #> 494  518.848984   2.742441   0 #> 495  500.035968   3.670114   0 #> 496  500.412064   3.025013   0 #> 497  500.497536   3.124722   0 #> 498  525.521009   2.662715   0 #> 499  500.084926   2.593670   0 #> 500  502.808154   2.607954   0 #> 501  500.393160   2.842358   0 #> 502  500.303130   2.549407   0 #> 503  500.069818   2.980711   0 #> 504  528.302248   2.577745   0 #> 505  500.170078   2.603606   0 #> 506  500.051110   2.644318   0 #> 507  865.960817   2.680335   0 #> 508  500.373183   2.565234   0 #> 509  505.346983   2.533605   0 #> 510  501.364604   3.698927   0 #> 511  500.030168   2.515368   0 #> 512  500.141603   3.244209   0 #> 513  529.463605   2.568300   0 #> 514  503.866616   2.701559   0 #> 515  528.249285   2.514862   0 #> 516  565.328876   2.708525   0 #> 517  519.624398   2.595298   0 #> 518  690.886653   2.816030   0 #> 519  529.742205   2.843075   0 #> 520  798.546642   3.203096   0 #> 521  807.584692   2.890870   0 #> 522  500.108694   2.560160   0 #> 523  501.415290   2.717585   0 #> 524  500.430780   3.000014   0 #> 525  500.536188   2.534230   0 #> 526  527.299643   2.734834   0 #> 527  526.576302   2.566869   0 #> 528  500.940036   3.060007   0 #> 529  500.196068   2.764673   0 #> 530  519.260124   2.547674   0 #> 531  538.707512   3.022362   0 #> 532  520.517085   3.010101   0 #> 533  500.083998   2.545553   0 #> 534  500.946730   2.585202   0 #> 535  508.592044   2.509238   0 #> 536  523.408709   2.794822   0 #> 537  654.460238   3.602145   0 #> 538  500.085941   2.847766   0 #> 539  568.624999   3.156717   0 #> 540  537.489295   2.621974   0 #> 541  502.612113   2.607361   0 #> 542  501.466415   2.637185   0 #> 543  500.267023   4.111891   0 #> 544  500.079398   4.095504   0 #> 545  500.033852   2.869232   0 #> 546  511.114461   3.092808   0 #> 547  514.578629   2.679639   0 #> 548  566.814016   2.938664   0 #> 549  501.732073   3.448176   0 #> 550  500.352682   4.252547   0 #> 551  501.314188   2.655659   0 #> 552  500.125421   2.894593   0 #> 553  528.003185   2.710395   0 #> 554  514.884418   2.695032   0 #> 555  500.005495   3.020673   0 #> 556  563.541558   2.846320   0 #> 557  502.145787   3.617616   0 #> 558  501.369357   3.375257   0 #> 559  500.033948   2.707962   0 #> 560  500.463316   2.524575   0 #> 561  509.260453   3.269423   0 #> 562  509.682729   2.921329   0 #> 563  501.424766   2.904877   0 #> 564  811.763121   2.724940   0 #> 565  505.224164   2.853402   0 #> 566  500.121308   2.509993   0 #> 567  512.834086   3.199853   0 #> 568  614.488027   2.572703   0 #> 569  500.169911   2.770262   0 #> 570  503.471612   4.067257   0 #> 571  500.626146   2.937531   0 #> 572  614.669049   3.004394   0 #> 573  792.965920   2.583240   0 #> 574  578.084350   2.510186   0 #> 575  503.527761   3.259139   0 #> 576  500.566109   2.835635   0 #> 577  510.347746   2.725766   0 #> 578  500.486497   2.681002   0 #> 579  501.452878   3.408491   0 #> 580  522.099236   2.900990   0 #> 581  503.074265   2.745353   0 #> 582  501.125349   2.565692   0 #> 583  500.429603   2.807423   0 #> 584  500.345952   4.308500   0 #> 585  500.191437   3.338863   0 #> 586  523.300948   2.855556   0 #> 587  549.317391   2.775063   0 #> 588  500.013173   2.714754   0 #> 589  500.037047   3.904306   0 #> 590  500.827311   2.511121   0 #> 591  513.853705   4.112465   0 #> 592  538.851449   2.945142   0 #> 593  507.114287   2.631763   0 #> 594  776.360007   2.541544   0 #> 595  500.094757   2.714186   0 #> 596  500.204626   3.843737   0 #> 597  500.308756   2.500356   0 #> 598  502.820174   2.586294   0 #> 599  502.072869   3.418716   0 #> 600  525.944847   3.183178   0 #> 601  508.856240   3.816608   0 #> 602  504.433096   3.183739   0 #> 603  519.856418   3.152129   0 #> 604  500.029511   3.606804   0 #> 605  502.894720   2.643601   0 #> 606  500.339221   3.029271   0 #> 607  500.410801   3.271680   0 #> 608  500.267657   2.675383   0 #> 609  539.127178   2.629298   0 #> 610  746.791890   2.563533   0 #> 611  643.706247   2.560785   0 #> 612  500.759130   3.449364   0 #> 613  523.823165   2.681957   0 #> 614  501.588685   2.741105   0 #> 615  500.129775   3.597422   0 #> 616  500.518870   3.578095   0 #> 617  514.791562   2.516407   0 #> 618  552.704835   2.947104   0 #> 619  514.074631   2.597721   0 #> 620  500.082393   3.192916   0 #> 621  871.227692   3.068602   0 #> 622  535.098466   3.042543   0 #> 623  950.257100   3.235585   0 #> 624  500.015947   3.464595   0 #> 625  500.036734   3.199537   0 #> 626  500.158773   3.744806   0 #> 627  500.033636   2.754028   0 #> 628  500.224830   3.197819   0 #> 629  529.118031   2.567183   0 #> 630  557.719285   2.931349   0 #> 631  515.825390   2.538852   0 #> 632  503.131718   2.660149   0 #> 633  500.061128   3.102162   0 #> 634  500.172809   3.203267   0 #> 635  518.160264   3.176331   0 #> 636  503.820748   3.049882   0 #> 637  500.095636   2.509399   0 #> 638  504.369452   2.568169   0 #> 639  501.102572   2.549749   0 #> 640  511.058126   2.762382   0 #> 641  506.726688   2.986537   0 #> 642  503.414139   3.065845   0 #> 643  500.003899   2.628570   0 #> 644  500.163553   3.511651   0 #> 645  605.254097   2.537557   0 #> 646  502.744060   3.038478   0 #> 647  501.542436   2.601634   0 #> 648  501.378705   2.769363   0 #> 649  500.573030   2.675134   0 #> 650  500.217122   2.825117   0 #> 651  500.187629   2.666287   0 #> 652  501.812671   4.061337   0 #> 653  500.375106   2.755531   0 #> 654  500.680225   3.560894   0 #> 655  577.253906   2.703419   0 #> 656  557.335251   2.775253   0 #> 657  507.972727   3.058558   0 #> 658  507.268077   3.185523   0 #> 659  615.347447   2.746229   0 #> 660  501.498872   3.134787   0 #> 661  514.386975   2.643338   0 #> 662  500.523012   2.649659   0 #> 663  501.865291   2.579459   0 #> 664  506.315768   2.759662   0 #> 665  503.142417   2.763943   0 #> 666  500.077076   2.583602   0 #> 667  650.298129   4.344972   0 #> 668  695.377169   2.791963   0 #> 669  502.974853   2.553565   0 #> 670  557.861767   2.540286   0 #> 671  502.436837   3.013671   0 #> 672  553.641063   2.733934   0 #> 673  500.713210   2.742939   0 #> 674  508.882358   3.281410   0 #> 675  526.855140   2.636357   0 #> 676  500.298232   2.658645   0 #> 677  500.227574   3.428850   0 #> 678  500.150712   2.599369   0 #> 679  500.489534   3.149874   0 #> 680  502.705886   2.767749   0 #> 681  501.122338   2.632631   0 #> 682  512.870265   2.809699   0 #> 683  500.428814   2.865598   0 #> 684  500.656751   2.636403   0 #> 685  509.180261   2.512755   0 #> 686  500.155336   2.702347   0 #> 687  500.256794   3.908109   0 #> 688  500.030792   2.577704   0 #> 689  612.120746   2.928630   0 #> 690  501.941962   2.680020   0 #> 691  501.175741   2.842760   0 #> 692  500.346053   3.568698   0 #> 693  500.203423   3.123947   0 #> 694  510.270693   2.860070   0 #> 695  684.478204   2.728027   0 #> 696  507.717535   2.758923   0 #> 697  501.182960   2.882805   0 #> 698  623.810548   2.953296   0 #> 699  506.903590   2.777270   0 #> 700  724.216074   2.549797   0 #> 701  506.940712   3.484418   0 #> 702  742.423707   2.658278   0 #> 703  500.110089   3.220816   0 #> 704  505.211663   3.229970   0 #> 705  628.905404   2.866311   0 #> 706  500.412321   2.740730   0 #> 707  500.300893   2.982670   0 #> 708  505.116339   2.585423   0 #> 709  502.200925   2.843323   0 #> 710  657.340287   3.616480   0 #> 711  544.795230   2.895717   0 #> 712  604.918979   2.864896   0 #> 713  520.760644   3.098702   0 #> 714  503.143207   2.530805   0 #> 715  500.476345   2.726505   0 #> 716  511.606616   2.870375   0 #> 717  501.282973   2.632897   0 #> 718  518.708485   2.756764   0 #> 719  963.768984   2.959918   0 #> 720  636.576140   5.610617   0 #> 721  500.293356   2.689749   0 #> 722  500.023266   3.314398   0 #> 723  500.186602   2.546207   0 #> 724  541.627580   3.536824   0 #> 725  512.699642   2.838057   0 #> 726  500.003127   2.848247   0 #> 727  501.832377   2.803698   0 #> 728  508.609442   3.033819   0 #> 729  500.313685   3.025172   0 #> 730  506.933553   3.986515   0 #> 731  500.029267   3.177837   0 #> 732  507.055519   2.767661   0 #> 733  500.675549   3.473664   0 #> 734  503.471975   2.780760   0 #> 735  500.739594   2.645575   0 #> 736  500.157582   3.347402   0 #> 737  573.710909   3.850300   0 #> 738  502.420158   2.720381   0 #> 739  500.167330   2.602453   0 #> 740  639.894533   3.046127   0 #> 741  500.205504   3.294798   0 #> 742  506.922426   3.919040   0 #> 743  500.087225   3.852917   0 #> 744  502.165844   2.649026   0 #> 745  508.902415   2.845768   0 #> 746  501.768281   2.676129   0 #> 747  500.468893   3.974405   0 #> 748  500.079366   2.696434   0 #> 749  500.176412   2.845467   0 #> 750  500.304657   3.241436   0 #> 751  612.675276   2.606725   0 #> 752  500.004743   2.607840   0 #> 753  500.365720   3.059635   0 #> 754  500.063702   3.245908   0 #> 755  550.247148   2.572848   0 #> 756  933.789917   4.130113   0 #> 757  500.425437   2.548327   0 #> 758  570.598957   3.169622   0 #> 759  502.169963   3.065806   0 #> 760  500.821282   2.543328   0 #> 761  663.816769   2.536384   0 #> 762  500.311601   3.297198   0 #> 763  500.753438   2.825018   0 #> 764  502.308283   2.992141   0 #> 765  511.109590   3.261057   0 #> 766  506.731812   2.609363   0 #> 767  500.501748   2.555910   0 #> 768  689.505794   2.809752   0 #> 769  500.478326   2.895588   0 #> 770  500.489066   2.576477   0 #> 771  818.561444   2.685709   0 #> 772  500.387881   2.756622   0 #> 773  820.799252   2.542741   0 #> 774  569.010576   2.644061   0 #> 775  500.798128   2.826371   0 #> 776  520.820366   2.872363   0 #> 777  504.777940   2.614618   0 #> 778  501.686739   3.045938   0 #> 779  508.264235   2.555906   0 #> 780  500.252151   2.936850   0 #> 781  502.894498   3.094209   0 #> 782  677.981829   2.869609   0 #> 783  505.297828   2.666495   0 #> 784  570.193802   3.299278   0 #> 785  557.367972   2.971107   0 #> 786  500.031462   2.504620   0 #> 787  561.127537   3.920655   0 #> 788  502.166629   2.506290   0 #> 789  500.085742   3.462937   0 #> 790  500.013345   3.042041   0 #> 791  500.090754   2.732315   0 #> 792  501.877171   2.681429   0 #> 793  500.801536   3.248109   0 #> 794  547.356531   2.685067   0 #> 795  500.455099   2.603799   0 #> 796  501.885882   3.046471   0 #> 797  572.797299   2.662259   0 #> 798  560.960559   2.653413   0 #> 799  502.166032   2.813538   0 #> 800  500.068414   2.580569   0 #> 801  500.461797   2.537941   0 #> 802  880.094040   2.977392   0 #> 803  500.034595   2.590101   0 #> 804  500.258798   2.801333   0 #> 805  500.053370   3.786479   0 #> 806  501.413110   2.667390   0 #> 807  508.015355   3.335421   0 #> 808  501.766235   3.422509   0 #> 809  600.231780   4.006684   0 #> 810  504.956515   2.942070   0 #> 811  505.676437   2.821877   0 #> 812  582.677159   2.736754   0 #> 813  500.189544   3.133214   0 #> 814  741.166865   2.583428   0 #> 815  529.411819   2.588622   0 #> 816  500.065764   2.600257   0 #> 817  512.188539   2.919709   0 #> 818  817.053804   2.895962   0 #> 819  507.099750   3.162742   0 #> 820  519.645655   3.075270   0 #> 821  514.413505   2.716663   0 #> 822  503.191108   2.724577   0 #> 823  500.211173   3.106264   0 #> 824  928.240110   3.192879   0 #> 825  526.684202   2.530050   0 #> 826  500.759469   2.649308   0 #> 827  500.991021   2.651564   0 #> 828  595.349772   2.543292   0 #> 829  855.881473   2.595405   0 #> 830  507.761039   3.555953   0 #> 831  500.263958   2.574088   0 #> 832  713.089226   2.694131   0 #> 833  504.621396   3.781857   0 #> 834  503.992730   2.952999   0 #> 835  501.263850   2.614855   0 #> 836  634.118553   2.776800   0 #> 837  505.276696   3.004671   0 #> 838  504.408918   2.865609   0 #> 839  916.220652   3.160385   0 #> 840  522.867569   2.990735   0 #> 841  500.249907   3.492594   0 #> 842  542.606377   2.739932   0 #> 843  532.972144   3.088019   0 #> 844  500.799268   2.824584   0 #> 845  793.209557   3.196292   0 #> 846  503.814609   2.781891   0 #> 847  501.214583   3.012644   0 #> 848  507.891636   4.079365   0 #> 849  500.408647   2.862072   0 #> 850  509.185663   2.612266   0 #> 851  508.931951   2.791888   0 #> 852  500.165683   2.509068   0 #> 853  599.652464   2.517534   0 #> 854  500.326711   3.194151   0 #> 855  500.929077   2.521653   0 #> 856  501.955568   2.961525   0 #> 857  503.922216   3.194217   0 #> 858  515.242724   2.826519   0 #> 859  501.346459   2.782167   0 #> 860  500.077053   2.705077   0 #> 861  501.815783   3.358559   0 #> 862  500.223049   2.799078   0 #> 863  509.987476   2.997132   0 #> 864  500.276697   2.839811   0 #> 865  500.186766   3.128689   0 #> 866  500.892869   3.010928   0 #> 867  502.750309   2.582343   0 #> 868  586.704228   3.054579   0 #> 869  500.079007   2.726967   0 #> 870  501.675225   2.919665   0 #> 871  500.191841   2.616008   0 #> 872  710.058050   2.587813   0 #> 873  500.468987   3.244858   0 #> 874  500.511069   2.789905   0 #> 875  594.470939   2.793464   0 #> 876  500.306010   2.993709   0 #> 877  531.189832   3.063569   0 #> 878  509.899720   3.066740   0 #> 879  502.538121   3.339827   0 #> 880  554.730126   2.618140   0 #> 881  501.492926   3.253204   0 #> 882  500.049377   3.063898   0 #> 883  503.716332   2.567497   0 #> 884  516.372748   2.769187   0 #> 885  502.859635   4.214619   0 #> 886  500.152074   2.675797   0 #> 887  500.136491   2.647434   0 #> 888  501.051348   2.549163   0 #> 889  543.965865   2.522287   0 #> 890  501.055267   3.404194   0 #> 891  501.216619   2.580331   0 #> 892  503.335020   2.990737   0 #> 893  511.076970   3.476437   0 #> 894  527.629857   2.850987   0 #> 895  501.565031   3.723363   0 #> 896  517.338705   3.022573   0 #> 897  982.372646   2.758748   0 #> 898  500.628670   2.655930   0 #> 899  529.046619   2.790723   0 #> 900  515.330365   2.624631   0 #> 901  500.231098   3.081459   0 #> 902  500.010496   2.844150   0 #> 903  503.554008   3.174957   0 #> 904  697.153638   2.881013   0 #> 905  510.557778   2.747345   0 #> 906  704.911282   2.764051   0 #> 907  500.009313   2.502120   0 #> 908  510.016192   2.665474   0 #> 909  503.887051   3.485451   0 #> 910  500.079851   3.125145   0 #> 911  766.901446   3.160196   0 #> 912  500.020705   2.607684   0 #> 913  500.156742   2.949067   0 #> 914  500.071517   2.641752   0 #> 915  500.120044   3.477386   0 #> 916  500.162998   2.789376   0 #> 917  500.957500   2.640430   0 #> 918  500.132898   3.264161   0 #> 919  980.931086   2.984310   0 #> 920  502.057397   2.643066   0 #> 921  531.302827   3.325876   0 #> 922  501.597488   2.681300   0 #> 923  513.153648   2.605950   0 #> 924  997.260708   2.521015   0 #> 925  502.339620   2.705159   0 #> 926   39.607905   2.688617   1 #> 927  571.007361   2.532916   1 #> 928  653.031587   2.537382   1 #> 929  139.346825   2.570716   1 #> 930   34.744758   2.515457   1 #> 931  339.661602   2.564106   1 #> 932  194.976509   2.517626   1 #> 933  907.767778   2.511168   1 #> 934  784.070381   2.524538   1 #> 935  783.673177   3.049347   1 #> 936  561.256319   2.814117   1 #> 937  751.421053   2.564137   1 #> 938  747.117132   2.567657   1 #> 939  158.558729   3.361612   1 #> 940  896.238327   3.519067   1 #> 941  548.284486   2.520277   1 #> 942  926.822303   2.754968   1 #> 943  814.958144   2.563133   1 #> 944  421.704737   3.149318   1 #> 945  165.931884   2.656786   1 #> 946  636.379173   2.924477   1 #> 947    6.518111   3.438040   1 #> 948  931.499221   2.885345   1 #> 949  792.929124   2.552356   1 #> 950  486.620974   3.142935   1 #> 951  767.895614   2.717699   1 #> 952  762.597147   2.565208   1 #> 953  642.182149   2.835753   1 #> 954  124.648229   2.758680   1 #> 955  100.050997   2.620382   1 #> 956  709.348970   2.620568   1 #> 957  697.267667   2.676441   1 #> 958  644.868534   2.529650   1 #> 959  723.580604   2.911667   1 #> 960  760.319768   2.960757   1 #> 961  146.288256   3.376700   1 #> 962  532.516435   2.925713   1 #> 963  715.355237   2.530105   1 #> 964  367.104600   2.531699   1 #> 965  284.434560   3.459612   1 #> 966   13.448113   2.670165   1 #> 967  930.767235   4.118397   1 #> 968   85.187213   2.745596   1 #> 969  634.776853   3.776834   1 #> 970  131.259842   2.590837   1 #> 971  974.641010   2.831932   1 #> 972  684.283736   2.748397   1 #> 973  757.591438   2.568441   1 #> 974  922.821498   3.515587   1 #> 975  951.790957   3.119219   1 #> 976  675.602853   2.570222   1 #> 977  299.936517   2.933743   1 #> 978  307.451879   2.676723   1 #> 979   65.057692   2.632703   1 #> 980  347.059459   3.041514   1 #> 981  972.526100   3.224002   1 #> 982  912.616151   3.019483   1 #> 983  524.873573   2.603059   1 #> 984  925.982308   2.503250   1 #> 985  265.801092   3.086744   1 #> 986  944.106517   3.604138   1 #> 987  940.841544   2.625109   1 #> 988  606.055642   3.654036   1 #> 989  868.644392   2.646077   1 #> 990  247.441344   2.799383   1 #> 991   84.123158   2.712383   1 #> 992   92.093284   2.676472   1 #> 993  531.230156   3.109669   1 #> 994  696.543922   2.575601   1 #> 995  277.126431   3.666936   1 #> 996  510.750113   2.672580   1 #> 997   41.388819   2.661564   1 #> 998  693.333226   2.659674   1 #> 999  155.859869   2.663498   1 #> 1000 968.991268   2.535192   1 #> 1001 178.672881   2.676427   1 #> 1002 878.659122   3.494999   1 #> 1003 650.372420   3.111882   1 #> 1004 457.050121   3.429754   1 #> 1005 286.849185   2.673313   1 #> 1006 641.780045   2.509105   1 #> 1007 228.001973   2.869817   1 #> 1008 767.177909   3.054833   1 #> 1009 176.964650   2.663534   1 #> 1010 375.168902   2.549454   1 #> 1011  52.099217   3.754562   1 #> 1012 544.725681   2.769627   1 #> 1013 897.692307   4.137711   1 #> 1014 636.146793   2.683411   1 #> 1015  52.279578   3.214836   1 #> 1016 922.530647   2.784004   1 #> 1017 715.269520   2.734760   1 #> 1018 740.464637   2.560556   1 #> 1019 764.584893   2.537380   1 #> 1020  72.383241   3.211886   1 #> 1021 842.304023   2.739684   1 #> 1022 998.406449   2.818491   1 #> 1023 892.343922   2.999097   1 #> 1024 659.103195   2.583796   1 #> 1025 683.074737   3.430064   1 #> 1026 628.795427   2.712977   1 #> 1027 931.181027   2.587216   1 #> 1028 596.048471   6.393368   1 #> 1029 191.637144   2.690669   1 #> 1030 205.860669   3.611095   1 #> 1031 569.250786   2.730530   1 #>  #> [[3]] #>             ts magnitudes gen #> 1    563.23068   2.800683   2 #> 2    500.34749   2.640164   2 #> 3    531.62953   2.850690   2 #> 4    975.44909   3.230697   2 #> 5    502.61848   2.579471   2 #> 6    621.48111   2.582078   2 #> 7    503.41181   3.170448   2 #> 8    503.88538   3.654696   2 #> 9    510.07026   3.279349   2 #> 10   604.82923   2.523709   2 #> 11   721.96120   2.500435   2 #> 12   603.67505   2.682389   2 #> 13   604.34245   2.551987   2 #> 14   602.51199   2.562442   2 #> 15   518.11476   2.835591   2 #> 16   520.76165   3.645119   2 #> 17   505.60517   2.945962   2 #> 18   500.62570   2.897432   2 #> 19   527.01865   2.749228   2 #> 20   510.47627   2.836327   2 #> 21   706.46904   2.991740   2 #> 22   514.61646   3.004568   2 #> 23   617.81695   2.822609   2 #> 24   510.95815   2.563903   2 #> 25   523.17054   2.732323   2 #> 26   510.26930   2.556883   2 #> 27   511.75862   2.722156   2 #> 28   510.24940   2.920741   2 #> 29   510.86985   3.095705   2 #> 30   511.07720   2.829086   2 #> 31   561.62588   2.660745   2 #> 32   515.72659   2.618721   2 #> 33   511.28138   2.559826   2 #> 34   510.37131   2.642520   2 #> 35   511.01087   2.870999   2 #> 36   818.09015   2.760344   2 #> 37   530.09872   2.785125   2 #> 38   512.51845   2.711396   2 #> 39   605.88686   2.904330   2 #> 40   512.24629   2.540736   2 #> 41   509.81992   2.642990   2 #> 42   814.83528   2.699770   2 #> 43   512.36874   2.596602   2 #> 44   949.45403   2.598356   2 #> 45   523.02768   2.923584   2 #> 46   508.55388   2.689470   2 #> 47   632.97203   3.609965   2 #> 48   502.51791   3.166001   2 #> 49   568.18195   2.563333   2 #> 50   659.22176   2.678900   2 #> 51   568.50849   2.576765   2 #> 52   504.88165   3.160855   2 #> 53   574.80551   2.538496   2 #> 54   540.14329   2.698012   2 #> 55   500.21632   2.577160   2 #> 56   614.76889   3.014314   2 #> 57   802.27475   3.312390   2 #> 58   660.03207   2.576781   2 #> 59   749.29731   2.530896   2 #> 60   508.29039   2.869016   2 #> 61   508.67767   2.751357   2 #> 62   668.12980   3.593392   2 #> 63   501.08014   2.629198   2 #> 64   634.06952   2.840327   2 #> 65   501.37224   2.510137   2 #> 66   501.36681   3.400953   2 #> 67   512.89628   2.667751   2 #> 68   563.17076   2.678668   2 #> 69   500.85984   2.556098   2 #> 70   603.29864   2.551264   2 #> 71   540.04729   2.738333   2 #> 72   539.54628   4.184314   2 #> 73   513.36908   2.508874   2 #> 74   533.87562   2.663238   2 #> 75   501.56849   3.336975   2 #> 76   504.62385   2.846209   2 #> 77   640.31734   2.762155   2 #> 78   524.87533   3.362140   2 #> 79   892.66379   2.636899   2 #> 80   923.40965   2.692480   2 #> 81   904.43258   2.924124   2 #> 82   899.68443   2.842884   2 #> 83   501.62767   2.585281   2 #> 84   511.94491   2.572872   2 #> 85   500.68979   2.717057   2 #> 86   501.24911   3.052015   2 #> 87   583.87418   3.728602   2 #> 88   512.55955   3.035403   2 #> 89   500.59837   2.957710   2 #> 90   502.26951   3.318757   2 #> 91   503.06985   2.583072   2 #> 92   500.72657   3.008300   2 #> 93   502.18715   2.655970   2 #> 94   607.58688   2.799295   2 #> 95   605.01005   2.687999   2 #> 96   602.75010   2.860502   2 #> 97   785.37781   2.716762   2 #> 98   525.80215   4.399028   2 #> 99   530.88436   2.610458   2 #> 100  507.47877   3.493384   2 #> 101  645.80587   2.950555   2 #> 102  675.89151   3.053964   2 #> 103  500.51390   2.552850   2 #> 104  668.60485   4.421695   2 #> 105  501.22917   3.476649   2 #> 106  504.46673   3.140198   2 #> 107  517.10790   3.048593   2 #> 108  500.55716   2.858271   2 #> 109  907.21733   2.518831   2 #> 110  656.59620   2.683615   2 #> 111  550.41081   2.602410   2 #> 112  908.36606   2.529111   2 #> 113  578.39352   2.957542   2 #> 114  517.90579   3.877907   2 #> 115  517.42081   2.699475   2 #> 116  530.55939   2.616356   2 #> 117  542.92639   2.515333   2 #> 118  504.52733   2.646913   2 #> 119  600.70568   3.544938   2 #> 120  500.73730   2.775101   2 #> 121  637.38963   3.027328   2 #> 122  534.99020   2.731702   2 #> 123  501.54608   2.737036   2 #> 124  727.81560   3.043339   2 #> 125  981.04398   2.511382   2 #> 126  501.05881   2.874593   2 #> 127  508.60896   2.572570   2 #> 128  501.04424   2.533346   2 #> 129  527.87962   2.523957   2 #> 130  503.64697   2.735978   2 #> 131  727.34324   2.575699   2 #> 132  508.75174   2.759824   2 #> 133  517.39831   2.597949   2 #> 134  505.98987   3.963197   2 #> 135  812.66079   3.385080   2 #> 136  533.93602   3.022853   2 #> 137  504.25382   2.733772   2 #> 138  504.39446   2.603437   2 #> 139  750.42409   3.592267   2 #> 140  506.38691   2.753131   2 #> 141  504.28573   2.686858   2 #> 142  521.15780   2.502448   2 #> 143  503.90810   2.553193   2 #> 144  505.84124   3.083528   2 #> 145  551.82657   2.545912   2 #> 146  540.46120   3.238694   2 #> 147  506.77570   2.737040   2 #> 148  506.02859   3.850702   2 #> 149  507.48886   2.799256   2 #> 150  906.83832   2.714293   2 #> 151  504.17760   2.676582   2 #> 152  506.39812   2.847171   2 #> 153  520.71011   2.807918   2 #> 154  509.37131   2.508324   2 #> 155  535.55179   2.877229   2 #> 156  553.65629   3.380170   2 #> 157  507.16690   2.692637   2 #> 158  504.34227   2.651291   2 #> 159  504.43158   2.829004   2 #> 160  503.97166   2.605924   2 #> 161  716.93459   2.724883   2 #> 162  503.93228   3.057385   2 #> 163  836.82721   2.627447   2 #> 164  504.00577   2.683884   2 #> 165  510.06100   4.009236   2 #> 166  505.55829   3.526307   2 #> 167  517.29394   2.557879   2 #> 168  507.73027   2.572593   2 #> 169  504.32880   2.756562   2 #> 170  504.14785   3.243013   2 #> 171  503.93828   2.820391   2 #> 172  513.53888   2.696926   2 #> 173  503.94567   3.478276   2 #> 174  506.62744   3.125921   2 #> 175  635.53955   2.761527   2 #> 176  504.12094   2.969964   2 #> 177  505.58543   2.872329   2 #> 178  503.93637   2.686479   2 #> 179  586.05597   2.805865   2 #> 180  539.92982   3.052714   2 #> 181  503.96838   2.772097   2 #> 182  504.78642   2.736026   2 #> 183  531.55300   2.702580   2 #> 184  515.00496   3.020248   2 #> 185  534.33758   3.042651   2 #> 186  503.96116   2.501036   2 #> 187  508.34334   2.539378   2 #> 188  552.07557   2.692461   2 #> 189  679.96320   3.665940   2 #> 190  504.14771   2.711436   2 #> 191  500.18449   2.832744   2 #> 192  579.51259   2.873298   2 #> 193  501.43933   2.861450   2 #> 194  504.29825   2.929929   2 #> 195  500.61338   2.934511   2 #> 196  510.89960   3.157822   2 #> 197  506.57501   3.087278   2 #> 198  872.68694   3.587844   2 #> 199  579.25735   2.628850   2 #> 200  699.18157   2.579530   2 #> 201  571.08451   4.075018   2 #> 202  538.05327   2.840004   2 #> 203  519.46568   2.707610   2 #> 204  722.13664   2.611204   2 #> 205  515.58805   2.544133   2 #> 206  586.19040   2.926810   2 #> 207  502.67188   3.974303   2 #> 208  503.30450   2.620927   2 #> 209  500.77260   2.598505   2 #> 210  508.16168   3.181640   2 #> 211  525.06713   3.275968   2 #> 212  895.83412   2.994407   2 #> 213  501.85162   2.502626   2 #> 214  667.90618   3.760569   2 #> 215  503.51652   4.010526   2 #> 216  502.22396   3.471718   2 #> 217  502.56485   2.777157   2 #> 218  500.59085   2.886034   2 #> 219  500.19783   2.596439   2 #> 220  521.31836   2.730045   2 #> 221  500.44072   2.563583   2 #> 222  500.66738   2.922251   2 #> 223  509.00785   2.769354   2 #> 224  543.36954   2.501674   2 #> 225  500.81916   2.623895   2 #> 226  504.63444   2.554258   2 #> 227  500.20181   3.086301   2 #> 228  500.85273   3.268399   2 #> 229  500.39326   2.907614   2 #> 230  500.27111   3.477925   2 #> 231  510.61639   2.882562   2 #> 232  993.59366   2.605116   2 #> 233  733.11135   2.756787   2 #> 234  501.03175   2.664155   2 #> 235  504.06191   3.218030   2 #> 236  500.33334   2.660489   2 #> 237  500.47367   2.650584   2 #> 238  502.45276   2.932210   2 #> 239  500.21355   2.719325   2 #> 240  500.61514   3.031945   2 #> 241  507.27638   4.003076   2 #> 242  537.55093   2.865367   2 #> 243  639.18914   2.624132   2 #> 244  501.95695   2.580276   2 #> 245  500.23074   2.936138   2 #> 246  513.75436   2.700102   2 #> 247  641.51309   2.517719   2 #> 248  500.38285   2.641733   2 #> 249  500.41396   3.432687   2 #> 250  504.90049   2.583434   2 #> 251  508.17758   2.519286   2 #> 252  501.45450   2.561113   2 #> 253  725.68991   2.908579   2 #> 254  506.97794   2.612052   2 #> 255  500.33940   2.741518   2 #> 256  510.66148   3.102954   2 #> 257  501.29318   2.725230   2 #> 258  501.25632   2.551523   2 #> 259  501.16419   3.211240   2 #> 260  500.29936   3.250937   2 #> 261  500.50729   2.726250   2 #> 262  519.21885   3.046748   2 #> 263  500.62673   2.667785   2 #> 264  501.09264   3.471155   2 #> 265  505.42560   2.611921   2 #> 266  813.54524   2.512181   2 #> 267  508.28891   2.792919   2 #> 268  631.52660   2.774332   2 #> 269  509.38803   2.588763   2 #> 270  516.85282   2.614989   2 #> 271  500.30999   2.807736   2 #> 272  602.18259   2.937136   2 #> 273  621.95428   2.740841   2 #> 274  508.75471   2.618767   2 #> 275  500.83391   2.860346   2 #> 276  532.22550   2.967371   2 #> 277  570.72062   3.004534   2 #> 278  530.45717   2.515585   2 #> 279  537.19471   3.086980   2 #> 280  548.98992   3.133213   2 #> 281  502.81710   2.944249   2 #> 282  547.16622   2.795146   2 #> 283  683.30617   3.048144   2 #> 284  500.02260   2.867050   2 #> 285  502.43352   3.047530   2 #> 286  501.28544   4.090584   2 #> 287  952.69717   2.556111   2 #> 288  619.53755   2.569835   2 #> 289  646.78554   2.510092   2 #> 290  538.16208   2.754744   2 #> 291  500.16676   2.562662   2 #> 292  500.23624   2.683002   2 #> 293  551.71960   3.213574   2 #> 294  828.49726   2.678267   2 #> 295  606.28885   2.600126   2 #> 296  508.03000   2.635172   2 #> 297  505.32493   3.896942   2 #> 298  533.63968   2.648111   2 #> 299  501.41599   2.533641   2 #> 300  502.87996   2.845854   2 #> 301  573.60452   2.957897   2 #> 302  598.30149   3.322345   2 #> 303  559.68959   3.024266   2 #> 304  513.86416   2.742391   2 #> 305  500.27940   3.107654   2 #> 306  859.76072   2.624641   2 #> 307  500.22208   3.009504   2 #> 308  500.20771   2.594066   2 #> 309  505.72000   2.575993   2 #> 310  500.57072   2.738888   2 #> 311  511.40184   2.876391   2 #> 312  500.06903   2.748649   2 #> 313  500.47548   2.765718   2 #> 314  500.08543   3.747236   2 #> 315  501.67276   2.682114   2 #> 316  508.30937   2.693076   2 #> 317  540.62478   3.033250   2 #> 318  527.14463   3.194140   2 #> 319  506.91830   2.529752   2 #> 320  500.12342   2.504407   2 #> 321  549.66793   3.035326   2 #> 322  571.16104   2.779592   2 #> 323  501.37857   2.955576   2 #> 324  501.00693   2.627592   2 #> 325  501.68687   2.798695   2 #> 326  551.80896   3.660000   2 #> 327  500.16748   2.617762   2 #> 328  585.24503   2.910488   2 #> 329  500.57370   3.343311   2 #> 330  501.18658   3.275519   2 #> 331  625.74597   2.547550   2 #> 332  773.66412   2.683773   2 #> 333  531.12631   2.600926   2 #> 334  500.53476   3.443874   2 #> 335  666.29419   2.564160   2 #> 336  588.59924   2.895082   2 #> 337  501.80564   2.501866   2 #> 338  502.04163   3.295092   2 #> 339  520.75091   2.618815   2 #> 340  506.25242   3.071470   2 #> 341  658.25072   2.587690   2 #> 342  690.08405   2.973793   2 #> 343  501.44234   3.493605   2 #> 344  795.98728   2.725762   2 #> 345  500.41390   3.164814   2 #> 346  728.16600   2.613097   2 #> 347  501.81117   2.813371   2 #> 348  533.23631   3.294152   2 #> 349  520.41845   2.977103   2 #> 350  798.96830   2.544926   2 #> 351  524.74242   2.612836   2 #> 352  502.18818   2.696170   2 #> 353  501.81885   3.506667   2 #> 354  672.14389   2.534891   2 #> 355  503.04781   2.730138   2 #> 356  514.07319   2.810229   2 #> 357  501.80802   3.095969   2 #> 358  500.38317   3.634571   2 #> 359  500.73384   3.300947   2 #> 360  736.46031   2.517681   2 #> 361  500.38580   2.721684   2 #> 362  501.36141   3.159092   2 #> 363  530.28010   2.594420   2 #> 364  509.55359   2.544973   2 #> 365  750.47855   2.701463   2 #> 366  502.35499   2.772589   2 #> 367  839.33878   2.735683   2 #> 368  749.57276   3.018945   2 #> 369  514.91005   2.892644   2 #> 370  503.98297   3.053453   2 #> 371  504.00847   3.371149   2 #> 372  617.79115   2.750118   2 #> 373  505.36258   3.198687   2 #> 374  507.43513   2.610769   2 #> 375  612.92361   3.061565   2 #> 376  512.59543   2.707061   2 #> 377  506.17268   2.873675   2 #> 378  500.25216   2.960815   2 #> 379  517.98097   3.056004   2 #> 380  511.63705   2.658208   2 #> 381  513.98545   2.506239   2 #> 382  517.61598   2.605796   2 #> 383  513.87473   2.797146   2 #> 384  514.97046   2.537337   2 #> 385  509.10159   2.814972   2 #> 386  509.69861   2.967982   2 #> 387  536.78007   2.883225   2 #> 388  500.08351   2.836958   2 #> 389  503.42164   2.529223   2 #> 390  675.70157   2.731654   2 #> 391  505.48209   2.822257   2 #> 392  546.66451   2.884894   2 #> 393  517.40091   2.751436   2 #> 394  504.63580   3.050343   2 #> 395  519.99129   3.246893   2 #> 396  502.04488   2.795012   2 #> 397  502.13336   3.040760   2 #> 398  516.88437   2.723041   2 #> 399  515.08767   3.088349   2 #> 400  676.28198   2.575652   2 #> 401  650.58064   3.643675   2 #> 402  508.02580   2.552318   2 #> 403  502.63965   3.042037   2 #> 404  635.36570   2.858293   2 #> 405  672.82388   2.637668   2 #> 406  657.40561   3.384322   2 #> 407  522.28332   2.635561   2 #> 408  638.51065   2.960938   2 #> 409  649.35341   2.902257   2 #> 410  637.53052   2.811473   2 #> 411  639.25168   2.535540   2 #> 412  644.78249   2.515117   2 #> 413  637.29448   2.819147   2 #> 414  652.19697   2.729958   2 #> 415  636.76098   2.753746   2 #> 416  657.96638   3.353690   2 #> 417  646.71398   2.714330   2 #> 418  646.23980   2.946272   2 #> 419  636.62053   2.931744   2 #> 420  713.05468   2.533001   2 #> 421  638.22649   3.530282   2 #> 422  860.81412   2.781213   2 #> 423  636.74007   3.057864   2 #> 424  636.77124   2.868932   2 #> 425  638.60391   2.721618   2 #> 426  688.73964   3.765954   2 #> 427  636.71503   2.845386   2 #> 428  638.20277   2.873028   2 #> 429  636.87876   2.513775   2 #> 430  740.25114   2.936152   2 #> 431  636.85472   3.422047   2 #> 432  656.21663   3.115859   2 #> 433  636.84989   3.607592   2 #> 434  638.08778   2.872255   2 #> 435  669.90154   3.656053   2 #> 436  636.65180   3.445848   2 #> 437  636.76158   2.674886   2 #> 438  637.44351   2.530842   2 #> 439  642.28094   2.574471   2 #> 440  860.20568   2.564049   2 #> 441  642.26256   3.269695   2 #> 442  636.70600   2.714169   2 #> 443  669.41712   3.093523   2 #> 444  636.79448   3.938236   2 #> 445  643.96350   3.264183   2 #> 446  636.80211   2.801516   2 #> 447  636.59296   2.704159   2 #> 448  637.89774   2.723453   2 #> 449  637.01475   3.865876   2 #> 450  882.89740   2.633854   2 #> 451  638.46870   2.554737   2 #> 452  637.70480   2.859191   2 #> 453  662.08736   2.807445   2 #> 454  636.70332   3.104818   2 #> 455  636.67097   2.678964   2 #> 456  870.79678   2.573240   2 #> 457  643.70967   2.703809   2 #> 458  636.69184   2.723948   2 #> 459  637.54630   2.759634   2 #> 460  707.80622   2.870746   2 #> 461  637.77577   2.593234   2 #> 462  638.74078   2.520345   2 #> 463  696.57723   3.292575   2 #> 464  644.66126   2.647398   2 #> 465  660.20925   2.982612   2 #> 466  636.68659   2.554004   2 #> 467  636.68227   2.982208   2 #> 468  636.69147   2.630349   2 #> 469  636.84491   3.132539   2 #> 470  646.27520   3.352058   2 #> 471  703.17521   2.645757   2 #> 472  637.31671   3.691703   2 #> 473  639.61271   2.520528   2 #> 474  636.58003   2.552500   2 #> 475  636.60403   2.538570   2 #> 476  641.05457   2.526740   2 #> 477  666.32101   2.946140   2 #> 478  637.39874   3.016251   2 #> 479  538.37212   2.838107   2 #> 480  868.87482   2.597195   2 #> 481  915.42632   3.339499   2 #> 482  507.34493   2.998311   2 #> 483  598.80984   2.790076   2 #> 484  503.85441   3.026746   2 #> 485  705.70610   2.661919   2 #> 486  989.21832   4.164395   2 #> 487  504.50992   3.854393   2 #> 488  501.47402   2.529051   2 #> 489  500.96872   2.842233   2 #> 490  500.49733   2.538494   2 #> 491  500.04974   2.615131   2 #> 492  977.87670   2.542735   2 #> 493  936.25259   2.642560   2 #> 494  502.28878   3.070149   2 #> 495  501.00824   2.610568   2 #> 496  580.48051   3.185269   2 #> 497  579.62632   2.833735   2 #> 498  576.81161   2.669426   2 #> 499  593.72360   2.529567   2 #> 500  907.46477   2.930482   2 #> 501  557.45598   3.321383   2 #> 502  501.49100   2.617404   2 #> 503  511.20437   2.590014   2 #> 504  501.08631   2.542725   2 #> 505  525.13678   2.842147   2 #> 506  501.37453   3.011790   2 #> 507  604.72094   2.746167   2 #> 508  603.18766   2.589673   2 #> 509  505.89818   3.072369   2 #> 510  817.21681   2.868868   2 #> 511  523.05596   2.851425   2 #> 512  515.23156   2.779700   2 #> 513  505.16072   3.158075   2 #> 514  549.01416   2.796151   2 #> 515  504.70237   2.521620   2 #> 516  579.54248   2.674693   2 #> 517  511.21027   2.608946   2 #> 518  852.83441   3.269061   2 #> 519  509.22901   3.181613   2 #> 520  516.29781   3.714039   2 #> 521  838.19604   2.655848   2 #> 522  516.00038   3.151779   2 #> 523  502.37618   2.515794   2 #> 524  947.01193   2.555139   2 #> 525  558.03857   2.536534   2 #> 526  502.50904   4.607593   2 #> 527  512.12649   5.281184   2 #> 528  633.64266   2.545903   2 #> 529  509.20057   3.546985   2 #> 530  517.99626   3.055485   2 #> 531  503.30121   2.733035   2 #> 532  504.43485   2.609474   2 #> 533  500.36548   3.777592   2 #> 534  514.67288   2.864271   2 #> 535  501.28094   3.083667   2 #> 536  501.90217   2.626021   2 #> 537  503.86924   4.021124   2 #> 538  614.76822   2.768642   2 #> 539  502.41939   3.123973   2 #> 540  513.46338   2.761188   2 #> 541  510.11748   2.629446   2 #> 542  549.03827   3.085285   2 #> 543  531.30361   3.264426   2 #> 544  573.28274   2.550916   2 #> 545  844.12024   3.428211   2 #> 546  489.00843   2.521100   2 #> 547  962.95300   3.284729   2 #> 548  947.03556   2.750737   2 #> 549  941.64793   3.190300   2 #> 550  924.71994   3.781773   2 #> 551  923.59604   2.852848   2 #> 552  945.97580   2.780312   2 #> 553  941.11659   2.757525   2 #> 554  613.87652   3.569413   2 #> 555  663.96950   3.087503   2 #> 556  907.45545   2.654428   2 #> 557  298.32117   3.791736   2 #> 558  537.77354   2.942957   2 #> 559  190.53288   3.084535   2 #> 560  184.42395   3.767921   2 #> 561  436.67152   3.366739   2 #> 562   53.02399   2.926810   2 #> 563  962.76672   3.133710   2 #> 564   92.27275   3.807330   2 #> 565   72.40732   2.520854   2 #> 566  650.53717   2.519880   2 #> 567  607.13736   3.056018   2 #> 568  611.37788   2.639854   2 #> 569  596.34915   3.261652   2 #> 570  596.20745   2.710683   2 #> 571  598.71081   3.296525   2 #> 572  622.31091   2.585157   2 #> 573  605.28834   3.018680   2 #> 574  596.09418   2.950528   2 #> 575  600.60759   2.650676   2 #> 576  599.20467   3.568704   2 #> 577  597.77813   2.623064   2 #> 578  968.73356   3.178180   2 #> 579  611.63614   3.934794   2 #> 580  596.19924   3.546894   2 #> 581  599.07318   2.713273   2 #> 582  606.68856   2.521058   2 #> 583  596.11919   5.245726   2 #> 584  608.58030   2.786336   2 #> 585  628.39109   2.790481   2 #> 586  747.80950   2.966467   2 #> 587  596.13348   2.774927   2 #> 588  625.68145   2.955234   2 #> 589  596.36953   2.782508   2 #> 590  597.09962   2.538988   2 #> 591  596.56283   3.165294   2 #> 592  916.05140   2.570504   2 #> 593  623.97351   2.768688   2 #> 594  596.35390   2.703252   2 #> 595  596.10085   2.968285   2 #> 596  600.68374   3.011962   2 #> 597  734.97471   3.537635   2 #> 598  610.40858   2.637847   2 #> 599  598.98234   2.635805   2 #> 600  596.30347   2.676585   2 #> 601  596.43300   3.676622   2 #> 602  607.06072   3.416598   2 #> 603  620.45723   3.789320   2 #> 604  599.62344   2.568620   2 #> 605  679.50156   2.582309   2 #> 606  596.21177   2.662451   2 #> 607  596.38495   3.055566   2 #> 608  605.71839   2.874776   2 #> 609  597.63503   3.040692   2 #> 610  596.25220   2.860331   2 #> 611  610.11716   2.537219   2 #> 612  798.63323   2.899326   2 #> 613  602.56387   2.567782   2 #> 614  596.87688   2.522458   2 #> 615  597.91323   3.568270   2 #> 616  596.17400   2.721948   2 #> 617  597.50872   2.525402   2 #> 618  603.06798   3.667974   2 #> 619  597.03443   2.616779   2 #> 620  636.04486   2.672955   2 #> 621  928.39980   3.055607   2 #> 622  643.63055   2.520763   2 #> 623  597.40887   2.822692   2 #> 624  596.31862   2.604248   2 #> 625  600.43844   2.742020   2 #> 626  597.33613   2.521767   2 #> 627  613.22638   2.638039   2 #> 628  596.61677   3.497532   2 #> 629  615.99728   4.093956   2 #> 630  618.12068   2.700800   2 #> 631  795.24542   2.692468   2 #> 632  610.93507   3.122439   2 #> 633  596.44003   4.839685   2 #> 634  677.08666   2.806412   2 #> 635  809.83103   2.665349   2 #> 636  599.37289   3.355064   2 #> 637  631.86860   2.712759   2 #> 638  663.07034   2.758741   2 #> 639  629.97048   2.505854   2 #> 640  597.57079   2.967575   2 #> 641  596.57383   2.531909   2 #> 642  598.95642   3.004373   2 #> 643  951.15161   3.293063   2 #> 644  597.44967   2.725014   2 #> 645  602.48652   2.502752   2 #> 646  603.32443   2.661698   2 #> 647  602.35646   2.799523   2 #> 648  596.72527   2.506678   2 #> 649  923.33924   2.570963   2 #> 650  607.32728   2.949179   2 #> 651  611.88488   2.718007   2 #> 652  611.16154   2.885316   2 #> 653  596.13436   2.910637   2 #> 654  672.26776   2.842120   2 #> 655  597.19240   2.513307   2 #> 656  596.55092   2.500501   2 #> 657  596.40977   2.712145   2 #> 658  610.48988   2.951641   2 #> 659  596.66260   3.095306   2 #> 660  596.14921   2.630777   2 #> 661  596.74634   2.628282   2 #> 662  695.39984   2.641874   2 #> 663  597.32502   3.129141   2 #> 664  657.53808   3.265440   2 #> 665  675.77724   2.947961   2 #> 666  979.07235   3.382006   2 #> 667  596.25416   2.501041   2 #> 668  596.49778   2.565535   2 #> 669  772.33177   3.005789   2 #> 670  599.89747   3.032908   2 #> 671  784.39055   3.943185   2 #> 672  713.52305   2.522473   2 #> 673  596.06966   3.679211   2 #> 674  601.68757   5.085606   2 #> 675  596.14525   2.952259   2 #> 676  596.12289   3.098910   2 #> 677  596.61592   3.543141   2 #> 678  618.79765   3.535160   2 #> 679  690.82998   2.677662   2 #> 680  596.07174   3.212481   2 #> 681  607.30377   2.832193   2 #> 682  599.76516   2.546836   2 #> 683  619.99543   3.813210   2 #> 684  597.65642   3.063241   2 #> 685  596.19234   3.583946   2 #> 686  596.60074   2.777483   2 #> 687  709.56572   3.481470   2 #> 688  774.75833   2.907266   2 #> 689  597.33919   4.295276   2 #> 690  599.76654   2.736233   2 #> 691  622.04539   2.806196   2 #> 692  608.84369   3.061969   2 #> 693  701.61323   2.704542   2 #> 694  603.95129   2.899821   2 #> 695  596.28456   2.544552   2 #> 696  596.14856   2.721667   2 #> 697  601.55489   2.910474   2 #> 698  596.95379   2.520226   2 #> 699  598.55386   3.317472   2 #> 700  596.41830   2.894547   2 #> 701  618.97773   3.129095   2 #> 702  604.94702   2.885417   2 #> 703  875.95525   2.980792   2 #> 704  596.19548   2.655042   2 #> 705  599.97149   2.924416   2 #> 706  623.78499   2.574454   2 #> 707  604.03014   2.621924   2 #> 708  596.32447   2.780363   2 #> 709  596.04868   2.584153   2 #> 710  596.30295   2.585367   2 #> 711  596.09508   3.018504   2 #> 712  609.41658   2.985387   2 #> 713  602.37774   3.121324   2 #> 714  732.68135   3.025301   2 #> 715  596.34962   3.612079   2 #> 716  596.30593   2.797476   2 #> 717  641.82394   2.824050   2 #> 718  600.01436   2.524683   2 #> 719  596.61607   2.575531   2 #> 720  596.24359   3.606050   2 #> 721  597.23353   2.959275   2 #> 722  608.25416   2.868459   2 #> 723  717.51077   2.621048   2 #> 724  596.31651   2.690745   2 #> 725  602.13633   2.817092   2 #> 726  596.73561   2.771545   2 #> 727  596.12537   2.687947   2 #> 728  600.79343   2.591391   2 #> 729  596.77769   3.436594   2 #> 730  596.19718   2.775278   2 #> 731  596.16572   2.584635   2 #> 732  596.53652   2.591748   2 #> 733  596.06406   2.681870   2 #> 734  600.91730   2.717418   2 #> 735  596.13398   2.876087   2 #> 736  597.31697   2.706680   2 #> 737  596.89318   2.524295   2 #> 738  597.13860   2.706018   2 #> 739  791.27817   2.784347   2 #> 740  597.49367   2.834005   2 #> 741  596.27638   2.572147   2 #> 742  596.43826   2.527335   2 #> 743  596.61972   2.608012   2 #> 744  605.80253   2.671875   2 #> 745  597.88681   2.769702   2 #> 746  596.14734   2.701286   2 #> 747  706.40638   3.575796   2 #> 748  600.88603   3.453988   2 #> 749  600.97724   2.682486   2 #> 750  596.38857   2.612078   2 #> 751  597.44464   2.564142   2 #> 752  610.41215   3.312836   2 #> 753  831.04912   2.720934   2 #> 754  596.79026   2.570378   2 #> 755  596.83135   2.607816   2 #> 756  596.34997   2.595933   2 #> 757  666.99087   2.969398   2 #> 758  682.01111   2.932840   2 #> 759  601.74122   3.130452   2 #> 760  596.13724   3.148070   2 #> 761  597.18105   2.660959   2 #> 762  596.34800   2.835221   2 #> 763  655.69192   4.156545   2 #> 764  642.05104   3.082097   2 #> 765  661.44438   2.601646   2 #> 766  598.06511   2.778315   2 #> 767  637.08652   2.975791   2 #> 768  596.17449   2.511886   2 #> 769  596.33727   2.621961   2 #> 770  600.34101   2.761384   2 #> 771  639.36192   2.775671   2 #> 772  596.26581   4.171363   2 #> 773  609.22903   4.858848   2 #> 774  597.56111   2.727593   2 #> 775  705.33917   3.070490   2 #> 776  599.01734   2.704057   2 #> 777  598.88029   2.704980   2 #> 778  596.47532   2.880862   2 #> 779  850.96717   2.627004   2 #> 780  596.86171   2.927291   2 #> 781  596.90080   3.440606   2 #> 782  633.71950   2.913212   2 #> 783  685.15041   2.665778   2 #> 784  604.19653   2.659451   2 #> 785  602.10318   3.407071   2 #> 786  611.30701   3.060394   2 #> 787  597.57388   2.615708   2 #> 788  917.25386   2.976993   2 #> 789  604.50181   2.708165   2 #> 790  596.08539   2.504387   2 #> 791  598.93866   2.613240   2 #> 792  688.56477   3.844149   2 #> 793  854.86093   2.556463   2 #> 794  598.12507   2.698714   2 #> 795  611.99259   2.783406   2 #> 796  596.95333   3.092061   2 #> 797  609.98282   2.549183   2 #> 798  989.17311   2.734918   2 #> 799  596.27791   3.058542   2 #> 800  596.56286   3.767536   2 #> 801  600.84015   2.718430   2 #> 802  617.56042   2.544477   2 #> 803  608.50076   2.607114   2 #> 804  598.09240   2.853495   2 #> 805  618.07508   3.031967   2 #> 806  617.11942   3.015714   2 #> 807  599.82153   2.774992   2 #> 808  596.98195   2.549249   2 #> 809  681.04212   2.536693   2 #> 810  604.60436   2.853274   2 #> 811  596.08931   3.262219   2 #> 812  596.06489   3.025542   2 #> 813  610.23087   2.655409   2 #> 814  830.40248   3.144312   2 #> 815  596.07485   3.606481   2 #> 816  598.41226   3.223865   2 #> 817  596.09716   2.606519   2 #> 818  599.97754   4.168499   2 #> 819  596.29813   2.843908   2 #> 820  614.46023   2.832764   2 #> 821  596.40176   2.893547   2 #> 822  691.00666   2.627229   2 #> 823  628.28511   2.826578   2 #> 824  636.56175   2.746625   2 #> 825  597.76060   2.523425   2 #> 826  596.83561   3.673845   2 #> 827  596.30534   3.768381   2 #> 828  596.28888   2.980702   2 #> 829  596.09442   2.922901   2 #> 830  601.33853   3.066601   2 #> 831  597.64159   3.438724   2 #> 832  605.65939   2.522296   2 #> 833  597.58843   2.520745   2 #> 834  621.49145   2.510861   2 #> 835  692.53290   2.509098   2 #> 836  597.53372   2.611534   2 #> 837  604.85741   2.898069   2 #> 838  596.49475   2.735809   2 #> 839  741.28806   2.519493   2 #> 840  719.20539   2.506311   2 #> 841  598.78603   3.077333   2 #> 842  596.52245   2.735108   2 #> 843  788.27892   2.553762   2 #> 844  597.66762   2.541864   2 #> 845  598.02962   3.427648   2 #> 846  596.21701   2.779412   2 #> 847  597.03104   2.692044   2 #> 848  596.10668   2.820070   2 #> 849  596.55725   2.677578   2 #> 850  637.55390   2.614005   2 #> 851  596.45156   2.512447   2 #> 852  596.33662   2.964837   2 #> 853  641.18506   2.775501   2 #> 854  599.25911   2.834265   2 #> 855  597.03960   2.512136   2 #> 856  598.05592   3.165318   2 #> 857  608.74541   4.745388   2 #> 858  610.19968   2.524882   2 #> 859  938.55634   3.064403   2 #> 860  596.05010   2.584447   2 #> 861  634.06800   2.634704   2 #> 862  610.96829   2.957410   2 #> 863  597.11715   2.560776   2 #> 864  656.29158   3.135546   2 #> 865  597.26711   2.535855   2 #> 866  603.70097   2.610403   2 #> 867  596.10904   2.683798   2 #> 868  604.07580   2.913876   2 #> 869  596.18936   2.743322   2 #> 870  596.78069   3.049622   2 #> 871  599.46031   3.427002   2 #> 872  611.66546   2.844808   2 #> 873  596.54205   2.535856   2 #> 874  596.38415   2.709561   2 #> 875  596.51069   2.642680   2 #> 876  597.78884   2.600057   2 #> 877  603.33460   2.638044   2 #> 878  596.85243   3.189484   2 #> 879  597.94529   2.540439   2 #> 880  841.30324   2.502343   2 #> 881  620.06623   2.971915   2 #> 882  602.26903   2.692061   2 #> 883  605.12171   3.306240   2 #> 884  598.92154   2.503294   2 #> 885  596.07313   3.199031   2 #> 886  707.61698   3.157366   2 #> 887  617.53109   3.247328   2 #> 888  866.82636   2.538361   2 #> 889  676.83145   2.511750   2 #> 890  600.52240   3.353901   2 #> 891  596.99631   2.718942   2 #> 892  596.54573   2.830444   2 #> 893  597.99535   3.134286   2 #> 894  596.59850   2.644009   2 #> 895  649.08952   2.670316   2 #> 896  596.21194   2.579671   2 #> 897  596.52594   2.871668   2 #> 898  615.87117   2.677234   2 #> 899  652.91032   3.600571   2 #> 900  599.58168   2.909868   2 #> 901  697.30479   2.532155   2 #> 902  596.10064   3.106233   2 #> 903  600.97610   2.683162   2 #> 904  622.82425   2.610553   2 #> 905  613.15405   3.058017   2 #> 906  943.78629   2.961958   2 #> 907  596.07465   2.521793   2 #> 908  596.08053   3.011168   2 #> 909  599.79283   3.192598   2 #> 910  596.29528   2.957950   2 #> 911  597.05743   2.909088   2 #> 912  597.74961   3.222971   2 #> 913  597.54642   2.744230   2 #> 914  958.93389   3.669968   2 #> 915  607.81546   3.071144   2 #> 916  752.29808   2.770317   2 #> 917  596.38110   2.560738   2 #> 918  611.73275   2.947813   2 #> 919  597.64395   2.806115   2 #> 920  605.41519   3.040936   2 #> 921  596.70866   3.721134   2 #> 922  596.25110   2.781768   2 #> 923  599.32438   2.624800   2 #> 924  901.65572   3.080579   2 #> 925  596.06430   2.586506   2 #> 926  596.08152   3.264696   2 #> 927  596.53647   2.514247   2 #> 928  603.15035   2.917036   2 #> 929  602.11627   2.779040   2 #> 930  714.69559   3.440249   2 #> 931  596.59330   2.757261   2 #> 932  596.39366   2.681388   2 #> 933  596.26865   3.392050   2 #> 934  646.81015   4.283089   2 #> 935  604.49320   2.574538   2 #> 936  596.05880   2.689351   2 #> 937  607.29857   2.563558   2 #> 938  600.77173   2.603075   2 #> 939  596.17621   2.959152   2 #> 940  596.73706   3.031294   2 #> 941  710.20113   2.706091   2 #> 942  598.84560   2.602483   2 #> 943  945.48455   2.598216   2 #> 944  596.25257   4.571738   2 #> 945  596.57088   3.051935   2 #> 946  605.67184   2.709694   2 #> 947  596.13392   2.540702   2 #> 948  598.10571   3.090658   2 #> 949  598.23252   2.518551   2 #> 950  596.29976   2.681188   2 #> 951  599.09364   2.708535   2 #> 952  597.94478   2.575826   2 #> 953  596.07468   2.550518   2 #> 954  596.04857   3.432058   2 #> 955  596.45530   2.703803   2 #> 956  596.27933   2.962901   2 #> 957  596.18652   2.734652   2 #> 958  839.37645   3.381038   2 #> 959  621.65806   2.739072   2 #> 960  596.05917   2.540957   2 #> 961  596.27737   2.501047   2 #> 962  596.07430   2.747999   2 #> 963  597.31399   3.606152   2 #> 964  596.18410   2.699947   2 #> 965  605.31956   2.712859   2 #> 966  615.32744   2.754362   2 #> 967  597.97941   3.339213   2 #> 968  605.18060   3.125974   2 #> 969  609.44628   2.704339   2 #> 970  620.18221   2.778923   2 #> 971  606.03363   2.839398   2 #> 972  599.24565   2.645626   2 #> 973  597.39392   3.992847   2 #> 974  719.31928   2.966611   2 #> 975  616.04065   2.577701   2 #> 976  597.14330   2.742399   2 #> 977  636.86387   2.685001   2 #> 978  675.71802   2.682919   2 #> 979  600.68659   2.517895   2 #> 980  603.73641   2.820307   2 #> 981  596.07130   3.069899   2 #> 982  596.33684   2.962061   2 #> 983  597.10173   2.632065   2 #> 984  597.06734   2.517131   2 #> 985  596.32793   3.180241   2 #> 986  674.32962   2.673284   2 #> 987  600.38676   2.583630   2 #> 988  598.42830   2.592947   2 #> 989  624.45014   2.567153   2 #> 990  657.48634   2.631615   2 #> 991  596.16026   2.698680   2 #> 992  596.12669   2.566643   2 #> 993  836.61111   2.623846   2 #> 994  628.88225   2.661575   2 #> 995  596.28819   3.786255   2 #> 996  596.27346   3.266035   2 #> 997  603.36271   2.940857   2 #> 998  596.39503   2.597879   2 #> 999  596.50029   2.957978   2 #> 1000 598.89417   2.565295   2 #> 1001 636.92485   4.168024   2 #> 1002 596.86787   3.158653   2 #> 1003 869.49343   2.866745   2 #> 1004 726.87755   3.381066   2 #> 1005 759.62944   2.812845   2 #> 1006 597.18031   2.829200   2 #> 1007 600.88156   3.438098   2 #> 1008 596.66446   2.769852   2 #> 1009 602.25183   3.252576   2 #> 1010 597.54880   2.713833   2 #> 1011 603.71609   2.941911   2 #> 1012 597.36616   2.723315   2 #> 1013 648.04520   3.179087   2 #> 1014 605.95534   2.607138   2 #> 1015 596.37254   3.418199   2 #> 1016 662.10622   2.652718   2 #> 1017 619.35288   2.844900   2 #> 1018 596.08064   2.742979   2 #> 1019 598.09204   2.822567   2 #> 1020 607.06924   2.925088   2 #> 1021 605.10269   3.287441   2 #> 1022 596.05745   4.089857   2 #> 1023 596.32291   2.560377   2 #> 1024 596.22276   2.735304   2 #> 1025 596.08231   2.649181   2 #> 1026 596.15798   2.731393   2 #> 1027 596.67080   2.693282   2 #> 1028 596.25934   2.557001   2 #> 1029 707.52545   2.541908   2 #> 1030 596.17551   2.584953   2 #> 1031 596.42496   3.002913   2 #> 1032 735.43449   3.602938   2 #> 1033 601.02717   2.655847   2 #> 1034 709.13554   2.554953   2 #> 1035 596.32171   3.713228   2 #> 1036 596.61264   2.535024   2 #> 1037 597.26395   2.905981   2 #> 1038 596.08294   3.475906   2 #>  #> [[4]] #>            ts magnitudes gen #> 1   982.09273   2.878375   3 #> 2   726.48259   3.016492   3 #> 3   515.91743   2.708488   3 #> 4   512.25906   2.517613   3 #> 5   569.52365   4.898707   3 #> 6   501.39657   2.647197   3 #> 7   518.75439   3.159335   3 #> 8   528.07074   3.105279   3 #> 9   529.24265   2.527440   3 #> 10  524.50743   3.234733   3 #> 11  645.84754   3.009029   3 #> 12  735.45644   2.525492   3 #> 13  668.77169   2.862031   3 #> 14  670.68578   2.533617   3 #> 15  668.62974   2.578581   3 #> 16  751.44853   3.373012   3 #> 17  744.81573   3.693034   3 #> 18  535.23565   2.732265   3 #> 19  595.46361   3.030623   3 #> 20  607.68903   2.794420   3 #> 21  511.69005   3.360326   3 #> 22  508.25508   2.831254   3 #> 23  506.40721   3.091653   3 #> 24  541.71305   3.614107   3 #> 25  508.39266   3.589539   3 #> 26  521.16359   3.186998   3 #> 27  506.67312   3.078221   3 #> 28  553.86662   4.192537   3 #> 29  504.30383   2.606356   3 #> 30  510.67306   4.300798   3 #> 31  514.58634   2.595676   3 #> 32  505.03518   2.617496   3 #> 33  535.47565   3.408402   3 #> 34  515.28427   2.672250   3 #> 35  537.61303   2.887194   3 #> 36  680.63271   2.988578   3 #> 37  831.41498   3.548445   3 #> 38  854.96835   2.783230   3 #> 39  874.47021   3.358993   3 #> 40  699.45645   2.522938   3 #> 41  681.97519   2.798149   3 #> 42  518.30353   2.672997   3 #> 43  531.96416   3.414906   3 #> 44  500.65824   3.169450   3 #> 45  537.50950   2.717267   3 #> 46  505.60027   2.673258   3 #> 47  755.11648   3.034415   3 #> 48  505.03476   3.015290   3 #> 49  507.48440   3.050261   3 #> 50  520.40420   3.434871   3 #> 51  547.92527   3.006182   3 #> 52  755.33066   3.614694   3 #> 53  510.89366   4.340280   3 #> 54  858.74650   2.571358   3 #> 55  507.10763   2.963715   3 #> 56  604.44322   2.843602   3 #> 57  683.32823   2.631905   3 #> 58  634.70228   2.668128   3 #> 59  501.35547   3.064095   3 #> 60  538.55637   2.878261   3 #> 61  517.54409   2.690594   3 #> 62  585.58377   2.917954   3 #> 63  505.90595   2.525786   3 #> 64  573.96454   2.601174   3 #> 65  598.48320   2.561183   3 #> 66  514.25285   2.540350   3 #> 67  500.33615   2.777457   3 #> 68  718.08044   3.088783   3 #> 69  761.50402   3.106004   3 #> 70  711.71467   3.548008   3 #> 71  500.59785   2.724382   3 #> 72  514.68748   2.574204   3 #> 73  518.98112   4.145712   3 #> 74  520.42921   2.503577   3 #> 75  505.52506   2.568027   3 #> 76  623.65231   2.882236   3 #> 77  650.75785   2.529654   3 #> 78  651.81464   2.670075   3 #> 79  759.75959   3.429179   3 #> 80  640.05355   2.824945   3 #> 81  638.39395   3.363682   3 #> 82  713.24107   2.836822   3 #> 83  648.78929   3.104713   3 #> 84  636.92299   4.341982   3 #> 85  696.13235   2.959380   3 #> 86  735.33834   3.015317   3 #> 87  673.06103   2.550479   3 #> 88  984.96071   2.687741   3 #> 89  657.05923   2.658064   3 #> 90  641.11645   2.611288   3 #> 91  664.13452   2.716488   3 #> 92  906.11331   2.768347   3 #> 93  639.16577   2.955681   3 #> 94  696.98979   3.110654   3 #> 95  636.70500   2.521055   3 #> 96  649.82722   2.597462   3 #> 97  646.60235   2.600798   3 #> 98  990.38734   3.113740   3 #> 99  991.04505   2.830073   3 #> 100 990.05284   2.694573   3 #> 101 504.57325   2.657081   3 #> 102 505.60298   2.715475   3 #> 103 507.72418   2.547525   3 #> 104 501.52530   2.871149   3 #> 105 503.08229   2.572543   3 #> 106 861.75281   2.603038   3 #> 107 519.61491   3.304632   3 #> 108 549.67649   2.931365   3 #> 109 852.88540   2.725546   3 #> 110 522.33631   2.805073   3 #> 111 517.52242   2.540611   3 #> 112 502.54373   2.914038   3 #> 113 502.53099   2.962124   3 #> 114 603.52001   2.903886   3 #> 115 518.02139   3.244813   3 #> 116 826.03446   2.753060   3 #> 117 502.89683   3.205944   3 #> 118 574.09462   3.426804   3 #> 119 502.61155   2.597534   3 #> 120 505.17868   2.553020   3 #> 121 505.49340   2.513797   3 #> 122 553.78719   2.581646   3 #> 123 533.58873   2.678471   3 #> 124 502.61658   2.500434   3 #> 125 526.61670   3.520689   3 #> 126 512.34195   2.651425   3 #> 127 519.13864   3.793798   3 #> 128 514.23817   2.960068   3 #> 129 512.24036   2.522111   3 #> 130 512.38902   2.724968   3 #> 131 650.81306   2.838579   3 #> 132 512.97451   3.090918   3 #> 133 512.69006   2.635964   3 #> 134 512.83561   2.565677   3 #> 135 539.44922   2.962460   3 #> 136 514.25878   2.559097   3 #> 137 523.80884   3.909648   3 #> 138 663.66085   3.277631   3 #> 139 530.56606   3.181936   3 #> 140 512.27924   2.885174   3 #> 141 745.91407   3.116366   3 #> 142 516.32480   2.764115   3 #> 143 639.30199   2.563938   3 #> 144 633.14213   2.664023   3 #> 145 521.31504   3.137324   3 #> 146 551.81935   2.844713   3 #> 147 513.78729   3.289243   3 #> 148 519.50139   3.773114   3 #> 149 518.74875   2.529263   3 #> 150 547.66060   2.883097   3 #> 151 512.89342   2.808181   3 #> 152 549.42711   2.924748   3 #> 153 775.12296   2.697702   3 #> 154 602.19778   2.603167   3 #> 155 512.47676   2.500430   3 #> 156 526.20930   2.597904   3 #> 157 506.45693   3.109523   3 #> 158 537.33429   3.171957   3 #> 159 551.33946   2.787921   3 #> 160 517.33272   2.984001   3 #> 161 621.90485   3.194127   3 #> 162 618.76208   2.564188   3 #> 163 777.57558   2.857493   3 #> 164 614.41214   2.685647   3 #> 165 616.23705   3.059907   3 #> 166 193.57910   3.402533   3 #> 167 235.51175   3.323898   3 #> 168 185.08273   2.780206   3 #> 169 186.51722   3.017845   3 #> 170  99.01694   2.825943   3 #> 171 599.21962   2.930385   3 #> 172 678.89024   2.528724   3 #> 173 600.44229   2.742062   3 #> 174 868.97691   2.912056   3 #> 175 599.93471   2.530726   3 #> 176 609.26914   2.529622   3 #> 177 596.35303   2.662345   3 #> 178 596.22071   2.726843   3 #> 179 701.56932   3.037811   3 #> 180 601.89463   3.058031   3 #> 181 600.83178   2.740364   3 #> 182 605.71850   2.822625   3 #> 183 596.28137   2.724224   3 #> 184 596.14417   3.041626   3 #> 185 596.20079   2.982531   3 #> 186 596.27692   2.645100   3 #> 187 596.48701   3.521646   3 #> 188 596.39438   2.669595   3 #> 189 596.89551   2.571503   3 #> 190 686.51370   3.259680   3 #> 191 596.28584   3.315037   3 #> 192 596.43817   2.957740   3 #> 193 765.34390   3.064220   3 #> 194 598.53061   3.036371   3 #> 195 609.19829   2.675654   3 #> 196 596.20859   3.078917   3 #> 197 597.29697   3.234794   3 #> 198 614.45777   2.593943   3 #> 199 979.77233   4.224389   3 #> 200 598.86636   3.002106   3 #> 201 598.51139   3.398403   3 #> 202 599.09862   2.831069   3 #> 203 596.54743   3.135563   3 #> 204 638.87190   2.978195   3 #> 205 596.22155   2.819040   3 #> 206 611.80667   2.843989   3 #> 207 616.84686   2.558054   3 #> 208 596.67486   2.502251   3 #> 209 597.89988   4.620581   3 #> 210 600.67218   2.625546   3 #> 211 609.81342   3.107929   3 #> 212 706.07339   2.813535   3 #> 213 596.80049   2.811198   3 #> 214 633.82671   2.699250   3 #> 215 708.74956   2.522670   3 #> 216 596.62353   2.570926   3 #> 217 662.86394   2.670322   3 #> 218 837.99359   2.705716   3 #> 219 597.82030   2.960821   3 #> 220 600.01763   2.553281   3 #> 221 788.44522   2.710835   3 #> 222 784.81238   3.828151   3 #> 223 787.60071   3.224093   3 #> 224 811.94602   2.621272   3 #> 225 596.08474   2.551119   3 #> 226 752.22475   2.513920   3 #> 227 602.33488   2.713679   3 #> 228 624.32738   3.346336   3 #> 229 604.78668   2.551980   3 #> 230 798.77332   2.820178   3 #> 231 621.81243   2.832308   3 #> 232 791.55780   2.605350   3 #> 233 614.55347   2.828493   3 #> 234 703.67843   2.711362   3 #> 235 602.86263   4.049315   3 #> 236 672.51292   2.756577   3 #> 237 637.54002   2.817003   3 #> 238 601.97162   2.543700   3 #> 239 601.92416   2.825763   3 #> 240 676.49431   2.515260   3 #> 241 601.81744   4.615730   3 #> 242 601.74813   2.989548   3 #> 243 601.69267   2.530995   3 #> 244 619.12810   2.825972   3 #> 245 627.28615   2.622863   3 #> 246 597.96551   2.591718   3 #> 247 646.04838   3.846405   3 #> 248 630.76033   2.605513   3 #> 249 620.07941   2.685199   3 #> 250 602.11944   2.582538   3 #> 251 596.26589   2.565252   3 #> 252 709.73687   2.517600   3 #> 253 600.67593   2.743275   3 #> 254 599.02804   2.644066   3 #> 255 624.20549   2.567424   3 #> 256 596.32174   2.888503   3 #> 257 598.03821   3.007035   3 #> 258 601.60400   2.907627   3 #> 259 604.82499   3.191634   3 #> 260 596.63994   2.595924   3 #> 261 599.04287   3.121747   3 #> 262 627.68368   3.798614   3 #> 263 611.19371   2.933225   3 #> 264 715.73454   2.608584   3 #> 265 707.60322   2.584742   3 #> 266 706.43409   2.873011   3 #> 267 607.10401   2.853900   3 #> 268 667.83388   2.615988   3 #> 269 596.39565   3.134504   3 #> 270 689.04392   2.599421   3 #> 271 778.21000   3.063282   3 #> 272 623.42359   2.693053   3 #> 273 597.34283   2.511938   3 #> 274 639.46450   3.176850   3 #> 275 622.86469   3.209647   3 #> 276 842.42210   3.037144   3 #> 277 597.84053   2.893268   3 #> 278 610.26188   2.952242   3 #> 279 609.24204   2.599680   3 #> 280 609.23278   2.542701   3 #> 281 614.05110   2.601633   3 #> 282 609.26451   3.319011   3 #> 283 610.42591   2.789165   3 #> 284 732.46621   2.795719   3 #> 285 610.29885   2.848128   3 #> 286 609.29397   2.989629   3 #> 287 609.48904   3.476674   3 #> 288 611.43872   2.515570   3 #> 289 610.43693   2.814110   3 #> 290 819.20242   2.678257   3 #> 291 609.68255   2.961122   3 #> 292 609.35186   2.696399   3 #> 293 723.88045   2.996473   3 #> 294 635.17652   2.791425   3 #> 295 612.34925   2.556422   3 #> 296 597.49529   2.609792   3 #> 297 808.98518   3.480105   3 #> 298 735.08581   3.169105   3 #> 299 605.75127   3.031691   3 #> 300 619.47630   3.469444   3 #> 301 597.47002   2.609925   3 #> 302 596.09541   3.022062   3 #> 303 597.69954   3.788725   3 #> 304 599.25357   3.376030   3 #> 305 601.83139   2.956280   3 #> 306 603.75141   3.547352   3 #> 307 609.73740   2.716502   3 #> 308 626.20839   2.529847   3 #> 309 597.38874   3.214438   3 #> 310 597.84661   2.607338   3 #> 311 638.48702   2.773553   3 #> 312 613.83751   2.768261   3 #> 313 623.96046   2.756706   3 #> 314 728.23856   2.913318   3 #> 315 790.32302   2.542612   3 #> 316 608.86459   2.745831   3 #> 317 608.81721   2.824765   3 #> 318 608.86948   2.650950   3 #> 319 669.01316   3.012672   3 #> 320 986.77487   2.578024   3 #> 321 614.94035   2.650495   3 #> 322 633.03348   4.222509   3 #> 323 618.87113   2.775128   3 #> 324 609.86742   2.553469   3 #> 325 609.08883   2.622973   3 #> 326 608.89624   3.575826   3 #> 327 611.95757   2.961053   3 #> 328 607.12968   2.684456   3 #> 329 597.78471   2.536767   3 #> 330 602.68809   2.828757   3 #> 331 897.92708   2.708263   3 #> 332 600.76128   2.836116   3 #> 333 596.86323   2.718554   3 #> 334 999.77485   2.638821   3 #> 335 612.03731   3.493898   3 #> 336 596.75030   2.914747   3 #> 337 788.96098   2.687039   3 #> 338 646.87514   2.890761   3 #> 339 647.80645   2.533479   3 #> 340 700.24461   2.942898   3 #> 341 646.87214   4.211508   3 #> 342 612.67096   3.178791   3 #> 343 612.70770   2.579815   3 #> 344 596.33107   2.645671   3 #> 345 596.43328   4.074768   3 #> 346 596.25827   2.502606   3 #> 347 600.20561   2.561154   3 #> 348 825.28987   2.700780   3 #> 349 718.23686   2.576860   3 #> 350 661.87539   2.662518   3 #> 351 858.90414   2.826897   3 #> 352 605.89102   3.301473   3 #> 353 598.18104   4.126593   3 #> 354 598.59301   3.456841   3 #> 355 820.93262   2.504466   3 #> 356 614.85015   2.607580   3 #> 357 598.93043   2.905043   3 #> 358 597.49951   2.637340   3 #> 359 597.46673   3.194631   3 #> 360 605.82201   2.514233   3 #> 361 674.72754   2.722988   3 #> 362 641.12928   2.621321   3 #> 363 601.03289   2.946857   3 #> 364 650.36050   2.931618   3 #> 365 597.05346   3.225508   3 #> 366 603.31685   2.618988   3 #> 367 675.46725   2.657188   3 #> 368 662.17018   2.739538   3 #> 369 627.41331   2.841189   3 #> 370 651.65052   3.070440   3 #> 371 596.48086   2.750442   3 #> 372 844.66807   3.259002   3 #> 373 737.09741   2.609808   3 #> 374 936.05504   3.206279   3 #> 375 597.33186   4.207143   3 #> 376 601.82426   3.567030   3 #>  #> [[5]] #>           ts magnitudes gen #> 1   982.7729   2.933999   4 #> 2   513.7725   2.936305   4 #> 3   571.4805   2.638695   4 #> 4   612.1074   2.584353   4 #> 5   582.1770   3.362760   4 #> 6   577.0908   2.671429   4 #> 7   571.5937   2.759784   4 #> 8   570.5174   3.311661   4 #> 9   569.5306   2.780699   4 #> 10  586.4181   2.538304   4 #> 11  569.5555   2.620852   4 #> 12  569.7431   2.711797   4 #> 13  927.7074   3.449300   4 #> 14  571.9448   2.771825   4 #> 15  587.6273   2.520823   4 #> 16  529.3083   2.684629   4 #> 17  745.2302   2.570440   4 #> 18  523.2440   3.009410   4 #> 19  542.6902   2.652211   4 #> 20  522.9720   2.841904   4 #> 21  519.8206   2.695778   4 #> 22  557.5030   2.512584   4 #> 23  512.4637   3.276344   4 #> 24  576.1623   2.504636   4 #> 25  510.6914   3.320965   4 #> 26  524.5513   2.530852   4 #> 27  680.8943   3.041705   4 #> 28  681.0744   2.621684   4 #> 29  831.6439   2.725918   4 #> 30  811.4329   2.907163   4 #> 31  819.7351   2.937521   4 #> 32  755.7163   2.546705   4 #> 33  518.7922   2.713857   4 #> 34  511.0511   2.565100   4 #> 35  574.3587   2.932582   4 #> 36  585.0337   2.612069   4 #> 37  574.0493   3.735449   4 #> 38  635.0023   3.046843   4 #> 39  539.3581   2.640951   4 #> 40  520.9718   2.550856   4 #> 41  769.5946   2.861870   4 #> 42  645.4452   2.573945   4 #> 43  695.8609   2.523365   4 #> 44  642.1002   2.567720   4 #> 45  637.6889   2.914038   4 #> 46  637.5104   2.739276   4 #> 47  638.8451   2.640268   4 #> 48  650.9957   2.573925   4 #> 49  737.5783   2.532884   4 #> 50  991.8002   3.773152   4 #> 51  512.4622   2.536767   4 #> 52  505.7087   2.633982   4 #> 53  510.6641   2.992220   4 #> 54  856.5443   2.569790   4 #> 55  531.9342   3.040669   4 #> 56  506.7963   2.551456   4 #> 57  544.7902   2.699274   4 #> 58  517.4902   2.544799   4 #> 59  624.4009   2.564371   4 #> 60  622.8240   2.686475   4 #> 61  615.2569   2.939182   4 #> 62  237.0578   2.600908   4 #> 63  235.5887   2.854100   4 #> 64  599.2308   3.103829   4 #> 65  601.9265   2.951522   4 #> 66  979.7889   2.871418   4 #> 67  979.7941   2.613955   4 #> 68  987.4504   3.010720   4 #> 69  619.3587   2.677664   4 #> 70  641.2835   3.133765   4 #> 71  598.7266   2.769042   4 #> 72  598.0534   2.577708   4 #> 73  659.0909   2.534495   4 #> 74  652.8489   2.848964   4 #> 75  758.6799   2.547080   4 #> 76  597.9423   3.889131   4 #> 77  724.9588   2.881181   4 #> 78  601.2319   3.485306   4 #> 79  598.2263   3.942695   4 #> 80  597.9073   2.642886   4 #> 81  625.6120   3.745374   4 #> 82  598.8128   3.088068   4 #> 83  599.8533   2.580108   4 #> 84  596.6045   2.763521   4 #> 85  701.8082   2.669192   4 #> 86  622.2946   3.048726   4 #> 87  604.3577   2.914240   4 #> 88  618.0646   2.674084   4 #> 89  602.8494   3.209760   4 #> 90  601.8788   2.536973   4 #> 91  720.2069   2.583237   4 #> 92  602.5671   2.533975   4 #> 93  729.9151   2.858086   4 #> 94  657.4333   2.907385   4 #> 95  604.5225   3.521880   4 #> 96  655.7083   3.486700   4 #> 97  646.0627   2.714887   4 #> 98  646.4723   3.996285   4 #> 99  599.0486   2.593456   4 #> 100 627.7122   2.717530   4 #> 101 640.4958   3.552677   4 #> 102 610.7110   2.834369   4 #> 103 849.5499   2.586916   4 #> 104 659.1460   3.277901   4 #> 105 610.3448   2.766066   4 #> 106 633.4326   2.779793   4 #> 107 633.6447   3.425314   4 #> 108 636.4625   2.956140   4 #> 109 623.3390   3.551771   4 #> 110 661.0727   2.758186   4 #> 111 646.9927   3.110131   4 #> 112 675.3299   2.769930   4 #> 113 701.8456   2.972907   4 #> 114 647.1911   2.731505   4 #> 115 598.5060   3.165285   4 #> 116 724.8037   3.318969   4 #> 117 809.0287   2.888204   4 #> 118 726.3959   2.506462   4 #> 119 598.6485   2.694751   4 #> 120 661.4220   2.637364   4 #> 121 617.3484   2.785901   4 #> 122 926.4852   2.717407   4 #> 123 605.4627   3.113322   4 #> 124 670.8189   2.572025   4 #> 125 608.0502   2.559965   4 #> 126 641.1794   3.050297   4 #>  #> [[6]] #>          ts magnitudes gen #> 1  610.1485   3.153058   5 #> 2  930.1597   3.510412   5 #> 3  572.4363   4.246654   5 #> 4  511.5915   2.602868   5 #> 5  812.8357   2.521681   5 #> 6  574.5802   2.526263   5 #> 7  574.6672   3.048579   5 #> 8  574.2338   3.233394   5 #> 9  574.1827   2.592345   5 #> 10 535.9329   3.142098   5 #> 11 985.8417   2.569702   5 #> 12 623.3623   3.217387   5 #> 13 605.3865   3.074813   5 #> 14 598.3693   3.748789   5 #> 15 602.8987   2.994018   5 #> 16 602.1856   2.552178   5 #> 17 649.2597   2.889380   5 #> 18 646.5136   2.762153   5 #> 19 640.6136   3.155729   5 #> 20 640.7329   2.510414   5 #> 21 614.8860   2.556740   5 #> 22 641.6008   2.603281   5 #> 23 647.2446   2.715821   5 #> 24 703.5686   2.940931   5 #> 25 771.3167   2.631341   5 #>  #> [[7]] #>         ts magnitudes gen #> 1 574.0041   2.712946   6 #> 2 577.4353   2.818720   6 #> 3 738.8840   2.910556   6 #> 4 572.4617   2.642653   6 #> 5 598.0480   3.112114   6 #> 6 700.9629   2.562441   6 #> 7 886.1584   2.675123   6 #>  #> [[8]] #>         ts magnitudes gen #> 1 741.6433   3.213021   7 #>  #> [[9]] #>         ts magnitudes gen #> 1 745.8628   2.765398   8 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":null,"dir":"Reference","previous_headings":"","what":"HORUS Ita Catalogue — horus","title":"HORUS Ita Catalogue — horus","text":"HOmogenized instRUmental Seismic catalog (HORUS) Italy 1960 present, limited limited 1960-2019.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HORUS Ita Catalogue — horus","text":"","code":"horus"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HORUS Ita Catalogue — horus","text":"Original file format: Year: Origin Time (OT) year Mo: OT month Da: OT day Ho: OT hour Mi OT minute Se OT seconds fractions Lat epicenter N latitude (degrees) Lon epicenter E longitude (degrees) Depth hypocenter depth (km) Mw true proxy moment magnitude sigMw moment magnitude uncertainty Geo.Ita \"*\" indicates epicenter within Italian mainland territory, otherwise \" \" Geo.CPTI15 \"*\" indicates epicenter within spatial window CPTI15 catalog (Rovida et al., 2020, Bull Earth Eng, doi: 10.1007/s10518-020-00818-y) Ev..type \"x\" indicates event earthquake (e.g. explosion, eruption, landslide, ...) (since May 1st 2012) Iside.n. ISIDe id number (since April 16th 2005) ETAS.inlabru format: time_string: Data-time event, ISO 8601 format; format = \"%Y-%m-%dT%H:%M:%OS\" use .POSIXct() lon: Original Lon lat: Original Lat depth Original Depth M: Original Mw","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HORUS Ita Catalogue — horus","text":"http://horus.bo.ingv./","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HORUS Ita Catalogue — horus","text":"original entire HORUS catalog provided single tab separated ascii file: HORUS_Ita_Catalog.txt random second decimal digit added ML Md INGV bulletin (ISIDe) computing Mw proxies (Lolli et al., Seism. Res. Lett., 91, 3208-3222, doi: 10.1785/0220200148), HORUS_Ita_Catalog_o.txt original ML Md used compute Mw proxies. ETAS.inlabru includes reformatted version data HORUS_Ita_Catalog.txt data.frame, limited 1960-2019. data provided , express implied warranty given.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HORUS Ita Catalogue — horus","text":"Barbara Lolli(1), Daniele Randazzo(1), Gianfranco Vannucci(1) Paolo Gasperini (2),(1) (2020). Homogenized Instrumental Seismic Catalog (HORUS) Italy 1960 Present, Seismol. Res. Lett, doi: 10.1785/0220200148. (1) Istituto Nazionale di Geofisica e Vulcanologia, Sezione di Bologna (2) Dipartimento di Fisica e Astronomia, Università di Bologna","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Number cores used n.samp exceeds max.batch. Default 1","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 2.746146 2.562176 2.561313 3.984621 2.722299 2.594637 2.626181 3.057158 #>   [9] 2.752198 3.232922 2.858353 3.161408 2.660147 3.410272 2.547676 2.859701 #>  [17] 2.503060 3.191125 2.761455 3.676954 2.662438 3.484869 2.769538 2.875426 #>  [25] 2.713642 3.547245 2.847216 3.104771 2.587755 3.159540 2.841103 3.043215 #>  [33] 3.038719 2.506939 2.859663 2.620257 2.574499 3.236216 3.076653 2.508638 #>  [41] 2.695986 2.648841 2.559916 2.618111 2.857076 2.562750 2.506449 2.732399 #>  [49] 4.732754 2.733752 2.615634 2.713362 3.237883 2.969714 2.684804 3.924010 #>  [57] 2.639796 3.171622 3.110303 4.390560 2.588366 2.598878 2.888738 3.143304 #>  [65] 4.061472 3.164223 2.748119 2.981427 2.879014 2.543463 2.663403 3.089421 #>  [73] 3.198233 2.585408 3.109466 2.850106 2.508669 3.287061 2.965376 2.553902 #>  [81] 3.158213 2.697405 3.139631 2.619705 2.656498 2.522264 2.776095 2.618224 #>  [89] 3.010431 2.529279 2.530985 2.564467 2.646009 2.829461 2.574533 2.726321 #>  [97] 2.874516 2.511848 2.578883 2.541028"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore number compute cores use","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   514.3224   2.765592 #> 2   525.1838   2.599248 #> 3   519.1376   2.606305 #> 4   502.4994   2.787694 #> 5   692.0008   2.791528 #> 6   711.5982   2.867001 #> 7   979.5727   2.812908 #> 8   500.2158   2.700614 #> 9   500.1061   2.510669 #> 10  524.6675   2.673983 #> 11  500.0224   2.701554 #> 12  508.8208   3.678204 #> 13  555.7244   2.887637 #> 14  502.3171   3.280395 #> 15  500.5046   2.968910 #> 16  500.8791   2.886355 #> 17  731.2694   3.120866 #> 18  506.4794   2.648108 #> 19  504.6473   2.607824 #> 20  500.4795   2.812084 #> 21  501.3874   2.562711 #> 22  796.7600   2.543651 #> 23  500.0775   2.804980 #> 24  501.6723   3.098197 #> 25  500.0460   2.599626 #> 26  500.6707   2.858923 #> 27  512.3939   3.825766 #> 28  510.1351   2.775709 #> 29  515.5166   2.680026 #> 30  500.2285   3.539282 #> 31  500.2352   3.002049 #> 32  875.0152   3.375060 #> 33  538.3452   2.513399 #> 34  509.6346   3.224435 #> 35  502.6315   2.634010 #> 36  500.4234   3.189601 #> 37  500.8425   2.597844 #> 38  500.3278   2.543998 #> 39  502.3565   2.868564 #> 40  576.4208   2.952439 #> 41  574.4798   2.909740 #> 42  598.2596   2.747778 #> 43  613.8358   2.932381 #> 44  500.5680   2.899704 #> 45  504.4924   3.518454 #> 46  544.2928   2.778296 #> 47  500.6969   2.702307 #> 48  582.4779   3.221966 #> 49  504.6413   3.212198 #> 50  500.5052   2.525261 #> 51  500.0443   2.943790 #> 52  556.3990   2.754048 #> 53  501.4882   2.582270 #> 54  500.9360   2.688690 #> 55  674.5437   2.525295 #> 56  500.4814   2.706741 #> 57  623.2214   2.897642 #> 58  500.0410   2.511718 #> 59  506.1546   2.513808 #> 60  546.4950   2.730548 #> 61  654.9349   3.700887 #> 62  500.2426   3.648873 #> 63  500.1295   2.832067 #> 64  502.7396   2.690550 #> 65  824.3157   2.937977 #> 66  500.5851   2.733586 #> 67  500.1219   2.630907 #> 68  708.8005   2.703504 #> 69  504.4418   2.842862 #> 70  500.1364   2.931998 #> 71  500.1430   3.169742 #> 72  501.8241   3.331299 #> 73  617.7029   2.521571 #> 74  568.4118   2.567759 #> 75  500.1809   2.865639 #> 76  528.2643   3.114822 #> 77  500.1274   2.530508 #> 78  500.4380   2.753021 #> 79  505.8453   2.632717 #> 80  640.6919   3.104867 #> 81  500.0505   3.703750 #> 82  516.0440   2.767663 #> 83  509.3472   2.551664 #> 84  500.5290   3.409405 #> 85  500.0056   3.076136 #> 86  502.3155   3.278442 #> 87  500.0677   2.521824 #> 88  826.2577   2.513467 #> 89  930.8255   2.913215 #> 90  502.1736   3.124766 #> 91  529.3080   2.897974 #> 92  500.8913   3.154593 #> 93  506.7171   4.348796 #> 94  501.1795   2.606342 #> 95  768.9591   2.502826 #> 96  500.2787   2.630088 #> 97  500.3238   2.558534 #> 98  500.4799   3.120897 #> 99  524.3119   2.606548 #> 100 544.5153   3.336629 #> 101 670.5855   2.669902 #> 102 506.8010   2.512330 #> 103 503.1508   3.018959 #> 104 500.6032   4.691631 #> 105 503.6313   3.941570 #> 106 590.0619   2.717787 #> 107 500.2783   2.658169 #> 108 500.2941   3.858030 #> 109 500.9724   2.701256 #> 110 511.1930   2.507108 #> 111 502.1983   2.514578 #> 112 504.9199   4.023873 #> 113 500.0225   2.514070 #> 114 622.3778   2.724954 #> 115 616.9128   2.604765 #> 116 511.5760   2.741862 #> 117 502.2408   2.535850 #> 118 878.8210   2.618034 #> 119 500.8167   2.682210 #> 120 510.9933   4.673183 #> 121 685.1977   2.846589 #> 122 500.4215   3.742949 #> 123 500.2527   2.733069 #> 124 513.4691   2.544687 #> 125 503.0952   2.856589 #> 126 500.3444   2.690730 #> 127 500.0688   3.260266 #> 128 558.9964   3.213647 #> 129 501.3013   2.725228 #> 130 718.3563   2.696280 #> 131 500.5635   2.697468 #> 132 546.5107   3.371741 #> 133 500.0714   2.525176 #> 134 513.5507   2.714184 #> 135 525.0947   2.564214 #> 136 660.5172   2.678757 #> 137 503.9249   2.671226 #> 138 500.0494   2.660528 #> 139 500.5431   2.578844 #> 140 629.1948   3.193420 #> 141 869.6236   4.178372 #> 142 559.4525   3.940290 #> 143 500.0969   2.888951 #> 144 501.4826   3.198055 #> 145 500.1368   2.949861 #> 146 500.0464   2.638440 #> 147 514.7775   2.651028 #> 148 500.1655   2.878598 #> 149 537.4059   2.912846 #> 150 500.0784   2.602454 #> 151 517.3109   2.501103 #> 152 615.7296   2.873198 #> 153 500.5980   2.947575 #> 154 532.0947   2.605548 #> 155 501.0336   2.708950 #> 156 914.0635   2.672636 #> 157 619.2045   3.885486 #> 158 500.0119   3.437921 #> 159 507.7428   2.642917 #> 160 500.1660   3.257129 #> 161 585.3903   2.867907 #> 162 503.6739   2.715687 #> 163 500.1855   2.556924 #> 164 500.0526   3.369395 #> 165 500.6083   2.732835 #> 166 536.5050   2.539738 #> 167 502.8064   2.919102 #> 168 525.1915   3.789070 #> 169 543.7691   2.803570 #> 170 500.1850   3.181911 #> 171 680.7870   2.679272 #> 172 500.5690   2.510900 #> 173 500.1710   2.621984 #> 174 500.4358   2.522074 #> 175 535.8245   2.517722 #> 176 500.3522   2.747483 #> 177 500.6246   3.176677 #> 178 503.0391   2.630167 #> 179 500.3027   3.294025 #> 180 500.1494   2.620691 #> 181 501.1625   3.106057 #> 182 560.0349   2.930307 #> 183 500.1291   2.823339 #> 184 611.8407   2.596677 #> 185 500.0192   2.675958 #> 186 500.1991   2.661073 #> 187 932.4641   2.616562 #> 188 500.9455   2.669215 #> 189 502.8672   2.548628 #> 190 500.0018   2.564214 #> 191 500.1759   2.504736 #> 192 500.8242   2.648562 #> 193 500.6448   2.542222 #> 194 530.2120   2.644567 #> 195 502.4741   2.969020 #> 196 500.0480   2.708637 #> 197 500.0952   3.168823 #> 198 500.3278   2.613738 #> 199 519.1253   2.658842 #> 200 500.0632   3.265880 #> 201 685.7702   2.752375 #> 202 568.6355   3.146385 #> 203 521.5540   2.678978 #> 204 507.1724   2.928996 #> 205 672.8927   2.751260 #> 206 659.7202   3.720349 #> 207 502.0010   2.668819 #> 208 531.2109   2.916449 #> 209 502.9077   3.739205 #> 210 504.7424   3.540254 #> 211 501.7697   2.622458 #> 212 520.0302   2.999478 #> 213 500.3072   3.589679 #> 214 521.9052   2.576871 #> 215 838.9967   2.605866 #> 216 522.5059   2.543452 #> 217 500.2858   2.685343 #> 218 500.0279   3.027163 #> 219 500.9465   2.983760 #> 220 500.0833   2.711137 #> 221 500.9931   2.937371 #> 222 504.7270   2.715394 #> 223 501.6419   3.509510 #> 224 505.6645   2.612265 #> 225 500.1154   3.530380 #> 226 610.3716   3.330889 #> 227 517.7455   3.037111 #> 228 500.0756   3.147311 #> 229 500.0543   3.767650 #> 230 605.0893   2.546999 #> 231 502.5815   2.531662 #> 232 522.2819   2.552536 #> 233 500.1330   2.778518 #> 234 566.2623   2.551601 #> 235 592.3309   2.545835 #> 236 550.6603   2.612087 #> 237 500.0212   2.670645 #> 238 501.3321   2.822515 #> 239 505.6953   2.596428 #> 240 504.2716   2.721698 #> 241 502.2220   2.565917 #> 242 500.9507   2.762157 #> 243 500.3470   2.834618 #> 244 668.4845   2.520279 #> 245 519.7776   2.746749 #> 246 500.1159   4.666021 #> 247 500.9869   2.683018 #> 248 512.0993   2.675758 #> 249 501.2422   2.532684 #> 250 605.1131   2.659223 #> 251 506.9922   3.328528 #> 252 506.0392   2.930191 #> 253 500.7350   2.638933 #> 254 501.2999   2.562803 #> 255 500.3474   3.432573 #> 256 514.9523   2.756299 #> 257 576.8595   3.365608 #> 258 510.6001   2.796729 #> 259 555.6183   2.684110 #> 260 508.8268   2.838749 #> 261 506.7138   2.843117 #> 262 500.0005   3.189007 #> 263 500.1875   2.740364 #> 264 531.7974   2.659727 #> 265 500.5106   2.954311 #> 266 506.7978   2.738374 #> 267 500.0729   3.296419 #> 268 522.0296   2.618307 #> 269 500.1590   3.364452 #> 270 501.5725   3.175030 #> 271 500.3718   2.674285 #> 272 673.9723   2.795087 #> 273 501.2640   2.702525 #> 274 500.8040   2.701518 #> 275 505.6074   2.567199 #> 276 526.2376   2.526960 #> 277 501.1893   3.108229 #> 278 500.0366   3.059350 #> 279 500.2168   3.239276 #> 280 500.7472   3.213597 #> 281 500.4399   2.539498 #> 282 508.0797   2.610845 #> 283 846.9884   2.960499 #> 284 500.4651   3.501648 #> 285 540.9450   3.371744 #> 286 500.8619   2.622271 #> 287 507.2972   2.726685 #> 288 500.6518   3.412760 #> 289 500.0122   3.268672 #> 290 500.8618   2.570520 #> 291 742.7778   2.662638 #> 292 500.6679   2.778658 #> 293 500.4247   3.176027 #> 294 500.2809   2.582300 #> 295 688.2588   2.595873 #> 296 507.2205   2.713573 #> 297 500.1637   3.068038 #> 298 503.3954   3.079318 #> 299 678.1355   2.649724 #> 300 503.1990   4.067798 #> 301 507.9981   2.862446 #> 302 508.4592   2.543536 #> 303 667.0502   3.163975 #> 304 568.5365   3.306054 #> 305 500.0524   2.703058 #> 306 500.0366   2.614952 #> 307 501.1221   2.931003 #> 308 500.1482   2.674613 #> 309 500.2327   3.963063 #> 310 819.9139   3.014565 #> 311 500.5884   2.549370 #> 312 508.4875   2.505743 #> 313 503.2187   2.790304 #> 314 517.2687   2.993050 #> 315 510.9393   3.410583 #> 316 545.6432   2.793236 #> 317 500.7318   2.512100 #> 318 502.5453   3.893729 #> 319 502.3765   2.692541 #> 320 511.3393   2.745082 #> 321 542.7635   2.740683 #> 322 502.1734   2.709674 #> 323 500.0220   2.677945 #> 324 500.3107   2.714217 #> 325 500.1280   3.618436 #> 326 664.2883   2.721599 #> 327 503.8263   2.712952 #> 328 610.8393   2.619038 #> 329 550.9260   3.296015 #> 330 507.8326   3.684963 #> 331 810.7244   2.614887 #> 332 509.9076   2.712614 #> 333 765.5121   2.694322 #> 334 500.0379   2.850068 #> 335 505.4059   2.917337 #> 336 500.1488   2.808830 #> 337 500.8791   3.005451 #> 338 520.1547   2.738013 #> 339 590.9310   3.172120 #> 340 500.1560   2.561106 #> 341 503.4507   2.609212 #> 342 585.7934   2.821683 #> 343 501.0256   2.637570 #> 344 501.3227   4.692739 #> 345 507.9232   2.948895 #> 346 513.2259   3.602886 #> 347 860.9470   3.374636 #> 348 504.3932   3.081905 #> 349 500.1005   2.822980 #> 350 644.9744   2.721841 #> 351 501.1946   2.998384 #> 352 655.4004   2.982780 #> 353 500.4988   3.413556 #> 354 521.2953   2.577073 #> 355 521.1253   3.024355 #> 356 501.0568   2.564941 #> 357 500.5951   2.567729 #> 358 775.1218   3.356369 #> 359 500.3649   2.726459 #> 360 500.0225   2.500284 #> 361 516.5691   2.618085 #> 362 504.7314   2.513550 #> 363 840.1272   2.570299 #> 364 500.2709   3.374512 #> 365 736.2728   2.809261 #> 366 624.9783   2.811651 #> 367 500.0743   3.006871 #> 368 500.0895   2.576722 #> 369 500.0020   2.714911 #> 370 503.7579   3.133469 #> 371 500.2217   2.524234 #> 372 508.1019   2.688126 #> 373 500.0572   3.033944 #> 374 500.1431   3.055896 #> 375 500.1825   3.330704 #> 376 560.4249   2.517313 #> 377 500.0196   2.526632 #> 378 512.1008   2.525454 #> 379 524.6469   2.628234 #> 380 516.3164   2.715187 #> 381 507.2301   3.112422 #> 382 504.8144   2.952779 #> 383 500.0969   2.673178 #> 384 509.0673   2.669367 #> 385 510.8245   2.642351 #> 386 521.5871   3.234628 #> 387 501.1915   3.328678 #> 388 500.5331   2.757784 #> 389 631.3295   3.031273 #> 390 500.6313   2.904663 #> 391 509.0511   2.932400 #> 392 500.7403   2.992198 #> 393 501.0744   2.569765 #> 394 500.2594   3.669543 #> 395 500.9708   2.637508 #> 396 512.2287   2.557433 #> 397 916.8472   3.039262 #> 398 501.8857   2.508900 #> 399 500.1436   2.709226 #> 400 500.5036   2.526190 #> 401 849.9058   3.839824 #> 402 501.4050   3.480141 #> 403 500.3608   2.758480 #> 404 519.0934   2.892581 #> 405 519.8456   2.886693 #> 406 507.8637   3.149919 #> 407 500.0085   2.532452 #> 408 500.8542   3.244156 #> 409 504.4293   2.835972 #> 410 536.9244   2.876962 #> 411 503.5180   2.614782 #> 412 505.5064   2.565818 #> 413 504.4905   2.786118 #> 414 500.2618   2.634809 #> 415 506.6460   2.758655 #> 416 500.1797   2.815636 #> 417 501.1802   2.699212 #> 418 500.0391   2.828938 #> 419 500.3307   3.399162 #> 420 921.8741   3.046330 #> 421 502.4001   2.794954 #> 422 556.7047   2.545175 #> 423 714.5209   3.560748 #> 424 561.0441   2.713755 #> 425 500.0489   3.386687 #> 426 918.5449   2.674500 #> 427 525.7910   2.572914 #> 428 838.3183   3.368990 #> 429 584.0591   2.572895 #> 430 515.0398   2.769393 #> 431 503.9812   3.012482 #> 432 503.7711   2.541933 #> 433 637.3663   3.842129 #> 434 534.1229   2.576503 #> 435 500.0024   2.602506 #> 436 504.2479   2.588716 #> 437 500.0246   2.643489 #> 438 508.0913   3.516958 #> 439 500.0876   2.549162 #> 440 540.0794   2.612438 #> 441 500.1291   3.577313 #> 442 502.2298   2.581221 #> 443 500.6738   3.321220 #> 444 567.4547   2.761623 #> 445 509.5672   2.755200 #> 446 502.6486   2.816776 #> 447 545.4541   2.840509 #> 448 500.7687   2.984471 #> 449 625.4036   2.521850 #> 450 594.8989   3.091919 #> 451 947.0540   2.943268 #> 452 519.3419   2.655486 #> 453 500.2870   2.581117 #> 454 695.0643   2.782478 #> 455 991.9901   2.502032 #> 456 500.0064   2.584569 #> 457 510.7031   3.194291 #> 458 500.0354   2.692803 #> 459 500.3112   3.214561 #> 460 514.3409   3.051233 #> 461 500.1354   3.249583 #> 462 501.0781   3.436331 #> 463 501.6889   2.942318 #> 464 548.6546   2.803225 #> 465 541.6177   2.925871 #> 466 575.6670   2.551347 #> 467 501.7475   2.826583 #> 468 547.7993   2.513631 #> 469 500.2568   3.076824 #> 470 504.4332   2.932265 #> 471 500.2686   3.605857 #> 472 500.1231   2.675146 #> 473 500.0510   2.560682 #> 474 500.2776   3.485228 #> 475 500.4365   3.609350 #> 476 560.9198   2.724788 #> 477 648.0506   2.668249 #> 478 545.2897   2.596743 #> 479 516.1690   3.003749 #> 480 500.1693   2.911305 #> 481 521.9902   3.013023 #> 482 504.0405   2.608160 #> 483 502.0555   3.003177 #> 484 500.1138   3.124256 #> 485 501.2886   2.662526 #> 486 503.5568   2.864035 #> 487 977.4227   2.691904 #> 488 504.0525   2.537397 #> 489 507.5708   2.851039 #> 490 500.1320   2.567318 #> 491 627.0558   2.666833 #> 492 500.0173   2.991739 #> 493 500.0024   2.703620 #> 494 500.1304   2.732133 #> 495 530.1193   3.025724 #> 496 500.3928   2.737931 #> 497 631.9746   2.681788 #> 498 502.9804   2.552974 #> 499 551.7646   3.026590 #> 500 500.0724   2.623052 #> 501 500.0910   3.602163 #> 502 569.9425   3.155555 #> 503 524.3976   2.688713 #> 504 500.3075   2.721078 #> 505 501.4100   2.971938 #> 506 589.3612   2.939341 #> 507 501.8867   3.418296 #> 508 674.0999   3.100224 #> 509 501.2008   3.253251 #> 510 513.6479   2.625054 #> 511 502.7497   2.787087 #> 512 942.1752   3.587844 #> 513 735.5081   2.704668 #> 514 780.3487   2.561621 #> 515 612.7899   2.620209 #> 516 511.1001   3.029723 #> 517 500.3296   2.720775 #> 518 549.6809   2.503918 #> 519 500.3177   3.222810 #> 520 504.4242   3.171849 #> 521 508.2004   3.020669 #> 522 500.0714   2.543983 #> 523 500.1839   2.770842 #> 524 935.7049   2.893484 #> 525 589.2592   2.643369 #> 526 500.0578   2.559773 #> 527 501.8992   2.804544 #> 528 501.3508   2.593843 #> 529 501.0570   2.722148 #> 530 505.0815   2.562345 #> 531 834.2707   2.635716 #> 532 572.8573   3.300048 #> 533 502.9284   2.916723 #> 534 501.1639   3.009334 #> 535 500.0889   2.557056 #> 536 512.2152   3.934361 #> 537 500.4556   3.278801 #> 538 500.1938   2.745329 #> 539 571.8257   3.961055 #> 540 581.7464   2.742965 #> 541 504.0457   3.507447 #> 542 500.9206   2.642234 #> 543 888.6118   2.796151 #> 544 500.3438   3.348127 #> 545 500.5748   2.577761 #> 546 500.7231   3.168238 #> 547 500.4789   3.049176 #> 548 629.4875   2.970680 #> 549 593.3558   4.434072 #> 550 500.0208   2.923856 #> 551 500.0684   3.544398 #> 552 687.8997   2.709934 #> 553 532.7706   2.598793 #> 554 803.6134   2.845699 #> 555 500.2467   2.768013 #> 556 500.7083   2.907295 #> 557 711.1211   2.622928 #> 558 500.1908   2.877669 #> 559 519.2825   2.681591 #> 560 500.8541   4.991997 #> 561 502.6124   2.619692 #> 562 500.0316   2.798438 #> 563 500.9660   2.933168 #> 564 503.7466   2.500315 #> 565 500.1909   2.973986 #> 566 520.0537   2.920014 #> 567 500.2694   2.995929 #> 568 500.0108   2.588838 #> 569 500.1731   3.738818 #> 570 602.9910   2.824972 #> 571 769.7468   3.553677 #> 572 503.0685   2.567044 #> 573 830.4122   2.560216 #> 574 500.0731   3.240967 #> 575 510.0606   2.745069 #> 576 500.2667   2.716105 #> 577 504.4164   3.097455 #> 578 512.5206   2.683891 #> 579 539.6558   3.481984 #> 580 515.1969   2.870174 #> 581 614.5233   2.685789 #> 582 512.7537   3.511753 #> 583 500.2036   2.549458 #> 584 644.1551   2.504698 #> 585 500.7519   3.324606 #> 586 572.5738   2.517529 #> 587 500.0761   2.529374 #> 588 501.9732   2.795844 #> 589 520.2561   2.500245 #> 590 500.4369   2.502707 #> 591 500.0201   3.076126 #> 592 500.3074   2.934902 #> 593 531.4335   2.791475 #> 594 501.7978   3.189535 #> 595 575.4103   3.230835 #> 596 514.5582   3.071934 #> 597 652.4539   2.835232 #> 598 508.0410   2.873781 #> 599 590.6842   2.511723 #> 600 961.4160   2.523534 #> 601 812.3070   2.684572 #> 602 502.6191   2.545518 #> 603 500.1167   2.518518 #> 604 507.2236   3.003225 #> 605 500.0472   2.728440 #> 606 501.4312   3.094423 #> 607 562.8631   2.523673 #> 608 520.8855   3.015763 #> 609 538.9401   2.547113 #> 610 511.0393   2.546979 #> 611 508.3239   2.639059 #> 612 531.5453   3.318947 #> 613 500.1107   3.603129 #> 614 648.1597   3.588885 #> 615 502.2110   2.764655 #> 616 500.5283   2.775374 #> 617 549.7640   2.702230 #> 618 500.2576   2.807809 #> 619 510.6543   2.723777 #> 620 529.4603   2.833636 #> 621 517.3967   2.742437 #> 622 500.0948   2.535990 #> 623 511.7623   2.508314 #> 624 521.7277   2.615390 #> 625 500.9105   4.211171 #> 626 524.9925   2.919718 #> 627 557.9393   2.573555 #> 628 500.1546   2.551414 #> 629 501.7101   4.326955 #> 630 500.1482   2.737284 #> 631 501.0674   2.511316 #> 632 503.2290   2.737265 #> 633 505.7834   3.144768 #> 634 500.1585   3.457812 #> 635 500.0282   2.884663 #> 636 510.3915   3.802476 #> 637 500.2681   2.728890 #> 638 505.6500   2.911576 #> 639 501.7962   2.983669 #> 640 502.0042   3.266352 #> 641 504.3982   2.514162 #> 642 569.5683   2.619402 #> 643 501.6863   2.510742 #> 644 501.9372   3.247640 #> 645 507.1895   2.588006 #> 646 500.3516   2.920191 #> 647 564.9892   4.334212 #> 648 549.9742   2.799543 #> 649 503.9895   2.639411 #> 650 500.6647   2.835012 #> 651 500.0600   2.611327 #> 652 520.3414   3.362105 #> 653 501.7064   3.910046 #> 654 515.3292   2.848878 #> 655 500.0546   2.745549 #> 656 512.8173   3.255803 #> 657 639.3391   2.782147 #> 658 503.0958   2.690692 #> 659 999.8893   2.540392 #> 660 500.9983   2.656348 #> 661 500.1666   3.057438 #> 662 559.1925   2.574220 #> 663 510.5231   3.582658 #> 664 829.1829   2.792048 #> 665 572.8570   2.535554 #> 666 500.8005   2.680595 #> 667 500.4084   2.605846 #> 668 540.5011   2.512414 #> 669 547.2452   2.694161 #> 670 500.0212   2.613095 #> 671 510.4663   3.295475 #> 672 513.9215   2.901794 #> 673 514.2372   2.666390 #> 674 500.7691   2.657745 #> 675 574.8629   2.590050 #> 676 513.0746   2.588815 #> 677 500.0242   3.032337 #> 678 502.7787   2.598695 #> 679 500.5224   2.865053 #> 680 500.8422   2.672402 #> 681 503.6425   2.624265 #> 682 500.1231   2.788406 #> 683 500.0512   3.177337 #> 684 501.4925   3.068433 #> 685 500.2054   2.915188 #> 686 504.4858   3.053703 #> 687 501.3746   2.532164 #> 688 500.5463   2.636219 #> 689 500.0606   2.527061 #> 690 502.3594   3.024067 #> 691 541.3047   2.558331 #> 692 882.0988   2.763156 #> 693 500.0884   2.962931 #> 694 500.1675   2.665600 #> 695 923.1012   2.642015 #> 696 500.0506   2.806591 #> 697 731.3926   2.989119 #> 698 595.7182   2.622654 #> 699 501.9993   2.715356 #> 700 501.3483   2.654532 #> 701 534.3492   4.579617 #> 702 566.5052   2.515100 #> 703 511.0157   3.007619 #> 704 801.4225   2.893313 #> 705 603.1827   3.846057 #> 706 956.7463   3.158252 #> 707 500.0279   2.627209 #> 708 500.0128   3.181084 #> 709 500.2492   2.828306 #> 710 513.6235   2.652396 #> 711 535.8013   3.030562 #> 712 522.1347   3.153549 #> 713 552.4740   3.006481 #> 714 500.1896   2.733861 #> 715 715.1665   2.570396 #> 716 504.6581   2.568000 #> 717 776.9812   3.162980 #> 718 502.0992   3.223784 #> 719 500.2750   2.635306 #> 720 503.5776   3.289608 #> 721 611.6631   2.727471 #> 722 516.2209   2.718587 #> 723 500.4195   2.686786 #> 724 518.7938   3.247389 #> 725 500.5935   3.616102 #> 726 518.3997   2.521160 #> 727 500.4326   2.672690 #> 728 500.2052   2.524411 #> 729 500.1710   2.587471 #> 730 500.1308   2.603873 #> 731 500.2384   3.225111 #> 732 513.4759   3.035316 #> 733 561.8475   2.948801 #> 734 501.6770   2.910494 #> 735 518.9015   2.923638 #> 736 500.4073   2.712640 #> 737 531.8192   2.950976 #> 738 500.0239   2.736698 #> 739 537.3092   3.091060 #> 740 775.5965   2.770115 #> 741 505.4206   2.859692 #> 742 500.2414   2.828607 #> 743 760.1031   2.745942 #> 744 507.7612   2.521735 #> 745 530.4933   2.670743 #> 746 631.7947   3.510613 #> 747 503.0224   2.542350 #> 748 539.8941   3.120324 #> 749 503.2629   2.827749 #> 750 500.6856   3.015851 #> 751 644.1854   2.864796 #> 752 500.1103   3.190035 #> 753 542.6824   2.707868 #> 754 506.5730   2.662059 #> 755 501.7003   2.715302 #> 756 617.8296   3.958513 #> 757 517.0186   2.555541 #> 758 500.1681   2.744905 #> 759 500.2192   2.653078 #> 760 500.0147   2.724386 #> 761 500.1007   3.077653 #> 762 503.5099   2.947754 #> 763 505.6565   3.047015 #> 764 523.6642   2.760093 #> 765 551.0900   2.673602 #> 766 508.2046   4.067879 #> 767 500.0370   2.729717 #> 768 560.8941   2.923076 #> 769 544.2041   3.323118 #> 770 503.4615   3.036810 #> 771 523.8512   2.916740 #> 772 547.2170   2.947337 #> 773 900.9303   2.734650 #> 774 500.2669   2.710077 #> 775 533.6893   2.953723 #> 776 500.0095   2.693105 #> 777 504.7385   2.658669 #> 778 500.3023   2.549084 #> 779 500.1219   2.722105 #> 780 500.1106   3.483832 #> 781 501.8059   3.971789 #> 782 605.9687   2.699123 #> 783 814.4818   2.523122 #> 784 538.1184   4.657824 #> 785 501.5864   2.662104 #> 786 500.2154   2.909758 #> 787 545.4913   2.693916 #> 788 558.2854   3.093611 #> 789 500.0525   2.504170 #> 790 508.2598   3.771586 #> 791 503.3561   2.775155 #> 792 500.8990   3.609196 #> 793 501.4204   3.726766 #> 794 538.5751   2.801784 #> 795 956.1642   2.989973 #> 796 500.3632   3.248139 #> 797 523.7182   2.907081 #> 798 505.6045   2.673619 #> 799 503.6185   3.301656 #> 800 990.5648   4.753817 #> 801 510.2230   3.141825 #> 802 508.7068   2.532453 #> 803 803.9142   2.597791 #> 804 839.4420   3.021671 #> 805 500.0947   2.868845 #> 806 614.2682   2.935379 #> 807 506.8704   4.040710 #> 808 500.0185   2.648738 #> 809 508.3269   2.903025 #> 810 508.9093   3.433680 #> 811 516.7127   2.542069 #> 812 500.0597   2.628489 #> 813 500.0437   2.611545 #> 814 500.4912   2.697892 #> 815 951.4493   2.627950 #> 816 501.7691   2.819881 #> 817 587.1695   2.662109 #> 818 501.3095   3.105792 #> 819 793.6246   3.094548 #> 820 501.6665   2.525410 #> 821 593.0539   2.518087 #> 822 563.6794   2.790428 #> 823 517.0131   2.668638 #> 824 681.4722   2.683762 #> 825 500.0211   3.896339 #> 826 500.0100   2.921341 #> 827 504.7201   4.662230 #> 828 500.4671   2.647412 #> 829 501.7632   2.669094 #> 830 782.7399   3.068443 #> 831 505.7632   3.168754 #> 832 500.0965   2.837763 #> 833 848.8359   5.043000 #> 834 507.3662   2.503149 #> 835 902.4247   3.114674 #> 836 944.8199   3.771875 #> 837 525.4123   2.667630 #> 838 512.3376   2.704547 #> 839 528.2573   3.247371 #> 840 678.5715   3.040423 #> 841 500.1053   3.083439 #> 842 500.0858   2.771550 #> 843 502.2395   3.460271 #> 844 501.4459   2.695813 #> 845 500.0142   2.992073 #> 846 805.8749   2.918459 #> 847 500.2806   3.350092 #> 848 500.4086   2.910083 #> 849 511.5393   2.555433 #> 850 543.1141   2.673120 #> 851 500.1270   2.564683 #> 852 500.7792   2.520450 #> 853 558.9683   2.611652 #> 854 500.1739   2.717749 #> 855 552.4270   3.076162 #> 856 503.2310   4.319065 #> 857 500.0164   2.612457 #> 858 500.1602   2.525577 #> 859 500.1430   3.073440 #> 860 500.0872   2.584571 #> 861 500.1965   2.621550 #> 862 500.0447   2.510497 #> 863 500.0527   2.727007 #> 864 500.0728   2.616028 #> 865 609.1691   2.723367 #> 866 524.4153   3.853764 #> 867 502.6024   2.871293 #> 868 503.4047   3.578800 #> 869 509.3405   2.734741 #> 870 539.2038   2.780580 #> 871 521.2701   2.721760 #> 872 501.3285   2.798529 #> 873 500.2621   2.558269 #> 874 517.5293   3.489522 #> 875 505.8194   2.562299 #> 876 518.7168   3.176600 #> 877 500.1890   2.964208 #> 878 500.1768   2.645924 #> 879 796.4899   3.738351 #> 880 547.9277   2.614625 #> 881 716.6648   3.699512 #> 882 502.3289   2.645936 #> 883 537.7283   2.661736 #> 884 747.2634   2.672090 #> 885 508.0633   2.503354 #> 886 506.1790   2.996189 #> 887 500.0038   2.578764 #> 888 500.3266   3.255318 #> 889 506.9474   2.689604 #> 890 512.9018   2.582930 #> 891 509.8741   2.715024 #> 892 503.0262   2.785427 #> 893 500.5655   2.838918 #> 894 500.0181   2.530297 #> 895 500.7588   2.629255 #> 896 502.2914   2.838929 #> 897 500.0668   2.527918 #> 898 501.6986   3.200533 #> 899 740.4964   3.240717 #> 900 508.9174   2.897445 #> 901 550.5466   2.861378 #> 902 525.1289   3.305105 #> 903 534.6968   2.909695 #> 904 502.9002   2.984861 #> 905 555.4117   2.704230 #> 906 502.8020   2.553295 #> 907 507.6055   2.884372 #> 908 501.1878   3.068138 #> 909 500.1606   2.537450 #> 910 537.1316   3.021375 #> 911 500.6979   2.808017 #> 912 500.3015   2.616520 #> 913 500.0964   2.526291 #> 914 643.6930   2.992071 #> 915 950.0081   2.518713 #> 916 502.4768   2.739265 #> 917 500.2624   2.629589 #> 918 611.8132   2.678494 #> 919 500.0991   2.662521 #> 920 503.8936   3.164173"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
