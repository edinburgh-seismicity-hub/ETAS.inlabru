[{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  ggplot() +   geom_point(data = samp.etas.list[[1]], aes(x = ts, y = magnitudes), color = \"red\") +   geom_point(data = samp.etas.list[[2]], aes(x = ts, y = magnitudes), color = \"green\") +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") combined.M7.ETAS.cat <- bind_rows(samp.etas.list)  combined.M7.ETAS.cat <- bind_rows(samp.etas.list) combined.M7.ETAS.cat <- combined.M7.ETAS.cat[order(combined.M7.ETAS.cat$ts), ]  combined.M7.ETAS.cat$ID <- seq(1, length(combined.M7.ETAS.cat$ts))  ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase num.threads if you have more cores on your computer INLA::inla.setOption(num.threads = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.4587522  #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.4359918  #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  15.8045 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 93.25%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 129.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1810% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 82.59%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 2810% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 117.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1610% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 108.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 638% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 111.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 355% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 331% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 238% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 214% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 193% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 177% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 162% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 149% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.6%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 138% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 128% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 119% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 110% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 103% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 95.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 89.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 83.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 77.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 72.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 68.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 64% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 60% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 56.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 52.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 49.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 46.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 43.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 41.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 38.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 36.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 34.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 32.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 30.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 27.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 40 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 25.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 41 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 24.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 42 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 22.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 43 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 44 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 20.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 45 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 46 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 47 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 48 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 49 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 50 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 51 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 52 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 53 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 54 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 55 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 56 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 57 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.52% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 58 [max:100] #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  15.22034 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.8%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.79% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 12 [max:100] #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 2 rows containing missing values (`geom_line()`). plt #> NULL  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 2 rows containing missing values (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1299] #> 8 8 (1-3,1-1) arrange text[GRID.text.1300]  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exists, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p \\geq 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Tutorial on real data","text":"bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter rate b. distribution mean \\texttt{}/\\texttt{b} variance \\(\\texttt{}/\\texttt{b}^2\\). unit_t(X, , b) Uniform distribution b. exp_t(X, r) Exponential distribution rate r. loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm m standard deviation logarithm s. code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. subset (see data-raw/horus.R subset created) information Horus catalogue can loaded using data reports earthquake longitude (lon) latitude (lat) epicentre, moment magnitude (M), time string (time_string), depth kilometres (depth), catalogue event IDs. focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load ISIDE catalogue data(horus, package = \"ETAS.inlabru\") head(horus) #>       lon     lat    M            time_string depth catalog_id event_id #> 1 15.3000 39.3000 6.34 1960-01-03T20:19:34.00   290         -1       NA #> 2 13.1667 43.1333 3.94 1960-01-04T09:20:00.00     0         -1       NA #> 3 12.7000 46.4833 4.69 1960-01-06T15:17:34.00     4         -1       NA #> 4 12.7000 46.4667 4.14 1960-01-06T15:20:53.00     0         -1       NA #> 5 12.7500 46.4333 3.00 1960-01-06T15:31:00.00     0         -1       NA #> 6 12.7500 46.4333 3.00 1960-01-06T15:45:00.00     0         -1       NA # transform time string in Date object time_string <- gsub(\"T\", \" \", horus$time_string) horus$time_date <- as.POSIXct(time_string,   format = \"%Y-%m-%d %H:%M:%OS\" )  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. num.threads: number cores used parallel. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created .","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(difftime(aquila$time_date, start.date,     units = \"days\"   )),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   num.threads = 2, # Increase this if your computer has multiple cores   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  2.931934"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 )  head(post.samp) #>          mu          K    alpha          c        p #> 1 0.2990805 0.13949969 2.424028 0.06946489 1.185944 #> 2 0.2860917 0.09195097 2.433082 0.11427121 1.221701 #> 3 0.3402980 0.13290160 2.440989 0.06545688 1.168804 #> 4 0.3000236 0.17097384 2.383898 0.06833063 1.188854 #> 5 0.2559626 0.16456810 2.385152 0.06995065 1.193914 #> 6 0.2654373 0.17591492 2.414959 0.05521604 1.178278 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = 3 ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 30 rows containing non-finite values (`stat_bin()`). #> Warning: Removed 2 rows containing missing values (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL,   ncore = 1 ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     288     112     176 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.6931157"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) head(post.samp) #>          mu          K    alpha         c        p #> 1 0.3316100 0.03898659 2.588446 0.2637332 1.355350 #> 2 0.3675501 0.06831447 2.505385 0.1377705 1.271529 #> 3 0.3131074 0.06605145 2.601663 0.1477429 1.340965 #> 4 0.3130315 0.05701342 2.444286 0.3259138 1.468869 #> 5 0.3818966 0.04848770 2.488995 0.2778387 1.363517 #> 6 0.3464415 0.04765742 2.491279 0.3348449 1.443173"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>          N N.bkg N.after #> first  288   112     176 #> second 408   104     304 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.9643335 input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Dr Francesco Serafini Dr Mark Naylor , School GeoSciences, University Edinburgh Prof Finn Lindgren , School Mathematics, University Edinburgh Dr Kirsty Bayliss , Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"study funded yhe Real-Time Earthquake Risk Reduction Resilient Europe RISE project , received funding European Union’s Horizon 2020 Research Innovation Program grant Agreement 821115. Naylor additionally funded NSFGEO-NERC grant NE/R000794/1. Bayliss funded EPSRC Studentship.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package Implement time varying incompleteness model Farnaz Kamranzad","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@newcastle.ac.uk (ORCID) Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore number cores used generate synthetic catalogues parallel.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x558e5b45da80> #> <environment: 0x558e5b4602d0> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x558e5b45d7a8> #> <environment: 0x558e5b4602d0> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x558e5b45d4d0> #> <environment: 0x558e5b4602d0> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x558e5b45d1f8> #> <environment: 0x558e5b4602d0> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x558e5b45cf20> #> <environment: 0x558e5b4602d0> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   ncore = 1 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. ncore Integer number compute cores use.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"data.frame temporal catalogue columns [t_i, M_i, gen_i] , t_i times,  M_i magnitudes, gen_i includes information generation number","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>            ts magnitudes gen #> 1   892.52151   2.722588   1 #> 2   641.55486   2.658271   1 #> 3   761.15332   2.517680   1 #> 4   786.04675   2.706942   1 #> 5   480.47084   2.622697   1 #> 6   632.54054   2.926609   1 #> 7   287.89245   3.566084   1 #> 8   891.79408   2.521849   1 #> 9   914.82829   2.553297   1 #> 10  119.57158   2.693237   1 #> 11  258.63889   2.556768   1 #> 12  491.88881   2.528745   1 #> 13  630.77556   3.188770   1 #> 14  900.69568   3.536044   1 #> 15  905.99149   2.589230   1 #> 16  111.58559   2.975664   1 #> 17  727.30911   2.537796   1 #> 18  832.26970   2.718985   1 #> 19  206.62329   2.802040   1 #> 20  967.18266   2.744228   1 #> 21   20.79011   3.083607   1 #> 22  463.71882   3.612826   1 #> 23   92.95467   2.840777   1 #> 24   47.92166   2.852648   1 #> 25  220.97606   2.561492   1 #> 26   46.08784   3.231706   1 #> 27  900.39582   2.888307   1 #> 28  772.64984   3.011347   1 #> 29  130.37670   2.713742   1 #> 30  553.02004   3.102044   1 #> 31  802.86596   2.960415   1 #> 32  704.09467   2.857630   1 #> 33  575.46363   2.756439   1 #> 34  737.05538   3.366221   1 #> 35  601.12088   2.739153   1 #> 36  907.65688   3.223590   1 #> 37  331.92876   2.505924   1 #> 38  865.67260   3.204607   1 #> 39  681.15022   2.940547   1 #> 40   36.72376   2.565665   1 #> 41  488.66386   2.686610   1 #> 42  322.22964   2.514584   1 #> 43  144.02282   3.209102   1 #> 44   16.87490   2.684534   1 #> 45  899.96981   2.547318   1 #> 46  595.19951   2.594906   1 #> 47  870.67738   2.563092   1 #> 48  100.94007   5.189346   1 #> 49  251.07467   2.849927   1 #> 50  549.06552   3.125406   1 #> 51  248.89249   2.711640   1 #> 52  229.96213   2.785453   1 #> 53  348.73512   2.696354   1 #> 54  100.97913   2.679815   1 #> 55  180.55089   3.005454   1 #> 56  568.91392   2.873186   1 #> 57  985.77372   3.084625   1 #> 58  596.24649   2.595138   1 #> 59  653.56883   2.820348   1 #> 60   70.46307   2.839738   1 #> 61  112.30147   2.534389   1 #> 62  730.91632   2.817257   1 #> 63  238.84411   2.661061   1 #> 64  109.81728   2.656202   1 #> 65  650.45204   2.619871   1 #> 66  664.05137   2.629155   1 #> 67  271.61577   3.056907   1 #> 68  913.09084   2.577860   1 #> 69  414.85641   2.663521   1 #> 70  566.70958   2.660524   1 #> 71  185.24190   2.809423   1 #> 72  467.21152   2.546484   1 #> 73  781.47271   2.918459   1 #> 74  549.82802   2.653066   1 #> 75  230.09236   2.924925   1 #> 76  592.95870   3.449879   1 #> 77   62.10628   2.550948   1 #> 78   91.26436   3.296407   1 #> 79  273.95830   2.708079   1 #> 80   79.74095   2.914772   1 #> 81  112.44424   2.736604   1 #> 82  353.59215   3.577665   1 #> 83  166.93244   2.622644   1 #> 84  107.04709   2.860498   1 #> 85  928.51808   2.640116   1 #> 86  132.45377   2.700587   1 #> 87   52.00817   2.647718   1 #> 88  710.22430   2.557740   1 #> 89  789.09857   2.801687   1 #> 90  174.05949   3.433274   1 #> 91  874.32877   2.638467   1 #> 92  477.69999   3.386546   1 #> 93  959.96061   2.696830   1 #> 94  274.73722   2.662158   1 #> 95  245.68579   2.692642   1 #> 96  534.32966   2.643852   1 #> 97  105.29618   3.831274   1 #> 98  258.37375   2.893680   1 #> 99  419.64700   2.590725   1 #> 100 700.20729   2.535240   1 #> 101 170.40719   2.607660   1 #> 102 646.61179   2.740913   1 #> 103 596.76066   2.647878   1 #> 104 413.07885   2.571027   1 #> 105 446.12408   2.656504   1 #> 106 498.62266   2.835352   1 #> 107 100.89979   2.651148   1 #> 108 719.77105   2.599230   1 #> 109 126.41682   2.900627   1 #> 110  35.94822   2.564956   1 #> 111 788.86405   2.525717   1 #> 112 994.55917   2.650985   1 #>  #> [[2]] #>           ts magnitudes gen #> 1  850.76317   2.537717   2 #> 2  705.90783   3.834804   2 #> 3  298.63017   2.577314   2 #> 4  305.50164   2.808944   2 #> 5  901.30621   3.443362   2 #> 6  465.94076   3.164353   2 #> 7   46.60681   3.905987   2 #> 8   46.48221   2.704396   2 #> 9   95.91392   2.536645   2 #> 10 831.18673   2.829009   2 #> 11 131.64499   3.033279   2 #> 12 101.11856   3.169877   2 #> 13 101.12419   3.542126   2 #> 14 135.18497   2.726947   2 #> 15 100.98378   2.670756   2 #> 16 101.05439   2.857241   2 #> 17 118.15354   2.530572   2 #> 18 128.02602   3.361324   2 #> 19 704.46562   2.707957   2 #> 20 101.30442   2.508943   2 #> 21 100.98575   2.772383   2 #> 22 101.09383   2.650745   2 #> 23 101.02592   2.647255   2 #> 24 112.97996   3.802342   2 #> 25 734.24886   3.637798   2 #> 26 101.01948   3.084266   2 #> 27 104.41083   3.213671   2 #> 28 201.54409   2.564229   2 #> 29 101.07401   4.150900   2 #> 30 101.30422   4.304493   2 #> 31 101.72700   2.598808   2 #> 32 152.61161   2.678136   2 #> 33 105.23984   3.865896   2 #> 34 186.02741   2.917461   2 #> 35 111.38004   2.852798   2 #> 36 262.85717   2.686047   2 #> 37 101.29482   2.971206   2 #> 38 366.86003   3.053002   2 #> 39 101.71636   3.012463   2 #> 40 105.72411   3.235328   2 #> 41 155.48350   2.526864   2 #> 42 115.23933   2.518045   2 #> 43 106.30445   3.725888   2 #> 44 101.78528   2.802783   2 #> 45 557.05535   3.467761   2 #> 46 769.53523   2.513199   2 #> 47 986.21362   2.929597   2 #> 48  70.52918   2.583735   2 #>  #> [[3]] #>          ts magnitudes gen #> 1  706.5538   3.078662   3 #> 2  706.4136   2.797743   3 #> 3  128.2322   4.478404   3 #> 4  113.5681   2.771792   3 #> 5  736.5479   2.919619   3 #> 6  734.3570   2.552526   3 #> 7  973.9848   3.160544   3 #> 8  118.0818   2.602124   3 #> 9  101.2734   2.595413   3 #> 10 101.3247   2.528968   3 #> 11 103.0214   2.518100   3 #> 12 426.6916   3.544588   3 #> 13 165.6992   2.872665   3 #> 14 478.8457   2.814898   3 #> 15 101.3646   2.946652   3 #> 16 101.3161   2.563137   3 #> 17 210.4456   2.933312   3 #> 18 122.0440   3.433445   3 #> 19 102.3128   2.715972   3 #> 20 101.5096   2.552935   3 #> 21 101.3552   2.540797   3 #> 22 106.3814   2.532720   3 #> 23 105.3507   2.983932   3 #> 24 374.4661   2.629605   3 #> 25 106.0408   2.987158   3 #>  #> [[4]] #>          ts magnitudes gen #> 1  711.9388   3.233551   4 #> 2  141.5387   2.597665   4 #> 3  144.2651   2.587154   4 #> 4  128.6213   3.147269   4 #> 5  128.3283   2.647599   4 #> 6  128.2939   2.601531   4 #> 7  129.9317   4.479093   4 #> 8  149.7995   3.025130   4 #> 9  533.4240   2.641827   4 #> 10 426.8554   2.957170   4 #> 11 427.7294   2.587173   4 #> 12 122.0668   2.990294   4 #>  #> [[5]] #>         ts magnitudes gen #> 1 138.3344   3.158933   5 #> 2 135.2043   3.107219   5 #> 3 317.3771   2.549509   5 #> 4 183.6567   2.664461   5 #> 5 130.4315   3.199143   5 #> 6 494.3423   2.783521   5 #>  #> [[6]] #>         ts magnitudes gen #> 1 135.4100   2.907535   6 #> 2 138.0800   3.050849   6 #> 3 188.0551   2.555766   6 #> 4 131.8436   2.545981   6 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>            ts magnitudes gen #> 1   501.05304   3.320415   0 #> 2   500.03005   3.290134   0 #> 3   523.77035   2.570041   0 #> 4   500.15522   2.866142   0 #> 5   500.92460   2.782274   0 #> 6   884.46654   3.000421   0 #> 7   507.61639   3.284120   0 #> 8   579.81129   2.657041   0 #> 9   734.25065   2.837671   0 #> 10  763.44404   2.721911   0 #> 11  500.30768   3.033114   0 #> 12  530.05847   2.505026   0 #> 13  500.55291   4.023795   0 #> 14  500.27308   2.794824   0 #> 15  899.73401   3.383529   0 #> 16  506.56571   2.898801   0 #> 17  506.30164   2.897755   0 #> 18  503.69442   3.223384   0 #> 19  511.69074   2.914701   0 #> 20  500.13893   2.704462   0 #> 21  502.33108   2.540359   0 #> 22  620.04547   3.635814   0 #> 23  501.61424   3.757877   0 #> 24  524.38550   2.755524   0 #> 25  558.04703   2.644220   0 #> 26  525.50455   2.612071   0 #> 27  500.36142   2.582127   0 #> 28  501.28903   2.984530   0 #> 29  594.06561   2.773444   0 #> 30  525.84840   2.731555   0 #> 31  500.69229   2.673626   0 #> 32  500.42579   2.670586   0 #> 33  500.04238   3.036687   0 #> 34  594.91828   3.785006   0 #> 35  510.98488   3.467200   0 #> 36  560.37274   4.479342   0 #> 37  501.40623   2.901668   0 #> 38  504.79270   2.828598   0 #> 39  500.19709   2.837874   0 #> 40  500.23505   2.960310   0 #> 41  500.61351   2.504939   0 #> 42  502.48954   3.380389   0 #> 43  500.24795   3.040811   0 #> 44  500.32458   2.914652   0 #> 45  501.52395   2.683782   0 #> 46  500.06704   2.504904   0 #> 47  500.03222   4.054355   0 #> 48  500.30455   2.760632   0 #> 49  575.01675   2.591934   0 #> 50  519.42539   3.167887   0 #> 51  500.06278   2.992998   0 #> 52  796.49031   2.594349   0 #> 53  500.24439   2.527816   0 #> 54  554.66607   2.586564   0 #> 55  823.48777   2.622270   0 #> 56  506.17281   2.757529   0 #> 57  603.02311   3.419307   0 #> 58  908.02766   2.746410   0 #> 59  501.17703   4.706876   0 #> 60  504.95145   3.372900   0 #> 61  502.21455   3.157290   0 #> 62  501.04344   3.161865   0 #> 63  604.16833   2.507439   0 #> 64  500.00559   3.362466   0 #> 65  729.51333   2.869924   0 #> 66  505.94292   2.687999   0 #> 67  501.37746   2.804105   0 #> 68  500.00490   2.592694   0 #> 69  586.14192   2.971172   0 #> 70  517.72327   2.889540   0 #> 71  501.55586   2.751026   0 #> 72  875.18476   2.818994   0 #> 73  731.62078   2.579341   0 #> 74  515.45491   2.819004   0 #> 75  520.94057   3.915372   0 #> 76  500.15645   2.506922   0 #> 77  529.36283   3.050248   0 #> 78  508.61854   2.616569   0 #> 79  544.72203   2.635945   0 #> 80  500.12189   2.691917   0 #> 81  500.04975   2.814600   0 #> 82  503.51721   3.174190   0 #> 83  502.59509   2.776459   0 #> 84  511.74086   2.967046   0 #> 85  500.42119   3.011373   0 #> 86  608.33596   2.895942   0 #> 87  519.75491   2.589913   0 #> 88  512.39444   2.671847   0 #> 89  502.70558   2.933737   0 #> 90  534.24844   3.177787   0 #> 91  506.17229   2.815415   0 #> 92  500.00993   3.044594   0 #> 93  500.15095   3.729608   0 #> 94  532.56609   2.834187   0 #> 95  500.46866   2.560286   0 #> 96  500.46305   2.808803   0 #> 97  500.34170   2.600120   0 #> 98  500.17802   2.911614   0 #> 99  500.05254   2.569021   0 #> 100 549.07141   2.776269   0 #> 101 509.52329   2.671715   0 #> 102 503.96878   4.005022   0 #> 103 505.12260   3.995411   0 #> 104 516.62696   3.164733   0 #> 105 500.14809   2.745730   0 #> 106 516.58544   2.531177   0 #> 107 535.51065   2.797293   0 #> 108 500.88226   2.601767   0 #> 109 502.45133   3.424888   0 #> 110 566.59461   3.435750   0 #> 111 508.02452   4.320809   0 #> 112 500.23283   2.573127   0 #> 113 507.80123   2.856384   0 #> 114 728.55126   2.727852   0 #> 115 501.56344   3.084147   0 #> 116 506.12023   2.878228   0 #> 117 580.11601   3.266120   0 #> 118 579.44373   2.580023   0 #> 119 641.60798   2.752022   0 #> 120 570.43083   3.330905   0 #> 121 509.85269   2.804086   0 #> 122 868.66002   2.910447   0 #> 123 500.58257   2.764300   0 #> 124 700.80758   2.747391   0 #> 125 507.35881   4.922081   0 #> 126 522.05716   2.692186   0 #> 127 500.92731   2.773566   0 #> 128 501.49029   2.542640   0 #> 129 500.54704   3.180759   0 #> 130 613.94278   2.841463   0 #> 131 519.41155   4.968931   0 #> 132 606.93910   3.592486   0 #> 133 500.46054   2.695879   0 #> 134 500.02879   2.763864   0 #> 135 506.85875   2.881133   0 #> 136 502.07330   2.742179   0 #> 137 503.83174   2.621859   0 #> 138 500.19511   2.521283   0 #> 139 541.19945   2.543725   0 #> 140 500.23569   2.844725   0 #> 141 500.22127   2.970377   0 #> 142 500.56314   3.540103   0 #> 143 526.71289   2.992496   0 #> 144 598.16624   2.716692   0 #> 145 500.56281   3.169033   0 #> 146 500.03932   2.539131   0 #> 147 586.41106   3.275856   0 #> 148 500.05030   3.817869   0 #> 149 505.11981   4.461798   0 #> 150 531.17313   3.130694   0 #> 151 503.35839   2.547251   0 #> 152 881.10086   2.964443   0 #> 153 500.32579   3.001357   0 #> 154 500.37449   3.820022   0 #> 155 525.16167   2.594550   0 #> 156 500.00827   2.681245   0 #> 157 501.13238   3.897012   0 #> 158 500.28192   2.745888   0 #> 159 556.46593   2.543072   0 #> 160 503.84800   3.331966   0 #> 161 500.26671   2.651390   0 #> 162 500.44913   2.819386   0 #> 163 500.14752   3.381004   0 #> 164 500.63217   3.104789   0 #> 165 501.67350   2.731876   0 #> 166 501.03734   3.871751   0 #> 167 500.02591   3.225558   0 #> 168 544.77022   4.001168   0 #> 169 509.76780   2.768205   0 #> 170 500.11424   3.009410   0 #> 171 500.00921   2.763048   0 #> 172 942.58476   2.764687   0 #> 173 500.97034   2.516503   0 #> 174 504.96216   2.615844   0 #> 175 502.94647   2.682909   0 #> 176 505.50795   2.534108   0 #> 177 500.20707   3.009011   0 #> 178 500.12830   2.625052   0 #> 179 515.90219   2.881933   0 #> 180 728.47662   2.735084   0 #> 181 500.26902   2.912057   0 #> 182 500.03531   2.853604   0 #> 183 519.25963   2.562004   0 #> 184 504.40103   2.630029   0 #> 185 593.39473   2.923925   0 #> 186 549.66653   2.579453   0 #> 187 500.07106   2.543392   0 #> 188 500.11315   2.512682   0 #> 189 503.03968   2.595932   0 #> 190 504.25859   2.918988   0 #> 191 500.43518   3.219952   0 #> 192 503.82641   2.583855   0 #> 193 500.53483   2.824431   0 #> 194 500.01531   2.642456   0 #> 195 500.66749   2.901023   0 #> 196 500.00579   2.550361   0 #> 197 500.04007   2.798855   0 #> 198 500.07466   3.210962   0 #> 199 500.11771   2.514593   0 #> 200 920.55624   2.689207   0 #> 201 506.27159   2.762711   0 #> 202 500.57927   2.542715   0 #> 203 513.35654   2.549426   0 #> 204 501.63917   2.900460   0 #> 205 586.69391   3.064576   0 #> 206 520.84284   2.934217   0 #> 207 502.48235   2.507370   0 #> 208 516.22924   3.099085   0 #> 209 624.70662   3.317384   0 #> 210 500.32246   2.908221   0 #> 211 737.94227   3.358386   0 #> 212 500.91180   3.162799   0 #> 213 502.92260   3.332906   0 #> 214 847.30291   2.636774   0 #> 215 988.24803   2.668717   0 #> 216 973.87830   4.345296   0 #> 217 502.81013   2.742139   0 #> 218 508.03329   2.586653   0 #> 219 500.13045   2.928602   0 #> 220 500.44667   3.345264   0 #> 221 745.32800   2.957391   0 #> 222 516.55470   3.968108   0 #> 223 975.82944   3.196127   0 #> 224 500.18307   2.615166   0 #> 225 566.01638   2.851997   0 #> 226 500.23446   3.149155   0 #> 227 500.42597   4.799161   0 #> 228 510.09022   2.669815   0 #> 229 500.07064   2.941920   0 #> 230 576.62398   2.841382   0 #> 231 507.32877   3.830956   0 #> 232 832.95826   3.055607   0 #> 233 522.54528   2.589596   0 #> 234 500.17712   3.420391   0 #> 235 500.26538   2.669248   0 #> 236 764.41686   3.007390   0 #> 237 500.01281   3.024857   0 #> 238 500.66576   2.528642   0 #> 239 573.66846   2.624534   0 #> 240 500.00898   2.634437   0 #> 241 500.24558   4.100717   0 #> 242 503.20388   2.763355   0 #> 243 569.07436   4.081700   0 #> 244 712.11416   2.925508   0 #> 245 501.25469   2.559450   0 #> 246 604.28843   3.063496   0 #> 247 500.01338   4.084975   0 #> 248 500.11738   2.809573   0 #> 249 538.04899   3.012101   0 #> 250 504.47386   3.192176   0 #> 251 532.07769   2.868115   0 #> 252 503.13148   2.565418   0 #> 253 528.95467   2.543345   0 #> 254 502.24802   3.106451   0 #> 255 501.31462   2.503986   0 #> 256 501.91979   2.701884   0 #> 257 500.52845   2.877612   0 #> 258 522.88011   2.713865   0 #> 259 503.81174   4.258076   0 #> 260 500.05027   3.197188   0 #> 261 507.73339   2.820395   0 #> 262 656.37337   2.857971   0 #> 263 504.29005   2.906584   0 #> 264 500.01029   2.635161   0 #> 265 501.54979   2.518471   0 #> 266 507.29165   3.276836   0 #> 267 500.01485   2.837470   0 #> 268 553.53218   2.533311   0 #> 269 501.87724   3.679804   0 #> 270 501.45502   3.474169   0 #> 271 556.83911   2.815244   0 #> 272 500.05687   3.373966   0 #> 273 516.18109   2.618536   0 #> 274 501.54860   2.854951   0 #> 275 505.65089   2.564780   0 #> 276 500.58208   2.577748   0 #> 277 597.48084   4.490427   0 #> 278 973.87185   2.773195   0 #> 279 579.96997   2.583157   0 #> 280 500.17182   2.824796   0 #> 281 500.15548   3.036867   0 #> 282 500.90101   2.592544   0 #> 283 500.60569   2.635744   0 #> 284 502.94573   2.824023   0 #> 285 502.67149   2.926224   0 #> 286 670.08899   2.704703   0 #> 287 500.48598   2.837643   0 #> 288 501.59434   3.209181   0 #> 289 504.90772   2.729693   0 #> 290 502.71075   3.701908   0 #> 291 500.59431   3.236306   0 #> 292 500.31378   2.900320   0 #> 293 505.45696   2.525168   0 #> 294 500.53665   3.323681   0 #> 295 501.01938   2.984263   0 #> 296 840.96640   2.757586   0 #> 297 640.87176   2.952375   0 #> 298 500.19748   2.792874   0 #> 299 627.64304   2.560465   0 #> 300 507.35679   2.652987   0 #> 301 500.22853   3.302696   0 #> 302 500.98950   3.047435   0 #> 303 506.80393   2.548753   0 #> 304 787.28758   3.026907   0 #> 305 503.36798   2.586998   0 #> 306 538.96993   2.721994   0 #> 307 500.16546   3.286922   0 #> 308 772.28263   2.773819   0 #> 309 513.77953   2.654146   0 #> 310 501.69548   3.231543   0 #> 311 516.54868   2.544516   0 #> 312 500.11215   2.937587   0 #> 313 500.53965   2.665360   0 #> 314 500.47485   2.739081   0 #> 315 652.06259   2.616279   0 #> 316 500.14599   2.778457   0 #> 317 512.11535   3.131151   0 #> 318 503.99268   2.813109   0 #> 319 556.69580   2.763539   0 #> 320 507.09238   3.161373   0 #> 321 612.11089   3.510302   0 #> 322 506.06412   3.630638   0 #> 323 999.82239   2.616698   0 #> 324 500.60873   2.505923   0 #> 325 500.76580   2.612771   0 #> 326 598.89394   2.567135   0 #> 327 500.43199   3.244131   0 #> 328 500.82713   2.581359   0 #> 329 623.68258   3.155868   0 #> 330 500.08772   4.522795   0 #> 331 500.21247   2.835557   0 #> 332 505.25919   3.513817   0 #> 333 500.48633   3.052133   0 #> 334 524.59034   2.741807   0 #> 335 501.82198   3.127554   0 #> 336 500.49859   2.952819   0 #> 337 512.91929   2.778302   0 #> 338 500.07208   2.646073   0 #> 339 544.41690   3.095769   0 #> 340 500.39317   3.265505   0 #> 341 500.31465   2.929431   0 #> 342 645.16337   2.942253   0 #> 343 506.96360   4.545103   0 #> 344 500.47043   2.863839   0 #> 345 502.46223   2.803788   0 #> 346 503.34143   2.918507   0 #> 347 500.01890   2.815500   0 #> 348 500.33182   3.341313   0 #> 349 523.96608   2.589636   0 #> 350 596.84195   4.273331   0 #> 351 500.55382   3.042600   0 #> 352 500.15948   2.936957   0 #> 353 727.68182   3.631776   0 #> 354 504.87963   2.799742   0 #> 355 501.90838   2.536653   0 #> 356 500.44686   2.610557   0 #> 357 708.06944   2.940705   0 #> 358 550.32902   3.636139   0 #> 359 510.36953   2.729635   0 #> 360 500.17721   3.280878   0 #> 361 539.81108   3.197099   0 #> 362 501.53041   2.704585   0 #> 363 507.45559   2.783870   0 #> 364 736.42650   2.617996   0 #> 365 501.64032   2.706914   0 #> 366 511.90453   2.874903   0 #> 367 500.25830   2.538700   0 #> 368 500.74548   2.725175   0 #> 369 500.03386   2.523479   0 #> 370 598.44326   2.577526   0 #> 371 561.78085   2.865092   0 #> 372 501.40728   3.244750   0 #> 373 526.54333   2.543529   0 #> 374 500.69556   2.719830   0 #> 375 867.84732   2.717757   0 #> 376 500.44896   2.784541   0 #> 377 500.35179   3.439341   0 #> 378 980.57720   3.727475   0 #> 379 507.74151   2.506410   0 #> 380 500.11756   2.718029   0 #> 381 651.60537   2.735619   0 #> 382 604.17371   3.680362   0 #> 383 500.49572   3.096127   0 #> 384 505.45608   3.148626   0 #> 385 500.03300   2.822165   0 #> 386 500.08081   2.854075   0 #> 387 682.15347   2.688600   0 #> 388 500.46331   2.654977   0 #> 389 503.80434   3.461776   0 #> 390 502.62690   3.139094   0 #> 391 501.34470   2.576139   0 #> 392 840.15947   2.779062   0 #> 393 503.70771   3.090133   0 #> 394 985.88404   2.602492   0 #> 395 500.20347   2.806456   0 #> 396 591.59680   2.584111   0 #> 397 500.11063   2.962934   0 #> 398 500.44344   3.512636   0 #> 399 500.95415   2.673373   0 #> 400 500.08660   2.682165   0 #> 401 500.30192   2.985341   0 #> 402 507.51038   3.758910   0 #> 403 500.25925   2.514848   0 #> 404 503.46776   2.799142   0 #> 405 520.57367   3.234919   0 #> 406 502.96143   2.790925   0 #> 407 500.05680   2.705348   0 #> 408 874.34695   3.627482   0 #> 409 582.83571   2.604727   0 #> 410 506.95982   4.038138   0 #> 411 501.64568   2.555361   0 #> 412 500.13310   2.769751   0 #> 413 500.06364   2.731751   0 #> 414 518.22743   2.683022   0 #> 415 500.01524   2.714664   0 #> 416 547.89190   3.439624   0 #> 417 578.11242   2.551312   0 #> 418 500.02718   2.687897   0 #> 419 500.16879   2.866451   0 #> 420 500.56592   2.704863   0 #> 421 569.53078   4.086149   0 #> 422 565.19682   2.882957   0 #> 423 502.33428   3.087830   0 #> 424 500.24414   2.709371   0 #> 425 684.16393   3.095380   0 #> 426 503.56146   2.569345   0 #> 427 500.07621   2.795709   0 #> 428 502.46117   3.113789   0 #> 429 523.58339   3.606163   0 #> 430 501.08596   2.527641   0 #> 431 505.32104   2.674468   0 #> 432 506.07341   2.592352   0 #> 433 506.22090   3.218293   0 #> 434 505.15224   2.793534   0 #> 435 503.36866   2.598833   0 #> 436 512.70058   2.772800   0 #> 437 509.33061   3.850206   0 #> 438 502.73461   3.120840   0 #> 439 500.50542   2.619452   0 #> 440 500.61099   2.681727   0 #> 441 502.36396   3.094716   0 #> 442 507.37456   2.813340   0 #> 443 500.71872   2.907758   0 #> 444 503.69925   2.729758   0 #> 445 503.34848   2.606116   0 #> 446 932.04249   2.561347   0 #> 447 502.38506   2.957914   0 #> 448 691.76933   2.571258   0 #> 449 859.53997   3.457574   0 #> 450 561.05927   2.789233   0 #> 451 500.07560   2.717338   0 #> 452 500.08646   2.585623   0 #> 453 503.23146   2.841887   0 #> 454 557.39101   2.590774   0 #> 455 500.42130   3.113251   0 #> 456 696.00806   3.832646   0 #> 457 500.64311   2.765623   0 #> 458 503.14419   3.423760   0 #> 459 508.08790   4.004974   0 #> 460 500.29691   2.847783   0 #> 461 539.82247   2.777922   0 #> 462 500.77225   3.228178   0 #> 463 785.61707   3.166647   0 #> 464 580.55084   3.052060   0 #> 465 500.01300   2.714146   0 #> 466 654.56296   2.938829   0 #> 467 500.37622   3.010152   0 #> 468 533.13823   4.509811   0 #> 469 500.37846   3.288591   0 #> 470 500.58357   2.761227   0 #> 471 500.31393   2.713668   0 #> 472 502.71221   2.620152   0 #> 473 506.18043   2.963963   0 #> 474 549.22115   3.448461   0 #> 475 509.22250   3.362492   0 #> 476 518.68893   2.990793   0 #> 477 500.43154   2.693277   0 #> 478 500.60898   2.630112   0 #> 479 761.14988   2.896162   0 #> 480 510.01587   4.006568   0 #> 481 500.41408   2.579226   0 #> 482 500.18498   2.554012   0 #> 483 869.51694   2.814486   0 #> 484 502.18481   3.307866   0 #> 485 500.21675   3.689104   0 #> 486 500.01340   3.590720   0 #> 487 500.49832   2.889326   0 #> 488 500.17422   3.129722   0 #> 489 504.95685   2.506398   0 #> 490 501.02447   2.535220   0 #> 491 503.25906   3.463756   0 #> 492 509.01521   2.773533   0 #> 493 510.97014   2.751588   0 #> 494 500.18833   2.804410   0 #> 495 550.95730   2.861038   0 #> 496 500.00971   3.026753   0 #> 497 525.45507   3.288672   0 #> 498 502.33778   2.835088   0 #> 499 846.34239   2.741328   0 #> 500 500.21927   3.240792   0 #> 501 551.50307   2.854503   0 #> 502 505.40083   3.286676   0 #> 503 511.87080   3.059918   0 #> 504 500.30717   2.688434   0 #> 505 514.58009   2.504294   0 #> 506 501.59238   2.506910   0 #> 507 940.44017   3.555068   0 #> 508 500.04850   2.635406   0 #> 509 500.03712   2.745330   0 #> 510 506.51734   2.622426   0 #> 511 512.95610   3.248399   0 #> 512 500.04331   2.613679   0 #> 513 500.05127   2.550083   0 #> 514 565.61009   2.759483   0 #> 515 520.39626   2.522224   0 #> 516 500.16563   2.763960   0 #> 517 510.80308   2.506825   0 #> 518 500.02339   2.640413   0 #> 519 648.77891   2.714486   0 #> 520 501.98266   2.758359   0 #> 521 780.44697   2.981384   0 #> 522 501.17488   3.253361   0 #> 523 500.25150   3.967890   0 #> 524 500.21987   3.161290   0 #> 525 501.78515   2.715009   0 #> 526 505.73285   2.781003   0 #> 527 501.94894   3.037370   0 #> 528 523.64397   3.408121   0 #> 529 501.28162   2.522483   0 #> 530 501.38195   2.536589   0 #> 531 503.03760   4.250610   0 #> 532 664.27094   3.749188   0 #> 533 500.93557   2.817043   0 #> 534 528.83803   2.519528   0 #> 535 551.02907   2.605900   0 #> 536 546.57693   2.500454   0 #> 537 526.27519   2.651310   0 #> 538 667.82523   2.736304   0 #> 539 500.91493   2.797923   0 #> 540 501.05379   3.083172   0 #> 541 711.61457   2.761504   0 #> 542 519.82068   2.707594   0 #> 543 501.68250   2.764975   0 #> 544 519.19759   3.285648   0 #> 545 510.54104   2.631974   0 #> 546 500.49538   2.559951   0 #> 547 501.47645   3.033826   0 #> 548 692.06172   2.729970   0 #> 549 580.59424   2.520981   0 #> 550 500.47881   2.929395   0 #> 551 501.77311   2.645562   0 #> 552 500.62203   3.418031   0 #> 553 500.01346   2.660625   0 #> 554 501.77499   2.811420   0 #> 555 507.00386   2.556712   0 #> 556 626.65018   2.521546   0 #> 557 534.80477   3.721537   0 #> 558 535.71687   2.788604   0 #> 559 547.21332   2.557827   0 #> 560 501.20268   2.914426   0 #> 561 501.84726   3.135947   0 #> 562 505.02603   3.166062   0 #> 563 501.09159   4.205070   0 #> 564 500.34081   3.144456   0 #> 565 531.33367   3.247581   0 #> 566 502.65475   2.517630   0 #> 567 714.67695   2.950153   0 #> 568 539.41753   2.589297   0 #> 569 501.30576   2.769021   0 #> 570 500.05832   2.593717   0 #> 571 500.43067   3.202269   0 #> 572 578.30734   2.831054   0 #> 573 559.72298   2.851499   0 #> 574 500.33653   2.936975   0 #> 575 504.82963   2.525481   0 #> 576 502.40563   2.616244   0 #> 577 770.59873   2.687348   0 #> 578 535.39223   3.183958   0 #> 579 514.94017   2.603990   0 #> 580 500.17228   3.131577   0 #> 581 550.18691   2.772637   0 #> 582 510.40839   2.813534   0 #> 583 727.30736   3.000748   0 #> 584 697.52930   2.884441   0 #> 585 501.22135   3.292484   0 #> 586 547.10373   2.537785   0 #> 587 500.66267   2.557471   0 #> 588 501.31219   3.091395   0 #> 589 638.22842   3.009972   0 #> 590 906.92922   2.689815   0 #> 591 504.93994   2.686735   0 #> 592 500.07559   4.508267   0 #> 593 500.27545   2.506034   0 #> 594 502.34874   3.591833   0 #> 595 508.13299   2.765997   0 #> 596 500.04600   2.510032   0 #> 597 502.88170   3.003438   0 #> 598 511.25417   2.691322   0 #> 599 548.37402   2.536623   0 #> 600 501.63942   2.877340   0 #> 601 560.64272   2.973209   0 #> 602 507.93688   4.583651   0 #> 603 500.04850   2.800742   0 #> 604 526.28883   3.711914   0 #> 605 797.50100   2.525237   0 #> 606 514.37457   3.017001   0 #> 607 508.02068   3.019770   0 #> 608 563.10708   2.649216   0 #> 609 500.02627   2.608456   0 #> 610 503.70990   3.699642   0 #> 611 523.54897   2.770454   0 #> 612 500.44574   2.765050   0 #> 613 508.28862   2.633126   0 #> 614 500.28020   2.936162   0 #> 615 500.17736   3.090410   0 #> 616 505.93929   4.037445   0 #> 617 500.43123   2.819372   0 #> 618 500.00993   2.931412   0 #> 619 525.81745   2.816369   0 #> 620 500.54112   3.035341   0 #> 621 632.65709   2.816542   0 #> 622 510.96843   2.565287   0 #> 623 500.17280   2.658532   0 #> 624 501.26349   3.432394   0 #> 625 583.79375   2.627690   0 #> 626 601.89424   2.912719   0 #> 627 755.80884   2.641087   0 #> 628 554.06588   2.551931   0 #> 629 526.34696   3.398562   0 #> 630 502.80174   3.151141   0 #> 631 501.58596   3.341419   0 #> 632 500.10562   2.950730   0 #> 633 977.89989   2.821384   0 #> 634 869.40576   2.575527   0 #> 635 508.71072   2.680192   0 #> 636 507.41110   3.195557   0 #> 637 503.70992   3.246458   0 #> 638 501.27051   2.734038   0 #> 639 508.59159   2.580508   0 #> 640 500.08990   2.592824   0 #> 641 503.57863   3.690105   0 #> 642 995.25017   2.890155   0 #> 643 500.18996   2.889141   0 #> 644 500.08280   2.633118   0 #> 645 506.70549   3.354721   0 #> 646 504.95340   3.684413   0 #> 647 511.33994   2.655307   0 #> 648 511.88121   2.529073   0 #> 649 527.75457   2.597692   0 #> 650 772.56064   3.167789   0 #> 651 500.49406   2.826745   0 #> 652 507.12955   2.503340   0 #> 653 500.91007   3.833387   0 #> 654 500.02598   2.872562   0 #> 655 500.57393   3.458814   0 #> 656 584.37132   2.751706   0 #> 657 500.43556   2.577933   0 #> 658 591.75337   2.921540   0 #> 659 500.44716   2.632275   0 #> 660 500.12312   3.277350   0 #> 661 500.04010   2.949449   0 #> 662 502.23595   3.045293   0 #> 663 681.56258   3.089780   0 #> 664 565.67768   2.924394   0 #> 665 501.08504   3.527531   0 #> 666 507.22271   2.972584   0 #> 667 523.52457   2.700135   0 #> 668 533.35669   3.400551   0 #> 669 504.19171   3.356929   0 #> 670 513.28418   2.630460   0 #> 671 603.38589   3.997891   0 #> 672 516.02800   2.604072   0 #> 673 503.35890   2.743286   0 #> 674 500.12664   2.543863   0 #> 675 521.59269   2.813122   0 #> 676 500.01169   2.696837   0 #> 677 532.61218   3.173480   0 #> 678 500.48517   2.686030   0 #> 679 504.78426   3.188517   0 #> 680 501.94964   2.654425   0 #> 681 500.58910   2.644765   0 #> 682 500.15996   2.652467   0 #> 683 503.58067   3.012529   0 #> 684 502.55739   2.922987   0 #> 685 500.21861   3.531564   0 #> 686 506.59566   2.771258   0 #> 687 500.92443   3.059081   0 #> 688 524.93612   2.971693   0 #> 689 504.04891   2.601430   0 #> 690 500.14790   3.128909   0 #> 691 697.86861   2.698882   0 #> 692 500.01818   2.692998   0 #> 693 512.29010   3.451974   0 #> 694 501.38738   2.605074   0 #> 695 510.18902   2.673674   0 #> 696 500.05418   2.655782   0 #> 697 536.25063   2.624921   0 #> 698 500.13309   2.645659   0 #> 699 516.36871   2.668867   0 #> 700 500.02785   2.724561   0 #> 701 500.08223   3.399320   0 #> 702 518.80549   2.698238   0 #> 703 502.57431   2.632284   0 #> 704 500.53921   2.762169   0 #> 705 500.10532   4.593500   0 #> 706 563.01248   2.552570   0 #> 707 503.09614   2.568185   0 #> 708 719.72884   2.971101   0 #> 709 512.68436   2.895825   0 #> 710 500.70337   2.825563   0 #> 711 574.92129   3.586931   0 #> 712 990.14181   2.938203   0 #> 713 543.04411   2.801310   0 #> 714 678.85125   2.785165   0 #> 715 500.27536   2.952812   0 #> 716 500.14858   2.501061   0 #> 717 737.40859   2.646407   0 #> 718 500.78649   3.657586   0 #> 719 527.97629   2.599269   0 #> 720 503.61429   2.638488   0 #> 721 501.74316   2.568720   0 #> 722 531.80230   3.021616   0 #> 723 500.17599   2.613106   0 #> 724 532.87287   2.695966   0 #> 725 511.47073   2.798646   0 #> 726 557.60942   3.117653   0 #> 727 500.28629   2.693924   0 #> 728 502.24198   2.683111   0 #> 729 500.66406   3.717435   0 #> 730 500.43700   3.727940   0 #> 731 503.73743   2.687775   0 #> 732 992.82765   2.704877   0 #> 733 502.66958   2.736792   0 #> 734 515.43672   2.659957   0 #> 735 500.76040   2.675969   0 #> 736 503.66942   2.825898   0 #> 737 500.57931   3.385329   0 #> 738 500.15061   2.584319   0 #> 739 734.46564   2.737560   0 #> 740 531.89928   2.631797   0 #> 741 500.14219   2.999166   0 #> 742 514.58852   2.693988   0 #> 743 500.54029   2.967139   0 #> 744 531.08453   3.332518   0 #> 745 505.20938   3.841819   0 #> 746 501.08525   2.854118   0 #> 747 500.03542   2.667751   0 #> 748 522.59603   2.906532   0 #> 749 500.00184   2.580598   0 #> 750 500.64088   2.608517   0 #> 751 504.18903   3.549134   0 #> 752 536.38904   2.675184   0 #> 753 501.31568   3.179302   0 #> 754 501.79223   3.167502   0 #> 755 839.33165   2.954224   0 #> 756 585.14082   3.364964   0 #> 757 500.07710   2.749421   0 #> 758 528.58775   3.945853   0 #> 759 700.84870   2.789829   0 #> 760 500.65385   2.735578   0 #> 761 711.49931   3.520269   0 #> 762 500.02370   2.581254   0 #> 763 500.28072   2.657250   0 #> 764 513.43724   3.792953   0 #> 765 502.84042   2.625122   0 #> 766 605.00679   2.559568   0 #> 767 500.53462   3.920174   0 #> 768 500.22476   2.679733   0 #> 769 500.33223   2.581884   0 #> 770 500.14092   2.654858   0 #> 771 500.49834   2.796983   0 #> 772 500.92121   2.515636   0 #> 773 502.39487   2.576220   0 #> 774 704.28692   3.023605   0 #> 775 508.91599   2.693834   0 #> 776 517.68220   2.596664   0 #> 777 612.38976   2.879474   0 #> 778 502.45954   2.613204   0 #> 779 500.12590   3.014042   0 #> 780 500.16058   2.621517   0 #> 781 701.24709   2.742303   0 #> 782 714.74241   2.808958   0 #> 783 500.14633   3.096562   0 #> 784 502.50676   2.775318   0 #> 785 500.03117   2.735490   0 #> 786 500.12901   2.829212   0 #> 787 501.59415   2.686130   0 #> 788 601.46002   2.656445   0 #> 789 663.81334   2.610637   0 #> 790 720.81865   2.592243   0 #> 791 503.12476   2.633466   0 #> 792 500.00786   3.016539   0 #> 793 500.06997   2.962216   0 #> 794 816.50924   2.889765   0 #> 795 507.79595   3.122513   0 #> 796 500.30707   2.653607   0 #> 797 507.86147   2.503683   0 #> 798 514.87852   2.513366   0 #> 799 502.49359   2.552350   0 #> 800 500.69505   2.501021   0 #> 801 500.15028   2.552412   0 #> 802 724.85760   2.585632   0 #> 803 500.71600   2.893289   0 #> 804 500.08579   2.610291   0 #> 805 503.38584   2.991697   0 #> 806 549.33099   3.199562   0 #> 807 555.56398   2.890353   0 #> 808 503.15186   2.759593   0 #> 809 511.85114   2.625413   0 #> 810 500.94624   2.760728   0 #> 811 500.78641   2.646701   0 #> 812 718.68768   2.640763   0 #> 813 502.40185   2.731818   0 #> 814 500.15374   2.776271   0 #> 815 500.13939   2.917491   0 #> 816 507.24321   3.041693   0 #> 817 500.11464   2.521741   0 #> 818 500.07533   2.532830   0 #> 819 512.74720   3.214774   0 #> 820 594.28317   2.861489   0 #> 821 505.16764   2.783047   0 #> 822 520.72985   3.128199   0 #> 823 500.27862   3.263655   0 #> 824 504.64593   2.735365   0 #> 825 500.11648   3.586651   0 #> 826 500.21553   2.652552   0 #> 827 500.00962   2.651461   0 #> 828 503.40741   2.617033   0 #> 829 550.36331   2.636484   0 #> 830 500.05323   2.837139   0 #> 831 500.04911   2.619842   0 #> 832 500.01281   3.166498   0 #> 833 501.98012   2.834342   0 #> 834 501.65645   2.815270   0 #> 835 500.26134   2.597535   0 #> 836 570.04731   2.927297   0 #> 837 524.78103   2.532465   0 #> 838 500.86606   3.075479   0 #> 839 651.24314   2.772138   0 #> 840 500.46557   3.201099   0 #> 841 502.96140   2.918119   0 #> 842 664.37698   2.613091   0 #> 843 501.27260   2.909026   0 #> 844 500.21050   2.876127   0 #> 845 646.66032   3.239446   0 #> 846 500.22510   2.726188   0 #> 847 501.85772   2.635808   0 #> 848 562.64151   3.110822   0 #> 849 505.58558   2.701802   0 #> 850 500.22930   3.048425   0 #> 851 500.39306   2.835537   0 #> 852 501.63703   2.714028   0 #> 853 500.07869   2.630560   0 #> 854 930.57054   2.869518   0 #> 855 636.08030   4.629996   0 #> 856 501.47282   3.215959   0 #> 857 500.01260   3.696327   0 #> 858 646.97426   2.506305   0 #> 859 500.01855   2.929441   0 #> 860 500.66221   3.235008   0 #> 861 500.35233   5.846209   0 #> 862 635.95200   2.527385   0 #> 863 501.46529   3.070669   0 #> 864 500.65682   2.870213   0 #> 865 521.98330   3.075753   0 #> 866 500.25462   2.691709   0 #> 867 500.11999   2.808645   0 #> 868 501.23826   3.656470   0 #> 869 656.57207   2.642851   0 #> 870 500.63599   3.186741   0 #> 871 593.42024   2.850643   0 #> 872 500.88137   2.960077   0 #> 873 552.19672   2.688718   0 #> 874 516.20923   3.690075   0 #> 875 503.93501   2.535193   0 #> 876 500.01005   3.116174   0 #> 877 500.08595   2.909219   0 #> 878 500.02485   2.618371   0 #> 879 537.14085   2.854615   0 #> 880 626.31494   3.740003   0 #> 881 799.31412   2.685643   0 #> 882 713.33064   3.155117   0 #> 883 358.75350   2.780999   1 #> 884 540.04383   2.692322   1 #> 885  44.91534   3.127280   1 #> 886 775.37001   3.418429   1 #> 887 426.60668   2.676730   1 #> 888 151.42442   2.719512   1 #> 889  52.55908   2.554269   1 #> 890 772.78232   2.687712   1 #> 891 200.71845   2.577870   1 #> 892 510.39541   4.205295   1 #> 893 635.31149   3.386050   1 #> 894 277.75108   3.138539   1 #> 895 974.44503   3.630149   1 #> 896 509.83182   2.815929   1 #> 897 570.49619   2.883316   1 #> 898 295.26819   2.585603   1 #> 899 629.23303   2.520881   1 #> 900 225.46760   2.674377   1 #> 901 835.20483   2.632700   1 #> 902 362.89860   2.793300   1 #> 903 991.58883   3.583119   1 #> 904 924.78040   2.698008   1 #> 905 417.87525   2.846614   1 #> 906 501.91682   2.592599   1 #> 907 448.55006   3.037409   1 #> 908 410.00670   3.181161   1 #> 909 931.77112   2.532581   1 #> 910 868.80534   3.131412   1 #> 911 279.90599   2.665215   1 #> 912 164.27461   2.744395   1 #> 913 301.20401   2.645033   1 #> 914 892.62243   3.133909   1 #> 915 594.92892   2.616404   1 #> 916 172.95905   2.502558   1 #> 917 398.83268   2.687742   1 #> 918 723.91030   2.585350   1 #> 919 469.62610   2.935670   1 #> 920 482.97070   3.570560   1 #> 921 824.12129   2.738094   1 #> 922  38.90852   2.505839   1 #> 923 383.56501   3.249530   1 #> 924 918.77999   2.789483   1 #> 925 370.75756   2.574873   1 #> 926 870.17611   2.557846   1 #> 927 184.71819   2.615320   1 #> 928  89.09874   2.994526   1 #> 929 674.93477   2.757696   1 #> 930 341.77817   2.843735   1 #> 931 470.24914   2.550086   1 #> 932 212.37431   3.030120   1 #> 933 682.51966   4.072291   1 #> 934 966.88326   2.585903   1 #> 935 945.27336   3.145631   1 #> 936 329.84306   2.561079   1 #> 937 867.19301   2.869970   1 #> 938 947.40970   2.725164   1 #> 939 561.44013   3.143367   1 #> 940 717.88470   2.528342   1 #> 941  77.86998   2.622458   1 #> 942 451.85021   3.013632   1 #> 943 893.10556   3.103894   1 #> 944 207.79292   2.947208   1 #> 945  23.36633   3.697194   1 #> 946 834.68867   3.006168   1 #> 947 421.37623   2.501793   1 #> 948 951.45772   2.687678   1 #> 949 229.47362   4.380243   1 #> 950  41.00883   2.562891   1 #> 951 641.39044   3.335547   1 #> 952 102.56295   2.625876   1 #> 953 764.77572   2.840705   1 #> 954  98.17629   2.869534   1 #> 955 347.93181   2.595941   1 #> 956 466.30797   2.548074   1 #> 957  14.46112   2.968340   1 #> 958 336.65027   2.589002   1 #> 959 458.93107   3.509946   1 #> 960 277.50316   2.695408   1 #> 961 626.05254   2.656811   1 #> 962 451.50947   2.572337   1 #> 963 292.58670   3.254626   1 #> 964 509.91104   2.528206   1 #> 965 233.82263   2.981096   1 #> 966 133.40504   3.470481   1 #> 967  88.44721   2.655568   1 #> 968 693.24323   2.878208   1 #> 969 484.54429   2.524289   1 #> 970 882.93705   3.079425   1 #> 971 866.85446   2.746318   1 #> 972 894.51695   2.554605   1 #> 973 387.93459   2.733393   1 #> 974 580.28929   2.635000   1 #> 975 389.46158   4.010993   1 #> 976 416.98437   3.132361   1 #> 977  30.15280   2.673350   1 #> 978 814.97604   2.613893   1 #> 979 826.64765   3.275925   1 #> 980 897.53906   4.222504   1 #> 981 225.27831   2.526440   1 #> 982 556.60733   2.815875   1 #> 983 364.47882   2.671213   1 #> 984 369.09274   3.099718   1 #> 985  31.76348   2.501987   1 #> 986 671.03221   3.566346   1 #> 987 590.57457   3.112664   1 #> 988 681.52017   3.309519   1 #>  #> [[3]] #>            ts magnitudes gen #> 1   501.41892   2.640203   2 #> 2   549.56330   2.608856   2 #> 3   500.60618   3.196419   2 #> 4   899.76788   2.822645   2 #> 5   502.00810   2.834050   2 #> 6   500.57865   2.643280   2 #> 7   595.03683   2.564474   2 #> 8   677.13236   3.155238   2 #> 9   596.96415   2.536460   2 #> 10  638.93906   2.642752   2 #> 11  511.17233   2.615127   2 #> 12  564.29415   2.854158   2 #> 13  563.97134   2.742829   2 #> 14  563.84001   2.879608   2 #> 15  577.75709   2.770954   2 #> 16  608.15606   2.671596   2 #> 17  564.97951   2.680359   2 #> 18  557.64802   2.599878   2 #> 19  500.37221   2.625754   2 #> 20  503.05401   2.737383   2 #> 21  823.77187   2.964558   2 #> 22  502.81694   3.099005   2 #> 23  501.35479   3.336192   2 #> 24  667.32547   3.912005   2 #> 25  501.42781   2.818935   2 #> 26  501.75196   3.123410   2 #> 27  650.66419   3.185122   2 #> 28  502.51289   2.892364   2 #> 29  864.71335   3.790976   2 #> 30  521.21744   2.715079   2 #> 31  503.98133   2.539861   2 #> 32  535.85112   2.873516   2 #> 33  559.47928   2.744150   2 #> 34  505.88795   3.586756   2 #> 35  524.67178   2.938952   2 #> 36  507.60334   3.142101   2 #> 37  505.34094   3.582584   2 #> 38  511.33124   2.739454   2 #> 39  508.80604   3.265481   2 #> 40  509.10788   3.579374   2 #> 41  958.85366   2.981205   2 #> 42  524.48148   3.499228   2 #> 43  507.39571   2.637506   2 #> 44  649.79722   2.892388   2 #> 45  508.24375   2.785655   2 #> 46  645.02441   3.660961   2 #> 47  522.30541   2.874832   2 #> 48  551.08297   2.901343   2 #> 49  510.48606   3.058086   2 #> 50  509.89259   4.239701   2 #> 51  507.55620   3.856343   2 #> 52  612.95948   2.651465   2 #> 53  509.49975   2.926553   2 #> 54  519.65322   2.539602   2 #> 55  591.40182   2.687991   2 #> 56  522.72901   3.104917   2 #> 57  520.65149   2.870154   2 #> 58  820.55088   2.506420   2 #> 59  521.20656   2.684139   2 #> 60  519.45105   2.672565   2 #> 61  545.91158   2.640504   2 #> 62  638.45611   2.840221   2 #> 63  620.97932   3.110357   2 #> 64  522.76299   3.138938   2 #> 65  904.89216   2.650809   2 #> 66  545.29568   2.963545   2 #> 67  853.57610   2.909403   2 #> 68  519.50088   2.527533   2 #> 69  549.90383   2.857323   2 #> 70  646.70133   3.017769   2 #> 71  519.48585   2.966056   2 #> 72  686.63229   2.501389   2 #> 73  507.78639   2.973875   2 #> 74  586.56625   3.558696   2 #> 75  587.31577   3.196151   2 #> 76  500.52983   2.969932   2 #> 77  507.91273   2.622540   2 #> 78  505.84246   2.597858   2 #> 79  541.43665   3.109637   2 #> 80  505.19898   2.649878   2 #> 81  505.22479   2.529070   2 #> 82  505.18644   3.488645   2 #> 83  511.69419   3.043319   2 #> 84  507.37242   3.176547   2 #> 85  507.26643   2.657211   2 #> 86  866.18641   3.502337   2 #> 87  500.41813   3.187806   2 #> 88  501.39857   2.957873   2 #> 89  531.99215   2.714767   2 #> 90  501.88420   3.662738   2 #> 91  505.69845   2.607010   2 #> 92  559.79535   2.639723   2 #> 93  563.74007   3.131900   2 #> 94  561.62533   3.110317   2 #> 95  593.39705   3.385577   2 #> 96  517.09667   3.339489   2 #> 97  502.89118   2.987009   2 #> 98  859.21224   2.773229   2 #> 99  738.06311   2.765860   2 #> 100 973.90660   2.983443   2 #> 101 500.17035   3.424549   2 #> 102 555.57883   2.742893   2 #> 103 507.27437   2.807007   2 #> 104 953.63099   2.534000   2 #> 105 502.54115   2.622020   2 #> 106 500.44155   2.601349   2 #> 107 500.44032   2.701702   2 #> 108 507.90472   2.568784   2 #> 109 587.37028   2.531177   2 #> 110 501.51537   2.748161   2 #> 111 501.03847   2.723892   2 #> 112 534.35756   2.559918   2 #> 113 511.81369   2.645933   2 #> 114 909.44730   2.546792   2 #> 115 505.55289   2.781621   2 #> 116 949.76648   2.516953   2 #> 117 500.72510   3.522445   2 #> 118 573.86458   2.834031   2 #> 119 521.43783   2.654254   2 #> 120 828.78128   2.518767   2 #> 121 664.95808   2.527733   2 #> 122 569.14780   2.504372   2 #> 123 503.58473   2.773297   2 #> 124 500.18790   2.587964   2 #> 125 500.36532   2.747435   2 #> 126 569.43220   3.318884   2 #> 127 510.04655   3.462859   2 #> 128 504.83270   2.735963   2 #> 129 500.87974   2.629047   2 #> 130 504.49592   2.756995   2 #> 131 533.99988   2.892554   2 #> 132 646.19565   3.186995   2 #> 133 503.90518   2.533836   2 #> 134 533.45634   2.584848   2 #> 135 505.97382   2.595674   2 #> 136 830.58973   2.647739   2 #> 137 511.01377   2.870845   2 #> 138 599.32700   3.443514   2 #> 139 597.62369   3.203863   2 #> 140 597.51260   3.407239   2 #> 141 599.13797   2.596761   2 #> 142 609.30001   2.599872   2 #> 143 597.56538   3.373661   2 #> 144 601.65408   3.694407   2 #> 145 606.47271   3.423897   2 #> 146 603.77983   3.074706   2 #> 147 909.38403   2.583629   2 #> 148 598.77524   3.958598   2 #> 149 599.69292   3.774164   2 #> 150 577.77925   2.751172   2 #> 151 506.02308   2.528117   2 #> 152 506.85983   2.560689   2 #> 153 612.26801   3.457331   2 #> 154 565.73262   2.664547   2 #> 155 504.48361   2.504342   2 #> 156 500.57982   3.210884   2 #> 157 675.22788   2.793837   2 #> 158 526.86574   2.682140   2 #> 159 524.42165   2.594617   2 #> 160 548.87587   2.712142   2 #> 161 561.22416   2.807305   2 #> 162 501.79260   3.126718   2 #> 163 661.06406   2.701522   2 #> 164 507.40433   2.802303   2 #> 165 507.24438   2.617918   2 #> 166 501.42903   5.823970   2 #> 167 596.94678   2.952299   2 #> 168 601.95682   4.174893   2 #> 169 597.80234   2.660513   2 #> 170 596.87997   4.126450   2 #> 171 598.32593   3.675744   2 #> 172 515.66615   3.138516   2 #> 173 501.10548   2.599012   2 #> 174 500.05739   2.748715   2 #> 175 501.46339   2.833888   2 #> 176 867.92264   2.820442   2 #> 177 981.00425   2.536156   2 #> 178 626.97060   2.761829   2 #> 179 500.44449   2.771574   2 #> 180 518.10030   2.917113   2 #> 181 507.13743   3.071463   2 #> 182 587.67047   2.718207   2 #> 183 548.27953   3.418898   2 #> 184 570.06616   2.506274   2 #> 185 569.60492   2.565753   2 #> 186 587.68532   2.691562   2 #> 187 571.82663   3.559700   2 #> 188 633.12197   2.893911   2 #> 189 565.27754   2.629284   2 #> 190 511.41517   2.855796   2 #> 191 586.88033   2.523136   2 #> 192 502.09846   2.564008   2 #> 193 505.10850   3.765792   2 #> 194 509.21634   3.179513   2 #> 195 571.98456   3.266900   2 #> 196 501.55425   2.945964   2 #> 197 785.85500   3.535213   2 #> 198 585.29111   2.696566   2 #> 199 534.04699   2.849239   2 #> 200 536.94951   2.795535   2 #> 201 615.49060   4.440515   2 #> 202 510.03547   2.696277   2 #> 203 500.59516   2.514149   2 #> 204 677.52964   3.044141   2 #> 205 500.83368   2.654870   2 #> 206 500.31586   2.847272   2 #> 207 500.19942   2.553706   2 #> 208 502.80229   3.228171   2 #> 209 515.46588   2.596068   2 #> 210 500.50372   3.022266   2 #> 211 503.39014   2.546556   2 #> 212 503.14582   2.611666   2 #> 213 535.42433   3.444903   2 #> 214 669.49011   3.501272   2 #> 215 502.20335   4.083029   2 #> 216 535.40656   2.751629   2 #> 217 563.84957   2.866501   2 #> 218 506.95916   3.130467   2 #> 219 501.86522   2.500588   2 #> 220 501.26055   2.753839   2 #> 221 910.20215   3.377126   2 #> 222 555.43348   4.169385   2 #> 223 514.09122   2.505511   2 #> 224 502.06131   2.629586   2 #> 225 502.04545   2.556719   2 #> 226 501.43022   2.649709   2 #> 227 812.01831   2.503912   2 #> 228 500.50116   2.629268   2 #> 229 500.91451   3.240346   2 #> 230 524.42886   2.844183   2 #> 231 516.58904   2.974781   2 #> 232 541.93000   2.755852   2 #> 233 500.41017   3.224403   2 #> 234 701.67401   2.750949   2 #> 235 616.95008   2.845384   2 #> 236 508.92768   4.118339   2 #> 237 508.00506   2.713926   2 #> 238 513.48906   3.583934   2 #> 239 511.33324   2.893134   2 #> 240 507.95811   2.954285   2 #> 241 510.39893   2.681875   2 #> 242 527.85747   2.732131   2 #> 243 516.59539   3.361649   2 #> 244 530.97605   3.056218   2 #> 245 583.71377   2.630556   2 #> 246 629.68125   2.522141   2 #> 247 501.30528   2.787353   2 #> 248 502.01837   2.660808   2 #> 249 979.53094   3.027488   2 #> 250 644.35331   3.474845   2 #> 251 637.24489   2.518576   2 #> 252 522.92346   2.581533   2 #> 253 501.07804   2.588517   2 #> 254 515.33448   3.134237   2 #> 255 694.27100   2.630139   2 #> 256 509.02989   2.856629   2 #> 257 500.52636   2.553952   2 #> 258 533.37261   2.861894   2 #> 259 788.71601   3.014788   2 #> 260 504.20215   2.530511   2 #> 261 787.43212   2.634127   2 #> 262 505.00585   3.800017   2 #> 263 503.68912   2.769781   2 #> 264 504.54614   3.176851   2 #> 265 681.82353   2.527351   2 #> 266 500.13886   2.653933   2 #> 267 501.12138   2.844424   2 #> 268 540.49160   2.915465   2 #> 269 500.65097   2.716137   2 #> 270 754.97232   3.771833   2 #> 271 502.07545   2.786377   2 #> 272 500.21942   3.131479   2 #> 273 504.15749   2.706753   2 #> 274 719.75978   3.791570   2 #> 275 575.87138   2.744589   2 #> 276 576.10989   2.684493   2 #> 277 511.73189   3.501275   2 #> 278 502.13950   2.817614   2 #> 279 532.93102   2.788984   2 #> 280 529.20309   2.809093   2 #> 281 501.84143   2.594619   2 #> 282 506.56656   3.874564   2 #> 283 500.54130   3.428088   2 #> 284 618.40704   2.878276   2 #> 285 596.57520   3.393036   2 #> 286 845.62388   3.235243   2 #> 287 500.92452   3.618607   2 #> 288 764.27722   2.799156   2 #> 289 716.07331   2.742489   2 #> 290 978.37688   2.639922   2 #> 291 505.23470   2.687112   2 #> 292 541.74648   2.545895   2 #> 293 660.25639   2.773432   2 #> 294 522.25491   2.586181   2 #> 295 500.28612   2.614178   2 #> 296 500.31361   2.547545   2 #> 297 641.28869   2.678464   2 #> 298 636.55464   2.549395   2 #> 299 848.99932   2.782243   2 #> 300 888.29247   2.718703   2 #> 301 514.19674   3.350304   2 #> 302 519.85982   2.600835   2 #> 303 932.97412   2.968319   2 #> 304 510.21572   2.683671   2 #> 305 500.95028   2.603915   2 #> 306 500.35565   3.043404   2 #> 307 504.23880   2.944471   2 #> 308 527.76557   3.033306   2 #> 309 533.58576   2.957127   2 #> 310 631.03104   2.793284   2 #> 311 500.84339   2.728917   2 #> 312 502.23097   2.675674   2 #> 313 537.55275   3.108330   2 #> 314 500.47812   2.591333   2 #> 315 569.46346   3.051001   2 #> 316 596.65640   2.550442   2 #> 317 500.86781   3.364697   2 #> 318 563.44982   2.590496   2 #> 319 504.40908   3.530738   2 #> 320 681.11819   2.592853   2 #> 321 509.13825   3.898563   2 #> 322 503.85161   3.128981   2 #> 323 502.51377   2.644836   2 #> 324 634.57739   2.616621   2 #> 325 541.08265   3.162995   2 #> 326 544.94533   2.508944   2 #> 327 501.41953   3.018518   2 #> 328 501.76367   2.531621   2 #> 329 500.58060   2.846762   2 #> 330 500.44798   3.860115   2 #> 331 508.14121   3.088206   2 #> 332 538.73383   2.514915   2 #> 333 547.66502   5.631074   2 #> 334 662.69708   3.029775   2 #> 335 600.80785   2.542152   2 #> 336 500.51471   2.670630   2 #> 337 500.36162   2.585541   2 #> 338 560.85398   3.049971   2 #> 339 643.99587   2.535339   2 #> 340 538.74720   2.645606   2 #> 341 672.10113   2.621416   2 #> 342 514.13170   3.107799   2 #> 343 500.74907   2.736176   2 #> 344 502.68231   2.524421   2 #> 345 504.85657   3.189401   2 #> 346 595.76027   2.715052   2 #> 347 682.40648   2.804693   2 #> 348 522.31566   2.685021   2 #> 349 509.75253   2.563196   2 #> 350 507.33688   2.715129   2 #> 351 536.27997   2.761512   2 #> 352 500.86525   2.940268   2 #> 353 513.36206   2.949258   2 #> 354 514.81782   3.537520   2 #> 355 950.40680   3.382690   2 #> 356 504.75616   3.125397   2 #> 357 500.59955   2.506973   2 #> 358 678.18985   2.573552   2 #> 359 501.34894   2.772610   2 #> 360 624.86491   2.681222   2 #> 361 501.12939   2.525978   2 #> 362 537.37613   2.789133   2 #> 363 500.85125   2.587624   2 #> 364 516.48519   3.212979   2 #> 365 572.36926   2.684017   2 #> 366 519.82025   2.505267   2 #> 367 500.41550   2.563144   2 #> 368 500.39076   2.507207   2 #> 369 707.05583   3.787760   2 #> 370 500.37913   2.698719   2 #> 371 757.97079   2.704777   2 #> 372 580.07866   2.565492   2 #> 373 500.59407   3.140762   2 #> 374 580.24470   2.706774   2 #> 375 502.36951   3.014570   2 #> 376 910.37104   4.773517   2 #> 377 502.96117   3.742521   2 #> 378 501.95223   2.798216   2 #> 379 500.36054   3.048816   2 #> 380 747.67642   3.523588   2 #> 381 536.49224   3.010219   2 #> 382 553.76011   2.656797   2 #> 383 503.22444   3.037943   2 #> 384 763.16835   4.332142   2 #> 385 500.93210   3.044700   2 #> 386 500.50061   2.616114   2 #> 387 718.04607   2.578048   2 #> 388 500.45783   3.092407   2 #> 389 919.74347   2.888352   2 #> 390 500.54910   2.704182   2 #> 391 556.59447   2.557523   2 #> 392 512.99938   2.799897   2 #> 393 500.75009   2.914954   2 #> 394 908.87728   2.536298   2 #> 395 501.58175   2.668225   2 #> 396 500.83464   2.555818   2 #> 397 505.89754   2.628604   2 #> 398 501.79457   2.653761   2 #> 399 508.62613   4.263698   2 #> 400 565.40113   2.764765   2 #> 401 584.01839   2.687357   2 #> 402 526.56599   2.885247   2 #> 403 518.12226   2.635820   2 #> 404 652.08253   3.127372   2 #> 405 528.46218   2.621435   2 #> 406 515.42877   2.927336   2 #> 407 511.75701   3.187054   2 #> 408 501.48593   2.706682   2 #> 409 505.35367   2.592716   2 #> 410 982.55370   2.552108   2 #> 411 510.15944   2.758928   2 #> 412 518.48241   3.086119   2 #> 413 500.39372   3.024302   2 #> 414 500.37111   2.630980   2 #> 415 502.89396   2.694915   2 #> 416 500.90070   2.627910   2 #> 417 521.64897   2.784271   2 #> 418 503.70631   3.232992   2 #> 419 500.37263   2.653257   2 #> 420 529.74694   2.625551   2 #> 421 639.08950   3.126949   2 #> 422 500.44107   2.679751   2 #> 423 501.38356   2.629429   2 #> 424 500.36249   2.648188   2 #> 425 504.35841   2.616165   2 #> 426 512.38861   2.853081   2 #> 427 501.06035   3.145905   2 #> 428 574.00531   3.856085   2 #> 429 500.78841   2.681887   2 #> 430 506.40908   2.907227   2 #> 431 797.24050   2.704017   2 #> 432 504.46504   2.913225   2 #> 433 527.97118   2.957965   2 #> 434 500.56441   3.105667   2 #> 435 504.88686   2.846698   2 #> 436 513.12970   3.432923   2 #> 437 501.13101   2.812554   2 #> 438 503.90600   2.668687   2 #> 439 500.56642   3.094521   2 #> 440 567.72168   2.692719   2 #> 441 501.10261   2.510871   2 #> 442 502.58060   2.568786   2 #> 443 500.79395   2.587881   2 #> 444 500.97974   2.551942   2 #> 445 500.98443   2.597178   2 #> 446 501.50687   4.164329   2 #> 447 500.83752   2.572810   2 #> 448 566.54641   2.559479   2 #> 449 503.20309   3.355149   2 #> 450 503.81036   2.857865   2 #> 451 502.30054   3.043879   2 #> 452 557.57365   2.788248   2 #> 453 505.16194   2.548304   2 #> 454 554.07923   2.576036   2 #> 455 516.33517   3.208571   2 #> 456 516.23038   2.698464   2 #> 457 539.20097   4.327349   2 #> 458 723.56549   3.019573   2 #> 459 642.17327   4.036265   2 #> 460 510.40235   2.704465   2 #> 461 510.80023   4.527819   2 #> 462 539.64578   2.933133   2 #> 463 635.53025   3.715730   2 #> 464  89.26370   3.002398   2 #> 465  89.26523   3.189404   2 #> 466 705.45449   3.176673   2 #> 467 685.40734   2.561698   2 #> 468 682.56587   2.718535   2 #> 469 686.90340   2.845747   2 #> 470 683.45103   2.689489   2 #> 471 967.16086   2.946914   2 #> 472  23.81521   2.882432   2 #> 473  26.78159   2.969735   2 #> 474  28.55573   4.305313   2 #> 475  23.69371   4.111995   2 #> 476 230.36458   2.808557   2 #> 477 243.06122   2.691074   2 #> 478 232.56792   2.819305   2 #> 479 229.63740   2.801176   2 #> 480 241.70118   3.066583   2 #> 481 387.57470   2.878280   2 #> 482 935.16065   3.861945   2 #> 483  14.66283   2.533625   2 #> 484 888.67096   2.668680   2 #> 485 293.50563   2.661313   2 #> 486 390.36153   2.787507   2 #> 487 901.84561   2.747270   2 #> 488 897.79744   2.557744   2 #> 489 898.32180   2.587235   2 #> 490 952.27944   2.679189   2 #>  #> [[4]] #>            ts magnitudes gen #> 1   509.35965   3.521157   3 #> 2   761.62433   2.827667   3 #> 3   655.64328   2.575413   3 #> 4   584.34816   3.418532   3 #> 5   678.79204   3.808717   3 #> 6   871.57788   3.156847   3 #> 7   881.22004   3.733595   3 #> 8   506.03613   3.369126   3 #> 9   551.36206   3.020195   3 #> 10  512.28658   2.626663   3 #> 11  506.68762   2.677641   3 #> 12  573.65804   2.582806   3 #> 13  619.89826   2.734236   3 #> 14  529.10275   2.670044   3 #> 15  623.44946   2.591014   3 #> 16  535.90525   3.976836   3 #> 17  526.65223   2.575738   3 #> 18  555.65351   2.700781   3 #> 19  515.54094   2.766253   3 #> 20  523.84826   4.174957   3 #> 21  512.74291   2.507034   3 #> 22  510.61530   2.755624   3 #> 23  507.56153   2.653530   3 #> 24  530.37427   3.157244   3 #> 25  831.70592   3.030370   3 #> 26  638.53966   3.112143   3 #> 27  647.07260   2.640686   3 #> 28  650.70987   3.482225   3 #> 29  591.10656   2.575502   3 #> 30  991.05588   3.603813   3 #> 31  807.70737   2.580865   3 #> 32  531.60824   2.521732   3 #> 33  565.50913   2.513012   3 #> 34  570.74263   3.421015   3 #> 35  510.60122   2.773803   3 #> 36  533.95343   2.574899   3 #> 37  949.26528   3.820698   3 #> 38  599.65084   2.571556   3 #> 39  730.48629   3.436272   3 #> 40  604.75095   3.222256   3 #> 41  602.58138   3.823203   3 #> 42  606.62245   2.940203   3 #> 43  888.34943   2.750196   3 #> 44  597.58007   3.062017   3 #> 45  602.13999   2.682034   3 #> 46  614.15136   3.020987   3 #> 47  612.38554   2.886122   3 #> 48  734.49106   2.940637   3 #> 49  839.62715   3.001030   3 #> 50  733.86750   3.670327   3 #> 51  501.83497   2.947125   3 #> 52  511.82506   2.685966   3 #> 53  871.66674   3.428330   3 #> 54  591.15684   2.583731   3 #> 55  873.14272   2.638626   3 #> 56  501.80151   2.605069   3 #> 57  501.47929   2.690275   3 #> 58  558.07497   2.921723   3 #> 59  502.45179   3.327760   3 #> 60  501.78367   4.961019   3 #> 61  501.47478   3.518568   3 #> 62  871.69993   2.653482   3 #> 63  503.91717   3.138368   3 #> 64  502.87426   3.770584   3 #> 65  588.46041   2.918376   3 #> 66  512.88664   3.024235   3 #> 67  511.66464   3.112473   3 #> 68  502.75658   2.904842   3 #> 69  612.25784   2.789382   3 #> 70  600.61494   2.650731   3 #> 71  502.05228   2.947405   3 #> 72  503.06859   2.707948   3 #> 73  540.71088   2.957977   3 #> 74  501.62121   2.638879   3 #> 75  813.04326   2.731503   3 #> 76  501.45113   3.474531   3 #> 77  537.61533   2.606543   3 #> 78  501.57163   3.199069   3 #> 79  502.88747   2.549206   3 #> 80  501.97580   2.524481   3 #> 81  501.54245   2.904910   3 #> 82  522.44932   2.835786   3 #> 83  535.25172   2.742534   3 #> 84  501.47105   2.749587   3 #> 85  608.44551   2.762316   3 #> 86  509.78358   2.757449   3 #> 87  502.14324   3.908841   3 #> 88  501.63815   2.541043   3 #> 89  504.24570   2.768215   3 #> 90  563.50991   2.890057   3 #> 91  507.43302   3.175583   3 #> 92  514.98479   2.560941   3 #> 93  525.45628   2.848151   3 #> 94  502.50222   3.416646   3 #> 95  501.53250   3.882368   3 #> 96  508.52829   3.092914   3 #> 97  974.65948   2.925250   3 #> 98  502.11189   2.882024   3 #> 99  503.14342   2.939225   3 #> 100 547.28848   2.500759   3 #> 101 983.39199   2.593911   3 #> 102 501.44214   2.513343   3 #> 103 609.92092   2.996938   3 #> 104 522.90540   3.123523   3 #> 105 598.03328   2.906494   3 #> 106 502.02643   2.508206   3 #> 107 501.51267   3.797655   3 #> 108 501.88008   2.511423   3 #> 109 512.82388   2.516481   3 #> 110 503.46007   2.597972   3 #> 111 501.98750   2.806353   3 #> 112 538.02047   2.559985   3 #> 113 516.51924   2.655207   3 #> 114 574.90289   2.789563   3 #> 115 502.36170   2.617989   3 #> 116 553.78596   4.006682   3 #> 117 506.12824   3.054903   3 #> 118 642.35859   4.696595   3 #> 119 508.73905   2.861829   3 #> 120 559.03496   3.050420   3 #> 121 502.66486   3.089870   3 #> 122 586.53030   2.522003   3 #> 123 516.86987   2.743450   3 #> 124 564.70752   2.688493   3 #> 125 508.22488   2.675043   3 #> 126 529.11215   3.469490   3 #> 127 501.61050   3.075797   3 #> 128 501.97725   2.963467   3 #> 129 615.48281   2.692293   3 #> 130 545.92767   2.606348   3 #> 131 502.37087   2.670147   3 #> 132 501.92331   2.895966   3 #> 133 508.14791   2.506682   3 #> 134 705.00825   2.729080   3 #> 135 665.22088   3.475822   3 #> 136 645.03443   3.581016   3 #> 137 620.53585   2.567948   3 #> 138 579.22929   3.252927   3 #> 139 704.67055   2.599996   3 #> 140 520.86047   3.407797   3 #> 141 501.66969   2.907859   3 #> 142 501.79227   2.540117   3 #> 143 501.86880   2.697174   3 #> 144 638.62230   2.786043   3 #> 145 975.42064   2.653660   3 #> 146 502.76758   2.511277   3 #> 147 501.96720   4.845368   3 #> 148 501.91013   2.564976   3 #> 149 786.31256   2.666807   3 #> 150 808.40668   2.599564   3 #> 151 506.57311   3.109146   3 #> 152 538.27574   2.753709   3 #> 153 503.32066   2.592130   3 #> 154 504.17474   3.018373   3 #> 155 503.10933   2.681085   3 #> 156 671.05644   2.635450   3 #> 157 501.80822   2.501824   3 #> 158 501.43643   2.748400   3 #> 159 502.48752   2.583741   3 #> 160 501.43705   2.611456   3 #> 161 501.58510   3.388503   3 #> 162 505.72044   3.103764   3 #> 163 623.27213   3.237466   3 #> 164 504.55091   2.721439   3 #> 165 602.03449   4.417266   3 #> 166 597.20879   2.500127   3 #> 167 551.68427   2.862249   3 #> 168 551.37789   2.949011   3 #> 169 571.44839   2.523029   3 #> 170 577.84720   2.980503   3 #> 171 573.54186   2.670157   3 #> 172 598.84953   3.345118   3 #> 173 618.38349   2.917002   3 #> 174 786.13995   3.111114   3 #> 175 789.15172   3.205808   3 #> 176 615.54813   2.518374   3 #> 177 623.52291   3.440262   3 #> 178 615.96146   2.771367   3 #> 179 547.65605   2.552531   3 #> 180 670.05933   2.565751   3 #> 181 745.91382   2.538607   3 #> 182 503.81180   2.791456   3 #> 183 509.13295   2.645067   3 #> 184 510.65497   3.335615   3 #> 185 559.89019   2.969618   3 #> 186 510.47638   2.613357   3 #> 187 529.92559   2.693120   3 #> 188 997.81307   3.735829   3 #> 189 910.40170   3.578250   3 #> 190 954.27215   2.857006   3 #> 191 556.84584   2.564720   3 #> 192 507.31389   2.572857   3 #> 193 539.45047   3.558313   3 #> 194 645.37665   2.770475   3 #> 195 510.88936   2.830005   3 #> 196 646.52348   3.388142   3 #> 197 790.29349   3.290461   3 #> 198 508.35049   3.467722   3 #> 199 506.27719   2.526771   3 #> 200 505.31219   2.585251   3 #> 201 500.54806   2.618832   3 #> 202 720.40609   2.717094   3 #> 203 513.49769   2.769965   3 #> 204 972.76911   3.496393   3 #> 205 507.79440   2.626284   3 #> 206 528.99174   2.522890   3 #> 207 507.10403   2.778251   3 #> 208 596.59176   2.561786   3 #> 209 779.25471   2.729967   3 #> 210 501.23827   3.365542   3 #> 211 716.50391   2.569994   3 #> 212 520.45917   2.722579   3 #> 213 923.77922   2.753415   3 #> 214 514.85401   4.652803   3 #> 215 546.74160   2.554022   3 #> 216 502.70218   2.649889   3 #> 217 501.08510   3.092940   3 #> 218 569.29130   3.508126   3 #> 219 676.72422   2.821513   3 #> 220 501.42054   2.514355   3 #> 221 697.02450   2.515987   3 #> 222 503.66340   2.580155   3 #> 223 548.49815   2.552316   3 #> 224 551.64174   2.668815   3 #> 225 821.61937   2.883859   3 #> 226 684.05858   2.553961   3 #> 227 547.98738   2.517107   3 #> 228 553.90206   2.716613   3 #> 229 548.27774   2.673375   3 #> 230 565.88443   3.151917   3 #> 231 594.08790   2.773831   3 #> 232 566.76172   2.872502   3 #> 233 548.00053   3.205031   3 #> 234 576.00538   2.613274   3 #> 235 556.02407   2.634032   3 #> 236 553.50404   3.056397   3 #> 237 553.38351   2.968793   3 #> 238 548.60650   2.979654   3 #> 239 548.14733   2.870306   3 #> 240 548.99275   2.817341   3 #> 241 551.76284   2.765305   3 #> 242 567.58411   2.664229   3 #> 243 882.60243   3.082336   3 #> 244 726.41810   3.500659   3 #> 245 566.35652   3.175734   3 #> 246 556.46898   3.581455   3 #> 247 547.76452   2.502011   3 #> 248 645.99335   2.819775   3 #> 249 547.67528   2.637124   3 #> 250 614.75325   3.064573   3 #> 251 547.80823   3.142592   3 #> 252 550.43034   3.125809   3 #> 253 549.15090   2.797875   3 #> 254 547.68520   2.573495   3 #> 255 547.82438   2.651156   3 #> 256 551.70736   2.688805   3 #> 257 553.03822   3.178166   3 #> 258 548.41215   2.978088   3 #> 259 547.83331   2.588991   3 #> 260 547.88924   3.039844   3 #> 261 550.29998   2.859005   3 #> 262 558.89572   4.628371   3 #> 263 709.00799   2.861367   3 #> 264 650.27535   2.979472   3 #> 265 547.66986   3.143629   3 #> 266 711.36137   2.877896   3 #> 267 598.54821   2.927263   3 #> 268 547.69786   3.045006   3 #> 269 616.53203   4.219762   3 #> 270 547.74343   3.516213   3 #> 271 674.92884   2.524231   3 #> 272 549.22977   2.651895   3 #> 273 612.08845   2.953602   3 #> 274 548.62152   3.044433   3 #> 275 578.18859   3.898327   3 #> 276 587.39813   3.233016   3 #> 277 547.98889   2.564429   3 #> 278 557.15153   3.032680   3 #> 279 843.97975   2.940027   3 #> 280 615.00085   2.744389   3 #> 281 548.71170   2.736545   3 #> 282 549.48121   2.965785   3 #> 283 547.81430   3.176468   3 #> 284 554.57862   2.730408   3 #> 285 547.91197   2.550870   3 #> 286 659.01652   4.518551   3 #> 287 548.86838   4.850315   3 #> 288 560.79776   2.683000   3 #> 289 549.50335   2.622505   3 #> 290 548.44889   2.736234   3 #> 291 547.83156   2.678090   3 #> 292 552.05252   2.838751   3 #> 293 547.81845   2.854551   3 #> 294 547.68637   2.947906   3 #> 295 698.15188   2.830579   3 #> 296 598.91993   2.551000   3 #> 297 514.91029   2.682321   3 #> 298 514.95346   2.621104   3 #> 299 519.26456   2.555248   3 #> 300 652.97308   2.749449   3 #> 301 518.32860   2.784973   3 #> 302 574.12773   2.509161   3 #> 303 712.64432   3.692276   3 #> 304 500.61582   2.898353   3 #> 305 912.68203   2.525762   3 #> 306 919.08041   3.782093   3 #> 307 912.74090   2.714509   3 #> 308 911.03553   2.593689   3 #> 309 914.15188   2.541834   3 #> 310 927.41722   2.894887   3 #> 311 857.14065   2.565058   3 #> 312 748.22421   2.799030   3 #> 313 509.50873   2.678664   3 #> 314 506.78175   3.227904   3 #> 315 766.13726   3.095689   3 #> 316 572.75381   2.660630   3 #> 317 519.06820   2.774286   3 #> 318 700.25132   2.913379   3 #> 319 900.73709   2.847345   3 #> 320 585.05134   2.623667   3 #> 321 574.02547   2.551200   3 #> 322 574.12785   2.542764   3 #> 323 575.70852   2.544129   3 #> 324 539.39170   3.320996   3 #> 325 501.56721   3.132892   3 #> 326 501.54139   2.605866   3 #> 327 511.16392   2.520843   3 #> 328 702.68775   2.619063   3 #> 329 557.79824   2.558920   3 #> 330 518.20884   2.852927   3 #> 331 539.53738   2.582101   3 #> 332 557.70870   2.703729   3 #> 333 953.04451   2.960164   3 #> 334 540.38503   2.584216   3 #> 335 542.14458   3.139866   3 #> 336 645.85528   2.594532   3 #> 337 647.82020   2.590714   3 #> 338 511.39006   2.610822   3 #> 339 510.83911   2.890057   3 #> 340 513.56414   2.512738   3 #> 341 511.39342   4.609268   3 #> 342 524.78264   2.532517   3 #> 343 514.74990   3.723998   3 #> 344 517.76966   2.542289   3 #> 345 510.83274   3.043065   3 #> 346 512.08222   3.259827   3 #> 347 637.83697   3.068768   3 #> 348 687.56536   2.917179   3 #> 349  39.23985   2.509466   3 #> 350  29.00233   2.531762   3 #> 351  28.72382   3.534856   3 #> 352 463.20432   3.253325   3 #> 353  38.79365   2.683755   3 #> 354 935.19368   3.389535   3 #> 355  19.95657   3.023607   3 #>  #> [[5]] #>            ts magnitudes gen #> 1   890.18167   2.819070   4 #> 2   918.04236   3.013518   4 #> 3   512.66017   3.037399   4 #> 4   536.04357   3.109661   4 #> 5   539.61713   2.746333   4 #> 6   940.99178   2.791204   4 #> 7   530.23087   2.581049   4 #> 8   734.45481   3.018007   4 #> 9   570.76974   3.023635   4 #> 10  954.04221   3.190387   4 #> 11  951.03506   3.147901   4 #> 12  951.27650   4.180783   4 #> 13  603.30878   3.954450   4 #> 14  602.74178   2.679537   4 #> 15  853.31234   2.583846   4 #> 16  503.34726   3.011969   4 #> 17  501.84103   2.671290   4 #> 18  503.45825   2.536611   4 #> 19  505.95739   3.315024   4 #> 20  504.72362   3.388033   4 #> 21  507.89462   2.640073   4 #> 22  501.82174   2.822765   4 #> 23  508.84529   2.607758   4 #> 24  576.90727   2.832458   4 #> 25  505.84170   3.516757   4 #> 26  518.99537   2.798049   4 #> 27  534.96688   2.569375   4 #> 28  507.59097   2.998087   4 #> 29  553.57214   2.711926   4 #> 30  503.55726   2.996124   4 #> 31  505.05627   3.113932   4 #> 32  510.53273   2.683358   4 #> 33  795.01481   2.804527   4 #> 34  603.73342   2.841746   4 #> 35  501.85593   3.631152   4 #> 36  552.42360   3.039213   4 #> 37  501.91557   2.562402   4 #> 38  503.11329   2.864688   4 #> 39  963.09338   2.582146   4 #> 40  501.57868   2.666251   4 #> 41  617.96805   4.397985   4 #> 42  561.48828   2.834719   4 #> 43  840.44641   2.500412   4 #> 44  503.14380   2.631341   4 #> 45  506.66350   2.571603   4 #> 46  508.67480   3.299919   4 #> 47  502.44374   3.202033   4 #> 48  580.82408   2.766598   4 #> 49  506.82863   2.791616   4 #> 50  642.36711   2.846233   4 #> 51  642.35966   3.441057   4 #> 52  642.77678   2.524510   4 #> 53  642.78639   2.820833   4 #> 54  647.22675   2.723792   4 #> 55  647.49439   2.797994   4 #> 56  791.87217   2.900463   4 #> 57  616.02356   2.729690   4 #> 58  507.31818   2.801390   4 #> 59  705.43474   3.339057   4 #> 60  678.04966   2.566949   4 #> 61  708.68067   2.807053   4 #> 62  525.34751   2.714961   4 #> 63  506.42099   2.864490   4 #> 64  985.06234   3.824136   4 #> 65  613.51979   2.501897   4 #> 66  504.96548   2.717279   4 #> 67  503.84080   2.604657   4 #> 68  509.46979   3.554695   4 #> 69  503.58636   2.595362   4 #> 70  539.52822   2.687748   4 #> 71  501.96947   2.841252   4 #> 72  552.32838   2.546089   4 #> 73  502.16873   2.514601   4 #> 74  506.80465   2.992928   4 #> 75  519.93735   2.502849   4 #> 76  508.87554   2.588800   4 #> 77  645.08400   2.539261   4 #> 78  655.49504   2.673904   4 #> 79  614.05600   2.586657   4 #> 80  634.91102   4.537505   4 #> 81  615.67300   2.635851   4 #> 82  755.16526   4.593542   4 #> 83  597.97706   2.643630   4 #> 84  599.02232   2.678070   4 #> 85  789.22489   2.598470   4 #> 86  623.56650   2.662453   4 #> 87  623.68101   2.583756   4 #> 88  929.35170   2.631151   4 #> 89  513.16520   2.741572   4 #> 90  998.79331   2.967490   4 #> 91  997.86972   2.546423   4 #> 92  508.40663   2.531611   4 #> 93  739.46626   2.970936   4 #> 94  501.36336   2.582588   4 #> 95  519.12025   2.913697   4 #> 96  514.96965   2.655010   4 #> 97  514.90003   2.802782   4 #> 98  515.70282   2.667246   4 #> 99  697.06476   2.530575   4 #> 100 652.64481   3.094297   4 #> 101 555.42233   3.628542   4 #> 102 580.09872   2.806923   4 #> 103 559.05891   2.940436   4 #> 104 559.06740   2.905262   4 #> 105 593.94403   2.597681   4 #> 106 619.53812   2.616635   4 #> 107 770.48362   2.666364   4 #> 108 616.82954   2.766200   4 #> 109 547.79525   4.741777   4 #> 110 547.74410   2.764910   4 #> 111 596.01769   2.610749   4 #> 112 603.77129   2.713372   4 #> 113 618.00519   2.531133   4 #> 114 848.25570   3.323791   4 #> 115 548.47055   2.549807   4 #> 116 659.31546   3.018393   4 #> 117 659.45051   3.656959   4 #> 118 804.58575   2.820496   4 #> 119 903.53525   3.148033   4 #> 120 904.33986   2.813692   4 #> 121 928.36776   2.570663   4 #> 122 886.42094   2.518370   4 #> 123 558.49605   2.524809   4 #> 124 602.38131   2.548227   4 #> 125 559.81761   2.745651   4 #> 126 550.03309   2.915307   4 #> 127 552.41999   2.529887   4 #> 128 549.58795   4.526103   4 #> 129 666.76702   3.755097   4 #> 130 699.11430   3.011952   4 #> 131 515.23150   2.652014   4 #> 132 906.32736   3.342626   4 #> 133 919.64860   3.141673   4 #> 134 937.67194   2.707283   4 #> 135 540.44771   3.447874   4 #> 136 520.20709   2.892329   4 #> 137 512.58439   2.681384   4 #> 138 565.02609   2.557128   4 #> 139 522.99980   2.540130   4 #> 140 511.48358   2.702249   4 #> 141 536.42717   3.373272   4 #> 142 687.80644   2.517178   4 #> 143 513.94413   2.571928   4 #> 144  30.19313   2.544527   4 #>  #> [[6]] #>          ts magnitudes gen #> 1  624.1510   2.953634   5 #> 2  951.7570   2.573669   5 #> 3  970.3778   2.520792   5 #> 4  951.7223   3.139681   5 #> 5  961.4914   3.034228   5 #> 6  606.5378   2.501041   5 #> 7  503.6242   3.092812   5 #> 8  622.3838   3.060166   5 #> 9  508.3056   2.666791   5 #> 10 824.7242   3.165638   5 #> 11 508.3639   2.604303   5 #> 12 637.0955   3.268997   5 #> 13 944.0541   2.716964   5 #> 14 824.3562   2.633353   5 #> 15 618.1065   2.805311   5 #> 16 642.8011   2.596158   5 #> 17 618.1617   2.919893   5 #> 18 618.3615   3.032408   5 #> 19 618.6695   2.665442   5 #> 20 618.2893   2.949689   5 #> 21 621.5289   3.137519   5 #> 22 511.9423   2.657223   5 #> 23 548.2252   4.567107   5 #> 24 506.9092   3.028146   5 #> 25 506.9143   2.527346   5 #> 26 707.4150   2.855413   5 #> 27 987.8644   3.013732   5 #> 28 514.6103   4.673028   5 #> 29 507.7958   3.817744   5 #> 30 647.4644   2.698485   5 #> 31 635.1997   3.234057   5 #> 32 635.2680   2.526264   5 #> 33 635.3580   3.515616   5 #> 34 635.3290   2.844737   5 #> 35 634.9587   2.816885   5 #> 36 933.3945   2.572201   5 #> 37 960.5055   2.857259   5 #> 38 635.3062   2.823464   5 #> 39 755.5062   2.574939   5 #> 40 828.4282   2.907652   5 #> 41 755.2438   3.020550   5 #> 42 875.4936   2.505122   5 #> 43 755.2838   2.835532   5 #> 44 761.7955   2.780845   5 #> 45 755.9463   2.696395   5 #> 46 756.3611   2.631008   5 #> 47 755.2755   3.049502   5 #> 48 787.0963   2.669991   5 #> 49 942.7338   3.763171   5 #> 50 515.7208   2.661363   5 #> 51 697.6092   2.500786   5 #> 52 555.4560   2.572681   5 #> 53 637.7519   3.107841   5 #> 54 715.6002   2.823250   5 #> 55 625.6233   3.573123   5 #> 56 680.8639   2.563400   5 #> 57 552.7642   2.599242   5 #> 58 547.9516   3.518652   5 #> 59 548.4650   3.210625   5 #> 60 553.3622   2.553048   5 #> 61 548.4481   3.326025   5 #> 62 649.0903   2.808092   5 #> 63 577.8172   2.833324   5 #> 64 715.7097   3.049730   5 #> 65 552.8644   3.351958   5 #> 66 890.7885   3.218958   5 #> 67 551.0030   3.810504   5 #> 68 563.6666   2.976077   5 #> 69 550.0495   3.793845   5 #> 70 550.9430   2.512283   5 #> 71 551.4853   2.771551   5 #> 72 558.1169   2.568078   5 #> 73 682.2656   3.553380   5 #> 74 934.4656   3.167257   5 #> 75 786.3723   2.555174   5 #> 76 909.1778   3.132732   5 #> 77 553.8495   2.984565   5 #>  #> [[7]] #>          ts magnitudes gen #> 1  509.2939   2.602357   6 #> 2  637.2031   2.826869   6 #> 3  620.2980   2.608148   6 #> 4  549.5005   2.808391   6 #> 5  560.5807   2.660072   6 #> 6  548.2399   2.739917   6 #> 7  550.0156   2.704493   6 #> 8  552.0053   2.926931   6 #> 9  550.2488   2.536836   6 #> 10 549.0454   2.854517   6 #> 11 507.0970   3.759108   6 #> 12 516.0139   3.065037   6 #> 13 515.1042   2.706223   6 #> 14 517.8647   2.983707   6 #> 15 817.9039   3.024331   6 #> 16 717.3904   2.956926   6 #> 17 514.7505   4.027546   6 #> 18 515.1690   3.061970   6 #> 19 519.3352   3.550655   6 #> 20 772.5369   2.578055   6 #> 21 514.6358   3.420096   6 #> 22 514.7781   2.624659   6 #> 23 514.8415   2.522566   6 #> 24 515.1642   2.616044   6 #> 25 636.2183   4.770315   6 #> 26 635.3664   2.551647   6 #> 27 960.6778   2.746421   6 #> 28 963.7051   3.175252   6 #> 29 810.5890   2.594269   6 #> 30 755.4241   2.902032   6 #> 31 625.7090   2.643485   6 #> 32 715.0646   2.555157   6 #> 33 958.6288   2.626626   6 #> 34 552.1152   2.759396   6 #> 35 647.0959   3.577408   6 #> 36 700.7165   2.750573   6 #> 37 745.7151   2.571270   6 #>  #> [[8]] #>          ts magnitudes gen #> 1  563.6544   2.615819   7 #> 2  507.1151   2.546093   7 #> 3  540.3453   3.593653   7 #> 4  514.7647   2.872176   7 #> 5  686.4953   2.698920   7 #> 6  637.0929   2.562961   7 #> 7  637.1536   2.663876   7 #> 8  807.5234   2.850406   7 #> 9  751.3117   2.506180   7 #> 10 637.7319   2.883300   7 #> 11 637.4739   3.714145   7 #> 12 636.7848   2.775138   7 #> 13 635.8898   3.121454   7 #> 14 923.4036   2.568631   7 #> 15 756.4574   2.557395   7 #> 16 552.7412   4.538685   7 #> 17 659.2048   2.848702   7 #> 18 682.1129   2.951192   7 #>  #> [[9]] #>          ts magnitudes gen #> 1  540.4896   3.010366   8 #> 2  548.7234   2.509641   8 #> 3  637.6679   3.881656   8 #> 4  881.5342   2.859213   8 #> 5  636.0610   2.719801   8 #> 6  560.6279   2.986735   8 #> 7  706.4433   3.712810   8 #> 8  656.1897   3.156354   8 #> 9  594.9922   3.173964   8 #> 10 597.6497   2.548616   8 #> 11 697.9256   3.404218   8 #>  #> [[10]] #>         ts magnitudes gen #> 1 685.5333   3.026476   9 #> 2 698.0658   2.576526   9 #> 3 698.6043   2.644068   9 #> 4 702.9306   4.970562   9 #>  #> [[11]] #>          ts magnitudes gen #> 1  703.2247   3.355594  10 #> 2  703.2391   4.472091  10 #> 3  706.0270   4.080657  10 #> 4  707.1592   2.749627  10 #> 5  703.8985   3.034122  10 #> 6  734.8090   2.514265  10 #> 7  960.1934   2.616069  10 #> 8  705.0705   2.743500  10 #> 9  744.9892   3.444700  10 #> 10 726.0540   3.014009  10 #> 11 869.3759   2.704824  10 #> 12 702.9807   2.571198  10 #> 13 703.1292   2.540916  10 #>  #> [[12]] #>         ts magnitudes gen #> 1 708.0253   2.654180  11 #> 2 738.9910   2.909698  11 #> 3 713.9454   2.718650  11 #> 4 704.4848   3.224557  11 #> 5 707.2655   4.501936  11 #>  #> [[13]] #>         ts magnitudes gen #> 1 849.2553   2.501500  12 #> 2 714.8942   3.493315  12 #> 3 707.4991   3.691903  12 #> 4 969.7392   2.858924  12 #> 5 707.3031   2.643545  12 #> 6 710.1660   2.731955  12 #> 7 707.6203   2.524355  12 #>  #> [[14]] #>         ts magnitudes gen #> 1 707.5808   3.114389  13 #> 2 930.3157   2.812841  13 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":null,"dir":"Reference","previous_headings":"","what":"HOURS Ita Catalogue — horus","title":"HOURS Ita Catalogue — horus","text":"HOmogenized instRUmental Seismic catalog (HORUS) Italy 1960 present","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HOURS Ita Catalogue — horus","text":"","code":"data(horus, package = \"ETAS.inlabru\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HOURS Ita Catalogue — horus","text":"Original file format: Year: Origin Time (OT) year Mo: OT month Da: OT day Ho: OT hour Mi OT minute Se OT seconds fractions Lat epicenter N latitude (degrees) Lon epicenter E longitude (degrees) Depth hypocenter depth (km) Mw true proxy moment magnitude sigMw moment magnitude uncertainty Geo.Ita \"*\" indicates epicenter within Italian mainland territory, otherwise \" \" Geo.CPTI15 \"*\" indicates epicenter within spatial window CPTI15 catalog (Rovida et al., 2020, Bull Earth Eng, doi: 10.1007/s10518-020-00818-y) Ev..type \"x\" indicates event earthquake (e.g. explosion, eruption, landslide, ...) (since May 1st 2012) Iside.n. ISIDe id number (since April 16th 2005) ETAS.inlabru format: lon: Original Lon lat: Original Lat M: Original Mw time_String: Combination original Year, Mo, Da, Mi, Se depth Original Depth catalog_id ??? event_id ???","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HOURS Ita Catalogue — horus","text":"http://horus.bo.ingv./","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HOURS Ita Catalogue — horus","text":"original entire HORUS catalog provided single tab separated ascii file: HORUS_Ita_Catalog.txt random second decimal digit added ML Md INGV bulletin (ISIDe) computing Mw proxies (Lolli et al., Seism. Res. Lett., 91, 3208-3222, doi: 10.1785/0220200148), HORUS_Ita_Catalog_o.txt original ML Md used compute Mw proxies. ETAS.inlabru includes reformatted version data HORUS_Ita_Catalog.txt data.frame. data provided , express implied warranty given.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HOURS Ita Catalogue — horus","text":"Barbara Lolli(1), Daniele Randazzo(1), Gianfranco Vannucci(1) Paolo Gasperini (2),(1) (2020). Homogenized Instrumental Seismic Catalog (HORUS) Italy 1960 Present, Seismol. Res. Lett, doi: 10.1785/0220200148. (1) Istituto Nazionale di Geofisica e Vulcanologia, Sezione di Bologna (2) Dipartimento di Fisica e Astronomia, Università di Bologna","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Number cores used n.samp exceeds max.batch. Default 1","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 2.799358 2.515587 2.733355 3.085903 2.502387 2.671003 3.359021 2.733282 #>   [9] 3.467249 2.889529 2.902352 3.697161 3.176455 2.585059 2.871424 3.166963 #>  [17] 3.483237 2.554573 2.502871 3.027999 3.695882 2.609799 2.718514 2.664251 #>  [25] 3.317642 2.760444 4.098078 2.696069 2.517321 2.552390 2.770322 4.945160 #>  [33] 2.762191 2.765445 2.923588 2.725472 2.507711 2.775090 2.615356 3.065974 #>  [41] 2.524348 2.761075 2.648932 3.592289 2.906492 2.857037 2.881637 2.639718 #>  [49] 2.734121 3.484700 3.496533 2.795422 2.783249 2.533159 2.889956 2.687831 #>  [57] 3.029117 2.858628 3.340762 2.609579 3.028032 4.323393 3.210558 2.816527 #>  [65] 2.588885 2.722763 3.127263 2.555002 2.555037 2.650743 2.884782 2.641115 #>  [73] 2.583138 2.758198 2.569492 3.119681 4.634016 3.738280 2.730146 3.009101 #>  [81] 2.616186 3.584291 3.215395 2.775661 2.508338 2.881085 2.960785 2.798810 #>  [89] 2.551697 2.840064 2.506062 2.522225 2.508980 2.943504 2.629162 3.350762 #>  [97] 2.775682 2.643746 2.569347 3.116759"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore number compute cores use","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   692.8560   3.482771 #> 2   502.2555   2.566848 #> 3   502.4908   2.501906 #> 4   517.7249   3.252201 #> 5   500.2381   2.545595 #> 6   500.5759   2.578657 #> 7   503.8291   5.519194 #> 8   500.1425   3.166032 #> 9   522.0822   3.069194 #> 10  509.3959   3.265808 #> 11  500.8630   2.798576 #> 12  504.2969   2.709072 #> 13  507.1477   3.036430 #> 14  500.3339   3.083426 #> 15  500.4539   2.608861 #> 16  505.5930   2.623573 #> 17  500.6838   2.703386 #> 18  501.8578   3.115171 #> 19  501.1822   3.526336 #> 20  502.5906   2.836263 #> 21  502.3147   2.531143 #> 22  507.4834   3.121733 #> 23  501.2326   2.855500 #> 24  514.1918   2.673037 #> 25  506.3097   2.500007 #> 26  501.4800   2.886556 #> 27  503.2396   2.745458 #> 28  858.2083   3.089061 #> 29  500.0471   2.668329 #> 30  500.6264   2.573790 #> 31  500.4571   2.936252 #> 32  500.9436   2.511815 #> 33  501.3619   2.769035 #> 34  562.5850   2.572419 #> 35  503.8209   2.768739 #> 36  505.7708   2.704667 #> 37  500.1679   2.764843 #> 38  502.9357   3.379791 #> 39  506.7423   3.519595 #> 40  501.9115   3.030203 #> 41  502.3018   2.560034 #> 42  500.3032   2.857203 #> 43  569.7277   3.217348 #> 44  506.3696   2.601908 #> 45  728.6717   2.676617 #> 46  567.9068   2.504363 #> 47  500.2921   3.039739 #> 48  500.5236   2.515782 #> 49  500.0341   3.269454 #> 50  500.0600   2.909320 #> 51  547.1800   3.016548 #> 52  530.4593   3.029947 #> 53  511.0174   2.742025 #> 54  514.1566   2.665546 #> 55  521.7865   2.561561 #> 56  500.1758   2.787011 #> 57  500.2602   3.593593 #> 58  500.3188   3.040111 #> 59  503.2150   3.891982 #> 60  500.1528   2.503909 #> 61  500.9893   2.694544 #> 62  503.7059   3.152491 #> 63  500.0776   2.746154 #> 64  500.0393   2.836830 #> 65  500.1010   2.627204 #> 66  500.1791   3.054908 #> 67  500.7851   2.877966 #> 68  500.0489   2.970695 #> 69  500.0588   2.537394 #> 70  951.0335   2.816227 #> 71  500.2938   2.709089 #> 72  500.0102   2.597669 #> 73  501.0756   2.549027 #> 74  636.6902   3.125596 #> 75  576.3447   2.890419 #> 76  557.8079   2.748262 #> 77  500.9475   2.673728 #> 78  500.7420   2.940591 #> 79  921.5726   2.946826 #> 80  500.3274   2.553870 #> 81  520.6854   2.921831 #> 82  535.8908   2.679494 #> 83  682.7936   4.232277 #> 84  500.1077   3.728587 #> 85  500.0684   2.879015 #> 86  503.9315   2.502177 #> 87  695.5918   2.918406 #> 88  500.6447   2.553826 #> 89  506.5529   3.833781 #> 90  501.1195   2.543889 #> 91  533.1160   3.264493 #> 92  500.0361   2.659634 #> 93  910.2045   2.729268 #> 94  503.0514   2.694879 #> 95  501.2305   3.238583 #> 96  501.0678   2.564967 #> 97  505.3940   2.634885 #> 98  501.0978   2.505992 #> 99  758.6241   3.060226 #> 100 523.2507   2.891149 #> 101 502.7178   2.562758 #> 102 506.4990   2.786307 #> 103 502.2557   2.640363 #> 104 500.0314   2.796917 #> 105 964.2571   2.982961 #> 106 503.4061   2.768885 #> 107 500.2757   2.676386 #> 108 577.1427   2.618483 #> 109 500.4316   4.321098 #> 110 507.9159   3.089289 #> 111 519.1907   2.736422 #> 112 524.9584   2.722245 #> 113 509.3453   3.393927 #> 114 504.3871   2.938572 #> 115 526.8874   2.511020 #> 116 501.0045   2.950443 #> 117 500.7407   3.097849 #> 118 500.0741   3.353661 #> 119 513.4268   3.137542 #> 120 639.2124   3.528671 #> 121 647.8499   4.070070 #> 122 924.9259   3.588024 #> 123 504.0027   2.697656 #> 124 500.4449   2.904016 #> 125 500.4157   2.919688 #> 126 503.6251   3.426968 #> 127 500.0851   2.916891 #> 128 505.4975   3.219314 #> 129 518.9284   2.635908 #> 130 501.0826   2.770273 #> 131 500.7411   2.503507 #> 132 502.0095   3.130132 #> 133 500.2139   3.151934 #> 134 500.5512   2.618891 #> 135 524.6846   2.719179 #> 136 500.3944   3.004311 #> 137 500.0467   3.005091 #> 138 500.1934   2.994690 #> 139 602.7355   2.702833 #> 140 504.8486   2.525363 #> 141 871.8208   3.410621 #> 142 500.1323   2.586554 #> 143 500.0554   2.898236 #> 144 500.1850   2.717327 #> 145 511.4363   3.133795 #> 146 500.2924   3.858314 #> 147 507.4052   2.635633 #> 148 508.9262   2.653308 #> 149 569.7942   2.967897 #> 150 628.3178   2.949155 #> 151 506.1152   3.903109 #> 152 500.2981   3.111597 #> 153 560.6673   2.671587 #> 154 626.0240   3.331953 #> 155 501.0088   2.949326 #> 156 500.2144   3.236383 #> 157 918.9744   3.007267 #> 158 506.6617   2.630470 #> 159 500.1121   3.413757 #> 160 501.3608   2.851831 #> 161 533.8236   2.529252 #> 162 500.0616   2.512838 #> 163 695.0882   2.663714 #> 164 511.9422   2.602375 #> 165 914.1538   3.040777 #> 166 514.9893   2.717905 #> 167 550.1912   3.195784 #> 168 511.6781   2.719154 #> 169 500.3733   2.583484 #> 170 500.0444   2.907675 #> 171 503.6180   3.077336 #> 172 500.4321   2.564484 #> 173 500.0446   3.337056 #> 174 624.7769   3.457494 #> 175 504.1570   3.213153 #> 176 660.6904   2.563054 #> 177 500.1301   2.533755 #> 178 578.5340   3.067180 #> 179 626.4132   2.630979 #> 180 845.7151   3.926776 #> 181 500.0248   2.610444 #> 182 569.1274   5.824595 #> 183 502.7571   2.624438 #> 184 578.3537   2.779024 #> 185 517.1277   2.682575 #> 186 754.7485   2.664658 #> 187 503.3778   2.615516 #> 188 544.7251   2.622962 #> 189 500.0139   2.989446 #> 190 501.0154   3.380274 #> 191 500.2555   2.711076 #> 192 500.1311   2.708708 #> 193 555.7283   3.083254 #> 194 723.4117   2.886931 #> 195 544.9516   2.910138 #> 196 554.2469   2.907896 #> 197 500.0847   3.335669 #> 198 570.4263   2.518471 #> 199 500.0493   2.604341 #> 200 586.4245   3.337580 #> 201 507.7959   3.765589 #> 202 504.3704   2.605794 #> 203 525.0246   2.649953 #> 204 511.5678   2.526164 #> 205 500.0294   2.826523 #> 206 506.8035   2.575897 #> 207 501.2379   2.680436 #> 208 510.5852   2.504900 #> 209 500.1149   2.913858 #> 210 500.7577   3.487673 #> 211 500.0406   2.921997 #> 212 500.1032   3.057525 #> 213 928.8302   2.615990 #> 214 511.5404   3.082937 #> 215 669.7956   2.507755 #> 216 500.6005   2.527385 #> 217 507.1348   3.285009 #> 218 573.1736   2.552392 #> 219 500.2137   2.542358 #> 220 662.2210   2.631639 #> 221 511.1868   2.808630 #> 222 500.0813   2.610377 #> 223 752.8823   2.835569 #> 224 503.0907   2.620202 #> 225 504.6986   2.715844 #> 226 500.0370   3.478991 #> 227 507.2403   2.512117 #> 228 756.2760   2.784137 #> 229 890.6879   3.350075 #> 230 524.4409   2.552842 #> 231 500.0366   2.689212 #> 232 500.0613   2.641399 #> 233 500.1726   2.521803 #> 234 512.0720   3.131415 #> 235 511.1198   2.837960 #> 236 608.7793   2.812080 #> 237 509.5631   2.611826 #> 238 523.0039   2.604408 #> 239 502.7388   3.563701 #> 240 805.8272   2.916350 #> 241 807.1623   2.771302 #> 242 503.5624   2.888519 #> 243 651.6511   3.449870 #> 244 516.8373   3.120475 #> 245 953.0255   2.698090 #> 246 500.4308   2.604270 #> 247 501.3352   2.651287 #> 248 501.3767   2.766991 #> 249 501.0248   2.901175 #> 250 511.5617   2.945708 #> 251 515.7229   2.665176 #> 252 500.8090   2.598070 #> 253 509.1226   2.609887 #> 254 501.8028   3.327944 #> 255 500.1696   2.702437 #> 256 509.9161   3.332456 #> 257 534.4082   2.959252 #> 258 520.7244   2.534804 #> 259 958.6905   3.516550 #> 260 590.8749   2.519329 #> 261 513.1005   2.856974 #> 262 923.7993   2.740939 #> 263 517.1737   2.786935 #> 264 569.9033   3.685333 #> 265 500.0931   2.835464 #> 266 500.2486   2.639305 #> 267 510.1320   2.662677 #> 268 503.6650   3.045930 #> 269 501.0218   2.678634 #> 270 541.1244   3.050429 #> 271 501.8427   3.075798 #> 272 508.2428   2.645156 #> 273 500.3232   3.155624 #> 274 500.9436   2.653137 #> 275 543.0185   3.114962 #> 276 606.3889   2.642529 #> 277 540.5670   2.583674 #> 278 500.0021   2.750523 #> 279 703.4498   2.516806 #> 280 500.2392   3.329784 #> 281 500.0403   2.825394 #> 282 501.0798   2.789180 #> 283 500.0316   2.717398 #> 284 503.5236   2.534044 #> 285 508.1793   2.638917 #> 286 850.3201   2.709175 #> 287 501.7454   2.510982 #> 288 500.8884   2.805053 #> 289 506.9539   2.618416 #> 290 500.4901   2.606786 #> 291 916.3924   3.226676 #> 292 554.8365   2.998931 #> 293 500.2197   2.820455 #> 294 502.2337   2.639115 #> 295 513.3800   2.518516 #> 296 522.7928   3.518657 #> 297 502.5499   2.922682 #> 298 747.8913   2.905204 #> 299 546.8017   2.627530 #> 300 501.1678   2.518989 #> 301 906.4881   2.615909 #> 302 500.7473   2.645135 #> 303 509.5948   3.273806 #> 304 502.7474   2.749878 #> 305 844.0514   2.874209 #> 306 501.0963   2.932727 #> 307 500.0599   3.771183 #> 308 607.9135   2.592591 #> 309 635.3655   2.896911 #> 310 500.1982   3.305490 #> 311 500.1826   2.795284 #> 312 729.7313   3.044589 #> 313 519.4076   3.329279 #> 314 542.0776   3.189193 #> 315 504.3225   2.541419 #> 316 509.3680   2.546853 #> 317 506.9046   2.906226 #> 318 506.5593   2.709274 #> 319 500.2488   2.782488 #> 320 603.0082   2.879849 #> 321 799.3141   3.422379 #> 322 535.8773   2.637239 #> 323 506.2375   2.814927 #> 324 500.1749   2.550457 #> 325 500.8225   2.999173 #> 326 573.4863   2.703070 #> 327 502.0013   2.761429 #> 328 503.4886   2.728865 #> 329 638.8936   3.040453 #> 330 500.2307   3.720377 #> 331 512.0544   3.256119 #> 332 500.4710   2.662399 #> 333 509.7262   3.148660 #> 334 500.3737   2.687873 #> 335 512.7467   2.752973 #> 336 510.1892   2.815185 #> 337 500.0335   3.914495 #> 338 501.0396   3.164191 #> 339 500.4271   3.205084 #> 340 504.3612   2.864392 #> 341 529.1381   2.606583 #> 342 500.1804   3.033537 #> 343 502.2877   3.025186 #> 344 500.7540   2.653833 #> 345 502.8126   3.111842 #> 346 500.6559   2.793581 #> 347 779.1073   3.477234 #> 348 501.0189   2.684993 #> 349 500.1561   2.684832 #> 350 528.0172   3.039386 #> 351 500.2994   2.825357 #> 352 524.0242   2.979019 #> 353 504.8111   2.597937 #> 354 617.1454   3.265621 #> 355 500.1203   2.614331 #> 356 500.5309   2.660081 #> 357 598.0417   2.567236 #> 358 507.9107   2.814578 #> 359 500.6402   2.625631 #> 360 500.0233   2.920562 #> 361 586.7744   2.539134 #> 362 540.1947   3.276720 #> 363 501.7845   3.685973 #> 364 547.9815   2.686357 #> 365 502.8426   3.406734 #> 366 500.0349   2.606855 #> 367 501.2638   2.607150 #> 368 548.0047   2.694434 #> 369 543.1153   2.642237 #> 370 501.0585   2.679851 #> 371 500.3768   4.890732 #> 372 505.8036   4.074873 #> 373 510.8672   3.141101 #> 374 512.0641   2.676140 #> 375 512.0839   3.153628 #> 376 553.9221   2.659655 #> 377 504.0839   2.952114 #> 378 507.6637   2.575321 #> 379 500.3411   3.016683 #> 380 535.6026   2.503982 #> 381 597.8580   4.099629 #> 382 500.9435   2.624922 #> 383 500.7437   2.681376 #> 384 501.8491   3.463960 #> 385 500.1628   2.746486 #> 386 953.4001   2.653001 #> 387 502.0908   2.751692 #> 388 880.2521   2.898311 #> 389 516.5202   3.039224 #> 390 907.2995   2.832480 #> 391 500.2048   2.544710 #> 392 540.2656   3.152967 #> 393 531.4897   2.924695 #> 394 502.2063   2.795418 #> 395 925.1635   2.510516 #> 396 505.2051   2.513095 #> 397 550.4077   4.460278 #> 398 569.5329   2.675579 #> 399 500.9116   2.603346 #> 400 543.9344   3.017353 #> 401 511.5413   4.061486 #> 402 508.3472   3.125744 #> 403 583.4423   2.919641 #> 404 515.8201   2.549774 #> 405 519.6707   3.009535 #> 406 525.4416   3.047211 #> 407 501.2150   3.828650 #> 408 504.1477   4.864275 #> 409 589.8417   2.560807 #> 410 510.5240   3.243196 #> 411 500.1581   2.788927 #> 412 500.0861   2.528479 #> 413 529.8734   2.746237 #> 414 504.6246   2.517790 #> 415 502.5992   2.634877 #> 416 506.4815   3.492077 #> 417 525.7373   2.673934 #> 418 503.2031   2.518509 #> 419 500.3129   3.300223 #> 420 572.3348   2.734861 #> 421 500.2984   2.732254 #> 422 500.2017   2.699773 #> 423 516.2716   2.778621 #> 424 642.4790   2.531789 #> 425 502.4055   2.645837 #> 426 500.9115   2.591673 #> 427 500.1530   3.090348 #> 428 500.2551   2.697127 #> 429 504.4665   2.574255 #> 430 503.2390   3.028452 #> 431 516.3852   2.671493 #> 432 501.0303   2.973151 #> 433 505.7946   2.746094 #> 434 502.5785   2.776387 #> 435 509.4982   3.001465 #> 436 500.0306   3.118238 #> 437 500.3119   2.657586 #> 438 501.0078   2.547555 #> 439 588.5339   2.602254 #> 440 520.3085   3.112857 #> 441 510.8746   2.807125 #> 442 500.1811   3.668628 #> 443 503.3871   3.612919 #> 444 500.0526   4.213278 #> 445 500.0278   2.722196 #> 446 505.3635   2.688817 #> 447 674.4976   2.512405 #> 448 592.1259   3.566967 #> 449 518.0596   2.935565 #> 450 500.0531   2.714018 #> 451 500.6928   2.693365 #> 452 505.7328   2.520442 #> 453 500.6034   3.088711 #> 454 916.5901   2.935921 #> 455 500.6553   3.140643 #> 456 500.0906   2.660543 #> 457 537.3736   3.019404 #> 458 500.1621   2.580453 #> 459 502.2098   2.678950 #> 460 504.3295   2.533865 #> 461 514.2909   2.791379 #> 462 501.8633   3.372171 #> 463 501.0696   2.930444 #> 464 567.3128   2.832956 #> 465 510.8220   3.205171 #> 466 500.0845   3.369057 #> 467 507.8636   3.527264 #> 468 500.0840   2.764378 #> 469 503.1623   3.314352 #> 470 504.9424   2.975000 #> 471 500.1132   3.064775 #> 472 500.0257   2.673992 #> 473 500.5414   2.753780 #> 474 501.2137   3.433969 #> 475 528.6287   2.630682 #> 476 751.7028   3.488996 #> 477 500.3197   3.346962 #> 478 509.9868   2.630861 #> 479 511.6711   3.204323 #> 480 632.4466   3.046489 #> 481 500.3570   2.799976 #> 482 501.4381   2.959448 #> 483 500.4424   2.556150 #> 484 502.4682   2.708017 #> 485 506.9996   4.062020 #> 486 501.7420   3.353001 #> 487 500.0190   2.532097 #> 488 503.8767   2.996706 #> 489 527.7727   2.510382 #> 490 500.0887   2.638459 #> 491 837.6264   2.565602 #> 492 526.8094   2.819082 #> 493 500.1291   2.746813 #> 494 500.9260   2.641322 #> 495 796.8435   2.728839 #> 496 501.7603   2.960108 #> 497 520.8734   2.581239 #> 498 500.0064   3.088225 #> 499 513.4157   2.631205 #> 500 586.2235   3.087622 #> 501 500.4253   2.557170 #> 502 521.5448   2.543131 #> 503 502.2962   3.063406 #> 504 508.4876   2.590745 #> 505 500.0516   3.563740 #> 506 638.9434   2.649115 #> 507 501.3108   5.089313 #> 508 534.0155   3.080311 #> 509 500.5107   2.764858 #> 510 500.2196   2.659885 #> 511 504.4377   2.617775 #> 512 574.7309   2.787573 #> 513 604.5841   2.518097 #> 514 530.7815   2.805320 #> 515 754.7198   3.319232 #> 516 504.2025   2.804211 #> 517 520.5894   2.775850 #> 518 500.1150   3.092998 #> 519 510.4187   2.953107 #> 520 560.9234   2.662537 #> 521 679.4584   2.731176 #> 522 517.8153   3.061270 #> 523 500.2219   2.710781 #> 524 504.6053   2.851259 #> 525 500.0316   3.616399 #> 526 518.6802   2.680101 #> 527 523.1889   2.577989 #> 528 732.9005   3.951006 #> 529 515.8105   3.422537 #> 530 500.4284   3.838292 #> 531 537.8594   2.679064 #> 532 643.7868   2.614478 #> 533 502.7134   2.652905 #> 534 786.8822   2.903542 #> 535 500.2758   2.831889 #> 536 500.3365   2.663787 #> 537 500.0979   2.760257 #> 538 501.6741   2.929782 #> 539 527.8842   2.673426 #> 540 691.6115   3.304967 #> 541 500.0478   3.326553 #> 542 502.7514   2.619670 #> 543 538.7389   2.615789 #> 544 920.8773   2.995804 #> 545 500.9014   2.635079 #> 546 500.2517   2.598725 #> 547 500.0825   2.549596 #> 548 510.6870   2.692318 #> 549 500.4697   3.078166 #> 550 534.0163   3.017111 #> 551 501.0301   2.722936 #> 552 730.2283   2.598529 #> 553 500.1799   2.948459 #> 554 788.2780   2.699125 #> 555 503.0246   2.679005 #> 556 500.0111   2.878124 #> 557 500.2757   2.924783 #> 558 500.9441   3.653707 #> 559 507.1032   2.738473 #> 560 500.1463   2.619132 #> 561 507.2141   2.724412 #> 562 500.0069   2.887429 #> 563 500.5193   2.557675 #> 564 500.1140   2.983909 #> 565 507.9522   3.271160 #> 566 503.2599   2.916418 #> 567 545.7057   2.906357 #> 568 520.6998   3.184343 #> 569 579.2232   2.549835 #> 570 500.8618   2.700701 #> 571 512.8864   2.786471 #> 572 500.4797   3.535939 #> 573 512.9809   2.813363 #> 574 687.7197   2.911644 #> 575 501.5975   2.575604 #> 576 669.0566   3.393294 #> 577 500.0283   2.686069 #> 578 500.3456   2.500334 #> 579 526.7778   2.576450 #> 580 500.4373   2.686925 #> 581 941.4738   2.730409 #> 582 500.0215   2.932162 #> 583 517.8581   2.853926 #> 584 500.0712   2.534839 #> 585 646.3552   3.695450 #> 586 500.2957   2.651478 #> 587 500.2374   2.545509 #> 588 500.4400   3.014739 #> 589 501.1782   2.626486 #> 590 500.0292   2.575709 #> 591 704.3980   2.605000 #> 592 501.1011   2.860594 #> 593 508.3146   2.627709 #> 594 526.1157   2.654823 #> 595 502.2530   2.910845 #> 596 519.7879   3.075460 #> 597 500.9972   3.173691 #> 598 506.2954   2.895656 #> 599 502.0148   3.052941 #> 600 500.9749   3.045389 #> 601 537.8453   3.095324 #> 602 522.0441   2.725106 #> 603 632.4058   2.995132 #> 604 501.4653   3.269774 #> 605 519.1109   2.864999 #> 606 537.3017   2.713615 #> 607 500.6213   2.572821 #> 608 523.7875   2.864617 #> 609 500.0380   2.598160 #> 610 500.2686   3.211746 #> 611 557.7704   2.532187 #> 612 500.2383   2.624555 #> 613 500.2528   2.701358 #> 614 501.8479   2.650332 #> 615 500.6370   3.925584 #> 616 501.4284   3.377564 #> 617 501.1619   2.542242 #> 618 500.1366   3.074449 #> 619 561.1529   2.849338 #> 620 500.1705   2.698854 #> 621 554.9106   2.572126 #> 622 851.6985   3.289969 #> 623 504.2251   2.602935 #> 624 501.7851   2.638204 #> 625 500.0236   2.650767 #> 626 500.0704   2.906673 #> 627 500.1881   2.542377 #> 628 559.9736   2.890034 #> 629 500.2549   2.814797 #> 630 524.3961   2.703344 #> 631 619.0673   3.056457 #> 632 500.0410   2.502145 #> 633 501.2603   2.682258 #> 634 521.5958   2.680610 #> 635 503.7591   2.518104 #> 636 520.6542   2.760257 #> 637 597.6752   3.078969 #> 638 784.9123   2.656261 #> 639 577.5564   2.533826 #> 640 544.1425   3.420116 #> 641 500.5792   3.148602 #> 642 500.3463   2.802708 #> 643 501.3158   3.213243 #> 644 506.0369   3.146532 #> 645 501.0352   3.034741 #> 646 510.3147   3.410558 #> 647 502.2232   2.518651 #> 648 500.4995   3.197075 #> 649 500.0332   2.700809 #> 650 717.6679   3.087027 #> 651 500.0095   3.533585 #> 652 527.9356   2.809449 #> 653 500.0007   3.017500 #> 654 507.1892   2.596062 #> 655 542.9172   3.501079 #> 656 507.3776   3.286357 #> 657 500.7118   2.720648 #> 658 511.1998   2.517441 #> 659 517.9269   2.677606 #> 660 501.4556   3.589368 #> 661 590.9914   2.778520 #> 662 500.3535   3.143078 #> 663 509.1682   2.843308 #> 664 500.1591   2.592992 #> 665 503.3314   3.223196 #> 666 500.9437   3.507120 #> 667 500.0521   2.838546 #> 668 503.3335   3.051867 #> 669 500.1460   2.738981 #> 670 500.0879   2.725105 #> 671 544.0992   2.650544 #> 672 500.3132   3.069607 #> 673 500.0622   2.634907 #> 674 500.4787   2.545603 #> 675 505.1837   2.559541 #> 676 695.1933   3.101866 #> 677 507.9159   2.761424 #> 678 500.1310   3.161967 #> 679 500.9448   2.723901 #> 680 500.0016   4.029879 #> 681 500.5246   2.508323 #> 682 989.9057   3.489498 #> 683 500.5718   2.693084 #> 684 500.0616   2.527655 #> 685 501.4692   2.629357 #> 686 503.9649   3.089075 #> 687 500.3104   2.606380 #> 688 501.9901   3.000402 #> 689 522.4622   2.523537 #> 690 503.5499   3.084052 #> 691 500.1709   2.710649 #> 692 500.9930   3.052125 #> 693 500.0161   3.043344 #> 694 500.1018   2.536193 #> 695 500.1310   2.727398 #> 696 500.5375   3.236484 #> 697 500.3325   3.263869 #> 698 596.6621   2.507911 #> 699 509.9066   3.097720 #> 700 500.1551   3.130484 #> 701 721.4631   3.260529 #> 702 501.7500   2.742473 #> 703 901.7866   4.338461 #> 704 501.7225   3.803666 #> 705 513.5681   2.960282 #> 706 505.7557   2.852551 #> 707 503.9339   3.578964 #> 708 501.6728   3.830872 #> 709 500.1168   2.747082 #> 710 827.4067   2.533993 #> 711 500.1837   2.869441 #> 712 511.1972   2.566009 #> 713 514.3711   2.585529 #> 714 500.0376   2.958041 #> 715 500.6289   2.939800 #> 716 500.0241   2.689158 #> 717 564.1232   2.684734 #> 718 500.0465   3.023083 #> 719 500.0557   2.561807 #> 720 500.5041   2.831865 #> 721 500.2987   3.068023 #> 722 505.2345   2.500392 #> 723 500.6591   2.704776 #> 724 523.4496   2.568742 #> 725 500.3990   2.580053 #> 726 500.3697   2.665589 #> 727 500.4123   2.830116 #> 728 500.1176   2.914672 #> 729 500.3337   2.566352 #> 730 510.8614   2.784882 #> 731 510.6953   2.950991 #> 732 501.8707   3.209882 #> 733 500.0855   2.685147 #> 734 503.6035   3.286959 #> 735 519.1224   2.894698 #> 736 516.3545   3.174071 #> 737 500.4574   2.657270 #> 738 505.6254   2.584351 #> 739 723.8259   2.718360 #> 740 701.7241   2.588807 #> 741 500.7540   2.547738 #> 742 500.0954   2.500640 #> 743 502.1224   2.562076 #> 744 500.0623   2.707439 #> 745 558.7339   2.631729 #> 746 500.0777   2.651571 #> 747 889.1727   3.462106 #> 748 551.5508   3.240556 #> 749 516.1679   2.632764 #> 750 500.3552   3.112997 #> 751 509.0579   2.726164 #> 752 500.0067   2.598200 #> 753 501.2819   2.734215 #> 754 505.0680   2.808375 #> 755 525.1934   2.587646 #> 756 950.7062   3.196431 #> 757 882.6316   2.626138 #> 758 500.1623   2.626728 #> 759 500.0474   2.500469 #> 760 500.0257   2.611976 #> 761 548.4637   3.205333 #> 762 694.7750   2.544600 #> 763 500.1075   2.945270 #> 764 858.2900   2.530389 #> 765 500.1259   2.701308 #> 766 500.1071   3.107207 #> 767 692.9106   2.837632 #> 768 507.8151   2.519908 #> 769 809.0791   2.558697 #> 770 681.3448   4.438245 #> 771 500.2844   3.350937 #> 772 500.0674   3.817688 #> 773 681.1775   4.221455 #> 774 500.1657   2.542746 #> 775 500.1170   2.930874 #> 776 528.9897   2.581294 #> 777 502.4069   2.909960 #> 778 549.0765   2.514905 #> 779 553.0187   2.789524 #> 780 500.1229   2.992038 #> 781 500.2703   2.563946 #> 782 675.8671   3.106749 #> 783 500.0816   2.703766 #> 784 507.4130   2.510701 #> 785 518.1070   3.034670 #> 786 526.8028   2.709199 #> 787 576.2516   2.530472 #> 788 526.3690   2.837350 #> 789 512.9450   2.746185 #> 790 658.0347   2.672481 #> 791 575.1904   2.661626 #> 792 501.6334   2.536877 #> 793 788.0999   2.581151 #> 794 501.6694   2.660322 #> 795 507.4286   2.917616 #> 796 836.3574   2.911468 #> 797 511.0186   3.384254 #> 798 508.4967   2.719330 #> 799 501.1658   2.860647 #> 800 505.5816   2.506595 #> 801 501.0783   3.662467 #> 802 669.5002   2.557270 #> 803 589.5469   3.037822 #> 804 945.0598   2.661102 #> 805 500.3734   2.969553 #> 806 524.7464   4.373810 #> 807 501.4814   3.092125 #> 808 500.0017   2.695321 #> 809 521.0570   2.518343 #> 810 654.2278   2.507416 #> 811 500.0723   4.138625 #> 812 757.1260   2.917830 #> 813 501.9166   2.682802 #> 814 504.5106   2.681485 #> 815 509.7009   2.594272 #> 816 546.5738   2.926578 #> 817 500.0727   2.640086 #> 818 507.0843   2.539111 #> 819 500.2041   2.656052 #> 820 502.0182   4.186475 #> 821 832.5494   2.627351 #> 822 518.7969   2.658089 #> 823 521.9352   2.894946 #> 824 500.8213   2.670092 #> 825 505.0829   2.569043 #> 826 501.4806   2.586507 #> 827 503.6830   2.633928 #> 828 500.1851   3.011138 #> 829 532.9936   3.178925 #> 830 500.5084   3.322475 #> 831 500.2008   2.554193 #> 832 514.9557   2.544245 #> 833 500.1361   2.591177 #> 834 531.6003   2.608621 #> 835 531.9139   2.515045 #> 836 500.0120   2.519339 #> 837 500.2100   2.964787 #> 838 506.5653   3.147595 #> 839 561.1871   3.329701 #> 840 501.0439   2.651381 #> 841 541.0155   3.171856 #> 842 525.8836   2.978801 #> 843 714.0430   2.764734 #> 844 501.0762   2.544568 #> 845 507.4415   2.652590 #> 846 501.2051   3.106410 #> 847 504.6161   2.818339 #> 848 682.2844   2.600889 #> 849 589.6426   2.917812 #> 850 500.0441   3.115090 #> 851 689.8923   2.810681 #> 852 500.4790   2.642648 #> 853 510.0667   2.627031 #> 854 500.7981   2.514572 #> 855 504.2573   3.219730 #> 856 515.9446   2.811090 #> 857 516.3931   2.850436 #> 858 500.6004   2.598841 #> 859 879.0326   2.922325 #> 860 500.9601   2.540281 #> 861 502.6669   2.511344 #> 862 505.8720   3.041680 #> 863 500.1988   2.560125 #> 864 500.0750   3.134116 #> 865 766.0828   3.334966 #> 866 515.3621   2.952817 #> 867 500.0244   2.693886 #> 868 513.6397   2.802618 #> 869 500.1149   2.616233 #> 870 500.3167   2.731590 #> 871 500.9993   4.577026 #> 872 500.2599   2.537189 #> 873 500.7864   2.599912 #> 874 535.1310   3.034922 #> 875 708.0734   2.770404 #> 876 517.1365   2.509635 #> 877 504.5654   3.052435 #> 878 502.0389   2.541651 #> 879 670.5507   3.087490 #> 880 500.4244   2.984707 #> 881 501.5256   3.267580 #> 882 544.6724   2.705431 #> 883 521.8466   2.688140 #> 884 506.0869   3.444738 #> 885 500.8169   2.755285"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
