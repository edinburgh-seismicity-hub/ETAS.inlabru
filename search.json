[{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  ggplot() +   geom_point(data = samp.etas.list[[1]], aes(x = ts, y = magnitudes), color = \"red\") +   geom_point(data = samp.etas.list[[2]], aes(x = ts, y = magnitudes), color = \"green\") +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") combined.M7.ETAS.cat <- bind_rows(samp.etas.list)  combined.M7.ETAS.cat <- bind_rows(samp.etas.list) combined.M7.ETAS.cat <- combined.M7.ETAS.cat[order(combined.M7.ETAS.cat$ts), ]  combined.M7.ETAS.cat$ID <- seq(1, length(combined.M7.ETAS.cat$ts))  ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase num.threads if you have more cores on your computer INLA::inla.setOption(num.threads = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.258337  #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.2406833  #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 3, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  6.16398 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 92.41%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 124.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1950% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 85.39%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1960% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 128.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1280% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 105.9%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 660% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 89.57%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 216% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 108.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 193% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 101.7%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 174% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 142% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.5%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 126% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 116% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 107% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 99% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 91.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 85% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 79% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 73.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 68.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.3%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 63.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 59.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 55.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 51.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 48.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 45.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 42.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.2%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 39.6% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 37% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 34.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 32.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 30.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 25% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 22% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 20.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 40 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 41 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 42 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 43 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 44 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 45 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 46 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 47 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 48 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.66% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 49 [max:100] #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  5.943867 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> iinla: Step rescaling: 86.22%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 99.92%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 42% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 102%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.2% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.4%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100.1%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> iinla: Step rescaling: 162%, Expand #> iinla: Step rescaling: 100%, Overstep #> iinla: Step rescaling: 100%, Optimisation #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 7.25% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 7 [max:100] #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 27 rows containing missing values (`geom_line()`). #> Warning: Removed 3 rows containing missing values (`geom_line()`). #> Warning: Removed 132 rows containing missing values (`geom_line()`). #> Warning: Removed 13 rows containing missing values (`geom_line()`). #> Warning: Removed 29 rows containing missing values (`geom_line()`). #> Warning: Removed 1 row containing missing values (`geom_line()`). plt #> NULL  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 27 rows containing missing values (`geom_line()`). #> Warning: Removed 3 rows containing missing values (`geom_line()`). #> Warning: Removed 132 rows containing missing values (`geom_line()`). #> Warning: Removed 13 rows containing missing values (`geom_line()`). #> Warning: Removed 29 rows containing missing values (`geom_line()`). #> Warning: Removed 1 row containing missing values (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1299] #> 8 8 (1-3,1-1) arrange text[GRID.text.1300]  # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exists, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p \\geq 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"Tutorial on real data","text":"bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter rate b. distribution mean \\texttt{}/\\texttt{b} variance \\(\\texttt{}/\\texttt{b}^2\\). unit_t(X, , b) Uniform distribution b. exp_t(X, r) Exponential distribution rate r. loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm m standard deviation logarithm s. code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. subset (see data-raw/horus.R subset created) information Horus catalogue can loaded using data reports earthquake longitude (lon) latitude (lat) epicentre, moment magnitude (M), time string (time_string), depth kilometres (depth), catalogue event IDs. focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load ISIDE catalogue data(horus, package = \"ETAS.inlabru\") head(horus) #>       lon     lat    M            time_string depth catalog_id event_id #> 1 15.3000 39.3000 6.34 1960-01-03T20:19:34.00   290         -1       NA #> 2 13.1667 43.1333 3.94 1960-01-04T09:20:00.00     0         -1       NA #> 3 12.7000 46.4833 4.69 1960-01-06T15:17:34.00     4         -1       NA #> 4 12.7000 46.4667 4.14 1960-01-06T15:20:53.00     0         -1       NA #> 5 12.7500 46.4333 3.00 1960-01-06T15:31:00.00     0         -1       NA #> 6 12.7500 46.4333 3.00 1960-01-06T15:45:00.00     0         -1       NA # transform time string in Date object time_string <- gsub(\"T\", \" \", horus$time_string) horus$time_date <- as.POSIXct(time_string,   format = \"%Y-%m-%d %H:%M:%OS\" )  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01 00:00:00\", format = \"%Y-%m-%d %H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. num.threads: number cores used parallel. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created .","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(difftime(aquila$time_date, start.date,     units = \"days\"   )),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   num.threads = 2, # Increase this if your computer has multiple cores   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  2.259333"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 )  head(post.samp) #>          mu         K    alpha          c        p #> 1 0.3197177 0.1564862 2.433964 0.06676420 1.195455 #> 2 0.3150651 0.1652886 2.403305 0.06398792 1.180385 #> 3 0.3345541 0.1176649 2.450581 0.08004924 1.208922 #> 4 0.3409261 0.1664701 2.435723 0.04999088 1.147671 #> 5 0.2789644 0.1356041 2.477546 0.06312179 1.163861 #> 6 0.2735085 0.1451184 2.441087 0.07113636 1.187885 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = 3 ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 32 rows containing non-finite values (`stat_bin()`). #> Warning: Removed 2 rows containing missing values (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL,   ncore = 1 ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     288     112     176 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.5635509"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) head(post.samp) #>          mu          K    alpha         c        p #> 1 0.3313594 0.06213181 2.622306 0.1370523 1.301888 #> 2 0.2944582 0.04940535 2.584373 0.1482548 1.236385 #> 3 0.3617445 0.05013471 2.501793 0.2749193 1.455744 #> 4 0.3461104 0.06513873 2.406373 0.2820508 1.446610 #> 5 0.2880405 0.03930956 2.585837 0.2202680 1.329543 #> 6 0.3142970 0.04254604 2.471594 0.3291435 1.393758"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>          N N.bkg N.after #> first  288   112     176 #> second 408   104     304 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.9975915 input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Francesco Serafini Dr Mark Naylor , School GeoSciences, University Edinburgh Prof Finn Lindgren, School Mathematics, University Edinburgh Dr Kirsty Bayliss, Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"study funded yhe Real-Time Earthquake Risk Reduction Resilient Europe RISE project , received funding European Union’s Horizon 2020 Research Innovation Program grant Agreement 821115. Naylor additionally funded NSFGEO-NERC grant NE/R000794/1. Bayliss funded EPSRC Studentship.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Implement pre-model domain history Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@newcastle.ac.uk (ORCID) Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore number cores used generate synthetic catalogues parallel.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x561923dbe7b0> #> <environment: 0x561923dc1000> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x561923dbe4d8> #> <environment: 0x561923dc1000> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x561923dbe200> #> <environment: 0x561923dc1000> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x561923dc1d58> #> <environment: 0x561923dc1000> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x561923dc1a80> #> <environment: 0x561923dc1000> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   ncore = 1 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. ncore Integer number compute cores use.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"data.frame temporal catalogue columns [t_i, M_i, gen_i] , t_i times,  M_i magnitudes, gen_i includes information generation number","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>             ts magnitudes gen #> 1   720.471864   2.746993   1 #> 2   293.075380   2.507761   1 #> 3     7.699662   3.331509   1 #> 4   174.579627   3.027110   1 #> 5   193.017135   2.759766   1 #> 6   525.305241   2.834794   1 #> 7   785.464079   2.954751   1 #> 8   362.317166   2.934105   1 #> 9   565.678227   2.658012   1 #> 10  308.683747   2.609309   1 #> 11  648.359106   2.758474   1 #> 12  527.792439   2.553681   1 #> 13  404.871901   4.370372   1 #> 14  511.201096   2.789795   1 #> 15  838.135122   2.587547   1 #> 16  302.467559   2.629952   1 #> 17  743.830311   2.832280   1 #> 18  128.684251   2.786711   1 #> 19  189.300024   2.834175   1 #> 20  504.053626   3.220508   1 #> 21  262.654259   3.158096   1 #> 22  217.297684   3.898947   1 #> 23  911.286694   2.896612   1 #> 24  321.732426   3.383310   1 #> 25  211.832747   3.198266   1 #> 26  289.507833   2.804687   1 #> 27  130.899153   3.768826   1 #> 28  200.301396   2.681137   1 #> 29  404.002424   3.245046   1 #> 30   12.642699   3.068183   1 #> 31  322.950856   2.591396   1 #> 32  881.448726   4.165258   1 #> 33  724.472555   2.500915   1 #> 34  883.871576   2.527342   1 #> 35  270.449969   2.977586   1 #> 36  951.053496   2.814877   1 #> 37  358.571436   2.573584   1 #> 38  815.112113   2.605660   1 #> 39  354.765938   3.788820   1 #> 40  414.813271   2.664797   1 #> 41  342.430099   2.706513   1 #> 42  828.637618   2.524250   1 #> 43  350.779586   2.831077   1 #> 44   96.662683   2.605008   1 #> 45  669.376907   4.131641   1 #> 46  400.623878   4.262414   1 #> 47  356.346982   3.657898   1 #> 48  746.502197   3.018824   1 #> 49  956.476921   3.375027   1 #> 50  348.616890   2.601674   1 #> 51  392.414066   2.761428   1 #> 52  632.722197   3.013369   1 #> 53  123.796227   2.567853   1 #> 54  853.268577   2.619723   1 #> 55  486.142022   2.835561   1 #> 56  206.132406   2.575658   1 #> 57  913.903958   2.523542   1 #> 58  281.607896   2.547851   1 #> 59  141.376278   3.303371   1 #> 60  189.505591   3.404559   1 #> 61  309.904865   2.831130   1 #> 62  867.901917   3.270383   1 #> 63  542.515111   2.767668   1 #> 64  790.057178   2.720401   1 #> 65   64.895954   5.020173   1 #> 66  999.028105   2.529638   1 #> 67  612.378929   2.615560   1 #> 68  852.358372   2.795769   1 #> 69  383.710590   3.046463   1 #> 70  451.509298   2.574443   1 #> 71  665.958353   2.627527   1 #> 72  879.873066   2.523724   1 #> 73  696.918771   3.076322   1 #> 74  873.721730   3.049149   1 #> 75  458.617725   2.660311   1 #> 76    8.255014   3.945420   1 #> 77  344.609502   3.227069   1 #> 78  881.766315   2.725572   1 #> 79  576.767957   3.046169   1 #> 80  434.853686   2.639847   1 #> 81  300.217465   2.936485   1 #> 82  650.591618   2.677782   1 #> 83  489.617532   2.831414   1 #> 84  458.502937   2.551733   1 #> 85  936.452461   2.531054   1 #> 86  933.793977   3.033792   1 #> 87    4.781441   2.792632   1 #> 88   90.231656   2.737396   1 #> 89  147.925664   3.050011   1 #> 90   77.205027   2.555727   1 #> 91  417.782518   2.523174   1 #> 92  501.784390   2.598215   1 #> 93  742.319413   2.633029   1 #> 94  186.524763   2.535576   1 #> 95  870.115462   2.894652   1 #> 96  200.783808   2.537767   1 #> 97  816.423206   2.593957   1 #> 98  268.332635   2.771429   1 #> 99  789.750357   2.529278   1 #> 100 302.636540   2.691054   1 #> 101 426.347884   2.867388   1 #> 102 114.068426   2.616722   1 #> 103 395.398311   2.535001   1 #> 104 230.475067   3.678402   1 #> 105 337.671870   2.822342   1 #> 106 243.896332   3.260681   1 #> 107  63.557605   3.316233   1 #> 108 723.535568   2.973925   1 #> 109 290.692518   3.338954   1 #> 110 252.275400   3.026648   1 #> 111  12.134335   2.908049   1 #> 112 396.181346   2.974529   1 #> 113 344.303733   3.558325   1 #> 114 245.769011   2.608670   1 #>  #> [[2]] #>           ts magnitudes gen #> 1  335.56662   2.653597   2 #> 2  405.67997   2.670204   2 #> 3  417.18075   2.667894   2 #> 4  405.01578   3.163814   2 #> 5  407.00121   4.066729   2 #> 6  405.01898   2.524557   2 #> 7  302.74017   2.688139   2 #> 8  262.66700   2.882575   2 #> 9  220.70564   3.478580   2 #> 10 372.83555   3.006025   2 #> 11  77.36482   2.768523   2 #> 12 942.68564   3.466252   2 #> 13 884.92326   3.385094   2 #> 14 884.78445   2.777483   2 #> 15 271.39032   2.776254   2 #> 16 272.43857   3.171861   2 #> 17 347.41170   2.830344   2 #> 18 748.54051   2.684497   2 #> 19 669.68227   2.567224   2 #> 20 669.63046   2.687124   2 #> 21 691.08513   2.808375   2 #> 22 426.55607   2.543507   2 #> 23 408.42402   3.036374   2 #> 24 421.44816   2.968904   2 #> 25 401.79251   3.184298   2 #> 26 407.03818   2.566043   2 #> 27 489.67355   2.865950   2 #> 28 400.64045   2.723407   2 #> 29 887.89887   2.515875   2 #> 30  65.66040   3.413951   2 #> 31  72.38775   2.979359   2 #> 32  66.00741   2.673757   2 #> 33  77.06209   3.178437   2 #> 34  74.30517   4.004075   2 #> 35  65.42005   2.521026   2 #> 36  65.04089   3.198529   2 #> 37  65.33141   3.315619   2 #> 38  66.59509   2.874047   2 #> 39  68.94954   3.714780   2 #> 40  85.90826   2.677256   2 #> 41  66.12093   4.628020   2 #> 42  65.21741   3.002696   2 #> 43  71.86548   2.862192   2 #> 44 243.98935   2.532441   2 #> 45  66.00178   4.066236   2 #> 46  65.01780   3.397008   2 #> 47  71.12647   3.865596   2 #> 48 113.64191   3.172146   2 #> 49 696.36349   2.515221   2 #> 50 874.69641   3.053470   2 #> 51  35.90959   3.929471   2 #> 52  11.48236   2.696880   2 #> 53 101.50274   2.523863   2 #> 54 356.28761   3.320741   2 #> 55 459.73084   2.592933   2 #> 56 231.52054   2.758730   2 #> 57  66.77231   2.621624   2 #> 58  74.27259   2.960092   2 #> 59 298.50007   2.835139   2 #> 60 774.88116   3.124384   2 #>  #> [[3]] #>           ts magnitudes gen #> 1  439.36423   2.734015   3 #> 2  407.32259   3.912349   3 #> 3  418.83357   2.628479   3 #> 4  407.21866   2.617985   3 #> 5  848.56905   2.625221   3 #> 6  960.75564   4.032972   3 #> 7  628.61710   2.585405   3 #> 8  121.97319   5.015881   3 #> 9   72.46582   2.734941   3 #> 10  74.31795   2.599470   3 #> 11 697.40508   3.493497   3 #> 12 622.29650   3.081612   3 #> 13 174.02924   2.747039   3 #> 14  67.19903   3.345725   3 #> 15  66.28606   3.385725   3 #> 16  66.28819   2.524967   3 #> 17  75.32072   3.662771   3 #> 18  82.60883   2.772312   3 #> 19  97.58240   2.526197   3 #> 20 612.81768   2.670398   3 #> 21  66.06390   2.540343   3 #> 22 210.72083   2.850438   3 #> 23  71.12769   3.290419   3 #> 24  38.68276   3.358283   3 #> 25  67.71090   3.654103   3 #> 26 854.77840   3.416329   3 #>  #> [[4]] #>           ts magnitudes gen #> 1  430.65207   3.143574   4 #> 2  433.85987   2.721381   4 #> 3  331.48146   2.928789   4 #> 4  122.74946   3.383761   4 #> 5  122.04590   2.977142   4 #> 6  122.92663   2.805260   4 #> 7  122.91032   2.888679   4 #> 8  122.26121   2.603675   4 #> 9  122.21175   2.790646   4 #> 10 167.41407   2.702851   4 #> 11 174.48288   2.975334   4 #> 12 273.56482   3.768023   4 #> 13 290.86231   3.228523   4 #> 14 205.89662   2.858491   4 #> 15 123.62895   3.587656   4 #> 16 131.98281   3.077882   4 #> 17 123.34323   2.641697   4 #> 18 129.86596   2.682088   4 #> 19 702.20003   2.583355   4 #> 20 702.03121   2.674082   4 #> 21  75.47215   3.053879   4 #> 22 222.07775   2.989254   4 #> 23 104.58909   2.509341   4 #> 24  78.86641   2.562280   4 #> 25 254.12814   2.684135   4 #>  #> [[5]] #>         ts magnitudes gen #> 1 122.4671   2.854566   5 #> 2 167.6735   2.554513   5 #> 3 352.3547   3.332152   5 #> 4 195.0794   2.611515   5 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>              ts magnitudes gen #> 1    511.883483   2.545777   0 #> 2    500.012566   2.555373   0 #> 3    505.095624   2.584354   0 #> 4    565.875677   2.823714   0 #> 5    546.419005   3.092640   0 #> 6    505.103739   2.911143   0 #> 7    587.219364   2.865335   0 #> 8    537.930095   3.085209   0 #> 9    505.582165   3.701219   0 #> 10   501.105233   2.832221   0 #> 11   502.019400   2.583721   0 #> 12   527.310428   2.640215   0 #> 13   501.590649   2.993092   0 #> 14   747.501180   3.446868   0 #> 15   517.490295   2.632922   0 #> 16   512.099249   3.028348   0 #> 17   503.162116   2.607819   0 #> 18   501.042452   2.639388   0 #> 19   522.796309   3.490151   0 #> 20   514.892883   2.676713   0 #> 21   502.026724   2.643242   0 #> 22   501.412741   2.590058   0 #> 23   501.784381   2.903615   0 #> 24   500.049325   2.827247   0 #> 25   500.065971   2.736552   0 #> 26   550.632041   2.585117   0 #> 27   508.011605   2.551609   0 #> 28   522.592572   2.507865   0 #> 29   500.419425   2.786212   0 #> 30   506.491486   2.644868   0 #> 31   501.428671   2.670622   0 #> 32   500.185837   3.095056   0 #> 33   528.734304   2.778840   0 #> 34   513.959403   2.956589   0 #> 35   688.602288   3.280986   0 #> 36   840.825060   3.192897   0 #> 37   708.212666   2.676821   0 #> 38   500.042494   2.699907   0 #> 39   500.203261   2.980552   0 #> 40   500.110407   3.323782   0 #> 41   501.179677   3.369447   0 #> 42   502.798232   2.528609   0 #> 43   500.322025   2.774986   0 #> 44   514.406097   2.706656   0 #> 45   502.025855   3.282046   0 #> 46   504.891180   2.543888   0 #> 47   500.376657   2.942027   0 #> 48   509.121052   2.880783   0 #> 49   500.238870   3.054738   0 #> 50   500.038678   2.521778   0 #> 51   510.890455   3.165576   0 #> 52   502.125788   2.997353   0 #> 53   500.099276   2.588491   0 #> 54   500.503403   2.501788   0 #> 55   500.121211   4.081647   0 #> 56   500.467685   2.813931   0 #> 57   502.997157   2.643081   0 #> 58   509.916998   2.720048   0 #> 59   823.822314   2.607473   0 #> 60   513.142693   2.825056   0 #> 61   752.070731   3.438167   0 #> 62   590.598581   2.858634   0 #> 63   500.478018   2.713475   0 #> 64   500.036369   2.900930   0 #> 65   503.838057   2.634553   0 #> 66   500.164465   2.753832   0 #> 67   503.074943   2.716831   0 #> 68   669.346813   2.981334   0 #> 69   510.319927   3.555789   0 #> 70   500.052907   2.657919   0 #> 71   549.865029   3.064221   0 #> 72   500.690689   2.581051   0 #> 73   564.120763   2.658521   0 #> 74   505.423108   2.800846   0 #> 75   589.796694   2.705290   0 #> 76   537.150198   2.641878   0 #> 77   506.367728   2.726225   0 #> 78   811.460794   2.837993   0 #> 79   518.258778   2.656296   0 #> 80   500.187145   2.878791   0 #> 81   541.401044   2.844072   0 #> 82   501.342995   3.438050   0 #> 83   512.856648   3.019377   0 #> 84   500.665749   2.833761   0 #> 85   895.508848   2.853882   0 #> 86   584.221271   2.824321   0 #> 87   516.135558   3.483191   0 #> 88   500.927020   2.805544   0 #> 89   500.076583   2.646821   0 #> 90   500.357398   2.815505   0 #> 91   636.493066   3.234515   0 #> 92   516.314096   3.362957   0 #> 93   500.087435   3.819349   0 #> 94   741.039396   2.957769   0 #> 95   544.580133   2.777206   0 #> 96   501.145216   2.782774   0 #> 97   500.042750   2.535547   0 #> 98   500.050190   2.598205   0 #> 99   500.033293   2.838472   0 #> 100  532.179145   2.849952   0 #> 101  536.705968   2.883940   0 #> 102  501.156739   2.587865   0 #> 103  504.145333   3.507918   0 #> 104  500.073316   2.886473   0 #> 105  844.495491   2.930865   0 #> 106  561.161282   4.218743   0 #> 107  521.354953   3.118520   0 #> 108  592.103339   2.829933   0 #> 109  500.182493   2.628629   0 #> 110  503.116955   2.531778   0 #> 111  500.008178   2.559007   0 #> 112  500.347437   2.720009   0 #> 113  602.163265   2.803764   0 #> 114  500.013498   3.394451   0 #> 115  500.989678   2.670915   0 #> 116  559.805358   2.536571   0 #> 117  509.485227   3.228864   0 #> 118  500.715937   2.896313   0 #> 119  606.780269   2.806310   0 #> 120  501.146666   3.234728   0 #> 121  500.243394   2.986619   0 #> 122  557.429534   2.657577   0 #> 123  500.195206   3.288946   0 #> 124  501.315623   4.306798   0 #> 125  500.084043   3.699991   0 #> 126  544.712137   2.946947   0 #> 127  501.761391   3.527580   0 #> 128  717.714896   2.767365   0 #> 129  501.464987   2.508713   0 #> 130  513.376202   2.508941   0 #> 131  506.411209   2.632346   0 #> 132  501.424655   3.478764   0 #> 133  519.456140   2.559258   0 #> 134  529.682709   3.256675   0 #> 135  500.243460   3.455903   0 #> 136  500.696065   2.518973   0 #> 137  907.582113   2.501094   0 #> 138  505.176269   3.148834   0 #> 139  501.132505   2.611612   0 #> 140  526.287518   2.868845   0 #> 141  500.686615   3.156395   0 #> 142  504.828738   2.607173   0 #> 143  543.300234   3.631779   0 #> 144  651.493094   3.084047   0 #> 145  500.103180   2.695828   0 #> 146  507.452552   2.809832   0 #> 147  522.723545   2.589970   0 #> 148  500.279859   4.430834   0 #> 149  506.372116   3.603452   0 #> 150  500.258009   2.938729   0 #> 151  760.945328   2.591114   0 #> 152  531.054104   2.795411   0 #> 153  501.289260   2.546912   0 #> 154  504.900043   3.160711   0 #> 155  500.916029   2.652805   0 #> 156  521.563847   3.188187   0 #> 157  500.561547   2.909820   0 #> 158  500.066687   2.897638   0 #> 159  533.489839   2.909540   0 #> 160  504.207918   3.177460   0 #> 161  517.243872   2.833014   0 #> 162  573.912439   2.545013   0 #> 163  500.305481   2.702027   0 #> 164  501.601701   2.941048   0 #> 165  500.143885   3.231557   0 #> 166  501.202484   3.173397   0 #> 167  507.574106   3.396197   0 #> 168  505.026131   2.674772   0 #> 169  737.585912   2.552904   0 #> 170  500.335870   2.557550   0 #> 171  500.067968   2.943208   0 #> 172  507.225725   3.655856   0 #> 173  513.883907   2.648614   0 #> 174  505.094927   3.130477   0 #> 175  908.906651   2.889458   0 #> 176  691.338049   2.907707   0 #> 177  515.583681   2.505632   0 #> 178  522.071362   2.972354   0 #> 179  500.110157   3.083259   0 #> 180  528.000685   3.904215   0 #> 181  502.460744   2.832384   0 #> 182  500.172320   2.516908   0 #> 183  501.019670   2.513277   0 #> 184  515.253359   2.602124   0 #> 185  507.200865   3.253133   0 #> 186  506.368951   3.917263   0 #> 187  500.881543   2.668378   0 #> 188  500.352445   2.608097   0 #> 189  507.765467   2.866608   0 #> 190  500.458758   2.681912   0 #> 191  522.223420   2.530397   0 #> 192  524.032092   2.574586   0 #> 193  553.659050   2.777915   0 #> 194  724.086821   4.720007   0 #> 195  501.538860   2.545951   0 #> 196  562.314117   3.102760   0 #> 197  500.185855   3.867705   0 #> 198  500.633885   3.080377   0 #> 199  500.450554   2.989797   0 #> 200  607.857127   2.702253   0 #> 201  510.179941   3.026480   0 #> 202  502.723324   2.565943   0 #> 203  515.924280   2.601634   0 #> 204  530.927010   3.477019   0 #> 205  502.002214   2.802103   0 #> 206  500.095861   2.650866   0 #> 207  500.073160   3.111068   0 #> 208  500.573269   2.569597   0 #> 209  552.913969   2.919455   0 #> 210  572.784961   2.584407   0 #> 211  500.214284   2.749968   0 #> 212  500.024603   3.172902   0 #> 213  961.401110   2.871471   0 #> 214  507.774038   2.973250   0 #> 215  602.759268   3.091404   0 #> 216  500.137956   2.516832   0 #> 217  500.105297   3.060268   0 #> 218  501.017670   2.691446   0 #> 219  500.630648   2.873218   0 #> 220  500.229197   2.949426   0 #> 221  501.075719   3.049945   0 #> 222  512.940419   3.170250   0 #> 223  500.255136   3.021201   0 #> 224  502.287033   3.266199   0 #> 225  500.705416   3.832736   0 #> 226  514.215014   3.839468   0 #> 227  501.190502   3.004798   0 #> 228  542.725160   2.833356   0 #> 229  520.486698   2.537413   0 #> 230  510.366729   3.038404   0 #> 231  734.598591   2.771827   0 #> 232  500.067784   2.647606   0 #> 233  502.633981   2.569918   0 #> 234  503.131287   2.712157   0 #> 235  501.971068   3.116210   0 #> 236  500.134417   3.191913   0 #> 237  522.266207   2.716918   0 #> 238  500.033762   3.090424   0 #> 239  501.098565   3.491437   0 #> 240  503.654567   2.789743   0 #> 241  500.129958   3.052498   0 #> 242  500.207392   2.865743   0 #> 243  500.518214   2.779345   0 #> 244  500.826322   2.810890   0 #> 245  519.927125   2.513527   0 #> 246  500.536424   2.742905   0 #> 247  908.440342   3.332011   0 #> 248  584.354851   2.537767   0 #> 249  501.483827   3.071896   0 #> 250  547.480893   2.877796   0 #> 251  519.993517   2.921086   0 #> 252  500.129875   2.550780   0 #> 253  500.865770   3.759557   0 #> 254  551.975905   2.628676   0 #> 255  596.556297   2.762647   0 #> 256  543.623795   2.632552   0 #> 257  500.528909   3.083774   0 #> 258  514.137849   2.501150   0 #> 259  501.668339   3.497158   0 #> 260  500.534754   3.068153   0 #> 261  500.138020   2.763248   0 #> 262  515.589962   3.506219   0 #> 263  618.534716   2.781876   0 #> 264  517.230066   2.514185   0 #> 265  525.003294   2.782137   0 #> 266  575.853098   2.737418   0 #> 267  500.249792   2.798855   0 #> 268  509.334142   2.834008   0 #> 269  503.424759   2.541892   0 #> 270  726.092539   2.844700   0 #> 271  863.720478   2.629570   0 #> 272  500.556653   2.551274   0 #> 273  501.299474   2.868302   0 #> 274  500.011219   2.577089   0 #> 275  559.415749   4.471198   0 #> 276  501.545329   3.401705   0 #> 277  518.003420   2.816266   0 #> 278  785.263986   3.089323   0 #> 279  505.724954   2.582741   0 #> 280  503.503410   4.377702   0 #> 281  731.587168   2.578025   0 #> 282  697.136233   2.957501   0 #> 283  501.487371   2.667055   0 #> 284  502.094066   2.526270   0 #> 285  500.013433   3.235413   0 #> 286  506.761968   2.941694   0 #> 287  500.823307   3.003710   0 #> 288  514.978781   2.600282   0 #> 289  500.204619   2.599690   0 #> 290  518.408810   3.458940   0 #> 291  696.165404   3.017083   0 #> 292  510.522852   3.240766   0 #> 293  506.784163   2.883476   0 #> 294  817.525071   2.521683   0 #> 295  751.767624   2.704404   0 #> 296  513.092607   2.653643   0 #> 297  591.511551   2.673575   0 #> 298  500.284477   3.097717   0 #> 299  524.160012   3.058613   0 #> 300  507.737696   3.135159   0 #> 301  518.758529   2.662840   0 #> 302  528.231554   2.669592   0 #> 303  528.029533   3.059991   0 #> 304  502.329649   2.917973   0 #> 305  503.525295   2.623569   0 #> 306  584.715900   3.063260   0 #> 307  966.553598   2.712562   0 #> 308  501.019518   2.786202   0 #> 309  568.730080   3.076900   0 #> 310  510.029986   4.153493   0 #> 311  500.003501   2.805523   0 #> 312  883.015311   2.990520   0 #> 313  500.263757   2.781433   0 #> 314  501.477237   2.752490   0 #> 315  567.161047   2.669188   0 #> 316  500.698779   2.983074   0 #> 317  527.820424   2.777712   0 #> 318  567.133571   4.672678   0 #> 319  737.378577   3.204757   0 #> 320  512.278170   2.657176   0 #> 321  787.639027   2.723953   0 #> 322  500.679936   3.584983   0 #> 323  504.063114   2.604468   0 #> 324  967.595246   2.728819   0 #> 325  501.769064   2.601205   0 #> 326  509.319737   3.671424   0 #> 327  507.236566   2.785053   0 #> 328  505.992678   2.525440   0 #> 329  506.636002   3.067848   0 #> 330  504.427959   3.325751   0 #> 331  503.643656   2.888200   0 #> 332  506.395786   2.526495   0 #> 333  505.473607   3.002142   0 #> 334  500.674359   4.018732   0 #> 335  598.709381   2.740014   0 #> 336  513.656621   2.749638   0 #> 337  505.794426   2.550095   0 #> 338  500.830528   3.274346   0 #> 339  502.142460   2.595633   0 #> 340  501.531839   3.288737   0 #> 341  561.189664   3.404020   0 #> 342  507.474023   2.856146   0 #> 343  500.319218   2.553049   0 #> 344  500.030673   2.660646   0 #> 345  531.651774   2.513392   0 #> 346  876.828283   2.523778   0 #> 347  500.168239   2.513450   0 #> 348  662.095625   3.985577   0 #> 349  500.283362   2.754593   0 #> 350  501.454788   2.823022   0 #> 351  551.638528   2.628247   0 #> 352  503.124783   3.292976   0 #> 353  895.806400   3.014088   0 #> 354  501.751589   2.975170   0 #> 355  718.547496   2.593673   0 #> 356  834.159505   3.568752   0 #> 357  500.286161   3.019153   0 #> 358  508.854523   3.290556   0 #> 359  504.977029   3.203265   0 #> 360  505.595060   3.091189   0 #> 361  505.592561   2.708644   0 #> 362  501.194590   3.230982   0 #> 363  580.917931   2.514006   0 #> 364  508.313576   2.571555   0 #> 365  753.942386   2.680921   0 #> 366  500.225194   2.545409   0 #> 367  500.074674   2.768488   0 #> 368  500.191536   2.817069   0 #> 369  500.208845   2.824925   0 #> 370  500.150180   2.538031   0 #> 371  513.593414   2.933397   0 #> 372  500.105902   2.973574   0 #> 373  500.276376   2.831176   0 #> 374  544.817670   2.513644   0 #> 375  512.440276   2.539929   0 #> 376  502.441368   2.956393   0 #> 377  528.671296   3.090512   0 #> 378  500.559533   3.680839   0 #> 379  502.416595   2.837334   0 #> 380  513.140286   2.901949   0 #> 381  510.000709   2.612131   0 #> 382  500.070009   2.605222   0 #> 383  829.549191   2.915736   0 #> 384  717.068942   2.996228   0 #> 385  507.951606   3.445575   0 #> 386  668.483834   3.357136   0 #> 387  500.397488   3.314835   0 #> 388  530.060527   3.288446   0 #> 389  500.695817   2.513207   0 #> 390  500.581620   2.685644   0 #> 391  500.217952   3.157021   0 #> 392  509.293262   2.665945   0 #> 393  617.302115   3.209264   0 #> 394  501.737178   3.195826   0 #> 395  500.414948   2.834535   0 #> 396  518.608589   2.713402   0 #> 397  501.337285   2.611985   0 #> 398  500.602934   2.838246   0 #> 399  500.296839   2.812847   0 #> 400  511.593488   2.749776   0 #> 401  534.401736   2.587947   0 #> 402  536.992206   3.323900   0 #> 403  504.684006   2.567106   0 #> 404  622.049232   2.514511   0 #> 405  513.909744   2.678821   0 #> 406  500.445792   2.537840   0 #> 407  535.548621   2.515613   0 #> 408  500.703957   3.999707   0 #> 409  501.938931   2.918697   0 #> 410  502.437521   2.600947   0 #> 411  500.252162   2.987734   0 #> 412  500.008872   3.216535   0 #> 413  500.070599   3.279272   0 #> 414  875.688450   3.549675   0 #> 415  519.153416   2.635945   0 #> 416  500.007462   2.561414   0 #> 417  561.940590   3.406384   0 #> 418  503.588493   3.260052   0 #> 419  504.147271   2.752024   0 #> 420  513.618933   3.050447   0 #> 421  522.778408   3.237915   0 #> 422  521.527690   2.736644   0 #> 423  500.998419   2.664883   0 #> 424  505.115613   2.763818   0 #> 425  856.608919   2.580315   0 #> 426  502.660507   2.700189   0 #> 427  502.272453   3.004447   0 #> 428  500.055670   2.555107   0 #> 429  500.740063   2.794217   0 #> 430  525.087151   2.814963   0 #> 431  501.630887   3.095638   0 #> 432  507.487925   3.061751   0 #> 433  694.473140   2.542042   0 #> 434  529.866071   2.699359   0 #> 435  500.699449   2.652851   0 #> 436  500.374887   2.798454   0 #> 437  516.482629   3.002045   0 #> 438  530.434271   2.726238   0 #> 439  565.757085   2.925970   0 #> 440  513.720840   2.772686   0 #> 441  579.351821   2.642507   0 #> 442  500.709251   2.614396   0 #> 443  516.282186   2.555098   0 #> 444  500.011813   2.534161   0 #> 445  500.667779   3.105770   0 #> 446  829.557950   2.547038   0 #> 447  582.198195   3.395682   0 #> 448  551.087729   2.918566   0 #> 449  500.083635   3.223279   0 #> 450  513.728901   2.701160   0 #> 451  503.276840   2.891349   0 #> 452  500.004279   2.541640   0 #> 453  520.084994   2.722453   0 #> 454  500.703094   2.617521   0 #> 455  500.921365   2.751017   0 #> 456  500.446393   3.011594   0 #> 457  605.425249   3.204868   0 #> 458  501.133581   2.680125   0 #> 459  503.405381   2.919280   0 #> 460  500.002822   2.548041   0 #> 461  527.233992   2.862991   0 #> 462  500.123415   2.821493   0 #> 463  500.129605   3.392797   0 #> 464  500.495183   3.380980   0 #> 465  505.534844   2.650330   0 #> 466  500.612964   2.619699   0 #> 467  510.380121   2.808763   0 #> 468  675.346098   2.615249   0 #> 469  621.950892   2.882310   0 #> 470  516.919247   3.072670   0 #> 471  508.551931   3.001548   0 #> 472  501.698649   2.954172   0 #> 473  500.813281   2.619915   0 #> 474  597.696564   2.737212   0 #> 475  516.601398   2.509491   0 #> 476  501.027971   2.629871   0 #> 477  500.377929   2.517807   0 #> 478  685.460318   3.127893   0 #> 479  507.074744   2.856357   0 #> 480  523.429292   2.529608   0 #> 481  553.739706   2.539553   0 #> 482  722.720854   2.581463   0 #> 483  576.616958   4.290885   0 #> 484  514.422050   3.435395   0 #> 485  500.060525   2.747818   0 #> 486  533.961468   3.166332   0 #> 487  502.538568   3.121905   0 #> 488  504.533366   2.722051   0 #> 489  501.387479   3.318459   0 #> 490  527.568459   2.633606   0 #> 491  585.734926   3.126876   0 #> 492  510.647081   3.663903   0 #> 493  512.993662   3.877655   0 #> 494  555.831126   2.909862   0 #> 495  536.302016   2.807577   0 #> 496  500.199042   3.666101   0 #> 497  500.120761   2.641264   0 #> 498  504.109122   2.616598   0 #> 499  545.045163   2.584952   0 #> 500  500.117899   2.548036   0 #> 501  502.766303   2.712595   0 #> 502  696.724216   2.690292   0 #> 503  500.217304   2.845650   0 #> 504  500.020639   2.822349   0 #> 505  500.728423   2.604492   0 #> 506  500.119939   2.953019   0 #> 507  500.060067   3.531888   0 #> 508  504.495357   2.616732   0 #> 509  649.510127   2.817856   0 #> 510  719.602539   3.184048   0 #> 511  500.241601   3.251213   0 #> 512  500.456180   2.718601   0 #> 513  509.146791   2.871303   0 #> 514  500.457820   2.823016   0 #> 515  513.896587   2.634866   0 #> 516  928.120056   2.858636   0 #> 517  515.571047   3.144305   0 #> 518  500.001403   2.867210   0 #> 519  513.014725   2.582544   0 #> 520  847.606547   3.545881   0 #> 521  500.020283   2.504464   0 #> 522  714.527562   2.550372   0 #> 523  536.024871   3.430570   0 #> 524  500.392407   2.550861   0 #> 525  508.246285   2.523654   0 #> 526  502.377104   2.624778   0 #> 527  500.734461   2.584904   0 #> 528  500.063276   2.792935   0 #> 529  508.778294   3.052094   0 #> 530  956.674798   2.800537   0 #> 531  502.358113   2.519974   0 #> 532  500.009414   3.032268   0 #> 533  500.553813   2.532978   0 #> 534  500.989741   2.595885   0 #> 535  704.051739   2.993190   0 #> 536  500.040532   3.987160   0 #> 537  511.973304   2.523415   0 #> 538  500.589471   2.970961   0 #> 539  519.314639   2.951638   0 #> 540  500.440545   2.533002   0 #> 541  502.342164   4.009615   0 #> 542  503.247290   2.968475   0 #> 543  676.457750   2.937459   0 #> 544  514.154668   2.781507   0 #> 545  501.182463   2.642541   0 #> 546  508.536750   2.831659   0 #> 547  508.681077   2.838395   0 #> 548  595.081977   3.820036   0 #> 549  500.083148   3.004627   0 #> 550  501.804060   4.373732   0 #> 551  500.407671   2.708247   0 #> 552  527.884637   2.727738   0 #> 553  542.416005   2.664342   0 #> 554  501.302927   3.565871   0 #> 555  501.271223   3.629257   0 #> 556  514.452869   2.643133   0 #> 557  502.878889   2.895912   0 #> 558  507.071077   2.546672   0 #> 559  500.107671   3.138922   0 #> 560  641.569358   2.686019   0 #> 561  503.655518   2.538804   0 #> 562  500.236115   3.461366   0 #> 563  504.943364   2.579116   0 #> 564  510.652634   2.563618   0 #> 565  512.207448   2.552679   0 #> 566  699.718742   2.814252   0 #> 567  539.660726   2.604365   0 #> 568  502.285603   2.557236   0 #> 569  684.426409   3.166143   0 #> 570  514.478733   3.037311   0 #> 571  500.018641   2.928064   0 #> 572  524.415714   2.748247   0 #> 573  525.927702   3.023939   0 #> 574  500.090866   3.339998   0 #> 575  500.320444   3.461273   0 #> 576  500.031819   2.572514   0 #> 577  685.728684   2.585549   0 #> 578  501.257355   2.602358   0 #> 579  505.749697   3.088131   0 #> 580  500.088702   3.272510   0 #> 581  508.159072   2.617446   0 #> 582  500.419562   3.161442   0 #> 583  586.532551   2.740051   0 #> 584  507.770126   2.843085   0 #> 585  530.561401   3.102465   0 #> 586  524.440270   2.927108   0 #> 587  525.297457   2.846721   0 #> 588  500.388279   2.513795   0 #> 589  506.667795   3.584154   0 #> 590  522.358406   3.268858   0 #> 591  500.682603   2.508317   0 #> 592  503.159311   4.344262   0 #> 593  515.831428   2.718472   0 #> 594  501.406072   2.567288   0 #> 595  500.071647   2.742128   0 #> 596  503.910944   3.692887   0 #> 597  532.605996   2.730093   0 #> 598  788.012738   2.689527   0 #> 599  503.610590   2.745253   0 #> 600  500.251481   2.522948   0 #> 601  511.669259   3.225125   0 #> 602  502.192275   2.769862   0 #> 603  501.277493   2.794809   0 #> 604  672.264670   2.941656   0 #> 605  500.103008   2.516224   0 #> 606  500.642088   2.675273   0 #> 607  500.920814   2.518410   0 #> 608  504.836062   3.095608   0 #> 609  501.323659   2.561731   0 #> 610  500.905255   3.121955   0 #> 611  500.067443   3.864972   0 #> 612  503.646920   2.683076   0 #> 613  500.531737   3.105284   0 #> 614  792.626766   2.559790   0 #> 615  500.884480   3.824008   0 #> 616  500.154302   2.568791   0 #> 617  501.549435   2.576299   0 #> 618  500.019424   2.713467   0 #> 619  546.054416   2.945248   0 #> 620  501.917103   2.548127   0 #> 621  500.000576   2.934187   0 #> 622  948.372437   2.976062   0 #> 623  500.638313   2.759784   0 #> 624  540.433697   2.766329   0 #> 625  500.490204   2.553723   0 #> 626  500.001122   2.871891   0 #> 627  500.691039   2.963278   0 #> 628  500.717534   3.552848   0 #> 629  500.057806   2.709855   0 #> 630  996.495727   2.934166   0 #> 631  927.284674   3.173885   0 #> 632  501.143041   2.596356   0 #> 633  500.171805   3.853212   0 #> 634  500.014767   3.342062   0 #> 635  503.991384   2.598420   0 #> 636  647.160308   2.900028   0 #> 637  590.588905   2.519608   0 #> 638  534.062385   2.709584   0 #> 639  500.303785   2.556416   0 #> 640  500.474980   2.667108   0 #> 641  500.904675   3.010577   0 #> 642  514.740169   2.902040   0 #> 643  563.332183   2.548240   0 #> 644  744.263184   2.708238   0 #> 645  500.114689   2.689845   0 #> 646  511.486079   4.202384   0 #> 647  500.829707   3.017832   0 #> 648  508.838785   2.796167   0 #> 649  657.100576   2.851042   0 #> 650  775.951503   3.069795   0 #> 651  550.465561   2.554169   0 #> 652  950.503602   2.843442   0 #> 653  605.140419   2.773211   0 #> 654  547.297425   2.898671   0 #> 655  500.283282   2.766393   0 #> 656  515.439887   4.124579   0 #> 657  501.864100   3.051152   0 #> 658  502.683380   2.699527   0 #> 659  524.891340   2.809532   0 #> 660  501.488998   2.543464   0 #> 661  501.004025   2.564891   0 #> 662  721.116167   3.329450   0 #> 663  500.290476   2.820610   0 #> 664  833.792441   3.201927   0 #> 665  500.241139   3.060393   0 #> 666  501.908732   2.732920   0 #> 667  500.480892   2.589971   0 #> 668  502.656421   3.080557   0 #> 669  509.646951   2.582955   0 #> 670  504.831461   2.778382   0 #> 671  500.104714   3.266846   0 #> 672  528.006538   2.857744   0 #> 673  542.882625   3.860711   0 #> 674  503.017440   3.003003   0 #> 675  519.129034   3.487811   0 #> 676  502.374292   2.549317   0 #> 677  850.925983   3.251336   0 #> 678  500.478289   2.859327   0 #> 679  500.403683   2.604111   0 #> 680  706.775589   3.743073   0 #> 681  913.360374   2.906128   0 #> 682  501.394367   2.690523   0 #> 683  500.151359   3.083498   0 #> 684  500.043109   2.753395   0 #> 685  768.823848   3.458836   0 #> 686  529.545081   2.853749   0 #> 687  500.774766   2.664347   0 #> 688  509.986862   2.626553   0 #> 689  509.727249   2.727238   0 #> 690  516.474458   2.624420   0 #> 691  669.541729   3.040742   0 #> 692  743.975373   3.022142   0 #> 693  972.785003   2.989523   0 #> 694  535.902023   2.911873   0 #> 695  500.582495   2.621043   0 #> 696  578.947519   2.953779   0 #> 697  501.319828   3.807036   0 #> 698  501.548288   2.748581   0 #> 699  503.129269   2.630818   0 #> 700  500.460558   4.434431   0 #> 701  510.517495   2.599798   0 #> 702  506.305435   2.650448   0 #> 703  604.307560   2.861438   0 #> 704  500.915323   2.949996   0 #> 705  508.049311   3.816832   0 #> 706  500.646846   2.507114   0 #> 707  553.969399   2.820110   0 #> 708  504.821496   2.581583   0 #> 709  501.530647   2.719318   0 #> 710  517.069608   2.517111   0 #> 711  625.468045   2.531875   0 #> 712  500.656995   3.622951   0 #> 713  500.048848   2.829522   0 #> 714  500.163270   3.080267   0 #> 715  501.045971   3.591457   0 #> 716  501.558553   4.376687   0 #> 717  518.446918   3.244712   0 #> 718  531.759228   3.711073   0 #> 719  503.180471   2.614918   0 #> 720  501.620513   2.715622   0 #> 721  506.236877   2.739936   0 #> 722  500.132041   2.616806   0 #> 723  500.078007   2.617832   0 #> 724  500.049989   3.287112   0 #> 725  500.018776   2.724477   0 #> 726  503.098882   2.557590   0 #> 727  508.738416   2.604725   0 #> 728  500.706264   2.775990   0 #> 729  500.289094   3.632605   0 #> 730  570.430623   2.903558   0 #> 731  506.889408   3.069232   0 #> 732  661.444836   2.864413   0 #> 733  506.093188   2.728942   0 #> 734  500.094629   3.119771   0 #> 735  500.600469   3.188829   0 #> 736  501.973849   2.584347   0 #> 737  502.804269   2.500518   0 #> 738  501.042128   3.134436   0 #> 739  851.322421   2.568474   0 #> 740  523.030814   2.748209   0 #> 741  500.076220   3.177403   0 #> 742  505.516643   3.166148   0 #> 743  500.362866   2.636338   0 #> 744  500.526472   3.104342   0 #> 745  523.457162   3.026024   0 #> 746  500.012142   2.857061   0 #> 747  517.154009   2.703265   0 #> 748  526.050156   2.500004   0 #> 749  500.086922   3.260399   0 #> 750  513.123197   3.066636   0 #> 751  507.276458   3.784919   0 #> 752  500.227802   2.616498   0 #> 753  626.832042   2.830764   0 #> 754  500.018607   3.132700   0 #> 755  505.919564   2.892460   0 #> 756  611.954144   2.515752   0 #> 757  501.302797   2.624685   0 #> 758  500.263657   3.163102   0 #> 759  506.642402   2.836168   0 #> 760  502.390808   3.273683   0 #> 761  500.569785   2.654144   0 #> 762  502.240457   2.586991   0 #> 763  500.065445   2.509292   0 #> 764  501.106937   3.703587   0 #> 765  506.552295   3.212538   0 #> 766  509.099009   3.220348   0 #> 767  500.306877   2.649587   0 #> 768  500.360872   2.830418   0 #> 769  533.496166   2.555014   0 #> 770  733.372474   2.939598   0 #> 771  500.268666   2.587157   0 #> 772  508.416162   3.192273   0 #> 773  500.042121   2.623247   0 #> 774  500.741742   2.871162   0 #> 775  500.945280   2.515745   0 #> 776  500.134684   2.697129   0 #> 777  511.416998   2.686522   0 #> 778  504.500724   2.762228   0 #> 779  500.094522   2.663918   0 #> 780  504.198410   4.356468   0 #> 781  792.755779   2.950302   0 #> 782  608.032785   2.562230   0 #> 783  500.638523   2.500692   0 #> 784  501.996224   2.894825   0 #> 785  501.156299   2.560665   0 #> 786  508.176782   2.739280   0 #> 787  517.150225   2.668406   0 #> 788  500.067222   2.823806   0 #> 789  573.472194   2.778522   0 #> 790  539.017012   2.846340   0 #> 791  500.385143   2.988501   0 #> 792  501.805697   2.504537   0 #> 793  523.239149   2.578285   0 #> 794  884.229222   3.030456   0 #> 795  507.781672   2.608693   0 #> 796  501.148691   2.897153   0 #> 797  509.156513   3.385108   0 #> 798  523.088576   3.419727   0 #> 799  502.709143   3.262958   0 #> 800  502.693845   2.539616   0 #> 801  880.454648   2.983837   0 #> 802  775.197449   2.762856   0 #> 803  556.250819   2.879543   0 #> 804  501.108624   2.528533   0 #> 805  500.021253   2.754864   0 #> 806  501.320999   2.701233   0 #> 807  500.088801   2.611366   0 #> 808  500.926887   2.547854   0 #> 809  500.823213   2.870089   0 #> 810  560.644156   2.718364   0 #> 811  500.207119   2.660644   0 #> 812  508.198745   2.958484   0 #> 813  508.747118   2.627983   0 #> 814  517.918996   2.616272   0 #> 815  500.324657   2.600285   0 #> 816  500.224741   2.647034   0 #> 817  699.309076   2.739924   0 #> 818  505.872811   3.319377   0 #> 819  519.743061   3.093159   0 #> 820  685.759785   2.565987   0 #> 821  648.772249   3.462867   0 #> 822  516.203335   2.532700   0 #> 823  500.650653   2.522210   0 #> 824  500.015593   2.660937   0 #> 825  632.399469   2.574848   0 #> 826  507.720274   2.550547   0 #> 827  594.506013   2.669694   0 #> 828  500.112630   2.528644   0 #> 829  506.434343   2.900147   0 #> 830  501.276075   2.572891   0 #> 831  500.202667   3.131302   0 #> 832  500.339363   2.539399   0 #> 833  500.384809   3.377918   0 #> 834  500.039379   3.933022   0 #> 835  500.759372   4.232868   0 #> 836  517.974049   3.042678   0 #> 837  500.431609   2.605774   0 #> 838  550.968142   2.717233   0 #> 839  500.014076   2.723276   0 #> 840  500.123297   2.956768   0 #> 841  500.432746   3.156285   0 #> 842  504.115617   3.507940   0 #> 843  500.217016   4.808757   0 #> 844  623.686903   3.123208   0 #> 845  603.109325   4.923961   0 #> 846  504.398870   3.460943   0 #> 847  566.775402   3.032992   0 #> 848  653.016200   2.675851   0 #> 849  500.121859   3.468977   0 #> 850  500.166652   3.192302   0 #> 851  504.027262   2.939764   0 #> 852  509.494975   2.778970   0 #> 853  500.020173   2.700224   0 #> 854  720.032124   2.766349   0 #> 855  500.023141   2.898976   0 #> 856  504.744329   2.558327   0 #> 857  520.786354   2.993684   0 #> 858  500.718155   2.715218   0 #> 859  500.559311   2.894731   0 #> 860  504.281468   2.709595   0 #> 861  500.153123   3.032348   0 #> 862  579.416618   3.032584   0 #> 863  531.473693   2.503956   0 #> 864  500.193877   2.580780   0 #> 865  533.843963   2.643129   0 #> 866  500.236973   2.774538   0 #> 867  500.457159   2.770468   0 #> 868  501.160017   2.798903   0 #> 869  502.129178   2.937890   0 #> 870  704.094704   2.671127   0 #> 871  501.356433   2.824658   0 #> 872  686.813291   3.342489   0 #> 873  500.619316   3.096552   0 #> 874  511.218470   2.722447   0 #> 875  554.413093   2.767020   0 #> 876  500.074097   2.650513   0 #> 877  556.347418   2.670728   0 #> 878  500.219904   5.418003   0 #> 879  500.030260   2.661174   0 #> 880  501.698504   2.748294   0 #> 881  505.945191   2.895078   0 #> 882  503.176393   2.778102   0 #> 883  500.225120   2.655248   0 #> 884  567.215566   2.740912   0 #> 885  500.631221   2.809821   0 #> 886  500.488997   2.748352   0 #> 887  500.265982   3.075337   0 #> 888  881.877769   2.858019   0 #> 889  525.357172   3.298329   0 #> 890  579.399904   2.711420   0 #> 891  937.278309   2.514369   0 #> 892  500.011423   3.117428   0 #> 893  500.120871   2.561669   0 #> 894  502.427869   2.612266   0 #> 895  810.134532   3.028538   0 #> 896  523.285798   2.880885   0 #> 897  522.469768   2.524486   0 #> 898  500.213022   2.620809   0 #> 899  621.240265   3.369950   0 #> 900  514.115918   2.525588   0 #> 901  520.014864   2.536374   0 #> 902  502.064783   2.516431   0 #> 903  997.824787   2.673378   0 #> 904  597.445538   2.799340   0 #> 905  518.084053   2.680841   0 #> 906  565.832772   3.404383   0 #> 907  506.958338   2.992299   0 #> 908  500.409962   2.660918   0 #> 909  702.639578   3.055433   0 #> 910  501.010152   3.291694   0 #> 911  858.335709   2.717321   0 #> 912  501.001081   2.893496   0 #> 913  915.154729   2.930614   0 #> 914  560.381958   2.514776   0 #> 915  553.817430   3.161501   0 #> 916  501.088506   2.658919   0 #> 917  500.346589   3.043996   0 #> 918  911.837926   2.666666   0 #> 919  500.024968   2.655605   0 #> 920  500.155197   3.356266   0 #> 921  500.278673   2.671255   0 #> 922  500.021090   2.506312   0 #> 923  500.076246   3.113656   0 #> 924  870.569599   3.230299   1 #> 925   41.138088   2.588724   1 #> 926  961.589938   2.632870   1 #> 927  573.445225   2.540564   1 #> 928  227.142178   2.750198   1 #> 929  791.414484   2.512127   1 #> 930  982.193235   3.050830   1 #> 931  590.121848   2.609552   1 #> 932  801.030112   3.100887   1 #> 933  645.353666   2.881268   1 #> 934  605.895545   2.971831   1 #> 935  878.109454   2.742277   1 #> 936  839.610572   2.568035   1 #> 937  347.614686   3.922866   1 #> 938  415.944046   2.691850   1 #> 939  619.316889   2.558642   1 #> 940  836.830570   3.783624   1 #> 941  871.709184   2.597703   1 #> 942  124.499835   2.802410   1 #> 943  921.472317   2.896449   1 #> 944  812.967625   3.581003   1 #> 945  801.660646   2.574069   1 #> 946  922.254957   2.630489   1 #> 947  513.879289   2.527159   1 #> 948  420.054249   3.518501   1 #> 949  264.014907   2.567748   1 #> 950  542.506112   2.793844   1 #> 951  398.974722   3.492559   1 #> 952  191.390152   2.559656   1 #> 953  708.051226   2.512715   1 #> 954   58.411334   2.853993   1 #> 955  619.346544   2.981829   1 #> 956  699.301663   3.886413   1 #> 957  347.302602   2.520876   1 #> 958  401.295208   3.709287   1 #> 959   44.357690   3.625799   1 #> 960  533.318421   3.992914   1 #> 961  795.200211   2.538537   1 #> 962  726.741722   2.585178   1 #> 963  602.664669   3.892551   1 #> 964  150.261319   5.394120   1 #> 965   67.964901   3.682660   1 #> 966  687.253178   2.635202   1 #> 967   14.155464   2.705270   1 #> 968  208.271009   3.254025   1 #> 969  214.226935   2.907171   1 #> 970  821.598826   2.895511   1 #> 971   81.199812   2.676151   1 #> 972  840.584431   2.513180   1 #> 973  381.054221   2.769230   1 #> 974  621.868432   2.968351   1 #> 975  394.465428   2.656968   1 #> 976  491.950369   3.377600   1 #> 977  354.363209   2.528555   1 #> 978  381.877826   2.854335   1 #> 979  896.864723   3.712482   1 #> 980  495.993373   3.553871   1 #> 981  487.794674   2.901706   1 #> 982  747.701210   2.518985   1 #> 983  282.253715   3.009027   1 #> 984  738.137000   4.082664   1 #> 985  807.767184   2.657668   1 #> 986  555.458931   2.684600   1 #> 987  322.587003   2.739506   1 #> 988   20.002394   3.345938   1 #> 989  229.922145   2.625031   1 #> 990  659.628451   2.605973   1 #> 991   15.773982   2.746505   1 #> 992  315.144270   3.097995   1 #> 993  491.776892   2.973880   1 #> 994  411.600464   2.656478   1 #> 995  432.716690   2.974333   1 #> 996  542.036131   2.617929   1 #> 997  679.444955   2.554251   1 #> 998  779.933928   2.677466   1 #> 999  968.125145   2.557476   1 #> 1000 806.101356   2.518360   1 #> 1001 181.185309   2.623526   1 #> 1002 148.274296   3.368167   1 #> 1003 532.214172   2.615841   1 #> 1004 339.758943   2.874552   1 #> 1005  54.217150   3.445189   1 #> 1006 437.111543   2.736503   1 #> 1007   7.044089   2.513777   1 #> 1008 228.952898   3.139444   1 #> 1009 266.985797   2.524257   1 #> 1010 892.493319   2.559193   1 #> 1011 518.813991   2.571909   1 #> 1012 232.097108   2.585789   1 #> 1013 408.185852   2.771353   1 #> 1014 843.982946   2.507949   1 #> 1015 364.535907   2.637395   1 #> 1016 784.829799   2.609074   1 #> 1017 611.436273   2.899195   1 #> 1018 280.137401   4.443922   1 #> 1019 551.224565   2.967666   1 #> 1020 909.436675   2.605634   1 #> 1021 957.088044   2.807821   1 #> 1022 295.235788   2.732188   1 #> 1023 374.199406   3.539451   1 #> 1024  71.720543   3.203696   1 #> 1025 181.364663   2.565244   1 #> 1026 875.535536   3.267283   1 #>  #> [[3]] #>             ts magnitudes gen #> 1   587.284824   4.175491   2 #> 2   538.296809   3.158763   2 #> 3   506.204562   2.704258   2 #> 4   506.951762   3.007013   2 #> 5   764.715775   2.532661   2 #> 6   514.184826   2.855372   2 #> 7   701.208601   2.592642   2 #> 8   502.752186   3.088963   2 #> 9   501.639756   2.672707   2 #> 10  500.642533   2.846539   2 #> 11  542.158937   2.721014   2 #> 12  519.382360   2.671060   2 #> 13  500.163719   2.606345   2 #> 14  511.199617   3.098492   2 #> 15  628.026761   2.837375   2 #> 16  501.495422   2.677027   2 #> 17  587.711917   3.524186   2 #> 18  639.376471   3.915035   2 #> 19  516.516089   2.595385   2 #> 20  500.992435   2.573723   2 #> 21  520.156330   3.269019   2 #> 22  500.305166   2.904520   2 #> 23  500.635767   2.709590   2 #> 24  504.217234   2.629885   2 #> 25  500.435597   3.431023   2 #> 26  562.823861   3.610709   2 #> 27  561.884495   3.798360   2 #> 28  500.758470   2.809457   2 #> 29  532.512877   2.803315   2 #> 30  501.516522   3.081875   2 #> 31  502.529108   2.807382   2 #> 32  649.427371   2.895025   2 #> 33  717.813514   2.609286   2 #> 34  506.818458   3.133065   2 #> 35  501.863494   2.584855   2 #> 36  530.625509   2.809626   2 #> 37  512.662832   2.703684   2 #> 38  546.280983   3.348031   2 #> 39  559.972496   3.110708   2 #> 40  502.456929   2.901261   2 #> 41  510.402206   2.680487   2 #> 42  520.587799   2.954948   2 #> 43  507.089072   2.965307   2 #> 44  633.320085   2.692814   2 #> 45  560.038262   2.508536   2 #> 46  504.237204   2.546840   2 #> 47  507.283551   2.902171   2 #> 48  698.419029   2.533986   2 #> 49  528.154653   2.518813   2 #> 50  528.102745   2.753653   2 #> 51  514.980425   2.593235   2 #> 52  512.097195   3.123376   2 #> 53  508.192856   2.603959   2 #> 54  501.241525   3.147998   2 #> 55  843.829953   2.663470   2 #> 56  724.096422   3.687476   2 #> 57  752.624395   2.771846   2 #> 58  794.451689   3.086498   2 #> 59  728.324716   2.618882   2 #> 60  808.238500   2.831367   2 #> 61  781.586564   2.537948   2 #> 62  729.814109   3.549659   2 #> 63  730.988018   2.655047   2 #> 64  769.092655   2.822061   2 #> 65  724.450811   2.661689   2 #> 66  500.547632   2.945825   2 #> 67  717.552352   2.916576   2 #> 68  500.702292   3.722546   2 #> 69  500.843404   3.082649   2 #> 70  501.582773   2.819085   2 #> 71  792.784148   2.567872   2 #> 72  562.958145   3.377298   2 #> 73  575.970180   3.350526   2 #> 74  573.138563   3.906964   2 #> 75  501.989518   3.332652   2 #> 76  516.870090   2.555730   2 #> 77  561.405396   2.977201   2 #> 78  559.509445   4.030068   2 #> 79  599.623928   3.299911   2 #> 80  978.241807   2.536427   2 #> 81  645.852319   2.876672   2 #> 82  560.641509   2.710459   2 #> 83  517.729587   3.066290   2 #> 84  504.172195   3.424443   2 #> 85  535.857525   2.997392   2 #> 86  503.522390   2.836814   2 #> 87  568.350042   2.833597   2 #> 88  964.437408   3.023296   2 #> 89  500.249620   2.535658   2 #> 90  519.322145   3.064223   2 #> 91  502.802403   2.831264   2 #> 92  567.151114   2.605003   2 #> 93  571.342872   3.574699   2 #> 94  567.183443   2.659977   2 #> 95  576.690333   2.781775   2 #> 96  569.189198   3.011203   2 #> 97  568.031626   2.837430   2 #> 98  509.448669   3.249063   2 #> 99  509.337788   2.936353   2 #> 100 541.326672   2.660863   2 #> 101 512.615512   4.279759   2 #> 102 505.718267   3.158739   2 #> 103 697.427248   3.065437   2 #> 104 575.008369   3.074938   2 #> 105 500.086838   2.627344   2 #> 106 681.708504   2.722591   2 #> 107 664.457161   2.574870   2 #> 108 735.166366   2.515565   2 #> 109 509.089115   2.820460   2 #> 110 535.585122   2.918337   2 #> 111 668.570224   2.612180   2 #> 112 500.292848   3.091001   2 #> 113 618.066476   2.642517   2 #> 114 529.252746   2.810363   2 #> 115 502.575247   2.503576   2 #> 116 538.290187   3.091699   2 #> 117 500.914136   2.760307   2 #> 118 534.881118   2.797652   2 #> 119 879.790930   2.635841   2 #> 120 532.272625   2.552648   2 #> 121 551.235608   2.521614   2 #> 122 500.085542   3.294515   2 #> 123 958.597384   3.991824   2 #> 124 516.822926   2.517983   2 #> 125 576.888934   2.769264   2 #> 126 602.163221   2.937634   2 #> 127 809.267697   3.248168   2 #> 128 576.749740   3.024723   2 #> 129 576.958438   2.532325   2 #> 130 577.308858   2.691930   2 #> 131 649.685576   2.797838   2 #> 132 510.860524   3.766079   2 #> 133 511.899017   2.663723   2 #> 134 561.229711   2.828659   2 #> 135 500.871974   4.537269   2 #> 136 620.409744   2.556480   2 #> 137 922.257511   2.810450   2 #> 138 699.495984   2.536680   2 #> 139 518.615669   2.800484   2 #> 140 719.923884   2.788301   2 #> 141 609.468250   2.778055   2 #> 142 500.252470   2.642687   2 #> 143 500.092173   2.508324   2 #> 144 508.117341   2.626753   2 #> 145 500.258197   3.019372   2 #> 146 723.961312   2.522246   2 #> 147 503.803939   3.030958   2 #> 148 519.330885   3.275825   2 #> 149 774.616408   3.553371   2 #> 150 502.718168   2.993462   2 #> 151 738.898529   3.050232   2 #> 152 505.808078   2.783521   2 #> 153 508.195736   2.530559   2 #> 154 501.804160   2.528633   2 #> 155 502.202864   2.639077   2 #> 156 509.622412   2.684280   2 #> 157 512.971107   2.811279   2 #> 158 528.516849   2.833069   2 #> 159 501.991513   2.651299   2 #> 160 512.894284   2.513958   2 #> 161 506.933756   2.687891   2 #> 162 500.370348   2.815267   2 #> 163 510.470569   3.326386   2 #> 164 735.729523   2.878610   2 #> 165 530.302511   3.714758   2 #> 166 504.980756   2.973624   2 #> 167 514.668972   2.984559   2 #> 168 537.777136   3.347546   2 #> 169 621.117119   3.199908   2 #> 170 957.319656   2.634079   2 #> 171 507.387093   2.516970   2 #> 172 541.370396   2.696097   2 #> 173 503.396047   2.571342   2 #> 174 788.648675   2.855223   2 #> 175 508.984023   3.275487   2 #> 176 504.524292   4.109800   2 #> 177 503.247210   2.588344   2 #> 178 508.368398   2.959802   2 #> 179 521.368300   2.639532   2 #> 180 771.323128   2.556370   2 #> 181 550.803592   2.557344   2 #> 182 814.378236   3.232227   2 #> 183 710.150844   2.799851   2 #> 184 534.650160   2.617149   2 #> 185 792.646567   2.550597   2 #> 186 501.761868   2.633329   2 #> 187 500.790816   2.587241   2 #> 188 522.414560   3.201845   2 #> 189 506.204269   2.648503   2 #> 190 783.016023   2.506961   2 #> 191 523.514462   2.612922   2 #> 192 577.419782   3.284692   2 #> 193 721.333311   2.671627   2 #> 194 503.129924   3.516868   2 #> 195 502.690424   2.610084   2 #> 196 543.802377   2.807139   2 #> 197 963.046316   2.874483   2 #> 198 887.324963   2.751346   2 #> 199 707.419894   3.019854   2 #> 200 706.803954   3.825966   2 #> 201 702.095985   2.894493   2 #> 202 519.730469   3.181005   2 #> 203 609.658309   2.827931   2 #> 204 505.676908   3.607325   2 #> 205 545.571146   2.943974   2 #> 206 671.089098   2.753560   2 #> 207 526.721796   4.413329   2 #> 208 504.678577   2.668397   2 #> 209 569.983619   2.575756   2 #> 210 502.343179   3.177905   2 #> 211 500.613089   2.692187   2 #> 212 510.241521   3.051228   2 #> 213 502.739795   2.871022   2 #> 214 561.740621   2.664928   2 #> 215 906.541710   2.577885   2 #> 216 507.482865   2.529835   2 #> 217 539.837011   2.716788   2 #> 218 501.621831   3.274579   2 #> 219 501.908630   3.280205   2 #> 220 520.005665   2.844089   2 #> 221 532.644714   2.888713   2 #> 222 503.019722   2.580768   2 #> 223 506.404000   2.543861   2 #> 224 535.792014   3.164736   2 #> 225 502.157000   3.162437   2 #> 226 571.582041   2.724670   2 #> 227 520.666673   2.592942   2 #> 228 526.267460   2.745195   2 #> 229 505.601201   3.598122   2 #> 230 903.784942   2.542346   2 #> 231 507.312247   2.574603   2 #> 232 502.144703   3.209100   2 #> 233 542.031463   3.187119   2 #> 234 501.138649   2.528526   2 #> 235 504.419782   2.851375   2 #> 236 504.346029   2.518869   2 #> 237 588.004896   2.612314   2 #> 238 741.869418   2.909330   2 #> 239 899.271692   2.510934   2 #> 240 892.246732   3.533471   2 #> 241 880.693697   2.819740   2 #> 242 518.243903   2.575603   2 #> 243 502.533893   2.839220   2 #> 244 507.215361   2.504203   2 #> 245 501.045742   2.804253   2 #> 246 833.580606   2.532701   2 #> 247 505.707583   3.087238   2 #> 248 582.219825   3.197034   2 #> 249 632.603050   2.889791   2 #> 250 502.107236   3.048269   2 #> 251 501.554918   3.616088   2 #> 252 500.511442   2.965159   2 #> 253 500.459922   2.609922   2 #> 254 500.959732   2.657121   2 #> 255 502.311024   3.251607   2 #> 256 549.182533   3.068110   2 #> 257 500.351376   3.000178   2 #> 258 508.027582   2.717226   2 #> 259 726.424558   2.570730   2 #> 260 734.173424   3.025316   2 #> 261 621.219588   2.980621   2 #> 262 632.726625   3.050771   2 #> 263 852.950304   2.552671   2 #> 264 603.666198   3.006979   2 #> 265 604.687548   2.691485   2 #> 266 680.040435   3.233043   2 #> 267 603.181346   2.504419   2 #> 268 603.124342   2.511415   2 #> 269 859.372127   3.006816   2 #> 270 603.124536   2.859906   2 #> 271 603.505487   2.594728   2 #> 272 603.148397   4.072607   2 #> 273 630.605696   2.536428   2 #> 274 698.177658   3.153645   2 #> 275 603.152545   2.942978   2 #> 276 583.671963   2.627226   2 #> 277 500.785814   4.074962   2 #> 278 791.442303   2.568527   2 #> 279 500.470581   2.845465   2 #> 280 500.747401   2.744050   2 #> 281 500.885464   2.534165   2 #> 282 500.446257   3.378025   2 #> 283 500.332428   3.982809   2 #> 284 571.322263   3.028224   2 #> 285 500.580957   2.665860   2 #> 286 705.989165   3.058889   2 #> 287 897.440205   3.328299   2 #> 288 500.411700   2.681935   2 #> 289 500.293576   2.979296   2 #> 290 501.129985   3.843790   2 #> 291 505.385063   2.912418   2 #> 292 500.428014   3.551406   2 #> 293 587.576048   2.626499   2 #> 294 500.319723   2.630916   2 #> 295 500.590500   2.930250   2 #> 296 502.204116   2.891862   2 #> 297 500.582217   2.990918   2 #> 298 501.023193   3.055497   2 #> 299 517.792129   2.721734   2 #> 300 500.288414   3.025639   2 #> 301 501.089161   2.566978   2 #> 302 500.532963   2.525125   2 #> 303 500.429396   2.773288   2 #> 304 507.519876   2.523659   2 #> 305 502.391954   2.556833   2 #> 306 639.439400   2.530056   2 #> 307 500.473049   2.879916   2 #> 308 533.666376   3.026665   2 #> 309 502.764158   2.583591   2 #> 310 526.509969   2.934135   2 #> 311 500.252092   3.585045   2 #> 312 508.442352   2.882934   2 #> 313 500.799112   3.378351   2 #> 314 500.491029   2.513806   2 #> 315 500.360330   2.639314   2 #> 316 503.904963   2.575724   2 #> 317 500.299933   2.628937   2 #> 318 500.377233   3.545517   2 #> 319 502.646197   2.940758   2 #> 320 502.898890   3.203649   2 #> 321 501.146603   3.025908   2 #> 322 500.499987   2.508638   2 #> 323 501.044669   3.151693   2 #> 324 500.323801   3.024700   2 #> 325 580.919487   2.582227   2 #> 326 500.664137   2.531415   2 #> 327 691.723233   2.602003   2 #> 328 655.896334   3.381412   2 #> 329 764.786146   2.679489   2 #> 330 228.542578   2.985794   2 #> 331 239.083830   2.657388   2 #> 332 856.325161   2.776370   2 #> 333 348.053558   2.582283   2 #> 334 347.734256   2.512432   2 #> 335 876.254016   2.588574   2 #> 336 849.761791   2.769017   2 #> 337 818.241074   2.816217   2 #> 338 421.923213   2.856327   2 #> 339 421.523690   2.977445   2 #> 340 699.369586   3.189222   2 #> 341 725.961640   3.016931   2 #> 342 820.911094   2.808747   2 #> 343 699.307055   3.683986   2 #> 344 700.008800   2.998730   2 #> 345 403.116674   3.310567   2 #> 346  44.526035   2.588682   2 #> 347  48.811284   2.505298   2 #> 348 794.640251   2.657119   2 #> 349 195.328173   2.542713   2 #> 350 159.357839   2.669393   2 #> 351 150.829011   2.621327   2 #> 352 152.955459   2.965269   2 #> 353 269.249892   2.583550   2 #> 354 150.772485   3.062990   2 #> 355 176.667047   2.816134   2 #> 356 151.201951   3.579151   2 #> 357 155.859076   2.524411   2 #> 358 152.939762   2.504183   2 #> 359 150.312798   2.841543   2 #> 360 153.449263   2.551160   2 #> 361 156.978930   3.312480   2 #> 362 151.360579   3.009080   2 #> 363 150.491972   3.821909   2 #> 364 217.549752   3.051719   2 #> 365 164.278957   2.812983   2 #> 366 153.455638   2.576024   2 #> 367 157.661161   2.650490   2 #> 368 150.337550   2.519511   2 #> 369 150.428087   2.604353   2 #> 370 155.463364   2.509382   2 #> 371 251.322124   3.391175   2 #> 372 150.680743   3.116259   2 #> 373 150.461223   2.670229   2 #> 374 322.770813   3.273167   2 #> 375 150.295008   3.626743   2 #> 376 150.279685   2.875765   2 #> 377 152.154331   3.481509   2 #> 378 151.127691   3.206402   2 #> 379 151.427920   2.625115   2 #> 380 445.662223   2.683879   2 #> 381 280.236207   3.077172   2 #> 382 150.825580   2.532979   2 #> 383 150.503631   2.771477   2 #> 384 243.804746   2.529447   2 #> 385 150.320316   2.841137   2 #> 386 165.666855   2.670577   2 #> 387 162.483415   2.994603   2 #> 388 151.109211   2.877344   2 #> 389 152.042286   3.602229   2 #> 390 182.303873   3.009379   2 #> 391 151.170851   2.588297   2 #> 392 150.380296   2.873446   2 #> 393 162.965313   2.615731   2 #> 394 319.277647   2.671674   2 #> 395 166.964677   2.771233   2 #> 396 153.018153   2.844868   2 #> 397 163.304266   2.873908   2 #> 398 151.442215   2.951052   2 #> 399 177.170234   2.505837   2 #> 400 190.395772   2.827366   2 #> 401 110.439531   2.935365   2 #> 402  68.309834   2.928211   2 #> 403 697.719722   3.793974   2 #> 404 298.631095   2.648414   2 #> 405 621.939430   2.561435   2 #> 406 381.223277   2.583524   2 #> 407 898.169381   3.639508   2 #> 408 701.635809   2.727285   2 #> 409 738.184681   2.904053   2 #> 410 764.386035   3.926866   2 #> 411 742.206230   2.622359   2 #> 412   8.144928   2.552420   2 #> 413 295.701926   3.420825   2 #> 414 280.514944   2.789812   2 #> 415 280.768454   2.607244   2 #> 416 379.355393   3.999074   2 #> 417  72.090708   2.562347   2 #> 418 181.813500   2.532960   2 #>  #> [[4]] #>             ts magnitudes gen #> 1   588.353783   2.585966   3 #> 2   620.863375   2.564967   3 #> 3   542.250296   2.502224   3 #> 4   671.774771   2.705824   3 #> 5   502.566795   2.595814   3 #> 6   738.131900   3.098251   3 #> 7   640.586139   3.013452   3 #> 8   536.801687   2.712439   3 #> 9   500.806545   2.737595   3 #> 10  529.502381   3.951269   3 #> 11  502.970050   3.014063   3 #> 12  749.311299   2.970511   3 #> 13  560.005186   4.251182   3 #> 14  809.719445   3.056627   3 #> 15  729.837483   2.822208   3 #> 16  737.574080   2.673403   3 #> 17  608.587063   2.706029   3 #> 18  563.358701   3.456523   3 #> 19  599.812167   2.608301   3 #> 20  563.920518   2.733773   3 #> 21  576.661344   2.735280   3 #> 22  604.469728   3.019241   3 #> 23  577.010565   2.653883   3 #> 24  513.999434   2.665110   3 #> 25  521.262533   3.386816   3 #> 26  513.450856   2.832324   3 #> 27  512.642394   2.980480   3 #> 28  557.927127   3.189901   3 #> 29  500.769185   3.499809   3 #> 30  701.115531   2.703040   3 #> 31  501.170712   3.059935   3 #> 32  500.163356   2.665733   3 #> 33  504.028250   2.762745   3 #> 34  623.793988   2.531668   3 #> 35  595.802632   3.239991   3 #> 36  516.806879   3.109120   3 #> 37  519.863846   2.947387   3 #> 38  505.421667   2.821091   3 #> 39  547.477790   3.454890   3 #> 40  504.061350   2.533817   3 #> 41  742.554932   2.645465   3 #> 42  509.591275   5.877732   3 #> 43  531.370618   2.812689   3 #> 44  504.719069   3.076442   3 #> 45  505.126444   3.468359   3 #> 46  521.517388   2.839996   3 #> 47  822.445348   2.540241   3 #> 48  814.522583   2.521735   3 #> 49  577.988992   2.693869   3 #> 50  506.656785   2.593559   3 #> 51  897.734622   2.539072   3 #> 52  707.378138   2.712136   3 #> 53  566.593009   3.794246   3 #> 54  528.767685   3.144027   3 #> 55  527.425403   2.578174   3 #> 56  527.488565   2.553065   3 #> 57  526.774448   3.849985   3 #> 58  502.822112   2.586814   3 #> 59  501.768828   2.563403   3 #> 60  892.269847   2.588922   3 #> 61  893.062215   2.510430   3 #> 62  502.424379   2.937439   3 #> 63  734.190236   2.640667   3 #> 64  736.899403   2.707127   3 #> 65  622.964281   2.780696   3 #> 66  638.422324   3.395797   3 #> 67  604.092915   2.860865   3 #> 68  699.604412   3.243477   3 #> 69  698.256154   2.629378   3 #> 70  503.205194   2.601578   3 #> 71  527.059155   2.970210   3 #> 72  500.508668   2.787370   3 #> 73  505.713655   2.530773   3 #> 74  500.413229   2.731028   3 #> 75  734.999091   4.284286   3 #> 76  699.461740   2.753471   3 #> 77  794.482228   2.553001   3 #> 78   50.251794   2.604576   3 #> 79  270.837367   2.877643   3 #> 80  150.786126   2.952534   3 #> 81  254.088678   2.654712   3 #> 82  156.081787   2.540454   3 #> 83  174.268064   3.730019   3 #> 84  151.514199   2.532295   3 #> 85  151.738357   2.673595   3 #> 86  164.385358   2.591738   3 #> 87  153.801186   2.599871   3 #> 88  151.492659   2.878307   3 #> 89  166.502785   2.944978   3 #> 90  166.922090   2.900602   3 #> 91  152.812611   2.529549   3 #> 92  152.148052   3.417515   3 #> 93  151.797159   2.979248   3 #> 94  154.200756   2.704450   3 #> 95  698.362059   2.617992   3 #> 96  703.272178   4.160467   3 #> 97  698.997437   3.339493   3 #> 98  698.751525   2.579100   3 #> 99  898.211270   3.135503   3 #> 100 765.723970   2.757464   3 #> 101 768.185559   2.714094   3 #> 102 764.457796   3.860153   3 #> 103   8.632302   3.487389   3 #> 104 297.248021   4.116523   3 #> 105 342.642654   2.683546   3 #> 106 364.016316   2.849715   3 #> 107 379.905108   2.631295   3 #> 108 379.708718   2.760286   3 #>  #> [[5]] #>           ts magnitudes gen #> 1   501.2047   2.594731   4 #> 2   530.1739   2.530203   4 #> 3   529.5321   2.808695   4 #> 4   540.3833   2.787579   4 #> 5   561.8945   3.578737   4 #> 6   561.6091   3.804476   4 #> 7   576.1621   2.913659   4 #> 8   577.1637   3.578305   4 #> 9   567.9927   2.751277   4 #> 10  523.3531   2.599410   4 #> 11  513.4569   2.508568   4 #> 12  501.3459   3.769226   4 #> 13  625.3961   4.179167   4 #> 14  517.5559   2.563859   4 #> 15  509.7471   2.566389   4 #> 16  510.7247   2.610080   4 #> 17  509.7021   3.008477   4 #> 18  509.6711   2.726807   4 #> 19  567.3315   3.040894   4 #> 20  518.0834   2.629381   4 #> 21  509.7034   2.552691   4 #> 22  514.4099   3.080685   4 #> 23  515.0465   3.143500   4 #> 24  509.7246   2.613522   4 #> 25  952.3760   3.583065   4 #> 26  509.7723   2.763924   4 #> 27  511.5712   2.827928   4 #> 28  538.1553   3.315081   4 #> 29  538.0173   2.689416   4 #> 30  742.9370   2.859825   4 #> 31  510.0524   2.946502   4 #> 32  511.6405   2.734134   4 #> 33  509.7687   2.562771   4 #> 34  520.2443   2.720299   4 #> 35  510.1765   2.849297   4 #> 36  512.6781   2.502589   4 #> 37  557.9262   2.681264   4 #> 38  876.6600   2.783504   4 #> 39  544.8156   3.103849   4 #> 40  510.1537   2.509164   4 #> 41  516.6363   3.178607   4 #> 42  510.7785   3.259050   4 #> 43  510.3360   2.500088   4 #> 44  510.0505   2.894438   4 #> 45  511.3223   3.317655   4 #> 46  557.6472   2.671606   4 #> 47  509.7143   2.917680   4 #> 48  552.8282   4.618963   4 #> 49  557.9174   2.590951   4 #> 50  511.5805   2.969227   4 #> 51  509.6219   3.671668   4 #> 52  567.8044   2.534086   4 #> 53  552.5394   2.684717   4 #> 54  514.3739   2.502917   4 #> 55  511.4096   2.545924   4 #> 56  653.1268   2.500483   4 #> 57  570.6273   2.597247   4 #> 58  512.7301   2.974276   4 #> 59  510.3309   3.573661   4 #> 60  510.5645   3.330440   4 #> 61  575.2330   2.943199   4 #> 62  686.3880   2.642721   4 #> 63  510.4049   2.588444   4 #> 64  534.5589   3.620271   4 #> 65  689.5111   2.544561   4 #> 66  510.6387   2.638001   4 #> 67  619.1595   2.608546   4 #> 68  509.6868   2.597260   4 #> 69  513.1506   2.530955   4 #> 70  616.4288   2.730044   4 #> 71  510.5682   3.724834   4 #> 72  511.1911   2.777052   4 #> 73  547.4400   2.714539   4 #> 74  509.6015   3.114944   4 #> 75  512.8968   3.253089   4 #> 76  509.5980   3.180508   4 #> 77  510.0070   2.574026   4 #> 78  512.6146   4.911639   4 #> 79  518.3319   2.778308   4 #> 80  541.9128   3.205298   4 #> 81  776.4024   2.781497   4 #> 82  509.8751   2.550617   4 #> 83  517.3873   3.203524   4 #> 84  610.3008   3.252397   4 #> 85  511.3247   2.782205   4 #> 86  509.6047   2.643197   4 #> 87  601.1645   3.275570   4 #> 88  509.6336   2.990757   4 #> 89  510.8450   2.557852   4 #> 90  509.8411   3.616076   4 #> 91  807.6576   2.884243   4 #> 92  510.0596   3.478812   4 #> 93  510.0352   2.808172   4 #> 94  509.6238   2.781891   4 #> 95  512.3931   2.888157   4 #> 96  509.6816   3.291576   4 #> 97  509.9377   2.596820   4 #> 98  509.5972   2.608318   4 #> 99  510.5036   4.218029   4 #> 100 510.4085   2.634007   4 #> 101 585.1256   3.832288   4 #> 102 568.1857   2.521845   4 #> 103 537.5597   2.622819   4 #> 104 535.0239   2.688252   4 #> 105 876.1912   2.952941   4 #> 106 510.3720   2.581998   4 #> 107 575.9651   3.335626   4 #> 108 509.6104   4.374468   4 #> 109 510.3646   2.914948   4 #> 110 519.7649   4.679457   4 #> 111 584.9763   2.559718   4 #> 112 521.2420   4.188951   4 #> 113 511.0648   2.956252   4 #> 114 520.0031   2.607269   4 #> 115 511.0471   2.537436   4 #> 116 516.4996   4.307536   4 #> 117 539.1441   3.413739   4 #> 118 668.6745   2.529709   4 #> 119 511.7382   2.961512   4 #> 120 852.1240   3.661519   4 #> 121 687.5472   3.182511   4 #> 122 521.3708   2.501692   4 #> 123 509.6581   3.633168   4 #> 124 632.1988   3.591117   4 #> 125 509.7250   2.658139   4 #> 126 510.0048   2.562964   4 #> 127 536.3859   2.686513   4 #> 128 946.9997   2.541686   4 #> 129 509.8781   3.146393   4 #> 130 599.9662   2.665051   4 #> 131 509.7339   2.550760   4 #> 132 509.6074   2.773982   4 #> 133 509.6207   4.049199   4 #> 134 509.7722   3.191547   4 #> 135 526.9013   2.940229   4 #> 136 509.5986   2.625076   4 #> 137 563.8575   4.392029   4 #> 138 608.7152   3.656498   4 #> 139 511.0480   2.809902   4 #> 140 510.2992   2.558778   4 #> 141 530.8602   2.630517   4 #> 142 961.7506   3.374264   4 #> 143 509.7923   2.624687   4 #> 144 697.9873   2.897218   4 #> 145 510.8335   2.648493   4 #> 146 511.2172   3.112217   4 #> 147 510.0456   2.927089   4 #> 148 526.4200   2.726972   4 #> 149 511.3347   2.505151   4 #> 150 520.9842   2.514740   4 #> 151 511.1763   2.574822   4 #> 152 509.7283   2.566740   4 #> 153 511.9440   2.973335   4 #> 154 510.8804   2.910445   4 #> 155 530.9649   2.762892   4 #> 156 509.8682   2.633322   4 #> 157 577.8393   2.732330   4 #> 158 574.4396   2.541173   4 #> 159 534.8113   2.760957   4 #> 160 529.3852   2.528756   4 #> 161 529.6907   2.902363   4 #> 162 618.9494   2.839513   4 #> 163 502.3034   2.642364   4 #> 164 720.3009   2.923914   4 #> 165 999.1804   3.119824   4 #> 166 735.9404   2.861274   4 #> 167 735.7332   2.731586   4 #> 168 737.3768   2.563966   4 #> 169 735.6840   3.377112   4 #> 170 174.4099   2.787136   4 #> 171 206.3016   2.589718   4 #> 172 168.4595   2.911643   4 #> 173 152.8644   2.834948   4 #> 174 255.1351   2.868085   4 #> 175 704.4424   2.660664   4 #> 176 703.8756   2.789029   4 #> 177 699.2665   3.470615   4 #> 178 764.7428   2.789065   4 #> 179 764.6810   3.509669   4 #> 180 297.3373   2.745395   4 #> 181 301.8608   2.966579   4 #> 182 297.3412   2.644335   4 #> 183 375.2927   3.463648   4 #> 184 364.0697   2.576040   4 #>  #> [[6]] #>           ts magnitudes gen #> 1   578.0945   2.591532   5 #> 2   577.2190   2.657025   5 #> 3   697.6933   3.340246   5 #> 4   626.3928   2.682025   5 #> 5   626.5975   2.511970   5 #> 6   626.2455   2.673076   5 #> 7   625.5230   3.243403   5 #> 8   628.5073   2.838389   5 #> 9   518.1033   2.757627   5 #> 10  952.9341   2.701709   5 #> 11  510.1214   3.286068   5 #> 12  512.9769   3.040383   5 #> 13  553.7653   2.568933   5 #> 14  553.7508   2.863303   5 #> 15  553.0446   2.977229   5 #> 16  609.0390   3.225139   5 #> 17  818.1981   3.443888   5 #> 18  909.1405   2.515768   5 #> 19  555.5004   2.632796   5 #> 20  518.7279   2.656663   5 #> 21  510.6031   2.847180   5 #> 22  518.3910   2.549927   5 #> 23  510.5720   3.205148   5 #> 24  785.6479   3.930159   5 #> 25  566.5451   2.903446   5 #> 26  893.3418   2.585363   5 #> 27  512.0941   2.565420   5 #> 28  700.7132   2.851287   5 #> 29  801.0986   2.931505   5 #> 30  596.2282   3.092025   5 #> 31  516.9031   2.552523   5 #> 32  512.7655   2.883464   5 #> 33  512.7124   2.820626   5 #> 34  610.7357   2.707339   5 #> 35  522.9212   3.452445   5 #> 36  561.7194   2.512169   5 #> 37  512.6730   2.815351   5 #> 38  678.8527   2.630484   5 #> 39  515.6984   2.728062   5 #> 40  931.4265   2.869838   5 #> 41  512.8987   2.854487   5 #> 42  981.5251   2.802166   5 #> 43  512.8731   3.936530   5 #> 44  512.6214   3.381696   5 #> 45  512.6186   2.950413   5 #> 46  515.6058   2.508447   5 #> 47  514.5636   3.265218   5 #> 48  512.9171   2.525079   5 #> 49  517.1484   2.961337   5 #> 50  557.6257   2.676596   5 #> 51  993.2495   2.545923   5 #> 52  610.9350   2.558369   5 #> 53  611.0219   2.862018   5 #> 54  612.4445   2.961427   5 #> 55  728.4717   2.554514   5 #> 56  520.0629   3.130188   5 #> 57  704.2513   2.566669   5 #> 58  535.7411   3.392720   5 #> 59  559.8158   2.548976   5 #> 60  510.8032   2.526555   5 #> 61  509.7320   2.640183   5 #> 62  526.9325   3.399149   5 #> 63  541.1838   3.258380   5 #> 64  522.9210   2.888038   5 #> 65  528.5316   3.403226   5 #> 66  713.0752   2.661201   5 #> 67  559.0051   3.609077   5 #> 68  691.1465   2.627137   5 #> 69  551.7193   2.610975   5 #> 70  560.9191   2.755289   5 #> 71  902.4527   2.703759   5 #> 72  520.6535   2.509072   5 #> 73  520.4346   3.003602   5 #> 74  526.8424   2.535211   5 #> 75  522.1957   2.989042   5 #> 76  536.9715   2.921596   5 #> 77  522.3460   4.786619   5 #> 78  521.2686   2.628599   5 #> 79  528.1023   2.819037   5 #> 80  551.7539   2.812349   5 #> 81  523.7168   2.868988   5 #> 82  905.8807   2.660156   5 #> 83  517.9315   2.663161   5 #> 84  578.5191   3.492886   5 #> 85  689.5678   2.533449   5 #> 86  593.3729   2.515467   5 #> 87  636.4991   2.552044   5 #> 88  632.8763   2.642165   5 #> 89  509.8106   2.959375   5 #> 90  574.5465   2.633963   5 #> 91  530.7180   2.944181   5 #> 92  564.3563   3.159939   5 #> 93  605.3610   2.999093   5 #> 94  684.2196   2.527521   5 #> 95  615.4587   2.635181   5 #> 96  511.4273   2.676350   5 #> 97  530.0582   2.714655   5 #> 98  533.4000   2.656094   5 #> 99  999.2497   3.097610   5 #> 100 168.6024   2.882497   5 #> 101 784.3263   4.283899   5 #> 102 297.7182   2.546562   5 #>  #> [[7]] #>          ts magnitudes gen #> 1  625.9702   2.760165   6 #> 2  510.1628   2.680987   6 #> 3  595.3126   3.024497   6 #> 4  511.4391   2.510601   6 #> 5  612.4267   5.369015   6 #> 6  510.5971   2.523887   6 #> 7  788.3338   2.682858   6 #> 8  801.4179   3.328462   6 #> 9  784.4338   2.945588   6 #> 10 513.1636   2.908841   6 #> 11 547.5294   3.062904   6 #> 12 936.6659   2.759629   6 #> 13 534.6708   3.211227   6 #> 14 513.3954   3.405929   6 #> 15 611.0813   3.081903   6 #> 16 704.8098   3.598920   6 #> 17 630.0082   2.799430   6 #> 18 723.5197   2.581931   6 #> 19 662.4221   2.711836   6 #> 20 538.5956   3.118558   6 #> 21 527.4940   2.901984   6 #> 22 633.3695   3.108137   6 #> 23 553.2228   2.649341   6 #> 24 522.7755   3.013781   6 #> 25 527.7838   3.244495   6 #> 26 606.0784   3.096559   6 #> 27 532.0971   2.796099   6 #> 28 539.7650   3.576074   6 #> 29 622.1214   2.738879   6 #> 30 632.9637   3.114604   6 #> 31 512.0561   3.505644   6 #> 32 531.0606   2.800927   6 #> 33 564.4325   2.632860   6 #> 34 515.2938   2.615179   6 #> 35 795.1599   3.444408   6 #> 36 785.6154   2.830649   6 #> 37 824.8041   3.310943   6 #> 38 784.3368   2.592476   6 #> 39 804.7110   2.598738   6 #> 40 798.0815   3.065569   6 #> 41 784.3661   2.812439   6 #> 42 800.3329   2.528487   6 #>  #> [[8]] #>          ts magnitudes gen #> 1  631.6513   2.588487   7 #> 2  647.2483   3.084153   7 #> 3  624.2150   3.739690   7 #> 4  613.5514   3.847194   7 #> 5  632.9768   2.628484   7 #> 6  613.7753   3.491039   7 #> 7  612.8788   2.575779   7 #> 8  614.1234   3.152798   7 #> 9  612.4553   2.612868   7 #> 10 613.0798   2.755046   7 #> 11 612.7931   2.799611   7 #> 12 614.5377   3.656964   7 #> 13 633.2879   2.825979   7 #> 14 613.2718   2.677514   7 #> 15 612.4953   2.858694   7 #> 16 615.1867   4.730769   7 #> 17 620.7287   2.525443   7 #> 18 612.8366   2.522585   7 #> 19 656.3055   3.363478   7 #> 20 612.8765   3.213950   7 #> 21 612.9113   2.941893   7 #> 22 613.5405   2.820946   7 #> 23 635.1291   2.821272   7 #> 24 949.8983   2.665867   7 #> 25 653.6152   2.651769   7 #> 26 613.5375   3.239885   7 #> 27 697.0836   2.607844   7 #> 28 612.5968   5.310018   7 #> 29 862.3721   2.670966   7 #> 30 613.0991   2.648885   7 #> 31 623.5820   2.556145   7 #> 32 615.2134   2.605414   7 #> 33 613.3252   2.881489   7 #> 34 613.9759   3.073975   7 #> 35 612.5729   3.445108   7 #> 36 617.6358   3.678019   7 #> 37 632.0360   2.785444   7 #> 38 612.6304   2.522172   7 #> 39 865.3235   2.569784   7 #> 40 801.5929   2.938296   7 #> 41 534.7310   2.747968   7 #> 42 513.5310   2.540329   7 #> 43 532.8984   2.519592   7 #> 44 527.9967   3.595826   7 #> 45 540.4661   2.689833   7 #>  #> [[9]] #>          ts magnitudes gen #> 1  614.3842   2.646644   8 #> 2  614.9013   3.775822   8 #> 3  615.2373   3.198885   8 #> 4  615.5999   3.423201   8 #> 5  617.2627   3.825828   8 #> 6  615.4300   2.716690   8 #> 7  616.1801   2.991243   8 #> 8  615.4261   2.512985   8 #> 9  615.2159   2.721188   8 #> 10 615.4158   2.962995   8 #> 11 616.1535   2.663604   8 #> 12 629.5345   2.576726   8 #> 13 615.6015   2.827375   8 #> 14 612.6386   2.887962   8 #> 15 781.5682   2.780758   8 #> 16 616.4257   2.695997   8 #> 17 630.3621   2.958041   8 #> 18 612.5985   2.691203   8 #> 19 724.0114   3.295648   8 #> 20 652.7504   3.228216   8 #> 21 711.9598   3.016639   8 #> 22 757.5941   2.915255   8 #> 23 930.4153   2.877027   8 #> 24 660.9165   2.629658   8 #> 25 618.8946   3.635158   8 #> 26 629.6050   4.088342   8 #> 27 617.2320   2.838452   8 #> 28 613.3932   2.701925   8 #> 29 778.8379   2.557560   8 #> 30 618.5894   4.360413   8 #> 31 613.4937   2.985785   8 #> 32 614.3896   2.787577   8 #> 33 613.5150   3.028967   8 #> 34 633.6498   2.500219   8 #> 35 643.9522   2.621546   8 #> 36 634.2221   2.500062   8 #> 37 733.3741   2.592827   8 #> 38 613.1227   3.315080   8 #> 39 767.8105   3.468428   8 #> 40 613.2020   3.060307   8 #> 41 615.9991   3.024087   8 #> 42 614.4077   5.088476   8 #> 43 613.1806   2.904609   8 #> 44 613.3145   2.702553   8 #> 45 615.1955   2.633784   8 #> 46 993.2530   2.683171   8 #> 47 614.6387   2.699207   8 #> 48 612.8033   2.572605   8 #> 49 613.4201   3.195777   8 #> 50 614.2746   3.527588   8 #> 51 612.7568   2.692458   8 #> 52 612.8487   4.688915   8 #> 53 613.9673   2.626277   8 #> 54 983.0668   2.518011   8 #> 55 887.9696   2.610071   8 #> 56 613.0529   3.023923   8 #> 57 616.0997   3.338917   8 #> 58 618.3786   2.644566   8 #> 59 619.1251   3.502903   8 #> 60 615.4071   2.642987   8 #> 61 612.7024   2.947135   8 #> 62 617.7965   2.668479   8 #> 63 613.3272   2.597549   8 #> 64 612.6213   2.717689   8 #> 65 613.1521   2.523399   8 #> 66 614.1012   2.503240   8 #> 67 652.9794   2.576645   8 #> 68 618.3352   2.899333   8 #> 69 617.7037   2.920583   8 #> 70 528.2399   2.615711   8 #>  #> [[10]] #>          ts magnitudes gen #> 1  614.4094   2.731401   9 #> 2  614.9412   3.355205   9 #> 3  627.5494   2.985780   9 #> 4  895.7410   2.729144   9 #> 5  618.8298   2.517389   9 #> 6  616.2701   6.785193   9 #> 7  657.4886   2.712154   9 #> 8  930.4581   2.730399   9 #> 9  631.6086   2.588778   9 #> 10 618.9621   2.726449   9 #> 11 637.4308   3.013811   9 #> 12 632.1396   2.714221   9 #> 13 644.0061   2.531847   9 #> 14 748.6059   2.744687   9 #> 15 622.3794   2.744584   9 #> 16 623.3364   2.914833   9 #> 17 750.6028   3.237032   9 #> 18 620.8829   3.727588   9 #> 19 630.9645   3.082132   9 #> 20 644.4070   3.260194   9 #> 21 777.7761   3.577755   9 #> 22 616.4329   2.730520   9 #> 23 614.9475   2.620106   9 #> 24 615.5092   3.124838   9 #> 25 614.7130   2.698942   9 #> 26 631.7469   2.994543   9 #> 27 628.5742   2.523960   9 #> 28 736.7357   3.155096   9 #> 29 614.5004   2.840035   9 #> 30 614.7082   2.949673   9 #> 31 614.7543   2.745196   9 #> 32 867.1839   2.784633   9 #> 33 643.8776   2.960732   9 #> 34 616.1635   2.528629   9 #> 35 617.5929   2.728914   9 #> 36 624.4908   3.574114   9 #> 37 732.2471   3.624498   9 #> 38 614.4974   2.711321   9 #> 39 705.0360   2.521991   9 #> 40 617.1199   2.775418   9 #> 41 636.1425   2.852600   9 #> 42 612.9759   2.518202   9 #> 43 612.8613   2.531220   9 #> 44 613.3872   2.805035   9 #> 45 620.9666   2.966135   9 #> 46 613.5956   2.562349   9 #> 47 622.9768   2.724181   9 #> 48 612.9632   2.657759   9 #> 49 612.8776   4.599780   9 #> 50 613.2364   2.859927   9 #> 51 638.6251   2.777366   9 #> 52 625.0259   2.764761   9 #> 53 622.8005   2.721319   9 #> 54 640.6388   2.714414   9 #> 55 640.4066   2.680327   9 #>  #> [[11]] #>            ts magnitudes gen #> 1    628.7531   2.626340  10 #> 2    875.5497   2.901462  10 #> 3    620.3629   2.818456  10 #> 4    621.1301   3.105556  10 #> 5    616.7346   3.074148  10 #> 6    616.4300   3.001555  10 #> 7    616.7366   2.581756  10 #> 8    616.9314   3.341523  10 #> 9    617.3973   2.513220  10 #> 10   685.4930   3.892460  10 #> 11   616.5155   2.761436  10 #> 12   983.2028   3.908160  10 #> 13   627.1589   2.637390  10 #> 14   640.7508   2.922461  10 #> 15   618.5109   3.058805  10 #> 16   624.2091   2.851906  10 #> 17   623.4867   3.109518  10 #> 18   719.8373   3.041407  10 #> 19   717.4139   3.512918  10 #> 20   616.6557   2.840670  10 #> 21   619.7784   3.094846  10 #> 22   622.1754   3.425424  10 #> 23   623.2870   3.407120  10 #> 24   686.0733   3.638482  10 #> 25   730.1736   2.695559  10 #> 26   657.3085   2.841955  10 #> 27   622.7849   3.566012  10 #> 28   621.2319   2.628229  10 #> 29   630.0355   4.188939  10 #> 30   621.6892   2.675927  10 #> 31   712.4077   2.718785  10 #> 32   616.7586   3.149211  10 #> 33   616.3831   2.918691  10 #> 34   756.8426   2.788473  10 #> 35   616.3711   3.101573  10 #> 36   637.5113   2.972501  10 #> 37   624.6319   2.641961  10 #> 38   618.1055   3.207709  10 #> 39   749.4332   2.612508  10 #> 40   616.4707   2.877934  10 #> 41   616.8119   2.528485  10 #> 42   616.3846   2.848185  10 #> 43   616.3759   3.051664  10 #> 44   633.9141   3.208062  10 #> 45   741.5042   2.601473  10 #> 46   616.3124   2.556079  10 #> 47   617.0050   2.968828  10 #> 48   849.0017   2.763251  10 #> 49   618.9962   2.902571  10 #> 50   665.7646   2.742658  10 #> 51   620.8943   4.137073  10 #> 52   616.2959   2.802194  10 #> 53   648.0434   2.560733  10 #> 54   636.2227   2.593902  10 #> 55   636.9542   2.979260  10 #> 56   616.3353   3.458536  10 #> 57   655.9556   3.080268  10 #> 58   667.8717   2.814292  10 #> 59   617.6071   3.394904  10 #> 60   627.9880   2.780349  10 #> 61   694.6248   3.064554  10 #> 62   627.7067   2.739248  10 #> 63   709.2790   2.535826  10 #> 64   617.0801   2.872710  10 #> 65   633.1920   2.813182  10 #> 66   617.9423   2.745990  10 #> 67   616.3862   2.569111  10 #> 68   680.7829   2.769520  10 #> 69   617.8881   3.087900  10 #> 70   618.1992   3.889794  10 #> 71   618.9037   2.512633  10 #> 72   616.6306   3.871182  10 #> 73   617.0925   3.339170  10 #> 74   616.4792   2.645868  10 #> 75   616.3205   3.242378  10 #> 76   634.9863   2.824099  10 #> 77   623.2114   2.686906  10 #> 78   617.0465   2.708152  10 #> 79   644.1792   2.619983  10 #> 80   616.3127   2.617225  10 #> 81   616.3279   2.866791  10 #> 82   616.7908   3.206026  10 #> 83   651.9334   2.529807  10 #> 84   617.1666   2.698774  10 #> 85   616.8470   2.612020  10 #> 86   664.4817   2.501712  10 #> 87   616.6107   2.549912  10 #> 88   616.4352   2.516784  10 #> 89   616.3440   3.566142  10 #> 90   616.3578   3.172514  10 #> 91   620.1690   2.608856  10 #> 92   777.4730   3.723500  10 #> 93   616.6528   3.152940  10 #> 94   616.3514   2.520527  10 #> 95   617.6717   3.275582  10 #> 96   617.0019   3.000200  10 #> 97   619.3155   3.084896  10 #> 98   620.3131   2.661332  10 #> 99   643.4648   2.892689  10 #> 100  639.6987   2.609435  10 #> 101  620.1504   3.062506  10 #> 102  616.4088   3.118514  10 #> 103  630.5314   2.785852  10 #> 104  616.5762   2.635767  10 #> 105  620.4642   2.773162  10 #> 106  620.0870   2.641375  10 #> 107  616.2713   2.532593  10 #> 108  616.7317   3.064157  10 #> 109  647.7828   3.021816  10 #> 110  636.2415   3.082311  10 #> 111  619.0514   2.501684  10 #> 112  618.0428   2.560784  10 #> 113  617.2950   2.684993  10 #> 114  624.6444   2.677932  10 #> 115  660.2100   2.798312  10 #> 116  616.3996   2.695260  10 #> 117  919.2525   3.033711  10 #> 118  616.3036   2.869902  10 #> 119  687.1327   3.334301  10 #> 120  704.9259   2.571342  10 #> 121  622.7880   2.850470  10 #> 122  616.9295   3.163841  10 #> 123  621.0967   3.010310  10 #> 124  619.6620   2.997631  10 #> 125  616.5279   2.861590  10 #> 126  616.6478   2.503153  10 #> 127  617.3705   4.145414  10 #> 128  616.6920   2.769133  10 #> 129  616.4349   2.601735  10 #> 130  620.3002   2.660648  10 #> 131  634.6714   2.683411  10 #> 132  616.3180   2.626962  10 #> 133  629.8097   2.679422  10 #> 134  624.1947   2.779476  10 #> 135  621.0505   2.602468  10 #> 136  616.2727   2.763086  10 #> 137  618.6156   2.646094  10 #> 138  639.6894   2.747307  10 #> 139  802.0159   2.510706  10 #> 140  724.1434   2.531490  10 #> 141  639.7586   3.902629  10 #> 142  661.8961   3.677196  10 #> 143  616.4912   3.114559  10 #> 144  641.0885   3.068154  10 #> 145  875.2776   3.238641  10 #> 146  617.7410   2.696453  10 #> 147  852.6111   2.570551  10 #> 148  617.7032   4.134055  10 #> 149  616.4618   2.659787  10 #> 150  621.5086   3.210774  10 #> 151  619.5305   3.251207  10 #> 152  616.5016   2.774095  10 #> 153  621.4650   3.022784  10 #> 154  618.9805   2.522069  10 #> 155  616.5166   2.698839  10 #> 156  727.3885   3.540255  10 #> 157  616.3331   2.824743  10 #> 158  620.9215   2.509873  10 #> 159  618.7164   2.985709  10 #> 160  620.9213   2.793842  10 #> 161  616.8155   2.886596  10 #> 162  620.9158   3.979767  10 #> 163  616.4773   2.639564  10 #> 164  637.1582   2.598242  10 #> 165  630.4020   2.631174  10 #> 166  648.2952   3.204852  10 #> 167  900.7571   2.595645  10 #> 168  807.5349   3.126495  10 #> 169  617.7400   2.639988  10 #> 170  617.0836   3.252886  10 #> 171  616.8736   2.903533  10 #> 172  619.2069   2.687231  10 #> 173  616.7911   2.534182  10 #> 174  981.4891   2.643508  10 #> 175  616.6647   3.009595  10 #> 176  667.9523   2.654567  10 #> 177  665.6218   2.908008  10 #> 178  629.6464   3.184053  10 #> 179  616.5520   2.813004  10 #> 180  931.2403   3.058686  10 #> 181  940.7363   3.025904  10 #> 182  696.0219   3.115933  10 #> 183  617.3895   3.410354  10 #> 184  624.9690   2.917261  10 #> 185  616.2964   2.975804  10 #> 186  707.5012   2.943178  10 #> 187  715.3612   2.627944  10 #> 188  616.4757   2.503187  10 #> 189  616.2802   2.855838  10 #> 190  616.3004   2.577630  10 #> 191  630.3209   3.191834  10 #> 192  651.3465   3.018688  10 #> 193  616.4430   2.853550  10 #> 194  616.3981   2.875422  10 #> 195  638.8815   2.940382  10 #> 196  636.7982   3.171806  10 #> 197  639.0318   2.911840  10 #> 198  988.0653   2.553613  10 #> 199  628.0879   2.597356  10 #> 200  632.9960   2.914026  10 #> 201  763.3194   2.566607  10 #> 202  623.8486   2.727014  10 #> 203  617.4431   2.511029  10 #> 204  632.4710   3.378575  10 #> 205  618.2611   3.346615  10 #> 206  623.9845   2.677025  10 #> 207  616.6319   2.736207  10 #> 208  616.5875   2.906966  10 #> 209  618.2655   2.583827  10 #> 210  617.5814   3.598570  10 #> 211  618.0604   2.843734  10 #> 212  616.3929   2.828330  10 #> 213  773.4720   3.041228  10 #> 214  616.7166   2.943349  10 #> 215  729.6532   2.518157  10 #> 216  627.2311   2.989850  10 #> 217  766.9782   3.458753  10 #> 218  617.4315   3.130533  10 #> 219  626.3302   2.507536  10 #> 220  617.5467   2.500618  10 #> 221  617.8018   2.954128  10 #> 222  618.6186   2.967552  10 #> 223  700.0572   3.063912  10 #> 224  682.2199   2.768307  10 #> 225  616.3434   2.523818  10 #> 226  619.4328   2.738271  10 #> 227  627.7247   2.575688  10 #> 228  616.2703   2.851827  10 #> 229  617.2699   3.003013  10 #> 230  860.5964   2.511336  10 #> 231  686.9212   2.556748  10 #> 232  679.3650   2.602631  10 #> 233  616.3289   2.672678  10 #> 234  619.7706   2.515895  10 #> 235  616.9547   2.833199  10 #> 236  663.2256   2.651149  10 #> 237  826.5780   3.788873  10 #> 238  617.3158   2.735789  10 #> 239  617.9774   2.948499  10 #> 240  616.9194   2.775277  10 #> 241  621.6680   2.807253  10 #> 242  621.8522   4.177281  10 #> 243  657.8742   2.740179  10 #> 244  631.0427   3.323042  10 #> 245  633.5725   2.664056  10 #> 246  620.2492   3.138582  10 #> 247  616.9594   3.583797  10 #> 248  671.2566   2.712490  10 #> 249  616.3839   2.811347  10 #> 250  616.7479   3.484043  10 #> 251  618.0514   2.521114  10 #> 252  628.1425   3.070485  10 #> 253  619.1493   3.154213  10 #> 254  621.5312   2.649453  10 #> 255  621.2970   3.116792  10 #> 256  618.4937   2.767447  10 #> 257  618.5541   2.618243  10 #> 258  712.2126   2.828875  10 #> 259  633.4058   2.649608  10 #> 260  621.6934   2.537552  10 #> 261  619.2215   3.515187  10 #> 262  624.1917   3.176095  10 #> 263  616.3057   2.680630  10 #> 264  617.8923   2.539279  10 #> 265  617.1297   2.557535  10 #> 266  620.3289   2.586151  10 #> 267  649.2325   3.018237  10 #> 268  616.4000   3.232665  10 #> 269  616.3330   3.333121  10 #> 270  616.3421   2.976264  10 #> 271  634.8702   2.949975  10 #> 272  616.3926   3.387034  10 #> 273  616.3150   3.168996  10 #> 274  618.9802   3.465733  10 #> 275  867.3316   3.477716  10 #> 276  736.3566   2.845906  10 #> 277  620.5444   2.705162  10 #> 278  618.2602   2.752685  10 #> 279  617.0157   2.655708  10 #> 280  616.4544   3.028090  10 #> 281  667.3710   2.967598  10 #> 282  673.2422   2.834133  10 #> 283  625.0293   3.263974  10 #> 284  620.7193   2.547864  10 #> 285  616.7564   3.726711  10 #> 286  619.2495   3.093355  10 #> 287  616.4520   2.778189  10 #> 288  616.5602   2.659671  10 #> 289  616.4646   2.683230  10 #> 290  825.0204   2.590701  10 #> 291  634.0399   2.623691  10 #> 292  616.8997   2.842376  10 #> 293  616.7605   2.813441  10 #> 294  616.2737   2.566715  10 #> 295  616.6536   2.709993  10 #> 296  633.8139   2.517740  10 #> 297  627.5469   3.057640  10 #> 298  636.1873   2.616186  10 #> 299  618.5672   2.902100  10 #> 300  616.9234   3.856621  10 #> 301  616.9825   2.603183  10 #> 302  616.2998   2.621721  10 #> 303  618.0427   2.601028  10 #> 304  887.4798   2.705863  10 #> 305  624.2010   2.666181  10 #> 306  716.3623   2.706730  10 #> 307  619.0097   2.858575  10 #> 308  656.7986   3.074821  10 #> 309  616.5665   2.727510  10 #> 310  631.2911   3.006823  10 #> 311  616.4908   2.863644  10 #> 312  616.7198   2.517924  10 #> 313  739.5948   2.903013  10 #> 314  618.6167   2.731642  10 #> 315  616.2709   3.576012  10 #> 316  616.3720   2.673534  10 #> 317  715.8491   2.710810  10 #> 318  623.6946   2.839837  10 #> 319  871.1157   2.774980  10 #> 320  617.4166   3.263321  10 #> 321  616.3822   2.576017  10 #> 322  616.9014   2.640754  10 #> 323  619.8406   3.490527  10 #> 324  616.3691   2.838387  10 #> 325  705.3380   2.547390  10 #> 326  620.3639   2.908693  10 #> 327  745.3793   2.854172  10 #> 328  617.3868   2.642945  10 #> 329  624.9876   2.732172  10 #> 330  818.4206   2.692840  10 #> 331  691.4642   3.726717  10 #> 332  957.2472   3.781196  10 #> 333  620.2562   2.597888  10 #> 334  622.1136   2.899729  10 #> 335  622.2081   2.539404  10 #> 336  619.8440   2.773927  10 #> 337  622.3842   2.650935  10 #> 338  616.7128   2.579121  10 #> 339  823.7766   2.579264  10 #> 340  621.9543   2.720663  10 #> 341  821.1760   2.869060  10 #> 342  628.5384   3.137005  10 #> 343  666.5685   3.008631  10 #> 344  626.1550   2.655922  10 #> 345  621.9545   3.153842  10 #> 346  633.7774   2.648720  10 #> 347  621.1422   2.968021  10 #> 348  639.9164   4.124939  10 #> 349  633.6976   2.772594  10 #> 350  624.2655   2.523393  10 #> 351  620.5515   2.661418  10 #> 352  708.9497   2.827998  10 #> 353  616.4005   2.713842  10 #> 354  624.2385   2.624094  10 #> 355  616.3886   2.513608  10 #> 356  616.9343   3.215192  10 #> 357  622.0851   3.331741  10 #> 358  787.7264   2.603905  10 #> 359  619.4456   4.579363  10 #> 360  766.4349   2.890507  10 #> 361  640.6877   2.621533  10 #> 362  834.0432   2.904343  10 #> 363  616.7104   2.650945  10 #> 364  899.1989   2.938288  10 #> 365  624.2379   2.869811  10 #> 366  616.4634   2.817348  10 #> 367  718.2959   2.981012  10 #> 368  617.0982   2.557693  10 #> 369  616.7183   2.761615  10 #> 370  641.1189   2.904136  10 #> 371  616.3575   2.738495  10 #> 372  772.1280   3.455875  10 #> 373  628.4916   2.944848  10 #> 374  616.3766   3.488128  10 #> 375  616.9367   3.285845  10 #> 376  617.1732   2.691794  10 #> 377  616.6892   2.827330  10 #> 378  678.0914   2.724121  10 #> 379  616.5897   3.208212  10 #> 380  616.4913   2.728678  10 #> 381  630.9580   2.541577  10 #> 382  640.3432   2.526134  10 #> 383  616.3005   2.515231  10 #> 384  616.2749   3.848431  10 #> 385  748.8512   2.631549  10 #> 386  622.5303   3.548426  10 #> 387  632.8172   3.087658  10 #> 388  621.9653   3.571993  10 #> 389  630.0509   2.778352  10 #> 390  863.0434   2.741148  10 #> 391  617.7411   2.674708  10 #> 392  617.0849   2.792853  10 #> 393  664.7838   2.504231  10 #> 394  622.7744   2.811075  10 #> 395  617.5911   2.759837  10 #> 396  688.9456   2.593339  10 #> 397  635.0529   3.515847  10 #> 398  635.9546   3.111762  10 #> 399  674.9912   4.211556  10 #> 400  652.3352   3.296449  10 #> 401  616.6329   2.574246  10 #> 402  616.6796   3.278894  10 #> 403  616.4983   4.237181  10 #> 404  619.7002   3.195903  10 #> 405  652.8805   2.957792  10 #> 406  617.1961   2.516375  10 #> 407  633.0627   3.479773  10 #> 408  663.4580   2.613964  10 #> 409  630.8410   3.018977  10 #> 410  655.0340   2.500338  10 #> 411  636.4813   2.803322  10 #> 412  755.3773   2.655834  10 #> 413  749.2278   3.170152  10 #> 414  616.9100   2.512384  10 #> 415  751.6592   3.074603  10 #> 416  661.6139   2.662633  10 #> 417  617.7901   3.011047  10 #> 418  618.0917   2.550694  10 #> 419  974.4268   2.560122  10 #> 420  628.4790   2.605711  10 #> 421  616.5755   3.564544  10 #> 422  645.8224   2.665143  10 #> 423  638.7580   2.557772  10 #> 424  718.1417   3.047562  10 #> 425  616.6784   3.823397  10 #> 426  635.7051   2.825657  10 #> 427  616.5175   2.698578  10 #> 428  617.9605   2.504878  10 #> 429  640.5239   2.759450  10 #> 430  619.0450   2.989125  10 #> 431  622.2473   3.269931  10 #> 432  619.3047   3.545942  10 #> 433  616.2816   3.007203  10 #> 434  620.4235   2.734679  10 #> 435  971.2146   3.298712  10 #> 436  671.9509   3.095773  10 #> 437  623.3731   2.600917  10 #> 438  731.1330   3.027808  10 #> 439  824.1833   4.413437  10 #> 440  616.4169   3.838047  10 #> 441  702.5056   3.192581  10 #> 442  631.3952   2.581464  10 #> 443  616.3921   3.382273  10 #> 444  639.5673   2.534696  10 #> 445  656.8164   2.727923  10 #> 446  616.7455   3.400596  10 #> 447  616.4020   2.515151  10 #> 448  629.1176   3.211877  10 #> 449  618.4601   2.587854  10 #> 450  816.3724   2.755041  10 #> 451  662.3440   3.241192  10 #> 452  616.5696   2.600012  10 #> 453  622.7642   2.521184  10 #> 454  616.3018   2.689268  10 #> 455  616.5662   3.103515  10 #> 456  616.3327   2.885395  10 #> 457  627.7926   3.801251  10 #> 458  616.5982   3.168587  10 #> 459  638.2520   3.528699  10 #> 460  616.4871   2.919357  10 #> 461  651.5728   2.693862  10 #> 462  616.4035   2.701380  10 #> 463  647.1107   3.667978  10 #> 464  616.3072   2.621319  10 #> 465  621.5620   3.005664  10 #> 466  617.8697   3.192810  10 #> 467  786.5204   3.499408  10 #> 468  616.6779   2.587015  10 #> 469  623.3220   2.667796  10 #> 470  618.2924   3.956550  10 #> 471  616.2867   3.008214  10 #> 472  674.8314   2.523468  10 #> 473  779.3609   2.938275  10 #> 474  616.8284   2.659520  10 #> 475  618.2199   3.310314  10 #> 476  622.4053   3.195340  10 #> 477  616.4646   2.517232  10 #> 478  669.5953   2.536607  10 #> 479  618.4246   2.830310  10 #> 480  954.2976   2.511588  10 #> 481  617.2344   3.621391  10 #> 482  616.3309   2.546630  10 #> 483  616.4211   3.046197  10 #> 484  624.2279   3.884956  10 #> 485  827.8379   2.532549  10 #> 486  620.1928   3.934320  10 #> 487  667.2217   3.513568  10 #> 488  699.6674   2.913660  10 #> 489  617.3057   2.700479  10 #> 490  616.3309   3.134348  10 #> 491  616.6216   2.542349  10 #> 492  616.5401   2.569867  10 #> 493  623.7955   2.910073  10 #> 494  616.7480   2.830535  10 #> 495  616.5299   3.117736  10 #> 496  627.2672   2.924783  10 #> 497  620.7073   2.718888  10 #> 498  616.2982   3.113936  10 #> 499  627.0721   2.682396  10 #> 500  855.3494   2.627508  10 #> 501  639.1792   2.587369  10 #> 502  620.5061   4.248995  10 #> 503  795.4083   2.512838  10 #> 504  630.6091   2.603388  10 #> 505  616.2943   2.756410  10 #> 506  616.4137   3.049857  10 #> 507  616.2975   3.050914  10 #> 508  616.3048   2.686016  10 #> 509  619.3202   2.941310  10 #> 510  740.0781   3.105129  10 #> 511  616.6112   2.534508  10 #> 512  616.7472   2.752818  10 #> 513  616.5407   2.540969  10 #> 514  619.7964   4.820780  10 #> 515  641.5829   2.543139  10 #> 516  617.4788   2.697991  10 #> 517  617.3344   2.610078  10 #> 518  620.3057   3.130327  10 #> 519  918.4914   2.606650  10 #> 520  634.7121   2.721537  10 #> 521  629.4243   2.867081  10 #> 522  616.7387   2.537713  10 #> 523  648.8742   2.908940  10 #> 524  616.5599   3.015611  10 #> 525  618.3170   2.514329  10 #> 526  616.2970   3.338721  10 #> 527  617.2397   5.777800  10 #> 528  800.1915   2.904311  10 #> 529  663.0614   3.125851  10 #> 530  752.4898   2.587015  10 #> 531  624.6702   2.581326  10 #> 532  616.4245   2.664318  10 #> 533  783.1484   3.255773  10 #> 534  617.6269   2.578206  10 #> 535  619.2485   2.677958  10 #> 536  617.6951   2.635325  10 #> 537  764.7122   3.374279  10 #> 538  624.9273   3.097851  10 #> 539  647.2830   2.569082  10 #> 540  647.5545   3.159773  10 #> 541  617.0319   3.575469  10 #> 542  648.8277   2.798661  10 #> 543  616.3733   3.188884  10 #> 544  617.2706   2.656136  10 #> 545  619.9676   3.048249  10 #> 546  917.6027   2.581035  10 #> 547  616.2843   3.600015  10 #> 548  644.9336   2.857321  10 #> 549  647.6754   2.662884  10 #> 550  668.3734   2.673890  10 #> 551  617.1628   2.711089  10 #> 552  616.2718   2.755103  10 #> 553  620.5945   3.108615  10 #> 554  616.3854   3.066040  10 #> 555  813.4700   2.676229  10 #> 556  617.2341   3.567907  10 #> 557  616.2830   2.556918  10 #> 558  617.2378   3.049430  10 #> 559  624.1485   2.504187  10 #> 560  616.2727   2.707000  10 #> 561  621.4894   2.517297  10 #> 562  659.3944   2.821502  10 #> 563  626.1009   2.584415  10 #> 564  616.3023   3.013111  10 #> 565  617.2962   2.635919  10 #> 566  616.4308   2.536953  10 #> 567  619.4097   2.725222  10 #> 568  619.0492   3.888164  10 #> 569  619.4679   2.558208  10 #> 570  642.1736   2.866067  10 #> 571  625.1541   2.779689  10 #> 572  916.2911   3.790881  10 #> 573  616.2748   2.584041  10 #> 574  616.9017   2.955048  10 #> 575  617.2108   2.847312  10 #> 576  616.2877   3.489937  10 #> 577  624.7384   2.696375  10 #> 578  945.7112   2.859139  10 #> 579  620.3563   2.627858  10 #> 580  666.8121   3.187660  10 #> 581  616.2854   3.018162  10 #> 582  815.6026   2.850795  10 #> 583  616.2712   3.053780  10 #> 584  617.0996   2.679898  10 #> 585  616.3673   2.591044  10 #> 586  617.8453   2.859430  10 #> 587  669.6846   3.041531  10 #> 588  618.6342   3.595868  10 #> 589  643.2031   2.629519  10 #> 590  616.5010   3.322109  10 #> 591  713.2345   4.160373  10 #> 592  616.6061   2.809994  10 #> 593  769.2425   2.587253  10 #> 594  616.3748   2.771814  10 #> 595  919.5248   2.784783  10 #> 596  643.9724   2.721720  10 #> 597  854.3266   2.657951  10 #> 598  683.9601   4.388950  10 #> 599  616.3150   2.507107  10 #> 600  616.3119   2.589209  10 #> 601  620.2027   3.594868  10 #> 602  645.9471   2.926490  10 #> 603  616.6200   2.525548  10 #> 604  621.5353   3.375219  10 #> 605  616.4217   2.945548  10 #> 606  619.5185   2.826834  10 #> 607  617.5263   2.810653  10 #> 608  617.3854   2.787177  10 #> 609  616.5661   2.792012  10 #> 610  752.3724   2.523618  10 #> 611  725.4703   3.346302  10 #> 612  650.0062   2.587138  10 #> 613  617.2685   2.579394  10 #> 614  616.3931   2.708192  10 #> 615  619.9487   2.505003  10 #> 616  617.8636   2.758735  10 #> 617  652.1440   4.057382  10 #> 618  616.7257   2.696525  10 #> 619  616.9458   2.751982  10 #> 620  625.5573   2.880692  10 #> 621  620.2611   2.872000  10 #> 622  663.9699   3.102617  10 #> 623  616.4117   3.117713  10 #> 624  616.9707   2.932765  10 #> 625  660.5122   3.656924  10 #> 626  620.7275   2.748404  10 #> 627  617.0313   2.639283  10 #> 628  616.5369   2.660773  10 #> 629  616.3195   2.533010  10 #> 630  620.3707   3.259572  10 #> 631  618.6813   3.034823  10 #> 632  618.2201   3.306774  10 #> 633  630.4710   3.030638  10 #> 634  616.8316   3.180351  10 #> 635  757.0209   3.251018  10 #> 636  618.1852   3.882317  10 #> 637  629.3947   3.027241  10 #> 638  617.8366   2.808961  10 #> 639  616.6546   3.725217  10 #> 640  616.3225   3.098304  10 #> 641  693.6821   3.868946  10 #> 642  654.3634   2.700159  10 #> 643  621.4283   2.551288  10 #> 644  617.6062   2.750703  10 #> 645  665.0692   2.670721  10 #> 646  618.0988   3.286060  10 #> 647  616.8663   2.619650  10 #> 648  638.1465   2.636494  10 #> 649  616.3157   2.540583  10 #> 650  616.3456   2.661456  10 #> 651  621.3656   2.711246  10 #> 652  670.8788   2.728280  10 #> 653  970.7871   2.878073  10 #> 654  651.2086   2.782011  10 #> 655  616.2915   2.515711  10 #> 656  616.5021   3.431480  10 #> 657  617.0710   3.122315  10 #> 658  622.7665   3.704243  10 #> 659  618.1058   2.704798  10 #> 660  619.5648   3.027961  10 #> 661  619.6480   3.725170  10 #> 662  630.0711   2.575984  10 #> 663  637.9314   2.766830  10 #> 664  620.4997   2.620764  10 #> 665  696.9253   3.166451  10 #> 666  616.8175   3.083937  10 #> 667  616.2877   2.621151  10 #> 668  643.2699   3.344280  10 #> 669  617.5407   2.812879  10 #> 670  697.2405   3.648767  10 #> 671  625.5972   2.979040  10 #> 672  884.1716   2.873598  10 #> 673  701.6771   2.774293  10 #> 674  619.0365   3.341514  10 #> 675  629.2055   2.866831  10 #> 676  616.3685   3.212220  10 #> 677  621.8551   2.566000  10 #> 678  813.5836   3.403009  10 #> 679  748.3855   2.577306  10 #> 680  617.2611   3.705889  10 #> 681  948.2640   2.689381  10 #> 682  618.1984   2.699396  10 #> 683  645.9520   3.821387  10 #> 684  621.9838   2.631171  10 #> 685  847.6668   3.298442  10 #> 686  620.6027   3.117004  10 #> 687  625.2248   2.587708  10 #> 688  651.9642   2.544213  10 #> 689  652.1495   3.103622  10 #> 690  616.4829   3.579912  10 #> 691  802.8888   2.626181  10 #> 692  688.4956   2.595211  10 #> 693  616.4265   2.908373  10 #> 694  637.6914   3.827752  10 #> 695  619.2327   3.898067  10 #> 696  616.4933   3.458004  10 #> 697  616.3133   2.672480  10 #> 698  858.8099   3.031779  10 #> 699  619.3239   3.731618  10 #> 700  623.0870   2.557389  10 #> 701  616.2928   2.651170  10 #> 702  917.6019   2.598173  10 #> 703  616.3245   2.731830  10 #> 704  616.8289   3.576241  10 #> 705  619.2886   2.632325  10 #> 706  634.7585   2.787032  10 #> 707  616.2796   2.564314  10 #> 708  616.3912   2.520208  10 #> 709  671.7730   2.734892  10 #> 710  616.2818   2.521394  10 #> 711  640.2290   3.340097  10 #> 712  616.4032   3.079669  10 #> 713  616.5895   3.017098  10 #> 714  827.6030   2.754165  10 #> 715  616.4225   3.807208  10 #> 716  618.1822   2.964446  10 #> 717  616.3258   2.622977  10 #> 718  877.1965   2.629401  10 #> 719  634.5568   2.536876  10 #> 720  616.3166   2.906832  10 #> 721  642.6370   2.502285  10 #> 722  633.5255   2.700753  10 #> 723  619.5937   2.628248  10 #> 724  616.4240   2.829361  10 #> 725  702.2133   2.607415  10 #> 726  678.7658   2.876783  10 #> 727  616.6638   2.598848  10 #> 728  631.0402   2.770938  10 #> 729  643.6009   2.641720  10 #> 730  621.9170   3.716237  10 #> 731  616.7009   2.956231  10 #> 732  623.2836   2.521744  10 #> 733  616.2888   2.737137  10 #> 734  616.3717   2.510473  10 #> 735  649.7002   2.511601  10 #> 736  617.3472   3.519122  10 #> 737  719.8029   2.974059  10 #> 738  626.0664   2.574667  10 #> 739  638.0297   3.231388  10 #> 740  616.9217   2.681913  10 #> 741  616.3150   2.916337  10 #> 742  639.7065   2.650811  10 #> 743  616.9523   3.009364  10 #> 744  616.3404   2.923933  10 #> 745  696.7204   2.500816  10 #> 746  616.4064   2.543397  10 #> 747  616.3555   2.719889  10 #> 748  618.2395   2.661314  10 #> 749  617.1546   2.555653  10 #> 750  622.1493   2.679109  10 #> 751  625.3031   3.708468  10 #> 752  742.3532   2.569264  10 #> 753  617.5273   3.312315  10 #> 754  633.9909   2.676401  10 #> 755  618.5483   2.663215  10 #> 756  616.4898   2.767259  10 #> 757  617.2272   2.530653  10 #> 758  616.2828   3.016256  10 #> 759  620.9360   3.528370  10 #> 760  623.9790   2.742825  10 #> 761  616.5370   2.586000  10 #> 762  616.4373   2.756353  10 #> 763  616.6643   2.896920  10 #> 764  618.7056   2.589762  10 #> 765  617.5581   2.695306  10 #> 766  616.5848   3.339291  10 #> 767  617.8980   3.247716  10 #> 768  616.4463   3.162168  10 #> 769  616.5305   2.544583  10 #> 770  681.7552   2.690418  10 #> 771  618.3116   3.264190  10 #> 772  616.5951   2.662117  10 #> 773  694.2357   2.833999  10 #> 774  616.4077   3.549343  10 #> 775  698.1608   2.547560  10 #> 776  619.5071   3.393709  10 #> 777  880.7403   3.098342  10 #> 778  621.8184   2.707220  10 #> 779  623.6145   2.514390  10 #> 780  637.3554   2.747550  10 #> 781  616.2773   2.946179  10 #> 782  962.8942   3.162618  10 #> 783  620.0827   3.155699  10 #> 784  617.9142   2.507267  10 #> 785  616.3081   2.619772  10 #> 786  617.0309   4.737895  10 #> 787  627.3345   2.597734  10 #> 788  619.9821   2.663378  10 #> 789  626.9008   2.963802  10 #> 790  785.8429   4.128597  10 #> 791  737.2419   3.329513  10 #> 792  714.2957   3.147392  10 #> 793  710.5348   2.554815  10 #> 794  616.7301   2.527560  10 #> 795  901.0811   3.819435  10 #> 796  626.4338   2.547309  10 #> 797  621.4311   2.703249  10 #> 798  628.2981   2.662505  10 #> 799  639.8428   3.108281  10 #> 800  686.2055   2.603478  10 #> 801  617.7814   2.700996  10 #> 802  814.8370   2.620761  10 #> 803  616.8476   2.597357  10 #> 804  616.3621   2.640391  10 #> 805  616.2759   2.531849  10 #> 806  616.6879   3.372945  10 #> 807  855.0635   2.878366  10 #> 808  815.1692   2.532337  10 #> 809  665.7817   2.573333  10 #> 810  655.9028   3.637955  10 #> 811  628.8644   2.715711  10 #> 812  632.3759   2.783936  10 #> 813  616.4204   2.971664  10 #> 814  816.4314   2.795729  10 #> 815  632.2416   2.852911  10 #> 816  616.6231   2.500401  10 #> 817  616.3328   3.583207  10 #> 818  640.8759   2.721012  10 #> 819  713.5959   3.268050  10 #> 820  616.5072   2.600450  10 #> 821  618.2505   3.498313  10 #> 822  619.8824   2.659271  10 #> 823  617.7119   3.401254  10 #> 824  616.2995   3.246625  10 #> 825  653.0156   2.933982  10 #> 826  616.5552   2.504821  10 #> 827  687.0679   2.615755  10 #> 828  616.4933   2.971662  10 #> 829  616.8079   4.539327  10 #> 830  653.3927   3.813306  10 #> 831  616.5012   2.821881  10 #> 832  624.6706   2.686108  10 #> 833  624.7445   3.218732  10 #> 834  662.8903   2.620789  10 #> 835  618.0597   3.139001  10 #> 836  619.4638   2.676221  10 #> 837  616.6560   2.703185  10 #> 838  655.7593   3.755529  10 #> 839  616.3896   2.602316  10 #> 840  742.7231   2.738499  10 #> 841  634.7636   2.894774  10 #> 842  616.8388   2.537658  10 #> 843  616.3363   2.882269  10 #> 844  638.0273   3.729952  10 #> 845  616.3064   4.112187  10 #> 846  618.4646   2.505624  10 #> 847  656.0309   3.536121  10 #> 848  617.2759   3.806978  10 #> 849  626.4927   2.887181  10 #> 850  616.3672   3.629443  10 #> 851  619.3596   2.515216  10 #> 852  616.5989   2.795870  10 #> 853  692.7751   2.538751  10 #> 854  619.1181   3.190331  10 #> 855  959.6060   2.691769  10 #> 856  625.6006   2.911848  10 #> 857  616.3567   3.030369  10 #> 858  616.4033   2.519840  10 #> 859  619.1021   3.511139  10 #> 860  621.6284   2.536634  10 #> 861  616.3222   2.857727  10 #> 862  677.6192   2.657142  10 #> 863  628.5034   3.009577  10 #> 864  616.5133   2.972503  10 #> 865  616.7747   2.586376  10 #> 866  617.6690   3.051598  10 #> 867  617.4055   2.608732  10 #> 868  616.6054   2.970450  10 #> 869  629.5116   3.389305  10 #> 870  616.6397   3.490345  10 #> 871  616.6497   2.821715  10 #> 872  616.3924   2.504314  10 #> 873  621.0490   3.156350  10 #> 874  617.4676   2.884699  10 #> 875  784.1103   2.531609  10 #> 876  616.3641   2.516207  10 #> 877  621.2468   2.718292  10 #> 878  671.4925   2.702279  10 #> 879  644.0244   2.609541  10 #> 880  616.2902   2.511375  10 #> 881  624.6587   2.607611  10 #> 882  616.3939   3.586372  10 #> 883  630.5897   2.704712  10 #> 884  627.6270   3.142549  10 #> 885  616.4127   2.631254  10 #> 886  619.0605   4.919026  10 #> 887  639.6982   3.089363  10 #> 888  616.4023   3.341277  10 #> 889  637.7976   3.213643  10 #> 890  796.8385   2.965790  10 #> 891  616.3301   2.522199  10 #> 892  637.2372   2.963445  10 #> 893  618.2659   2.789235  10 #> 894  616.3305   2.600641  10 #> 895  617.6883   3.439232  10 #> 896  763.2308   3.088498  10 #> 897  741.9085   2.801245  10 #> 898  616.4721   2.658783  10 #> 899  693.5721   2.590658  10 #> 900  622.0549   2.678441  10 #> 901  616.9505   3.586674  10 #> 902  620.4966   2.790892  10 #> 903  623.4912   2.537686  10 #> 904  616.5997   2.516147  10 #> 905  616.2880   2.610862  10 #> 906  813.5979   2.915157  10 #> 907  616.3216   2.517616  10 #> 908  650.2047   2.896487  10 #> 909  616.8414   2.645150  10 #> 910  672.8603   2.918935  10 #> 911  616.8044   2.742422  10 #> 912  624.7836   3.702538  10 #> 913  628.5503   3.304827  10 #> 914  639.1970   2.559790  10 #> 915  621.7433   2.744006  10 #> 916  676.9256   4.976239  10 #> 917  616.4091   2.694983  10 #> 918  617.2272   3.661345  10 #> 919  836.9645   3.630168  10 #> 920  638.7838   2.773723  10 #> 921  616.6069   3.045160  10 #> 922  696.9811   3.324307  10 #> 923  616.3572   2.973781  10 #> 924  619.9333   3.264772  10 #> 925  641.6652   2.652775  10 #> 926  618.9732   2.524460  10 #> 927  616.3377   2.992037  10 #> 928  626.5065   2.650667  10 #> 929  616.3383   3.940440  10 #> 930  616.7430   2.847997  10 #> 931  830.7930   3.970907  10 #> 932  677.6292   2.517014  10 #> 933  616.3786   2.895048  10 #> 934  709.2126   2.646107  10 #> 935  617.4931   3.290681  10 #> 936  619.7883   2.950545  10 #> 937  616.3702   2.634095  10 #> 938  632.2040   2.796289  10 #> 939  636.8606   2.673047  10 #> 940  616.5012   2.735129  10 #> 941  624.0411   2.783787  10 #> 942  625.2025   3.467836  10 #> 943  616.2769   3.283475  10 #> 944  640.0885   2.627005  10 #> 945  645.0306   2.978324  10 #> 946  618.8524   2.763520  10 #> 947  617.9510   2.538647  10 #> 948  617.0022   2.632646  10 #> 949  642.7306   2.917022  10 #> 950  620.3640   2.571847  10 #> 951  616.2970   2.719808  10 #> 952  616.5370   2.839168  10 #> 953  643.6990   2.610190  10 #> 954  664.9378   3.262665  10 #> 955  616.4079   3.162442  10 #> 956  619.4491   2.963252  10 #> 957  616.9598   4.061415  10 #> 958  616.4314   2.634649  10 #> 959  616.3542   2.550733  10 #> 960  616.8270   2.620734  10 #> 961  626.4619   2.771874  10 #> 962  616.9563   2.711038  10 #> 963  642.0840   2.603804  10 #> 964  745.0547   2.645625  10 #> 965  616.6815   3.221408  10 #> 966  623.2355   2.625705  10 #> 967  616.8537   3.209486  10 #> 968  623.3612   3.698081  10 #> 969  616.9487   3.382048  10 #> 970  616.2771   2.958338  10 #> 971  616.6480   2.549296  10 #> 972  706.0236   2.541627  10 #> 973  618.9928   3.112287  10 #> 974  617.0000   2.621986  10 #> 975  618.5084   3.465010  10 #> 976  616.9543   2.794124  10 #> 977  651.0044   2.651895  10 #> 978  622.2898   2.617597  10 #> 979  616.6263   2.813773  10 #> 980  616.3523   2.717348  10 #> 981  618.9856   3.046624  10 #> 982  616.5287   3.966020  10 #> 983  617.4603   2.607778  10 #> 984  908.4450   2.665610  10 #> 985  616.4601   3.287636  10 #> 986  617.2272   3.108285  10 #> 987  751.7887   2.772407  10 #> 988  616.3178   2.713828  10 #> 989  627.8758   2.591677  10 #> 990  617.0104   2.885500  10 #> 991  616.3338   3.133784  10 #> 992  616.2971   2.984049  10 #> 993  616.3047   2.913168  10 #> 994  617.2456   2.698809  10 #> 995  995.2583   2.509279  10 #> 996  618.4613   2.559462  10 #> 997  616.9161   2.720024  10 #> 998  622.5093   3.049319  10 #> 999  636.7885   3.653781  10 #> 1000 617.1571   3.041687  10 #> 1001 620.2824   2.582064  10 #> 1002 731.7450   3.048003  10 #> 1003 619.9762   3.195962  10 #> 1004 616.4792   3.141747  10 #> 1005 616.7761   3.127596  10 #> 1006 627.5333   2.891189  10 #> 1007 634.1137   2.746926  10 #> 1008 617.1940   2.547172  10 #> 1009 616.5235   2.631167  10 #> 1010 618.2180   2.734882  10 #> 1011 616.4545   2.870545  10 #> 1012 619.3850   2.557055  10 #> 1013 771.4169   2.942883  10 #> 1014 616.5710   3.175752  10 #> 1015 641.5914   3.537807  10 #> 1016 831.1674   2.892051  10 #> 1017 617.7748   2.867568  10 #> 1018 618.5950   3.009775  10 #> 1019 616.9014   3.055878  10 #> 1020 748.8951   3.631193  10 #> 1021 616.3498   2.968163  10 #> 1022 694.5153   2.755668  10 #> 1023 616.7448   2.719757  10 #> 1024 623.6695   2.702175  10 #> 1025 616.7315   2.790546  10 #> 1026 616.3324   2.763064  10 #> 1027 616.3204   3.195191  10 #> 1028 627.1158   2.961437  10 #> 1029 629.4899   2.797884  10 #> 1030 717.6696   3.519810  10 #> 1031 619.8190   2.840645  10 #> 1032 650.1911   2.696231  10 #> 1033 622.1522   3.557860  10 #> 1034 621.0940   2.975650  10 #> 1035 617.4300   2.709722  10 #> 1036 616.7449   2.566385  10 #> 1037 617.2735   2.738827  10 #> 1038 999.7377   2.697693  10 #> 1039 616.4532   2.568787  10 #> 1040 616.7850   2.835182  10 #> 1041 659.9741   2.677409  10 #> 1042 674.4908   3.089161  10 #> 1043 658.2501   2.985993  10 #> 1044 618.7268   3.699010  10 #> 1045 616.2948   3.121917  10 #> 1046 616.3171   2.780017  10 #> 1047 660.7923   2.603086  10 #> 1048 616.9093   2.891412  10 #> 1049 724.8384   2.669955  10 #> 1050 711.1128   2.530380  10 #> 1051 617.0538   2.501351  10 #> 1052 739.7170   3.025959  10 #> 1053 616.3244   2.976571  10 #> 1054 617.6433   3.592212  10 #> 1055 616.3486   2.722699  10 #> 1056 632.9233   3.251334  10 #> 1057 810.0568   2.994744  10 #> 1058 618.3334   2.719005  10 #> 1059 616.2943   2.722390  10 #> 1060 616.3442   2.743653  10 #> 1061 622.7338   2.528319  10 #> 1062 617.9964   2.537641  10 #> 1063 914.2886   2.669298  10 #> 1064 616.5955   3.087689  10 #> 1065 682.9062   3.119728  10 #> 1066 616.3273   2.698649  10 #> 1067 726.2768   3.106317  10 #> 1068 616.5529   2.766048  10 #> 1069 616.4379   2.547891  10 #> 1070 616.3804   2.574435  10 #> 1071 616.3286   3.047431  10 #> 1072 627.2407   2.782844  10 #> 1073 615.6673   2.574662  10 #> 1074 625.7008   2.596426  10 #> 1075 657.6181   3.061131  10 #> 1076 625.1531   2.816230  10 #> 1077 619.3724   3.113865  10 #> 1078 693.2073   2.767997  10 #>  #> [[12]] #>           ts magnitudes gen #> 1   813.7315   2.731089  11 #> 2   691.1475   3.023971  11 #> 3   616.5607   2.573742  11 #> 4   616.7529   2.910356  11 #> 5   988.5829   2.613654  11 #> 6   687.7353   2.551023  11 #> 7   616.8645   2.623848  11 #> 8   625.4028   2.526525  11 #> 9   622.6738   2.799869  11 #> 10  620.9931   3.143833  11 #> 11  617.6156   2.540670  11 #> 12  694.6494   2.876855  11 #> 13  674.1977   3.304667  11 #> 14  712.9416   2.783049  11 #> 15  618.2094   4.398651  11 #> 16  616.4611   2.561354  11 #> 17  616.3736   2.804881  11 #> 18  617.9360   3.347207  11 #> 19  617.1723   2.672766  11 #> 20  777.4948   2.522019  11 #> 21  778.7366   2.972691  11 #> 22  621.6172   2.802110  11 #> 23  620.2944   2.719913  11 #> 24  881.1929   2.619742  11 #> 25  623.1628   2.698078  11 #> 26  643.4011   2.696098  11 #> 27  624.0574   2.544987  11 #> 28  645.7688   2.800973  11 #> 29  618.3840   3.757679  11 #> 30  643.2047   2.597939  11 #> 31  640.2389   2.735437  11 #> 32  639.7805   2.764220  11 #> 33  655.8371   2.831658  11 #> 34  617.9405   2.751282  11 #> 35  642.5171   2.572854  11 #> 36  620.8761   3.004367  11 #> 37  737.9640   3.167723  11 #> 38  621.0300   2.515889  11 #> 39  629.6816   2.742421  11 #> 40  674.5666   2.582808  11 #> 41  885.7048   2.669541  11 #> 42  617.7597   2.527322  11 #> 43  961.3781   2.519591  11 #> 44  637.5758   2.524562  11 #> 45  852.3165   2.707905  11 #> 46  656.2072   3.613923  11 #> 47  638.7662   2.925341  11 #> 48  627.3963   2.823170  11 #> 49  624.4530   2.637186  11 #> 50  768.7698   3.043214  11 #> 51  860.9133   2.538416  11 #> 52  618.4397   3.387028  11 #> 53  664.4494   3.334871  11 #> 54  622.9477   2.621419  11 #> 55  628.9613   2.964411  11 #> 56  622.4129   2.530039  11 #> 57  781.2243   2.594791  11 #> 58  616.9804   2.597251  11 #> 59  617.4225   3.438908  11 #> 60  624.4471   2.527081  11 #> 61  725.1208   2.620467  11 #> 62  620.0516   2.927467  11 #> 63  867.3619   4.126231  11 #> 64  621.0327   3.234322  11 #> 65  618.3803   3.363016  11 #> 66  616.7902   3.056258  11 #> 67  619.2751   2.816159  11 #> 68  621.1372   2.540546  11 #> 69  632.0964   2.919502  11 #> 70  624.0451   2.785490  11 #> 71  628.2997   2.686724  11 #> 72  691.9449   2.696213  11 #> 73  623.1403   2.589584  11 #> 74  724.8992   3.299936  11 #> 75  778.7063   2.641130  11 #> 76  798.6211   2.970245  11 #> 77  693.9044   2.626208  11 #> 78  622.4376   2.708680  11 #> 79  643.1013   2.632822  11 #> 80  814.7095   3.991847  11 #> 81  619.5459   3.113788  11 #> 82  642.8652   2.643288  11 #> 83  620.2807   3.256403  11 #> 84  634.7623   2.918006  11 #> 85  619.5235   3.032796  11 #> 86  638.0672   3.074591  11 #> 87  617.7911   2.620781  11 #> 88  618.4283   2.528822  11 #> 89  622.2207   2.707238  11 #> 90  629.3067   2.675998  11 #> 91  637.3364   2.814751  11 #> 92  676.4077   3.133706  11 #> 93  688.5610   2.614747  11 #> 94  617.1404   3.117726  11 #> 95  622.4366   3.589229  11 #> 96  648.4888   2.691220  11 #> 97  616.5389   2.895810  11 #> 98  620.2307   2.504569  11 #> 99  617.0937   2.664431  11 #> 100 616.5172   2.645054  11 #> 101 619.4100   2.950097  11 #> 102 617.4918   2.558925  11 #> 103 786.2342   2.723690  11 #> 104 637.7963   3.042736  11 #> 105 780.3048   2.505921  11 #> 106 636.3114   2.633540  11 #> 107 672.0665   2.698072  11 #> 108 837.8990   2.693473  11 #> 109 827.3943   3.290440  11 #> 110 824.7245   3.079224  11 #> 111 824.6355   3.237489  11 #> 112 825.1660   2.835490  11 #> 113 711.7823   2.841502  11 #> 114 657.8951   2.658106  11 #> 115 662.4255   2.604838  11 #> 116 625.9794   4.205311  11 #> 117 629.7709   2.555635  11 #> 118 638.3612   3.050495  11 #> 119 648.6188   3.698911  11 #> 120 787.1760   2.768173  11 #> 121 791.6835   2.831749  11 #> 122 674.9778   2.591363  11 #> 123 630.6154   2.535760  11 #> 124 649.0865   3.196405  11 #> 125 668.6692   3.039332  11 #> 126 618.6856   2.795099  11 #> 127 681.3065   3.023038  11 #> 128 654.6674   2.737881  11 #> 129 620.5115   3.080598  11 #> 130 622.0733   2.910099  11 #> 131 636.3543   2.624095  11 #> 132 620.5812   2.681197  11 #> 133 622.0164   2.586302  11 #> 134 686.5433   3.202636  11 #> 135 642.9264   2.702357  11 #> 136 816.8063   2.912296  11 #> 137 785.5935   2.650272  11 #> 138 634.4759   3.630795  11 #> 139 621.7338   2.507932  11 #> 140 620.7789   2.889653  11 #> 141 619.8223   3.551379  11 #> 142 628.6129   3.448378  11 #> 143 750.3997   2.704746  11 #> 144 627.9370   2.655805  11 #> 145 626.2668   2.896803  11 #> 146 792.5102   2.746219  11 #> 147 621.5725   3.208777  11 #> 148 624.0957   2.827621  11 #> 149 619.8284   2.570383  11 #> 150 652.7988   2.847189  11 #> 151 713.0951   2.602742  11 #> 152 617.3434   2.669177  11 #> 153 618.3258   2.949068  11 #> 154 618.1199   3.560329  11 #> 155 617.6017   2.813732  11 #> 156 635.5224   2.953130  11 #> 157 617.9661   2.519994  11 #> 158 617.6408   2.639622  11 #> 159 619.9804   2.694443  11 #> 160 618.3904   2.791272  11 #> 161 617.7855   2.540726  11 #> 162 641.6366   3.582870  11 #> 163 617.4260   2.793858  11 #> 164 617.2590   2.637935  11 #> 165 617.6893   2.562391  11 #> 166 618.2494   2.626908  11 #> 167 645.0440   2.716733  11 #> 168 636.0128   2.604377  11 #> 169 619.3685   2.562949  11 #> 170 618.7525   2.620305  11 #> 171 617.2465   2.627598  11 #> 172 620.2122   2.575795  11 #> 173 888.7147   2.938374  11 #> 174 617.5486   3.040981  11 #> 175 617.2648   2.592263  11 #> 176 617.2554   2.527809  11 #> 177 638.2933   2.914749  11 #> 178 973.2489   2.641760  11 #> 179 621.2985   2.676654  11 #> 180 619.7467   3.396534  11 #> 181 622.4995   3.069749  11 #> 182 618.4565   3.030367  11 #> 183 654.2784   2.565279  11 #> 184 617.3076   2.809563  11 #> 185 618.4501   2.634859  11 #> 186 622.1213   2.567853  11 #> 187 627.8030   4.041808  11 #> 188 617.4332   2.563455  11 #> 189 618.4179   2.584731  11 #> 190 621.5098   2.658423  11 #> 191 617.6810   2.870995  11 #> 192 618.1199   3.123568  11 #> 193 682.7518   2.878916  11 #> 194 620.7582   2.653306  11 #> 195 637.4306   2.515061  11 #> 196 617.5367   3.118676  11 #> 197 618.1091   3.344925  11 #> 198 623.5914   2.957690  11 #> 199 624.3457   2.757194  11 #> 200 617.4121   3.279904  11 #> 201 617.3155   2.947966  11 #> 202 620.0819   2.635531  11 #> 203 617.6984   2.816425  11 #> 204 617.4579   2.672573  11 #> 205 636.7207   2.508898  11 #> 206 617.3534   2.943376  11 #> 207 660.9169   3.193458  11 #> 208 667.5599   2.760406  11 #> 209 778.0204   2.775331  11 #> 210 964.8153   2.698638  11 #> 211 624.0273   2.580102  11 #> 212 623.9948   2.813034  11 #> 213 617.5228   2.860858  11 #> 214 617.2424   3.090721  11 #> 215 739.0974   2.585741  11 #> 216 617.6867   2.959152  11 #> 217 625.1970   3.035610  11 #> 218 617.2424   2.587570  11 #> 219 628.4816   3.020737  11 #> 220 617.4013   2.822086  11 #> 221 962.9988   2.818899  11 #> 222 619.1366   2.821814  11 #> 223 617.2658   2.505863  11 #> 224 618.1599   3.083475  11 #> 225 619.2215   3.394193  11 #> 226 617.8162   2.818034  11 #> 227 891.6130   2.607965  11 #> 228 748.6700   2.651919  11 #> 229 618.1864   2.771298  11 #> 230 617.9252   2.556001  11 #> 231 618.6391   2.531907  11 #> 232 828.4040   3.161350  11 #> 233 675.1287   3.105261  11 #> 234 660.1926   2.636676  11 #> 235 654.3736   2.921834  11 #> 236 617.3185   2.950343  11 #> 237 729.2183   3.893380  11 #> 238 617.3177   3.058440  11 #> 239 623.7075   2.732152  11 #> 240 617.4489   3.669252  11 #> 241 618.1583   2.787799  11 #> 242 617.7875   2.625510  11 #> 243 618.4915   3.100229  11 #> 244 689.1113   2.538443  11 #> 245 675.9978   2.918861  11 #> 246 617.3161   3.411581  11 #> 247 618.6103   3.596561  11 #> 248 617.4410   3.402593  11 #> 249 619.4919   2.739723  11 #> 250 629.6984   4.063419  11 #> 251 829.9768   3.243848  11 #> 252 617.1958   2.548222  11 #> 253 620.2552   3.416587  11 #> 254 618.5867   2.772808  11 #> 255 918.4637   3.109075  11 #> 256 618.3190   2.530331  11 #> 257 619.1974   3.458323  11 #> 258 946.6670   2.791512  11 #> 259 617.2259   3.717947  11 #> 260 743.0414   3.203457  11 #> 261 717.9756   3.099822  11 #> 262 713.7823   4.184125  11 #> 263 619.8856   2.559006  11 #> 264 621.0867   2.573100  11 #> 265 683.9688   2.995829  11 #> 266 695.5466   2.725537  11 #> 267 684.3425   3.236695  11 #> 268 705.5896   2.752597  11 #> 269 684.0644   2.718148  11 #> 270 686.3805   2.826286  11 #> 271 684.1828   2.682580  11 #> 272 685.1845   2.734599  11 #> 273 685.8922   3.758701  11 #> 274 980.8716   3.041126  11 #> 275 618.1408   2.780381  11 #> 276 652.7546   3.545928  11 #> 277 964.7216   2.507660  11 #> 278 737.2553   3.366814  11 #> 279 658.7892   2.859568  11 #> 280 638.4940   2.551937  11 #> 281 712.0388   3.003177  11 #> 282 660.8912   2.705884  11 #> 283 716.7100   2.794074  11 #> 284 646.6227   2.569373  11 #> 285 618.7110   2.712632  11 #> 286 616.6832   4.133872  11 #> 287 693.7095   2.770327  11 #> 288 982.4762   2.907787  11 #> 289 971.1267   2.894258  11 #> 290 616.6439   3.590465  11 #> 291 891.9638   2.852764  11 #> 292 617.3414   2.960375  11 #> 293 697.8725   2.923947  11 #> 294 646.1547   2.545068  11 #> 295 650.5595   2.880919  11 #> 296 638.2242   2.988315  11 #> 297 624.4708   2.966395  11 #> 298 618.2816   2.537451  11 #> 299 637.2652   2.766879  11 #> 300 642.2669   3.077973  11 #> 301 620.2972   3.817274  11 #> 302 618.8127   2.660808  11 #> 303 616.5052   2.605657  11 #> 304 622.9569   2.729836  11 #> 305 678.7894   3.713879  11 #> 306 623.2524   2.816269  11 #> 307 617.4270   2.701417  11 #> 308 616.3464   3.268374  11 #> 309 625.3322   4.773632  11 #> 310 747.5711   3.549860  11 #> 311 671.9198   4.767505  11 #> 312 621.8946   2.581628  11 #> 313 618.4379   2.803149  11 #> 314 795.7087   2.836899  11 #> 315 617.2928   3.093510  11 #> 316 617.0543   2.938623  11 #> 317 617.6742   2.920028  11 #> 318 629.7598   3.707958  11 #> 319 832.4099   4.404041  11 #> 320 636.5943   3.031133  11 #> 321 812.3841   3.011487  11 #> 322 618.7597   2.550846  11 #> 323 974.3893   2.641786  11 #> 324 626.8613   2.756029  11 #> 325 618.0652   3.232905  11 #> 326 723.9151   2.510709  11 #> 327 617.3110   2.680004  11 #> 328 617.9996   2.620488  11 #> 329 659.3945   2.913583  11 #> 330 734.8922   3.540900  11 #> 331 653.9317   2.976774  11 #> 332 658.5022   3.861824  11 #> 333 656.1204   2.579168  11 #> 334 656.9983   3.846372  11 #> 335 655.8736   2.645321  11 #> 336 617.1154   2.512204  11 #> 337 618.1602   2.543440  11 #> 338 664.3670   4.701044  11 #> 339 810.1255   2.820860  11 #> 340 634.5042   3.793733  11 #> 341 619.7357   3.722793  11 #> 342 619.4461   2.973650  11 #> 343 628.6165   2.951898  11 #> 344 691.2854   2.521787  11 #> 345 879.9790   2.937500  11 #> 346 616.5813   2.504878  11 #> 347 620.7107   2.906761  11 #> 348 642.2230   2.657284  11 #> 349 853.0612   2.588126  11 #> 350 630.9505   2.568265  11 #> 351 764.5272   3.448167  11 #> 352 620.1605   2.532916  11 #> 353 637.4371   2.694728  11 #> 354 619.1527   2.678825  11 #> 355 624.1945   2.583028  11 #> 356 684.4956   3.118495  11 #> 357 620.8910   3.065842  11 #> 358 687.2710   2.584556  11 #> 359 619.0698   2.655997  11 #> 360 619.5587   2.754683  11 #> 361 619.1670   2.843172  11 #> 362 619.3766   3.966892  11 #> 363 619.3469   2.516909  11 #> 364 626.0425   2.622253  11 #> 365 634.3621   3.097048  11 #> 366 683.1037   3.183881  11 #> 367 677.2647   2.502384  11 #> 368 686.9475   3.717441  11 #> 369 918.3472   2.806663  11 #> 370 676.9272   3.218847  11 #> 371 678.3411   2.974116  11 #> 372 680.4411   2.800127  11 #> 373 677.5183   3.762033  11 #> 374 749.4023   3.025259  11 #> 375 691.0873   3.873422  11 #> 376 725.4969   2.707303  11 #> 377 676.9666   3.659007  11 #> 378 677.4186   2.655264  11 #> 379 677.3288   2.709543  11 #> 380 756.4997   2.604340  11 #> 381 680.2322   3.873134  11 #> 382 964.7557   2.795237  11 #> 383 705.4771   2.967506  11 #> 384 677.9938   2.800950  11 #> 385 766.7867   2.912522  11 #> 386 680.2765   3.273898  11 #> 387 617.6901   2.533107  11 #> 388 728.0312   3.006898  11 #> 389 791.1667   2.517052  11 #> 390 643.8574   2.520617  11 #> 391 616.3718   3.205457  11 #> 392 846.0268   2.587277  11 #> 393 834.8204   2.912702  11 #> 394 831.3476   4.069753  11 #> 395 711.3431   4.151575  11 #> 396 691.0339   3.005822  11 #> 397 617.0984   3.155734  11 #> 398 617.2253   4.253500  11 #> 399 706.1288   2.707951  11 #> 400 619.2709   2.849325  11 #> 401 617.1402   3.108452  11 #> 402 625.3414   3.349455  11 #> 403 732.4109   2.731586  11 #> 404 730.1600   2.522776  11 #> 405 620.6596   2.770185  11 #> 406 641.6913   2.893114  11 #> 407 616.8090   2.753426  11 #> 408 630.2033   3.453655  11 #> 409 616.3748   3.082510  11 #> 410 717.7581   2.560008  11 #> 411 888.9699   2.561403  11 #> 412 920.2298   3.842133  11 #> 413 740.7427   2.606672  11 #> 414 814.5322   2.954451  11 #> 415 616.3480   3.294745  11 #> 416 617.0194   2.605998  11 #> 417 659.6776   3.458989  11 #>  #> [[13]] #>           ts magnitudes gen #> 1   623.3946   2.537311  12 #> 2   708.2118   2.719028  12 #> 3   619.9542   2.723436  12 #> 4   618.4583   2.537251  12 #> 5   892.8068   3.002119  12 #> 6   618.2756   2.648196  12 #> 7   618.4923   3.417413  12 #> 8   655.8927   2.904408  12 #> 9   824.5344   2.936169  12 #> 10  624.6006   3.952642  12 #> 11  623.2755   2.964122  12 #> 12  673.4391   2.800125  12 #> 13  629.2109   2.957579  12 #> 14  868.3878   3.210158  12 #> 15  895.7989   2.654128  12 #> 16  719.3070   2.527201  12 #> 17  725.5087   2.987992  12 #> 18  815.7158   2.592813  12 #> 19  816.8966   2.689278  12 #> 20  814.8068   3.300589  12 #> 21  814.8722   2.803985  12 #> 22  682.5396   2.876439  12 #> 23  638.7343   2.933955  12 #> 24  618.2606   2.551811  12 #> 25  625.1835   2.685513  12 #> 26  841.3193   3.249582  12 #> 27  628.8181   3.433324  12 #> 28  628.1932   3.955827  12 #> 29  625.9976   2.551083  12 #> 30  626.8012   2.569163  12 #> 31  648.6632   2.885071  12 #> 32  688.7203   2.874047  12 #> 33  654.0441   2.827879  12 #> 34  621.6777   3.036219  12 #> 35  632.9625   2.617830  12 #> 36  622.9540   3.174982  12 #> 37  720.9961   3.475593  12 #> 38  658.3396   2.518665  12 #> 39  893.0894   2.542253  12 #> 40  628.0298   2.513169  12 #> 41  714.2504   2.726033  12 #> 42  618.2845   2.503172  12 #> 43  623.9622   3.148884  12 #> 44  618.1590   2.962587  12 #> 45  626.6296   3.376959  12 #> 46  620.4733   3.366702  12 #> 47  618.4281   2.610655  12 #> 48  893.5349   2.535935  12 #> 49  619.4116   3.041054  12 #> 50  621.6917   3.341128  12 #> 51  639.9503   2.668180  12 #> 52  939.9619   2.518346  12 #> 53  618.3229   2.955775  12 #> 54  685.5592   2.622036  12 #> 55  730.0461   3.165668  12 #> 56  730.8053   2.638218  12 #> 57  731.1159   2.601195  12 #> 58  617.5128   2.548773  12 #> 59  627.7458   2.773052  12 #> 60  623.3865   3.126267  12 #> 61  771.8616   3.334295  12 #> 62  618.6510   3.178933  12 #> 63  620.5992   2.648287  12 #> 64  617.4856   2.523176  12 #> 65  634.8982   2.723942  12 #> 66  630.7057   3.426299  12 #> 67  630.1286   2.529917  12 #> 68  629.9764   3.122041  12 #> 69  617.4230   3.170150  12 #> 70  718.6945   2.634388  12 #> 71  714.9593   2.561855  12 #> 72  714.9348   2.719619  12 #> 73  714.0237   3.790911  12 #> 74  715.4551   3.486291  12 #> 75  714.0797   2.561356  12 #> 76  686.3150   3.369805  12 #> 77  720.6483   2.654774  12 #> 78  618.1777   2.523841  12 #> 79  652.7727   3.081380  12 #> 80  617.5312   2.750999  12 #> 81  617.4089   3.238232  12 #> 82  616.7373   2.594020  12 #> 83  906.5480   2.506849  12 #> 84  982.6251   4.335163  12 #> 85  642.6843   2.696588  12 #> 86  620.3901   3.418637  12 #> 87  678.9412   2.683087  12 #> 88  635.2303   2.507460  12 #> 89  651.4685   2.591662  12 #> 90  625.3660   3.105236  12 #> 91  631.8646   2.823653  12 #> 92  755.0311   2.813082  12 #> 93  631.4678   3.527486  12 #> 94  733.5418   2.962429  12 #> 95  626.3939   2.874790  12 #> 96  637.1420   2.508523  12 #> 97  625.4130   2.796354  12 #> 98  625.7889   3.756794  12 #> 99  625.5434   2.793203  12 #> 100 637.9832   2.627153  12 #> 101 626.6717   2.571262  12 #> 102 708.9087   4.201766  12 #> 103 625.4548   2.541962  12 #> 104 627.6389   2.962351  12 #> 105 627.1265   2.629548  12 #> 106 667.0978   2.589025  12 #> 107 625.4444   3.012382  12 #> 108 672.2735   2.543834  12 #> 109 888.6174   2.855579  12 #> 110 675.4378   2.757477  12 #> 111 674.2588   2.537106  12 #> 112 671.9963   2.523253  12 #> 113 887.7837   2.513374  12 #> 114 629.9434   2.538403  12 #> 115 661.2009   2.671137  12 #> 116 832.9128   2.632749  12 #> 117 994.0123   2.504695  12 #> 118 939.4165   2.856799  12 #> 119 976.2059   3.236779  12 #> 120 665.4017   3.156685  12 #> 121 664.5298   3.369435  12 #> 122 666.3886   2.606936  12 #> 123 674.1462   2.608250  12 #> 124 937.1760   2.739210  12 #> 125 767.9376   2.626366  12 #> 126 664.5783   2.839947  12 #> 127 664.4155   2.793990  12 #> 128 635.5369   2.682994  12 #> 129 634.6383   2.716173  12 #> 130 619.7372   2.832623  12 #> 131 679.5550   2.658890  12 #> 132 621.2855   2.955859  12 #> 133 620.6377   2.899325  12 #> 134 619.3879   3.847171  12 #> 135 678.4404   3.830593  12 #> 136 677.3302   2.980413  12 #> 137 787.2953   3.160165  12 #> 138 791.4655   3.130771  12 #> 139 994.6946   3.646866  12 #> 140 712.6801   2.697058  12 #> 141 714.9371   2.753606  12 #> 142 945.7348   2.998776  12 #> 143 831.5695   3.107230  12 #> 144 618.0769   2.743119  12 #> 145 617.5326   3.278171  12 #> 146 662.6363   3.096850  12 #> 147 706.3927   2.724765  12 #> 148 732.6156   2.856277  12 #> 149 732.7764   2.602086  12 #> 150 622.2256   2.715918  12 #> 151 824.4328   2.952274  12 #> 152 889.6842   2.906199  12 #> 153 930.0518   3.694637  12 #>  #> [[14]] #>          ts magnitudes gen #> 1  815.7410   2.585824  13 #> 2  622.8075   2.510214  13 #> 3  868.8961   3.579074  13 #> 4  871.2628   2.652820  13 #> 5  816.2961   3.873295  13 #> 6  826.2160   3.073738  13 #> 7  841.9282   2.878820  13 #> 8  747.4180   2.810393  13 #> 9  659.1599   2.563407  13 #> 10 626.6687   2.831671  13 #> 11 630.4024   2.649425  13 #> 12 629.9375   3.544775  13 #> 13 635.5527   2.945198  13 #> 14 624.5165   3.242558  13 #> 15 664.5835   2.789495  13 #> 16 685.7924   2.573501  13 #> 17 617.7038   2.938675  13 #> 18 715.5787   2.697580  13 #> 19 984.2072   2.873004  13 #> 20 639.3184   2.965406  13 #> 21 631.9057   2.686929  13 #> 22 652.5300   3.249303  13 #> 23 709.0748   2.785126  13 #> 24 630.5771   3.390033  13 #> 25 939.5202   2.809687  13 #> 26 619.7617   2.679300  13 #> 27 788.8921   3.992104  13 #> 28 713.2449   2.552800  13 #> 29 843.0449   2.711555  13 #> 30 671.5358   3.539639  13 #> 31 622.3862   2.770460  13 #> 32 930.1171   2.803111  13 #>  #> [[15]] #>         ts magnitudes gen #> 1 824.0565   2.972790  14 #> 2 821.2379   3.330546  14 #> 3 633.3635   2.617189  14 #> 4 789.0479   2.693550  14 #> 5 965.5671   2.534423  14 #> 6 789.6842   2.550706  14 #> 7 845.3198   4.087096  14 #> 8 672.7527   5.486957  14 #>  #> [[16]] #>          ts magnitudes gen #> 1  789.9983   3.249280  15 #> 2  845.7893   2.792635  15 #> 3  846.2859   2.948337  15 #> 4  849.9393   2.658441  15 #> 5  864.5320   2.856966  15 #> 6  911.7698   3.414675  15 #> 7  677.6858   2.650208  15 #> 8  777.4232   3.228340  15 #> 9  679.3939   3.484809  15 #> 10 893.8959   2.511797  15 #> 11 676.9843   2.660998  15 #> 12 672.7640   2.779572  15 #> 13 674.0194   2.718894  15 #> 14 673.0016   2.786782  15 #> 15 673.5099   2.744026  15 #> 16 752.4198   2.976184  15 #> 17 834.2669   2.508908  15 #> 18 678.2207   2.690826  15 #> 19 675.7294   4.074660  15 #> 20 673.1761   2.713504  15 #> 21 672.8117   3.592919  15 #> 22 681.5864   2.549918  15 #> 23 673.4420   2.578172  15 #> 24 674.3129   3.236871  15 #> 25 672.8405   3.018559  15 #> 26 674.1858   2.614553  15 #> 27 674.7640   2.664900  15 #> 28 691.1316   3.294173  15 #> 29 672.8049   2.699447  15 #> 30 676.9324   2.902613  15 #> 31 674.4812   3.091725  15 #> 32 794.2484   3.123487  15 #> 33 674.1779   2.585116  15 #> 34 676.1705   2.773872  15 #> 35 680.8578   2.783878  15 #> 36 672.8573   3.075846  15 #> 37 680.4659   2.784407  15 #> 38 751.0079   2.763679  15 #> 39 673.3164   2.673355  15 #> 40 981.5221   3.327214  15 #> 41 672.8091   2.563852  15 #> 42 672.8110   2.714406  15 #> 43 676.0163   2.791111  15 #> 44 684.3081   2.817936  15 #> 45 674.0620   2.562310  15 #> 46 713.0001   2.718884  15 #> 47 672.9175   2.838624  15 #> 48 672.9390   2.742421  15 #> 49 805.8252   2.501783  15 #> 50 675.2296   3.057944  15 #> 51 672.7891   2.861127  15 #> 52 673.0727   2.595263  15 #> 53 754.8477   3.326683  15 #> 54 680.1762   2.856025  15 #> 55 675.0789   2.502613  15 #> 56 673.7498   2.601689  15 #> 57 672.9526   3.198078  15 #>  #> [[17]] #>          ts magnitudes gen #> 1  889.1275   2.960634  16 #> 2  679.5154   2.709276  16 #> 3  722.3808   2.512089  16 #> 4  805.8117   2.620349  16 #> 5  710.2277   2.792542  16 #> 6  769.8915   2.732073  16 #> 7  676.1143   2.668125  16 #> 8  676.9935   3.353371  16 #> 9  677.5410   4.405772  16 #> 10 674.8360   3.926167  16 #> 11 981.5573   2.601370  16 #> 12 807.2136   4.067510  16 #>  #> [[18]] #>          ts magnitudes gen #> 1  813.9730   2.765585  17 #> 2  689.3450   2.736059  17 #> 3  710.1056   3.217055  17 #> 4  697.1499   2.553884  17 #> 5  761.1026   3.066580  17 #> 6  712.8655   3.292945  17 #> 7  678.5462   2.539246  17 #> 8  676.8004   3.659548  17 #> 9  710.2807   3.614105  17 #> 10 988.9472   3.004659  17 #> 11 807.8111   2.610222  17 #> 12 807.6244   2.664450  17 #> 13 960.3727   3.015063  17 #>  #> [[19]] #>         ts magnitudes gen #> 1 689.9190   2.866675  18 #> 2 677.7147   2.584439  18 #> 3 712.3907   3.648983  18 #> 4 710.2857   2.827259  18 #> 5 989.0064   2.821425  18 #> 6 999.6699   2.656545  18 #> 7 961.0152   2.865741  18 #>  #> [[20]] #>         ts magnitudes gen #> 1 765.5021   3.401959  19 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":null,"dir":"Reference","previous_headings":"","what":"HOURS Ita Catalogue — horus","title":"HOURS Ita Catalogue — horus","text":"HOmogenized instRUmental Seismic catalog (HORUS) Italy 1960 present","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HOURS Ita Catalogue — horus","text":"","code":"data(horus, package = \"ETAS.inlabru\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HOURS Ita Catalogue — horus","text":"Original file format: Year: Origin Time (OT) year Mo: OT month Da: OT day Ho: OT hour Mi OT minute Se OT seconds fractions Lat epicenter N latitude (degrees) Lon epicenter E longitude (degrees) Depth hypocenter depth (km) Mw true proxy moment magnitude sigMw moment magnitude uncertainty Geo.Ita \"*\" indicates epicenter within Italian mainland territory, otherwise \" \" Geo.CPTI15 \"*\" indicates epicenter within spatial window CPTI15 catalog (Rovida et al., 2020, Bull Earth Eng, doi: 10.1007/s10518-020-00818-y) Ev..type \"x\" indicates event earthquake (e.g. explosion, eruption, landslide, ...) (since May 1st 2012) Iside.n. ISIDe id number (since April 16th 2005) ETAS.inlabru format: lon: Original Lon lat: Original Lat M: Original Mw time_String: Combination original Year, Mo, Da, Mi, Se depth Original Depth catalog_id ??? event_id ???","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HOURS Ita Catalogue — horus","text":"http://horus.bo.ingv./","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HOURS Ita Catalogue — horus","text":"original entire HORUS catalog provided single tab separated ascii file: HORUS_Ita_Catalog.txt random second decimal digit added ML Md INGV bulletin (ISIDe) computing Mw proxies (Lolli et al., Seism. Res. Lett., 91, 3208-3222, doi: 10.1785/0220200148), HORUS_Ita_Catalog_o.txt original ML Md used compute Mw proxies. ETAS.inlabru includes reformatted version data HORUS_Ita_Catalog.txt data.frame. data provided , express implied warranty given.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HOURS Ita Catalogue — horus","text":"Barbara Lolli(1), Daniele Randazzo(1), Gianfranco Vannucci(1) Paolo Gasperini (2),(1) (2020). Homogenized Instrumental Seismic Catalog (HORUS) Italy 1960 Present, Seismol. Res. Lett, doi: 10.1785/0220200148. (1) Istituto Nazionale di Geofisica e Vulcanologia, Sezione di Bologna (2) Dipartimento di Fisica e Astronomia, Università di Bologna","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Number cores used n.samp exceeds max.batch. Default 1","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 3.094108 3.324559 2.557428 2.898837 2.503603 2.533877 2.895129 2.731983 #>   [9] 2.665822 3.363306 2.648917 2.612414 2.859378 2.549522 3.073535 2.560243 #>  [17] 2.574607 2.603910 3.219181 2.742951 2.563154 2.658602 2.748582 2.515936 #>  [25] 2.532571 2.924350 2.885359 3.951297 2.591981 2.824566 2.901548 2.615912 #>  [33] 2.988803 5.076944 2.524991 3.121994 2.638013 2.645263 2.790394 2.648252 #>  [41] 2.656773 2.679813 2.598434 2.749947 3.353471 2.908943 3.725247 2.513778 #>  [49] 2.513837 2.840692 2.669553 2.576236 2.862321 3.583011 3.001539 2.752444 #>  [57] 2.666824 3.450240 2.965828 3.011924 2.803788 4.134098 2.829152 2.959340 #>  [65] 2.754291 2.768245 2.518445 2.594718 3.601779 2.533995 3.606299 2.869866 #>  [73] 2.824566 4.671191 2.519631 2.658572 2.531533 2.771476 3.883829 2.811789 #>  [81] 2.520601 2.671378 2.843495 2.790207 2.558751 2.926361 3.047217 2.970419 #>  [89] 2.681277 2.500026 2.649172 2.589964 2.891799 2.896067 2.867295 3.059973 #>  [97] 2.569241 2.507252 2.561923 2.784653"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore number compute cores use","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   507.3170   2.781356 #> 2   571.0522   3.109726 #> 3   509.8247   2.548565 #> 4   500.0968   2.675873 #> 5   861.8449   2.521069 #> 6   629.6302   2.732990 #> 7   994.1104   2.867401 #> 8   599.1645   2.778428 #> 9   500.0506   2.550071 #> 10  503.2698   3.430548 #> 11  528.7241   3.569271 #> 12  755.1785   3.230391 #> 13  500.4972   2.827427 #> 14  500.0085   2.603251 #> 15  910.5461   2.583863 #> 16  500.0784   2.810226 #> 17  500.2374   2.633995 #> 18  502.2188   2.547208 #> 19  545.2182   2.503819 #> 20  500.2669   3.741725 #> 21  518.0731   2.557853 #> 22  584.2694   2.514966 #> 23  746.8535   4.064982 #> 24  501.3293   2.843214 #> 25  511.3665   2.504172 #> 26  500.1234   3.015569 #> 27  500.0845   2.560212 #> 28  500.2305   3.061662 #> 29  610.1056   2.578116 #> 30  500.1463   2.648359 #> 31  500.0088   3.300689 #> 32  517.9586   3.139447 #> 33  500.5730   2.925778 #> 34  507.2585   2.509645 #> 35  500.2293   3.003299 #> 36  500.2746   3.659869 #> 37  501.3903   2.754633 #> 38  500.2778   2.527722 #> 39  500.1875   2.821890 #> 40  744.4890   3.128855 #> 41  502.5363   2.930502 #> 42  541.6918   2.613169 #> 43  501.6809   2.534909 #> 44  500.0106   3.003959 #> 45  556.1411   3.618662 #> 46  500.1090   2.831942 #> 47  500.1701   2.915786 #> 48  500.1530   4.143416 #> 49  500.1399   3.531101 #> 50  500.3782   2.514213 #> 51  678.7690   2.967397 #> 52  627.0449   2.607276 #> 53  945.5992   3.853472 #> 54  500.7116   3.412529 #> 55  504.1803   2.823249 #> 56  500.1386   2.834832 #> 57  508.1700   3.357812 #> 58  623.8624   2.900314 #> 59  502.3475   3.412115 #> 60  500.1276   2.551595 #> 61  501.2418   3.900593 #> 62  506.9931   3.200258 #> 63  512.7458   2.687066 #> 64  685.0859   2.945309 #> 65  500.0634   2.599431 #> 66  500.0958   2.674783 #> 67  536.3026   2.677108 #> 68  622.5719   2.666447 #> 69  500.3250   3.006179 #> 70  500.1301   2.645710 #> 71  503.8358   2.881335 #> 72  500.4054   2.574332 #> 73  543.3774   3.176205 #> 74  502.8470   4.943760 #> 75  500.0819   2.583797 #> 76  533.2533   2.688967 #> 77  541.2007   3.113623 #> 78  650.4969   2.724864 #> 79  500.0821   2.676933 #> 80  505.7612   2.832460 #> 81  504.6897   2.521292 #> 82  672.4964   2.751289 #> 83  543.4384   2.845038 #> 84  534.0422   2.698093 #> 85  500.3951   2.702799 #> 86  544.8037   2.706408 #> 87  500.1424   2.683018 #> 88  500.1820   2.683219 #> 89  500.1566   2.705461 #> 90  500.9217   3.121414 #> 91  500.9296   2.658429 #> 92  502.2439   2.635334 #> 93  538.2711   2.580819 #> 94  503.5877   2.983773 #> 95  500.4324   2.668465 #> 96  510.8807   2.618202 #> 97  624.0509   2.650384 #> 98  500.0371   2.519808 #> 99  678.4543   2.502619 #> 100 505.9162   3.714665 #> 101 683.1665   2.774026 #> 102 519.8779   3.204322 #> 103 506.1486   2.599476 #> 104 502.8794   2.518574 #> 105 500.3420   3.110825 #> 106 500.7870   2.973747 #> 107 701.8415   2.502789 #> 108 500.3772   2.673581 #> 109 500.1802   2.940816 #> 110 501.1162   2.748369 #> 111 515.0964   2.620323 #> 112 523.5366   2.887491 #> 113 517.3149   2.605137 #> 114 512.2640   2.683359 #> 115 505.7685   2.735453 #> 116 500.2936   2.591906 #> 117 500.3942   2.624381 #> 118 503.0723   3.191785 #> 119 500.0733   2.836307 #> 120 500.2309   3.224308 #> 121 501.3985   2.514707 #> 122 500.5013   2.525241 #> 123 504.3972   2.567162 #> 124 509.8975   2.740020 #> 125 689.7856   2.765140 #> 126 500.1328   2.635851 #> 127 505.9338   3.377916 #> 128 525.0959   2.534800 #> 129 500.0331   5.173894 #> 130 500.1557   2.651533 #> 131 502.9530   2.906858 #> 132 500.0671   2.501644 #> 133 801.8431   2.947246 #> 134 694.0636   2.723304 #> 135 584.4788   2.697181 #> 136 503.1589   3.081346 #> 137 503.9071   2.503654 #> 138 500.2929   2.725001 #> 139 506.5564   2.773441 #> 140 500.3140   2.609066 #> 141 500.0234   2.773314 #> 142 593.3630   2.558951 #> 143 579.0348   2.665495 #> 144 515.9322   2.608584 #> 145 534.3683   2.780873 #> 146 526.2384   2.697768 #> 147 519.9918   2.520473 #> 148 552.1674   3.474017 #> 149 513.0979   2.690878 #> 150 579.2005   2.680302 #> 151 505.3194   4.091778 #> 152 500.2275   2.986574 #> 153 681.1109   2.934087 #> 154 526.5300   3.202968 #> 155 501.9433   2.518757 #> 156 963.5209   2.635824 #> 157 500.2810   2.844781 #> 158 500.2404   2.829970 #> 159 911.9453   3.065864 #> 160 507.2722   2.906275 #> 161 526.0449   2.720784 #> 162 500.0345   2.584036 #> 163 500.1575   2.511506 #> 164 500.5619   3.476266 #> 165 501.0518   2.843520 #> 166 500.5076   2.566283 #> 167 589.8389   3.459128 #> 168 501.8695   3.698669 #> 169 534.5956   2.971232 #> 170 502.6004   3.732008 #> 171 500.4909   2.945990 #> 172 955.0767   2.544450 #> 173 502.4062   3.137090 #> 174 500.0077   3.243769 #> 175 644.4349   3.468645 #> 176 700.6679   2.538228 #> 177 688.5462   3.012241 #> 178 506.8697   2.737405 #> 179 500.1312   2.554944 #> 180 500.9680   2.594422 #> 181 500.5857   2.575967 #> 182 500.0289   2.904789 #> 183 523.4022   2.585617 #> 184 500.8977   2.528153 #> 185 612.1346   2.735252 #> 186 500.8387   2.511329 #> 187 589.8789   2.689120 #> 188 502.5765   2.666898 #> 189 500.3386   2.504610 #> 190 650.9253   3.535660 #> 191 645.2333   2.768287 #> 192 738.7627   3.092763 #> 193 502.1011   3.011477 #> 194 565.6188   3.591914 #> 195 521.5885   2.730627 #> 196 500.4761   3.009949 #> 197 647.2704   2.965510 #> 198 503.9945   2.783032 #> 199 500.0615   2.750633 #> 200 502.7279   2.641960 #> 201 500.0958   3.015367 #> 202 536.7622   2.910116 #> 203 500.5578   2.552421 #> 204 500.1334   2.990144 #> 205 500.0478   2.822614 #> 206 500.0178   2.685526 #> 207 500.0954   3.545054 #> 208 500.8817   2.723715 #> 209 500.4685   2.734701 #> 210 520.0366   2.890839 #> 211 501.3742   2.584353 #> 212 631.1020   2.681362 #> 213 500.1625   2.500756 #> 214 706.9669   2.669810 #> 215 765.7190   3.368228 #> 216 510.6981   2.644405 #> 217 500.1483   2.687973 #> 218 500.1353   2.805093 #> 219 500.1236   2.560081 #> 220 500.1375   2.542739 #> 221 617.3054   2.868408 #> 222 557.1342   2.914465 #> 223 500.4494   2.671432 #> 224 506.7215   2.773246 #> 225 720.1352   2.568924 #> 226 503.9908   3.005269 #> 227 780.0107   2.866461 #> 228 508.8123   3.437391 #> 229 619.8726   3.188762 #> 230 530.2556   3.041059 #> 231 501.2485   2.899981 #> 232 502.9924   2.665937 #> 233 567.1965   2.646887 #> 234 538.0927   2.609266 #> 235 512.9737   2.590977 #> 236 502.2796   2.741849 #> 237 501.4708   2.824492 #> 238 517.4661   2.929021 #> 239 509.9984   2.823313 #> 240 524.0142   2.885425 #> 241 665.7491   2.687435 #> 242 502.6811   2.871896 #> 243 513.0859   2.606798 #> 244 500.3054   2.504243 #> 245 500.5249   3.626628 #> 246 585.9446   2.521651 #> 247 500.0077   3.136144 #> 248 503.0319   2.804547 #> 249 501.1147   2.731262 #> 250 500.0994   2.587299 #> 251 531.2047   2.514316 #> 252 531.8294   2.722499 #> 253 500.0491   3.499974 #> 254 500.4065   2.616624 #> 255 500.2649   3.198254 #> 256 500.0053   2.567458 #> 257 583.0167   2.730252 #> 258 500.3631   3.405787 #> 259 514.7824   2.744390 #> 260 501.5709   2.524962 #> 261 500.2345   2.731297 #> 262 500.6079   3.404664 #> 263 620.8581   3.947700 #> 264 557.3314   2.604092 #> 265 500.7873   2.542442 #> 266 567.7974   3.126476 #> 267 722.5716   3.509386 #> 268 524.9728   2.734292 #> 269 500.0666   2.663768 #> 270 525.8179   2.559349 #> 271 500.1515   2.641912 #> 272 738.1572   2.588859 #> 273 501.6930   2.601562 #> 274 518.0122   2.822067 #> 275 998.5630   2.771386 #> 276 506.5068   3.029364 #> 277 504.4586   3.429193 #> 278 542.3071   4.229611 #> 279 500.4315   2.855810 #> 280 553.1507   2.514085 #> 281 515.0202   2.609255 #> 282 533.5077   2.527384 #> 283 500.3795   2.822105 #> 284 531.2317   2.682522 #> 285 506.2905   2.714177 #> 286 502.7556   2.593031 #> 287 505.0493   2.752643 #> 288 549.5152   3.232842 #> 289 500.6084   2.691211 #> 290 723.7430   2.694890 #> 291 701.9170   2.672203 #> 292 504.0135   4.280709 #> 293 500.5799   3.017615 #> 294 520.4976   3.591410 #> 295 513.0661   3.300641 #> 296 507.8473   3.723494 #> 297 567.1645   3.041230 #> 298 501.2491   2.738594 #> 299 932.1225   3.461892 #> 300 517.4490   2.641148 #> 301 520.6060   3.905666 #> 302 545.5283   2.599914 #> 303 509.5524   2.989071 #> 304 501.6369   2.858468 #> 305 500.4261   2.589180 #> 306 500.6776   3.571122 #> 307 500.6612   2.524600 #> 308 500.4763   2.565941 #> 309 500.8904   2.691588 #> 310 506.1292   2.687031 #> 311 501.5185   2.854311 #> 312 500.4341   2.755809 #> 313 501.4132   3.531017 #> 314 629.3663   2.877656 #> 315 500.8084   2.936765 #> 316 500.1087   2.986296 #> 317 500.8278   2.750655 #> 318 510.6932   2.782919 #> 319 518.6100   2.626675 #> 320 513.4707   2.902549 #> 321 714.6478   3.225151 #> 322 524.7816   2.600574 #> 323 500.1188   2.914095 #> 324 500.2360   2.529466 #> 325 500.3413   2.521333 #> 326 501.1573   2.801889 #> 327 552.3317   4.917691 #> 328 626.8418   2.654000 #> 329 502.8379   3.168619 #> 330 637.6784   2.651215 #> 331 500.0783   2.659441 #> 332 530.4598   3.910049 #> 333 500.0288   3.076064 #> 334 500.0036   3.065855 #> 335 511.4972   3.159938 #> 336 857.0969   2.611209 #> 337 509.3960   3.103512 #> 338 500.9944   2.789188 #> 339 554.2933   2.828030 #> 340 501.3814   3.790151 #> 341 591.8715   2.723073 #> 342 500.6302   2.778307 #> 343 500.0747   3.194227 #> 344 501.1855   3.382035 #> 345 512.3761   2.923727 #> 346 500.0740   3.032218 #> 347 500.3109   2.700720 #> 348 500.4643   3.374813 #> 349 501.9980   2.938763 #> 350 556.7005   3.137325 #> 351 504.6511   2.515122 #> 352 510.0134   2.541221 #> 353 514.5777   2.697252 #> 354 500.5301   3.308826 #> 355 655.4985   2.843396 #> 356 500.0755   2.519688 #> 357 581.5581   2.708067 #> 358 503.4681   2.824175 #> 359 635.6143   3.404921 #> 360 502.7108   2.553285 #> 361 505.7866   2.970143 #> 362 500.3035   2.658485 #> 363 507.6608   3.987916 #> 364 607.5892   2.579734 #> 365 515.6633   2.522434 #> 366 511.2461   2.838995 #> 367 542.4606   2.538782 #> 368 767.5692   2.572081 #> 369 525.3595   3.756736 #> 370 518.4498   2.857786 #> 371 501.9622   3.101433 #> 372 521.5872   2.831281 #> 373 501.2056   2.668406 #> 374 500.1482   3.023245 #> 375 503.9672   2.668693 #> 376 500.1045   2.978073 #> 377 602.4478   2.541033 #> 378 555.4829   2.692430 #> 379 500.0735   2.542694 #> 380 530.0692   3.198096 #> 381 500.2627   2.775910 #> 382 500.1041   2.992764 #> 383 645.2918   3.109580 #> 384 577.4049   2.643958 #> 385 512.3742   3.234726 #> 386 516.3305   2.694443 #> 387 501.7494   2.844052 #> 388 619.0113   2.819174 #> 389 500.1646   2.635444 #> 390 501.9289   3.364386 #> 391 508.1274   2.660669 #> 392 501.4090   2.707004 #> 393 500.0531   2.713165 #> 394 810.7388   4.372512 #> 395 500.0478   2.575383 #> 396 533.5474   2.696146 #> 397 517.1982   2.889572 #> 398 507.6089   2.565302 #> 399 665.5283   2.764358 #> 400 836.9209   2.801238 #> 401 575.5830   2.565942 #> 402 500.4509   2.574809 #> 403 500.0145   2.728492 #> 404 509.2975   2.911951 #> 405 502.9992   2.522976 #> 406 673.3429   2.662274 #> 407 516.3013   4.680826 #> 408 500.0319   2.577039 #> 409 500.7648   2.785404 #> 410 864.4950   2.548614 #> 411 525.7849   3.089674 #> 412 500.1935   2.923615 #> 413 535.5131   2.740870 #> 414 500.0396   3.631436 #> 415 500.1394   2.574569 #> 416 500.1026   2.793736 #> 417 501.2382   2.597980 #> 418 500.1527   2.567459 #> 419 600.9101   2.793874 #> 420 583.2966   2.833637 #> 421 506.9930   3.023269 #> 422 510.5587   2.597096 #> 423 500.6192   2.626569 #> 424 504.2592   2.836114 #> 425 682.9355   3.376354 #> 426 848.2935   2.605702 #> 427 500.2655   2.830375 #> 428 501.0745   2.641989 #> 429 500.2155   3.002204 #> 430 500.0769   2.580745 #> 431 500.0033   2.674054 #> 432 549.6635   3.524500 #> 433 953.3471   3.499530 #> 434 500.4136   3.862112 #> 435 505.1466   2.527637 #> 436 500.0467   2.863576 #> 437 500.2116   2.573699 #> 438 550.9806   3.042099 #> 439 627.0598   3.169056 #> 440 500.3500   3.012022 #> 441 501.7049   2.731844 #> 442 502.4559   2.520825 #> 443 653.0221   2.575553 #> 444 500.0123   3.194517 #> 445 512.0955   2.698278 #> 446 601.8636   2.984186 #> 447 502.2122   2.828580 #> 448 906.6419   2.536783 #> 449 556.3028   3.086391 #> 450 504.6710   3.270206 #> 451 500.0131   3.446905 #> 452 500.0827   2.836268 #> 453 500.3085   2.546424 #> 454 500.7291   3.089482 #> 455 500.9302   3.386107 #> 456 500.5252   3.728746 #> 457 509.9432   2.720106 #> 458 500.2079   2.530831 #> 459 623.1423   3.034235 #> 460 540.6450   3.300649 #> 461 500.3379   2.728536 #> 462 504.0972   2.652729 #> 463 708.6069   3.663649 #> 464 509.6419   2.536657 #> 465 500.0328   2.514408 #> 466 500.3133   2.635365 #> 467 513.2012   2.512799 #> 468 519.0227   2.880523 #> 469 532.4107   2.932966 #> 470 535.4774   2.588718 #> 471 627.2042   2.517866 #> 472 500.1074   2.995508 #> 473 501.5894   2.818335 #> 474 500.0928   3.118256 #> 475 500.3888   2.560144 #> 476 521.9523   2.790775 #> 477 500.0034   2.582120 #> 478 500.1353   2.764781 #> 479 500.6663   2.506144 #> 480 517.1741   2.521244 #> 481 501.6293   2.803293 #> 482 503.6861   3.005616 #> 483 502.3367   2.569225 #> 484 987.5902   3.003147 #> 485 674.3931   3.692620 #> 486 501.5494   2.505819 #> 487 511.3535   2.819912 #> 488 500.5521   3.218377 #> 489 526.7598   3.094834 #> 490 537.0635   3.085069 #> 491 508.5061   2.507481 #> 492 500.8819   2.681694 #> 493 500.8803   2.548115 #> 494 505.1064   2.592201 #> 495 504.9577   2.997148 #> 496 500.8338   2.519763 #> 497 678.7757   2.993053 #> 498 505.2697   2.894109 #> 499 500.6610   2.834623 #> 500 500.1332   2.701382 #> 501 511.1783   2.871519 #> 502 787.6096   3.017069 #> 503 541.6216   2.747156 #> 504 502.8604   3.401971 #> 505 500.1686   2.514676 #> 506 517.8468   2.866950 #> 507 632.8999   3.351135 #> 508 501.9501   2.752177 #> 509 500.4469   2.858254 #> 510 500.0616   2.612557 #> 511 823.6677   2.820850 #> 512 727.6619   4.880667 #> 513 511.0457   2.776186 #> 514 586.2840   3.526887 #> 515 626.0762   2.775513 #> 516 529.8720   2.997060 #> 517 513.5146   2.970188 #> 518 506.4792   3.868166 #> 519 509.0937   2.953274 #> 520 821.5594   2.782777 #> 521 507.7902   2.505621 #> 522 521.3759   2.661350 #> 523 501.5320   2.510395 #> 524 500.9838   2.728382 #> 525 616.5618   3.281218 #> 526 501.2066   2.594605 #> 527 504.3676   4.837819 #> 528 688.1701   2.547282 #> 529 532.3443   2.873568 #> 530 755.1504   2.779124 #> 531 505.1927   2.612574 #> 532 500.7171   3.028597 #> 533 502.5802   2.791514 #> 534 534.2364   2.784142 #> 535 596.0384   2.535287 #> 536 508.7171   2.705104 #> 537 500.0868   2.547179 #> 538 523.1826   2.560886 #> 539 521.1404   2.621175 #> 540 501.6956   2.561349 #> 541 517.9692   3.544849 #> 542 500.3112   3.041118 #> 543 500.0363   3.014837 #> 544 500.3935   2.859046 #> 545 500.0013   3.091106 #> 546 500.5928   2.744674 #> 547 648.4130   2.651658 #> 548 500.3047   2.654797 #> 549 535.6273   2.950049 #> 550 500.5320   2.799853 #> 551 500.3408   2.946783 #> 552 500.4015   3.226598 #> 553 527.7232   2.663209 #> 554 500.7524   2.652551 #> 555 500.1201   2.537930 #> 556 500.0120   2.622297 #> 557 656.2110   2.747519 #> 558 544.2026   2.944991 #> 559 582.2878   2.997611 #> 560 500.4641   2.761626 #> 561 538.0674   2.579225 #> 562 500.1730   2.900066 #> 563 500.2854   2.775647 #> 564 851.9682   2.947816 #> 565 500.0565   2.676929 #> 566 504.9533   2.608610 #> 567 600.7730   2.580879 #> 568 500.9430   2.712567 #> 569 577.4235   2.875694 #> 570 500.9377   3.837119 #> 571 504.9134   2.906257 #> 572 500.7710   2.503348 #> 573 773.8912   2.564867 #> 574 500.0032   2.923659 #> 575 500.9799   2.537359 #> 576 538.2451   3.066373 #> 577 523.0168   2.713751 #> 578 500.4771   2.781403 #> 579 500.8575   2.533941 #> 580 500.6351   3.173006 #> 581 508.5651   3.373985 #> 582 775.4492   2.620717 #> 583 729.8037   3.137671 #> 584 972.5771   2.725274 #> 585 500.0835   2.570579 #> 586 512.1431   3.142333 #> 587 500.8856   2.667266 #> 588 500.7877   2.582860 #> 589 500.2894   3.307719 #> 590 500.8130   2.668208 #> 591 531.4683   2.517529 #> 592 503.6622   2.891153 #> 593 500.7153   3.004595 #> 594 500.2856   2.719705 #> 595 500.1287   2.525254 #> 596 506.9026   3.094567 #> 597 559.0017   3.439955 #> 598 526.4510   2.965653 #> 599 503.3282   2.625187 #> 600 508.4682   2.835263 #> 601 500.8776   3.373617 #> 602 511.9395   3.704719 #> 603 524.4483   2.726458 #> 604 501.2874   2.639061 #> 605 500.0465   2.628429 #> 606 517.2739   2.547971 #> 607 574.1326   2.835854 #> 608 500.0899   2.618603 #> 609 502.2593   3.061833 #> 610 548.6289   2.863943 #> 611 524.0889   2.984788 #> 612 823.3603   2.742840 #> 613 566.0618   2.636431 #> 614 516.6628   5.274735 #> 615 500.4599   2.591609 #> 616 779.8520   2.622814 #> 617 635.5095   3.267201 #> 618 532.8827   2.532965 #> 619 500.1974   3.025476 #> 620 887.9574   3.000856 #> 621 788.3894   2.591315 #> 622 516.8601   3.044425 #> 623 500.0534   3.181787 #> 624 516.8159   2.936261 #> 625 500.0169   2.700168 #> 626 501.0273   2.638038 #> 627 518.8853   2.820931 #> 628 500.1656   2.706734 #> 629 500.1364   2.699467 #> 630 504.3070   2.504177 #> 631 638.6945   2.945642 #> 632 607.9974   2.696408 #> 633 501.7696   3.360252 #> 634 556.5767   3.299906 #> 635 510.2543   2.646130 #> 636 500.1528   2.759901 #> 637 506.5089   3.232681 #> 638 519.7331   2.691490 #> 639 797.0383   2.610997 #> 640 670.9978   2.890311 #> 641 500.0195   3.122796 #> 642 822.6454   2.708775 #> 643 500.8867   3.184013 #> 644 501.8598   3.116484 #> 645 741.3818   3.671426 #> 646 513.1445   2.939259 #> 647 501.8070   3.356501 #> 648 509.3118   2.794391 #> 649 500.0114   2.931158 #> 650 809.6935   2.643788 #> 651 522.3984   2.608962 #> 652 577.8033   2.628590 #> 653 500.1396   2.959772 #> 654 503.9145   2.858269 #> 655 593.8757   2.604016 #> 656 510.4319   2.598890 #> 657 500.1649   2.509017 #> 658 554.3345   2.741889 #> 659 501.4523   2.878521 #> 660 541.0893   2.525795 #> 661 503.5378   2.747598 #> 662 501.1879   3.175059 #> 663 550.0569   2.635453 #> 664 500.1106   2.606477 #> 665 503.8915   2.591079 #> 666 501.2527   2.990578 #> 667 523.7754   2.949729 #> 668 516.4291   2.508760 #> 669 547.5865   3.126690 #> 670 500.1161   2.896710 #> 671 506.3646   2.764553 #> 672 532.9487   3.299004 #> 673 501.6843   2.819612 #> 674 500.1962   2.741579 #> 675 508.4817   3.665907 #> 676 500.6039   2.759127 #> 677 552.0658   2.851337 #> 678 502.4572   3.350934 #> 679 509.6189   2.921535 #> 680 502.0881   2.769155 #> 681 502.0069   2.524545 #> 682 516.5215   2.526976 #> 683 522.4050   2.881880 #> 684 500.1081   2.929223 #> 685 500.4230   2.578902 #> 686 913.5252   2.546610 #> 687 500.1528   3.302500 #> 688 507.2233   2.517377 #> 689 512.7686   2.549680 #> 690 520.3614   2.536746 #> 691 500.7457   3.117029 #> 692 500.3922   2.849548 #> 693 500.0873   2.697932 #> 694 500.6676   3.029945 #> 695 555.0929   2.791653 #> 696 500.9430   2.940084 #> 697 672.7560   2.874826 #> 698 597.1351   3.072987 #> 699 500.0284   2.732116 #> 700 561.6746   3.365842 #> 701 502.3046   3.003630 #> 702 501.7701   2.741848 #> 703 656.4601   2.958476 #> 704 626.4371   2.738097 #> 705 590.9347   3.267908 #> 706 631.5846   2.657152 #> 707 500.0975   2.780986 #> 708 503.8651   2.665420 #> 709 512.5564   2.579786 #> 710 607.4348   2.508839 #> 711 501.5399   2.624666 #> 712 500.2173   2.651859 #> 713 515.2975   3.541138 #> 714 535.1527   2.929844 #> 715 500.1401   3.063731 #> 716 502.1605   2.503759 #> 717 547.4408   3.299738 #> 718 500.0394   2.823733 #> 719 501.5718   2.846132 #> 720 502.5781   2.648275 #> 721 500.0699   2.617672 #> 722 500.1451   2.818271 #> 723 533.9426   2.799044 #> 724 500.6584   2.616021 #> 725 500.0392   4.155150 #> 726 500.1801   3.539346 #> 727 500.1301   2.521477 #> 728 507.1191   2.848346 #> 729 501.5547   2.581049 #> 730 500.9542   3.040958 #> 731 503.1633   2.715268 #> 732 501.1408   2.574755 #> 733 508.1762   2.868831 #> 734 500.0094   2.987696 #> 735 580.3090   2.919234 #> 736 500.0329   2.793001 #> 737 505.1224   3.497164 #> 738 500.6814   2.843752 #> 739 500.3637   2.907665 #> 740 500.0959   3.329424 #> 741 500.0090   2.843187 #> 742 501.4098   2.533164 #> 743 568.9563   3.383567 #> 744 500.7147   2.543323 #> 745 938.8479   2.670839 #> 746 681.4227   2.638358 #> 747 500.3369   3.271799 #> 748 876.9547   2.740590 #> 749 501.4687   2.840951 #> 750 765.0092   2.890265 #> 751 500.2897   2.702247 #> 752 500.7449   2.500456 #> 753 581.6263   2.599100 #> 754 517.3585   2.877088 #> 755 511.3773   2.904242 #> 756 500.4730   3.299511 #> 757 510.9544   2.941222 #> 758 508.2174   2.970366 #> 759 500.4162   2.540288 #> 760 806.0499   3.019841 #> 761 503.7985   2.932951 #> 762 505.3620   2.700847 #> 763 741.5352   2.564995 #> 764 800.0824   2.830453 #> 765 500.0648   2.562172 #> 766 500.8057   2.641460 #> 767 508.5283   2.528931 #> 768 503.3791   2.644357 #> 769 500.1276   2.542689 #> 770 505.2159   2.964107 #> 771 501.0187   2.963194 #> 772 535.3796   2.985989 #> 773 501.9877   2.544228 #> 774 504.1527   3.099513 #> 775 504.2352   3.130416 #> 776 500.0308   3.008303 #> 777 502.6039   2.874971 #> 778 511.6900   2.583247 #> 779 500.7254   2.947215 #> 780 624.0118   3.293187 #> 781 501.5371   2.746790 #> 782 708.0110   3.672822 #> 783 500.5255   2.878672 #> 784 518.2397   3.060858 #> 785 500.1448   2.500801 #> 786 794.0845   2.635568 #> 787 543.2096   2.578571 #> 788 902.6938   2.643374 #> 789 504.0544   2.595001 #> 790 510.3090   4.015715 #> 791 500.0094   2.844720 #> 792 597.0037   3.139047 #> 793 515.3742   4.026034 #> 794 500.6182   3.070732 #> 795 501.3084   2.818700 #> 796 515.8777   2.837536 #> 797 500.4722   2.655038 #> 798 501.0086   3.942570 #> 799 532.9555   2.835371 #> 800 500.5601   2.660781 #> 801 509.7594   3.408745 #> 802 500.0231   2.803322 #> 803 511.0332   2.780954 #> 804 500.2134   3.467485 #> 805 707.6648   2.512195 #> 806 500.0312   2.600839 #> 807 500.2450   3.302591 #> 808 501.6038   2.633132 #> 809 557.7352   2.816070 #> 810 509.0571   2.596197 #> 811 521.4641   2.657722 #> 812 508.7961   3.140225 #> 813 513.1598   2.509420 #> 814 500.7344   2.673315 #> 815 503.5761   2.822456 #> 816 500.0051   2.555306 #> 817 500.3340   3.235999 #> 818 501.4131   2.855295 #> 819 500.0249   4.184967 #> 820 507.9912   2.602558 #> 821 504.1625   3.031749 #> 822 545.1769   2.662123 #> 823 849.7261   2.695021 #> 824 535.8650   2.597274 #> 825 662.9430   2.639836 #> 826 501.8631   2.742224 #> 827 507.9474   2.685033 #> 828 501.9805   2.596722 #> 829 520.6228   2.684115 #> 830 501.4983   3.667823 #> 831 962.2819   3.058951 #> 832 500.1402   3.057520 #> 833 500.1985   3.474594 #> 834 500.0664   2.709052 #> 835 509.5837   2.540132 #> 836 500.2857   2.524408 #> 837 500.1053   2.833783 #> 838 584.7238   2.813126 #> 839 500.2772   2.563946 #> 840 501.0293   2.876950 #> 841 518.8393   3.294515 #> 842 613.2421   2.731954 #> 843 500.0797   3.078337 #> 844 501.3676   2.991726 #> 845 500.3873   2.898804 #> 846 528.8252   2.735887 #> 847 500.0839   2.627282 #> 848 500.0179   2.527962 #> 849 500.4876   2.584383 #> 850 500.6733   2.591962 #> 851 503.0957   3.345698 #> 852 500.0400   2.702264 #> 853 500.1645   2.716247 #> 854 500.1643   2.714952 #> 855 501.1677   2.708532 #> 856 502.0497   2.680372 #> 857 501.0188   3.358977 #> 858 857.4219   2.507081 #> 859 550.6075   2.927934 #> 860 507.2281   2.535665 #> 861 500.0986   2.564708 #> 862 500.0752   2.578180 #> 863 501.0749   2.793596 #> 864 500.0327   2.862781 #> 865 501.9593   3.037493 #> 866 924.3719   2.520402 #> 867 507.3502   2.756210 #> 868 500.3010   2.783109 #> 869 500.6795   2.735855 #> 870 606.6740   4.322912 #> 871 500.0012   2.967185 #> 872 577.9969   2.980197 #> 873 502.2385   2.996180 #> 874 974.9148   3.017951 #> 875 500.5399   2.500493 #> 876 503.5052   2.658047 #> 877 501.3354   2.700972 #> 878 500.0295   2.594249 #> 879 503.3216   3.192388 #> 880 501.1362   2.805106 #> 881 500.0691   3.449335 #> 882 500.4055   2.928902 #> 883 524.2031   2.862905 #> 884 517.6018   3.257088 #> 885 522.2597   2.580502 #> 886 510.9569   3.090339 #> 887 531.7314   3.135937 #> 888 503.8564   2.535849 #> 889 500.1205   2.549506 #> 890 507.5432   2.769541 #> 891 532.1523   2.722753 #> 892 911.2579   3.175838 #> 893 500.0139   2.963014 #> 894 503.9521   2.512431 #> 895 500.3814   2.684462 #> 896 509.0630   2.556118 #> 897 878.6773   2.536010 #> 898 773.6179   2.861991 #> 899 501.3057   3.210623 #> 900 500.2323   2.819860 #> 901 512.0054   3.199758 #> 902 513.5040   2.598893 #> 903 512.2907   2.879884 #> 904 556.4035   2.918985 #> 905 523.2654   2.558878 #> 906 898.5036   3.372314 #> 907 665.9320   2.530646 #> 908 501.4435   2.655602 #> 909 500.1448   3.718406 #> 910 501.2412   2.765938 #> 911 505.0413   2.687229 #> 912 910.5807   2.655851"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
