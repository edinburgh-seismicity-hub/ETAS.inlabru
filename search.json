[{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"load-packages","dir":"Articles","previous_headings":"Setup","what":"Load Packages","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"library(ETAS.inlabru) library(ggplot2)  library(rnaturalearth) library(terra) library(sf) library(ggspatial) library(rnaturalearthdata) library(dplyr) library(lubridate)  ## This is just the EPSG equivalent of WGS84 crs_wgs84 <- st_crs(\"EPSG:4326\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"load-an-earthquake-catalogue","dir":"Articles","previous_headings":"","what":"Load an earthquake catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. subset (see data-raw/horus.R subset created) information Horus catalogue can loaded using data reports earthquake time string (time_string), longitude (lon) latitude (lat) epicentre, depth kilometres (depth), moment magnitude (M).","code":"# load HORUS catalogue data(horus, package = \"ETAS.inlabru\")  # transform time string in Date object horus$time_date <- as.POSIXct(   horus$time_string,   format = \"%Y-%m-%dT%H:%M:%OS\" )  head(horus) #>           time_string     lon     lat depth    M           time_date #> 1 1960-01-03T20:19:34 15.3000 39.3000   290 6.34 1960-01-03 20:19:34 #> 2 1960-01-04T09:20:00 13.1667 43.1333     0 3.94 1960-01-04 09:20:00 #> 3 1960-01-06T15:17:34 12.7000 46.4833     4 4.69 1960-01-06 15:17:34 #> 4 1960-01-06T15:20:53 12.7000 46.4667     0 4.14 1960-01-06 15:20:53 #> 5 1960-01-06T15:31:00 12.7500 46.4333     0 3.00 1960-01-06 15:31:00 #> 6 1960-01-06T15:45:00 12.7500 46.4333     0 3.00 1960-01-06 15:45:00 # Set df_cat to be the catalogue we want to analyse and then use this below df_cat <- horus  # Add an integer id to each event df_cat$event_num <- seq.int(nrow(df_cat))  # Generate an sf version of the catalogue where the longitude and latitude are converted to a point object df_cat.sf <- st_as_sf(df_cat,   coords = c(\"lon\", \"lat\"),   crs = crs_wgs84 )  head(df_cat.sf) #> Simple feature collection with 6 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 12.7 ymin: 39.3 xmax: 15.3 ymax: 46.4833 #> Geodetic CRS:  WGS 84 #>           time_string depth    M           time_date event_num #> 1 1960-01-03T20:19:34   290 6.34 1960-01-03 20:19:34         1 #> 2 1960-01-04T09:20:00     0 3.94 1960-01-04 09:20:00         2 #> 3 1960-01-06T15:17:34     4 4.69 1960-01-06 15:17:34         3 #> 4 1960-01-06T15:20:53     0 4.14 1960-01-06 15:20:53         4 #> 5 1960-01-06T15:31:00     0 3.00 1960-01-06 15:31:00         5 #> 6 1960-01-06T15:45:00     0 3.00 1960-01-06 15:45:00         6 #>                  geometry #> 1       POINT (15.3 39.3) #> 2 POINT (13.1667 43.1333) #> 3    POINT (12.7 46.4833) #> 4    POINT (12.7 46.4667) #> 5   POINT (12.75 46.4333) #> 6   POINT (12.75 46.4333)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"get-map-and-extract-crs-for-the-map","dir":"Articles","previous_headings":"Load an earthquake catalogue","what":"Get map and extract crs for the map","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"download polygon file national boundary Italy use later notebook.","code":"italy.map <- ne_countries(country = \"Italy\", returnclass = \"sf\", scale = \"medium\") italy.crs <- crs(italy.map) print(italy.crs) #> [1] \"GEOGCRS[\\\"WGS 84\\\",\\n    DATUM[\\\"World Geodetic System 1984\\\",\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    ID[\\\"EPSG\\\",4326]]\" ggplot() +   geom_sf(data = italy.map) +   theme_bw() +   ggtitle(\"Map of the Italian territorial boundary and coastline\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"histogram-of-event-depths","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"Histogram of event depths","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"histogram depth data 1km bins initially looks reasonable except artefact cluster events zero depth.  However, reduce bin width 100m see artefacts data. spikes 0, 5, 10 11km artefacts depth estimation, one cause algorithms may got stuck starting values. magnitude time series shows completeness intermediate deep events improved time.","code":"hist(df_cat$depth, breaks = seq(650, -5, -1), xlim = c(-5, 40), main = \"Histogram of depths, 1km bins\", xlab = \"Depth [km]\") hist(df_cat$depth, breaks = seq(650, -5, -0.1), xlim = c(-5, 40), main = \"Histogram of depths (100m bins)\", xlab = \"Depth [km]\") ggplot(df_cat, aes(x = time_date, y = depth)) +   geom_point(size = 0.1) +   ylim(620, 0) +   ggtitle(\"Depth timeseries using natural time\") #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"plot-of-event-magnitudes-using-natural-time","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"Plot of event magnitudes using natural time","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"Natural time refers plot event evenly spaced along x-axis. advantage data occurs periods high activity spread , means can see structure data rates high. plot magnitude events y-axis natural time horizontal. observations : 40,000 events magnitude data cluster events \\(M=0\\) likely artefact catalogue generated period time data rounded 1 decimal place producing horizontal banding times, data rounded sensitivity lowest magnitudes varies time can seen changes lowest magnitudes","code":"ggplot(df_cat, aes(x = event_num, y = M)) +   geom_point(size = 0.1) +   ggtitle(\"Magnitude timeseries using natural time\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"plot-of-event-magnitudes-using-date-time","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"Plot of event magnitudes using date-time","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"present data previous plot, plotted data-time. Clustered events now sit top . get better representaion data density increases towards modern day magnitude incompleteness varyies time.  number events occuring year difficult assess plot, group data year count number events occuring year. plot shows number events recorded year gradually increasing. artefact due gradual increase sensitivity network, seismicity systematically increasing.","code":"ggplot(df_cat, aes(x = time_date, y = M)) +   geom_point(size = 0.1) +   ggtitle(\"Horus catalogue magnitude time series\") #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`). df_cat$Time <- as.Date(df_cat$time_date)  print(\"Extract year\") #> [1] \"Extract year\" # extract the year and convert to numeric format df_cat$Year <- as.numeric(format(df_cat$Time, \"%Y\"))  countEventsInYear <- df_cat %>%   group_by(Year) %>%   summarize(counts = n())  plot(countEventsInYear, type = \"l\", main = \"Annual number of events for whole catalogue\") # Filtered for M>4 ggplot(df_cat[df_cat$M > 4, ], aes(x = time_date, y = M)) +   geom_point(size = 0.1) +   ggtitle(\"Whole catalogue magnitude timeseries for M>4\") #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`). countEventsInYear <- df_cat[df_cat$M >= 4, ] %>%   group_by(Year) %>%   summarize(counts = n())  plot(countEventsInYear, type = \"l\", main = \"Annual number of events with M>=4\") abline(h = mean(countEventsInYear), col = 2) #> Warning in mean.default(countEventsInYear): argument is not numeric or logical: #> returning NA"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"frequency-magnitude-analysis-for-horus-catalogue","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"Frequency-magnitude analysis for Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"traditional GR plot shows cumulative data (red) also show incremental data (black). personally prefer looking incremental data correlated therefore easier understand Poisson counting errors account uncertainty data. three domains standard GR plot. - low magnitudes always incompleteness due limitations monitoring network - requirement GR good model log-linear portion data slope stable, slope refered b-value - high magnitudes always fluctuations magnitudes due effect counting errors bins low rates","code":"minMag <- 1.5 maxMag <- max(df_cat$M)  mags <- df_cat[df_cat$M > minMag, ]$M  tmp <- hist(mags, breaks = seq(minMag - 0.05, maxMag + 0.1, 0.1), plot = FALSE)  N.counts <- length(tmp$counts) tmp$cumulativeCounts <- cumsum(tmp$counts[N.counts:1])[N.counts:1]  m.min <- 4 bin_m.min <- which(tmp$mids == m.min) freq_m.min <- tmp$counts[bin_m.min] b <- 1 x <- tmp$mids y <- freq_m.min * 10^(-b * (x - m.min)) y.cum <- tmp$cumulativeCounts[bin_m.min] * 10^(-b * (x - m.min))  ggplot() +   geom_point(aes(x = tmp$mids, y = tmp$counts)) +   geom_point(aes(x = tmp$mids, y = tmp$cumulativeCounts), color = \"red\", pch = \"+\", size = 2) +   scale_y_log10() +   ggtitle(paste(\"Frequency-magnitude plot with arbitary GR dist: b =\", b)) +   xlab(\"Magnitude\") +   ylab(\"log10(Frequency)\") +   geom_line(aes(x = x, y = y)) +   geom_line(aes(x = x, y = y.cum), color = \"red\") +   geom_vline(xintercept = m.min, lty = 2) #> Warning in scale_y_log10(): log-10 transformation introduced #> infinite values."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"b-value-stability-plot-for-the-events-in-the-horus-catalogue","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"b-value stability plot for the events in the Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"minMag <- 2 maxMag <- max(df_cat$M, na.rm = TRUE) mags <- df_cat[df_cat$M >= minMag, ]$M  x <- seq(minMag, maxMag, 0.1)  b.stability.list <- c() b.error.list <- c() m.mean <- c()  b_utsu <- c() b_guttorp <- c() b_elst <- c() delta_b_utsu <- c() b_elst_lower <- c() b_elst_upper <- c()  max.index.x <- length(x) - 5  for (i in 1:max.index.x) {   mag.threshold <- x[i]   mags.subset <- mags[mags > mag.threshold]    N <- length(mags.subset)   b_utsu[i] <- 1 / (log(10) * (mean(mags.subset) - mag.threshold + 0.05))   delta_b_utsu[i] <- log(10) * b_utsu[i]**2 * sqrt(sum((mags.subset - mean(mags.subset))**2) / (N * (N - 1)))    b_guttorp[i] <- 1 / (2 * 0.05 * log(10)) * log((mean(mags.subset) - mag.threshold + 2 * 0.05) / (mean(mags.subset) - mag.threshold))    deltaMags <- diff(mags.subset)   deltaMags_p <- deltaMags[deltaMags > 0.1]   N <- length(deltaMags_p)   b_elst[i] <- 1 / (2 * 0.05 * log(10)) * log((mean(deltaMags_p)) / (mean(deltaMags_p) - 0.1))   c <- 10**(0.1 * b_elst[i])   b_elst_lower[i] <- 1 / (0.1 * log(10)) * log((c + sqrt(c / N)) / (1 + sqrt(c / N)))   b_elst_upper[i] <- 1 / (0.1 * log(10)) * log((c - sqrt(c / N)) / (1 - sqrt(c / N))) }  ggplot() +   geom_line(aes(x = x[1:max.index.x], y = b_utsu)) +   geom_line(aes(x = x[1:max.index.x], y = b_utsu + delta_b_utsu), color = 2, lty = 2) +   geom_line(aes(x = x[1:max.index.x], y = b_utsu - delta_b_utsu), color = 2, lty = 2) +   geom_line(aes(x = x[1:max.index.x], y = b_guttorp), color = 3, lty = 1) +   xlab(\"Magnitude threshold\") +   ylab(\"b-value estimate\") +   geom_hline(yintercept = 1, lty = 3) +   geom_hline(yintercept = 0.85, lty = 3) +   ggtitle(\"b-value stability plot for Horus catalogue\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"heatmap-of-the-events-in-the-horus-catalogue","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"Heatmap of the events in the Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"ggplot() +   geom_hex(data = df_cat[df_cat$M > 3, ], aes(x = lon, y = lat), bins = 50) +   scale_fill_continuous(type = \"viridis\") +   geom_sf(data = italy.map, fill = alpha(\"lightgrey\", 0), color = \"orange\", size = 0.2) +   ggtitle(\"Density plot for M>3 events\") +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"map-of-the-events-in-the-italian-horus-catalogue","dir":"Articles","previous_headings":"Exploratory Data Analysis on the whole of Italy using the Horus catalogue","what":"Map of the events in the Italian Horus catalogue","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"plot location seismicity map. outline Italy territory shown green.","code":"ggplot() +   geom_sf(data = df_cat.sf[df_cat$M > 3, ], size = 0.05) +   geom_sf(data = italy.map, fill = alpha(\"lightgrey\", 0), color = \"green\", linewidth = 0.7) +   geom_sf(data = df_cat.sf[df_cat$M > 5, ], size = 0.5, color = \"orange\") +   geom_sf(data = df_cat.sf[df_cat$M > 6, ], size = 0.5, color = \"red\") +   ggtitle(\"Map of event locations\") eventDate <- ymd_hms(\"2009-04-06 00:00:00\") endDate <- eventDate + days(400) startDate <- eventDate - days(50) deltaLat <- 2.4 latLims <- c(42.2, 42.5) longLims <- c(13, 13.75)  ggplot() +   geom_point(data = df_cat[df_cat$M > 3, ], aes(time_date, lat), size = 0.1) +   geom_point(data = df_cat[df_cat$M > 5, ], aes(time_date, lat), size = 1.2, color = \"orange\") +   geom_point(data = df_cat[df_cat$M > 6, ], aes(time_date, lat), size = 1.5, color = \"red\") +   ggtitle(\"Italian latitude-time plot\") +   geom_rect(aes(xmin = as.POSIXct(startDate), xmax = as.POSIXct(endDate), ymin = latLims[1], ymax = latLims[2]), alpha = 0.4, fill = \"blue\", color = \"blue\") #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"analysis-if-the-laquila-sequence","dir":"Articles","previous_headings":"","what":"Analysis if the L’Aquila Sequence","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"focus L Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. start.date = “2009-04-06 00:00:00 BST” end.date = “2010-01-01 00:00:00 BST” magnitude.completeness = 2.49 min.longitude = 13.00 max.longitude = 13.75 min.latitude = 42.2 max.latitude = 42.5","code":"eventDate <- ymd_hms(\"2009-04-06 00:00:00\") endDate <- eventDate + days(400) startDate <- eventDate - days(50) deltaLat <- 2.4 latLims <- c(42.2, 42.5) longLims <- c(13, 13.75)  minMAG <- 0  # Subset the main catalogue df_cat.subset <- df_cat[df_cat$M >= minMAG, ] df_cat.subset <- df_cat.subset[(df_cat.subset$lat > latLims[1]), ] df_cat.subset <- df_cat.subset[(df_cat.subset$lat < latLims[2]), ] df_cat.subset <- df_cat.subset[(df_cat.subset$lon > longLims[1]), ] df_cat.subset <- df_cat.subset[(df_cat.subset$lon < longLims[2]), ]  head(df_cat.subset) #>             time_string     lon     lat depth    M           time_date #> 243 1961-03-25T10:40:00 13.3167 42.4333     0 3.64 1961-03-25 10:40:00 #> 295 1961-10-05T19:59:35 13.0167 42.3500     3 0.00 1961-10-05 19:59:35 #> 302 1961-10-31T00:00:00 13.0167 42.3500    10 3.94 1961-10-31 00:00:00 #> 303 1961-10-31T00:00:00 13.0167 42.3500    10 3.94 1961-10-31 00:00:00 #> 304 1961-10-31T13:37:18 13.0833 42.4167     4 4.64 1961-10-31 13:37:18 #> 305 1961-10-31T13:41:59 13.0833 42.4167     0 4.14 1961-10-31 13:41:59 #>     event_num       Time Year #> 243       243 1961-03-25 1961 #> 295       295 1961-10-05 1961 #> 302       302 1961-10-31 1961 #> 303       303 1961-10-31 1961 #> 304       304 1961-10-31 1961 #> 305       305 1961-10-31 1961"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"plot-of-the-event-magnitude-time-series-laquila","dir":"Articles","previous_headings":"Analysis if the L’Aquila Sequence","what":"Plot of the event magnitude time series: l’Aquila","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"ggplot() +   geom_point(data = df_cat.subset[df_cat.subset$M > 3, ], aes(time_date, lat), size = 0.1) +   geom_point(data = df_cat.subset[df_cat.subset$M > 5, ], aes(time_date, lat), size = 1.2, color = \"orange\") +   geom_point(data = df_cat.subset[df_cat.subset$M > 6, ], aes(time_date, lat), size = 1.5, color = \"red\") +   ggtitle(\"L'Aquila latitude-time plot\") +   geom_rect(aes(xmin = as.POSIXct(startDate), xmax = as.POSIXct(endDate), ymin = latLims[1], ymax = latLims[2]), alpha = 0.4, fill = \"blue\", color = \"blue\") minMag <- 0 maxMag <- max(df_cat.subset$M, na.rm = TRUE)  mags <- df_cat.subset[df_cat.subset$M >= minMag, ]$M  tmp <- hist(mags, breaks = seq(minMag - 0.05, maxMag + 0.4, 0.1), plot = FALSE)  N.counts <- length(tmp$counts) tmp$cumulativeCounts <- cumsum(tmp$counts[N.counts:1])[N.counts:1]  m.min <- 4 bin_m.min <- which(tmp$mids == m.min) freq_m.min <- tmp$counts[bin_m.min] b <- 1. x <- tmp$mids y <- freq_m.min * 10^(-b * (x - m.min)) y.cum <- tmp$cumulativeCounts[bin_m.min] * 10^(-b * (x - m.min))  ggplot() +   geom_point(aes(x = tmp$mids, y = tmp$counts)) +   geom_point(aes(x = tmp$mids, y = tmp$cumulativeCounts), color = \"red\", pch = \"+\") +   scale_y_log10() +   ggtitle(paste(\"Frequency-magnitude plot with arbitary GR dist: b =\", b)) +   xlab(\"Magnitude\") +   ylab(\"log10(Frequency)\") +   geom_line(aes(x = x, y = y)) +   geom_line(aes(x = x, y = y.cum), color = \"red\") +   geom_vline(xintercept = m.min, lty = 2) #> Warning in scale_y_log10(): log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/EDA_Italy_Horus.html","id":"b-value-stability-plot-laquila","dir":"Articles","previous_headings":"Analysis if the L’Aquila Sequence","what":"b-value stability plot: l’Aquila","title":"1. Exploratory Data Analysis: Italian Earthquake Catalogue - Horus","text":"","code":"minMag <- 0 maxMag <- max(df_cat.subset$M, na.rm = TRUE) mags <- df_cat.subset[df_cat.subset$M >= minMag, ]$M  x <- seq(minMag, maxMag, 0.1)  b.stability.list <- c() b.error.list <- c() m.mean <- c()  b_utsu <- c() b_guttorp <- c() b_elst <- c() delta_b_utsu <- c() b_elst_lower <- c() b_elst_upper <- c()  max.index.x <- length(x) - 5  for (i in 1:max.index.x) {   mag.threshold <- x[i]   mags.subset <- mags[mags > mag.threshold]    N <- length(mags.subset)   b_utsu[i] <- 1 / (log(10) * (mean(mags.subset) - mag.threshold + 0.05))   delta_b_utsu[i] <- log(10) * b_utsu[i]**2 * sqrt(sum((mags.subset - mean(mags.subset))**2) / (N * (N - 1)))    b_guttorp[i] <- 1 / (2 * 0.05 * log(10)) * log((mean(mags.subset) - mag.threshold + 2 * 0.05) / (mean(mags.subset) - mag.threshold))    deltaMags <- diff(mags.subset)   deltaMags_p <- deltaMags[deltaMags > 0.1]   N <- length(deltaMags_p)   b_elst[i] <- 1 / (2 * 0.05 * log(10)) * log((mean(deltaMags_p)) / (mean(deltaMags_p) - 0.1))   c <- 10**(0.1 * b_elst[i])   b_elst_lower[i] <- 1 / (0.1 * log(10)) * log((c + sqrt(c / N)) / (1 + sqrt(c / N)))   b_elst_upper[i] <- 1 / (0.1 * log(10)) * log((c - sqrt(c / N)) / (1 - sqrt(c / N))) }  ggplot() +   geom_line(aes(x = x[1:max.index.x], y = b_utsu)) +   geom_line(aes(x = x[1:max.index.x], y = b_utsu + delta_b_utsu), color = 2, lty = 2) +   geom_line(aes(x = x[1:max.index.x], y = b_utsu - delta_b_utsu), color = 2, lty = 2) +   geom_line(aes(x = x[1:max.index.x], y = b_guttorp), color = 3, lty = 1) +   xlab(\"Magnitude threshold\") +   ylab(\"b-value estimate\") +   geom_hline(yintercept = 1, lty = 3) +   geom_hline(yintercept = 0.85, lty = 3) +   ggtitle(\"b-value stability plot for the l'Aquila catalogue\") #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Removed 2 rows containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/generateSyntheticCatalogues.html","id":"create-catalogue","dir":"Articles","previous_headings":"","what":"Create catalogue","title":"2a Temporal Model: Generating synthetic temporal ETAS catalogues","text":"define ETAS parameters define model domain specify history generate ETAS sample plot results","code":"mu <- 1070. / 365 K <- 0.089 alpha <- 2.29 c <- 0.011 p <- 1.08  modelledDuration <- 10 # [days]  M0 <- 2  theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  Ht <- data.frame(ts = c(0., 1.5), magnitudes = c(6.7, 7.))  combined.M7.ETAS.cat <-   generate_temporal_ETAS_synthetic(     theta = theta_etas,     beta.p = log(10),     M0 = M0,     T1 = 0,     T2 = modelledDuration,     Ht = Ht,     format = \"df\"   ) combined.M7.ETAS.cat$ID <- seq_len(nrow(combined.M7.ETAS.cat))  ggplot(combined.M7.ETAS.cat) +   geom_point(aes(x = ts, y = magnitudes, color = factor(gen))) +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") ggplot(combined.M7.ETAS.cat %>%   mutate(generation = if_else(gen == -1, \"Initial\", \"Child\"))) +   geom_point(aes(x = ts, y = magnitudes, color = generation)) +   xlim(0, modelledDuration) +   ggtitle(\"M7 plus background and ETAS\") ggplot() +   geom_point(data = combined.M7.ETAS.cat, aes(x = ID, y = magnitudes), color = \"red\") #+ #  geom_ma(data = combined.M7.ETAS.cat, aes(x=ID, y=magnitudes), ma_fun = SMA, n = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sampleFromETASpriors.html","id":"sampling-etas-priors","dir":"Articles","previous_headings":"","what":"Sampling ETAS Priors","title":"2b Temporal Model: Presenting samples drawn from the ETAS priors","text":"important check priors broad enough expect model parameterisation lie within . notebook shows draw samples priors present resulting triggering functions.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"multiple-analyses-of-two-catalogues-using-different-initial-values","dir":"Articles","previous_headings":"","what":"Multiple analyses of two catalogues using different initial values","title":"Sensitivity to starting point","text":"inlabru algorithm takes initial guess mode parameters inverting iteratively updates initial guess. potential may bad initial conditions find different solutions runtime differ depending upon solution converges. notebook, explore robustness posteriors two synthetic catalogues true parameters known. catalogues contain 2000 days data. One catalogue contain large event second contains M6.7 event day 1000.","code":"library(ETAS.inlabru)  library(tidyquant) library(gridExtra) library(grid) library(lemon) library(ggplot2) library(ggpubr) library(GGally)  library(inlabru) library(INLA) library(ETAS.inlabru)  # inla.setOption(pardiso.license=\"~/sys/licences/pardiso.lic\")  library(dplyr)  # Increase/decrease num.cores if you have more/fewer cores on your computer. # future::multisession works on both Windows, MacOS, and Linux num.cores <- 2 future::plan(future::multisession, workers = num.cores) INLA::inla.setOption(num.threads = num.cores) # To deactivate parallelism, run #   future::plan(future::sequential) #   INLA::inla.setOption(num.threads = 1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"define-the-parameters-for-the-synthetic-catalogues-and-starting-values-for-inversion","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Define the parameters for the synthetic catalogues and starting values for inversion","title":"Sensitivity to starting point","text":"","code":"# Parameters we use to generate synthetics, which we will refer to as the 'true' parameters mu <- 0.1 K <- 0.089 alpha <- 2.29 c <- 0.11 p <- 1.08  # Format the true ETAS parameters for code to generate the synthetics theta_etas <- data.frame(mu = mu, K = K, alpha = alpha, c = c, p = p)  # A dataframe containing different starting values for the algorithm startingValues <- data.frame(   mu = c(5., mu),   K = c(1., K),   alpha = c(5., alpha),   c = c(0.3, c),   p = c(1.5, p) ) nRealisations <- length(startingValues$mu)   # Temporal duration of the synthetic catalogue in days modelledDuration <- 1000 # [days]  # The minimum magnitude that will be modelled M0 <- 2.5"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"generate-new-catalogues-and-save-them","dir":"Articles","previous_headings":"Multiple analyses of two catalogues using different initial values","what":"Generate new catalogues and save them","title":"Sensitivity to starting point","text":"vignette use Rmd caching, can save catalogues files explicitly:","code":"############ #### Generate the first catalogue with no large events  samp.etas.list <- generate_temporal_ETAS_synthetic(   theta = theta_etas,   beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = NULL )  quiet.ETAS.cat <- bind_rows(samp.etas.list) quiet.ETAS.cat <- quiet.ETAS.cat[order(quiet.ETAS.cat$ts), ] # quiet.ETAS.cat <- na.omit(quiet.ETAS.cat) ############ #### Generate the second catalogue with a M6.7 event on day 1000  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) # Impose a M6.7 event on day 1000  samp.etas.list <- generate_temporal_ETAS_synthetic(theta = theta_etas, beta.p = log(10), M0 = M0, T1 = 0, T2 = modelledDuration, Ht = Ht)  M6p7.ETAS.cat <- bind_rows(samp.etas.list) M6p7.ETAS.cat <- M6p7.ETAS.cat[order(M6p7.ETAS.cat$ts), ] # save(M6p7.ETAS.cat,file=\"M6p7_ETAS_cat.Rda\") # save(quiet.ETAS.cat,file=\"quiet.ETAS.cat.Rda\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"load-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Load the catalogues","title":"Sensitivity to starting point","text":"read saved object files:","code":"# load(\"M6p7_ETAS_cat.Rda\") # load(\"quiet.ETAS.cat.Rda\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-properties-of-the-catalogues","dir":"Articles","previous_headings":"Present the catalogues","what":"Plot properties of the catalogues","title":"Sensitivity to starting point","text":"","code":"plots <- list()  plots[[1]] <- ggplot() +   geom_point(data = quiet.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"A.  Unseeded catalog, nEvents =\", length(quiet.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()  plots[[2]] <- ggplot() +   geom_point(data = M6p7.ETAS.cat, aes(x = ts, y = magnitudes), size = 0.1, alpha = 0.5) +   xlim(0, modelledDuration) +   ggtitle(paste(\"B.  Catalog seeded with M6.7 event on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   ylim(2, 7) +   xlab(\"Time [days]\") +   ylab(\"Magnitude\") +   theme_bw()   plt <- grid.arrange(plots[[1]], plots[[2]], ncol = 1, nrow = 2) # ggsave(\"initialConditionCats.png\", plt) # ggsave(\"initialConditionCats.pdf\", plt)"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-quiet-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of quiet catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.quietScenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) remove(\"list.input\")    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables loaded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 0, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = quiet.ETAS.cat$ts,     magnitudes = quiet.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(quiet.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.quietScenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.quietScenario[[i]]$runtime <- sum(list.output.quietScenario[[i]]$model.fit$bru_timings$Time)   list.output.quietScenario[[i]]$nEvents <- length(list.output.quietScenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.1703014 #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845aaf8eb\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208431fdf15c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841ebf8c98\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20843117c143\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084692cb4bd\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20849fdd53e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208460e9966\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208455aa250b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084752e5c0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208432aa4eb8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084262fe487\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208462f779e0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842b94f910\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842ac06840\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841649a818\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846646af7e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084677164b3\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846cc19092\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20849b4f16a\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846a84638e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20843dcb3a15\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846b5813ad\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084d0e23a6\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844c6baf96\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842558295d\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208455e9653a\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20843d47ca62\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084c414291\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844623398f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084254fb54\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842f145382\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846108887\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846a034b1f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084381bdb84\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208434886543\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841e1fb661\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208410ebf22e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842a2de703\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208439e83ec0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846910289f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841c8b873e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845a2ab558\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20848205ed2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208447e44400\": #> No such file or directory #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  0.1756425 #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208465bb0af8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841f5401a3\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845e2ba91b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846097a8db\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084315d3908\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208420d42a0b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084788a8997\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084109e4913\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084499081ca\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845a21ba51\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845300b548\": #> No such file or directory #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"analysis-of-m6-7-catalogue","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Analysis of M6.7 catalogue","title":"Sensitivity to starting point","text":"","code":"list.output.M6p7Scenario <- list()  for (i in seq_len(nRealisations)) {   if (exists(\"list.input\")) {     remove(list.input)   }    # Load a set of parameters that we will need to tweak for this application   fpath <- system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\")   list.input <- create_input_list_temporal_noCatalogue(fpath)    ####################   # Tweak the variables laoded from the input file   list.input$M0 <- M0   list.input$time.int <- c(0, modelledDuration)   list.input$T12 <- c(0, modelledDuration)    # Change the starting location, measured on the ETAS scale   list.input$mu.init <- startingValues$mu[i]   list.input$alpha.init <- startingValues$alpha[i]   list.input$K.init <- startingValues$K[i]   list.input$c.init <- startingValues$c[i]   list.input$p.init <- startingValues$p[i]    link.f <- list(     mu = \\(x) gamma_t(x, a_mu, b_mu),     K = \\(x) loggaus_t(x, a_K, b_K),     alpha = \\(x) unif_t(x, a_alpha, b_alpha),     c_ = \\(x) unif_t(x, a_c, b_c),     p = \\(x) unif_t(x, a_p, b_p)   )    # initial value - convert from ETAS scale to internal scale   list.input$th.init <- list(     th.mu = inv_gamma_t(list.input$mu.init, list.input$a_mu, list.input$b_mu),     th.K = inv_loggaus_t(list.input$K.init, list.input$a_K, list.input$b_K),     th.alpha = inv_unif_t(list.input$alpha.init, list.input$a_alpha, list.input$b_alpha),     th.c = inv_unif_t(list.input$c.init, list.input$a_c, list.input$b_c),     th.p = inv_unif_t(list.input$p.init, list.input$a_p, list.input$b_p)   )    # Define options for inlabru   if (is.null(list.input$max_step)) {     list.input$bru.opt.list <- list(       bru_verbose = 4, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       # bru_method = list(max_step = 0.5),       bru_initial = list.input$th.init     ) # parameters initial values   } else {     list.input$bru.opt.list <- list(       bru_verbose = 4, # type of visual output       bru_max_iter = list.input$max_iter, # maximum number of iterations       bru_method = list(max_step = list.input$max_step),       bru_initial = list.input$th.init     ) # parameters initial values   }    ## Add out catalogue to the input list   list.input$catalog <- data.frame(     time_diff = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes   )    ## Add the catalogue formatted for bru   list.input$catalog.bru <- data.frame(     ts = M6p7.ETAS.cat$ts,     magnitudes = M6p7.ETAS.cat$magnitudes,     idx.p = seq_len(nrow(M6p7.ETAS.cat))   )    ## Input list is now formatted   ####################    ## Run the model according to the input list   ETAS.model.fit <- Temporal.ETAS.fit(list.input)    ## Small bit of post processing   list.output.M6p7Scenario[[i]] <- append(list.input, list(model.fit = ETAS.model.fit))   list.output.M6p7Scenario[[i]]$runtime <- sum(list.output.M6p7Scenario[[i]]$model.fit$bru_timings$Time)   list.output.M6p7Scenario[[i]]$nEvents <- length(list.output.M6p7Scenario[[i]]$catalog[, 1]) } #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  12.13382 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844813adf8\": #> No such file or directory #> iinla: Step rescaling: 96.82%, Approx Optimisation (norm0 = 19910, norm1 = 486.1, norm01 = 19950) #> iinla: |lin1-lin0| = 19950 #>        <eta-lin1,delta>/|delta| = -42.85 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 484.2 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845b68e05e\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 5708, norm1 = 1694, norm01 = 4060) #> iinla: Step rescaling: 100%, Overstep (norm0 = 3666, norm1 = 452.3, norm01 = 4060) #> iinla: Step rescaling: 111.2%, Approx Optimisation (norm0 = 4045, norm1 = 253.7, norm01 = 4060) #> iinla: |lin1-lin0| = 4060 #>        <eta-lin1,delta>/|delta| = -23.39 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 252.7 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1710% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846514acee\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 4432, norm1 = 1539, norm01 = 2897) #> iinla: Step rescaling: 100%, Overstep (norm0 = 2773, norm1 = 143.4, norm01 = 2897) #> iinla: Step rescaling: 104.6%, Approx Optimisation (norm0 = 2897, norm1 = 74.64, norm01 = 2897) #> iinla: |lin1-lin0| = 2897 #>        <eta-lin1,delta>/|delta| = -1.69 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 74.62 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1900% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208433d2d564\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 4103000, norm1 = 1401000, norm01 = 2853000) #> iinla: Step rescaling: 105.8%, Approx Optimisation (norm0 = 2330000, norm1 = 1302000, norm01 = 2853000) #> iinla: |lin1-lin0| = 2853000 #>        <eta-lin1,delta>/|delta| = -772100 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 1048000 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1950000% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084203f5f31\": #> No such file or directory #> iinla: Step rescaling: 67.53%, Approx Optimisation (norm0 = 10480, norm1 = 3599, norm01 = 9709) #> iinla: |lin1-lin0| = 9709 #>        <eta-lin1,delta>/|delta| = 135.7 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 3596 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 7610% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847f4ca6f4\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = Inf, norm1 = Inf, norm01 = 8075) #> iinla: Step rescaling: 100%, Overstep (norm0 = 6315, norm1 = 2751, norm01 = 8075) #> iinla: Step rescaling: 102.9%, Approx Optimisation (norm0 = 8463, norm1 = 2636, norm01 = 8075) #> iinla: |lin1-lin0| = 8075 #>        <eta-lin1,delta>/|delta| = -33.82 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 2636 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 3720% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844c5a4bd1\": #> No such file or directory #> iinla: Step rescaling: 61.8%, Contract (norm0 = 1186, norm1 = 2029, norm01 = 1060) #> iinla: Step rescaling: 38.2%, Contract (norm0 = 230.5, norm1 = 927.4, norm01 = 1060) #> iinla: Step rescaling: 28.23%, Approx Optimisation (norm0 = 213.8, norm1 = 859.7, norm01 = 1060) #> iinla: |lin1-lin0| = 1060 #>        <eta-lin1,delta>/|delta| = -857.1 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 66.43 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 2600% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844242191a\": #> No such file or directory #> iinla: Step rescaling: 61.8%, Contract (norm0 = 58720, norm1 = 59800, norm01 = 1462) #> iinla: Step rescaling: 38.2%, Contract (norm0 = 16230, norm1 = 17170, norm01 = 1462) #> iinla: Step rescaling: 23.61%, Contract (norm0 = 4182, norm1 = 5023, norm01 = 1462) #> iinla: Step rescaling: 14.59%, Contract (norm0 = 1140, norm1 = 2129, norm01 = 1462) #> iinla: Step rescaling: 5.578%, Approx Optimisation (norm0 = 112.4, norm1 = 1442, norm01 = 1462) #> iinla: |lin1-lin0| = 1462 #>        <eta-lin1,delta>/|delta| = -1438 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 109.7 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1210% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084370c7b54\": #> No such file or directory #> iinla: Step rescaling: 61.8%, Contract (norm0 = 15390, norm1 = 16400, norm01 = 1734) #> iinla: Step rescaling: 38.2%, Contract (norm0 = 4498, norm1 = 5368, norm01 = 1734) #> iinla: Step rescaling: 23.61%, Contract (norm0 = 1380, norm1 = 2389, norm01 = 1734) #> iinla: Step rescaling: 9.024%, Approx Optimisation (norm0 = 182.8, norm1 = 1655, norm01 = 1734) #> iinla: |lin1-lin0| = 1734 #>        <eta-lin1,delta>/|delta| = -1648 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 161 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1230% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084dfbb683\": #> No such file or directory #> iinla: Step rescaling: 61.8%, Contract (norm0 = 3451, norm1 = 4396, norm01 = 1797) #> iinla: Step rescaling: 38.2%, Contract (norm0 = 1139, norm1 = 2144, norm01 = 1797) #> iinla: Step rescaling: 15.62%, Approx Optimisation (norm0 = 250.3, norm1 = 1623, norm01 = 1797) #> iinla: |lin1-lin0| = 1797 #>        <eta-lin1,delta>/|delta| = -1614 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 171.2 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 1280% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208448127ac4\": #> No such file or directory #> iinla: Step rescaling: 61.8%, Contract (norm0 = 1052, norm1 = 1897, norm01 = 1779) #> iinla: Step rescaling: 30.99%, Approx Optimisation (norm0 = 427.8, norm1 = 1452, norm01 = 1779) #> iinla: |lin1-lin0| = 1779 #>        <eta-lin1,delta>/|delta| = -1430 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 248.5 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 716% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208477b748ba\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 1764, norm1 = 2480, norm01 = 1727) #> iinla: Step rescaling: 100%, Overstep (norm0 = 1013, norm1 = 1192, norm01 = 1727) #> iinla: Step rescaling: 71.07%, Approx Optimisation (norm0 = 829.9, norm1 = 1031, norm01 = 1727) #> iinla: |lin1-lin0| = 1727 #>        <eta-lin1,delta>/|delta| = -971.4 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 344.2 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 377% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846e99ef92\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 2152, norm1 = 561.8, norm01 = 1609) #> iinla: Step rescaling: 100%, Overstep (norm0 = 1438, norm1 = 185.4, norm01 = 1609) #> iinla: Step rescaling: 113.1%, Approx Optimisation (norm0 = 1600, norm1 = 85.11, norm01 = 1609) #> iinla: |lin1-lin0| = 1609 #>        <eta-lin1,delta>/|delta| = -11.08 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 84.38 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 426% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208438e8bb22\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 1247, norm1 = 450.4, norm01 = 797.4) #> iinla: Step rescaling: 100%, Overstep (norm0 = 780.8, norm1 = 18.52, norm01 = 797.4) #> iinla: Step rescaling: 102.2%, Approx Optimisation (norm0 = 797.3, norm1 = 8.522, norm01 = 797.4) #> iinla: |lin1-lin0| = 797.4 #>        <eta-lin1,delta>/|delta| = -0.181 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 8.52 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 370% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846736bf6\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 969.4, norm1 = 368.5, norm01 = 600.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 599.8, norm1 = 1.201, norm01 = 600.9) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 600.9, norm1 = 0.4557, norm01 = 600.9) #> iinla: |lin1-lin0| = 600.9 #>        <eta-lin1,delta>/|delta| = -3.027e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.4557 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 265% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084632244c8\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 860.3, norm1 = 328.3, norm01 = 532) #> iinla: Step rescaling: 100%, Overstep (norm0 = 531.8, norm1 = 0.325, norm01 = 532) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 532, norm1 = 0.273, norm01 = 532) #> iinla: |lin1-lin0| = 532 #>        <eta-lin1,delta>/|delta| = 0.003513 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.2729 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 235% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084287272b7\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 792.6, norm1 = 301.8, norm01 = 490.8) #> iinla: Step rescaling: 100%, Overstep (norm0 = 490.2, norm1 = 0.7691, norm01 = 490.8) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 490.8, norm1 = 0.4791, norm01 = 490.8) #> iinla: |lin1-lin0| = 490.8 #>        <eta-lin1,delta>/|delta| = -0.007576 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.479 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 218% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844777b0cd\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 737.5, norm1 = 280.3, norm01 = 457.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 456.3, norm1 = 1.06, norm01 = 457.2) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 457.2, norm1 = 0.6571, norm01 = 457.2) #> iinla: |lin1-lin0| = 457.2 #>        <eta-lin1,delta>/|delta| = -0.001746 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.6571 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 205% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208437e1e0aa\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 688.6, norm1 = 261.6, norm01 = 427.1) #> iinla: Step rescaling: 100%, Overstep (norm0 = 426.2, norm1 = 1.154, norm01 = 427.1) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 427.1, norm1 = 0.7186, norm01 = 427.1) #> iinla: |lin1-lin0| = 427.1 #>        <eta-lin1,delta>/|delta| = 0.0007222 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.7186 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 192% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 20 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846f12ace0\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 644.4, norm1 = 244.7, norm01 = 399.7) #> iinla: Step rescaling: 100%, Overstep (norm0 = 398.8, norm1 = 1.142, norm01 = 399.7) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 399.7, norm1 = 0.7145, norm01 = 399.7) #> iinla: |lin1-lin0| = 399.7 #>        <eta-lin1,delta>/|delta| = 0.001507 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.7145 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 181% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 21 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208477e12561\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 604.3, norm1 = 229.5, norm01 = 374.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 374, norm1 = 1.08, norm01 = 374.9) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 374.9, norm1 = 0.6782, norm01 = 374.9) #> iinla: |lin1-lin0| = 374.9 #>        <eta-lin1,delta>/|delta| = 0.001478 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.6782 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 171% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 22 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208444c8dcf9\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 567.6, norm1 = 215.6, norm01 = 352.1) #> iinla: Step rescaling: 100%, Overstep (norm0 = 351.3, norm1 = 0.9984, norm01 = 352.1) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 352.1, norm1 = 0.6288, norm01 = 352.1) #> iinla: |lin1-lin0| = 352.1 #>        <eta-lin1,delta>/|delta| = 0.001103 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.6288 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 161% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 23 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208436df9fc1\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 534, norm1 = 202.8, norm01 = 331.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 330.5, norm1 = 0.9116, norm01 = 331.2) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 331.2, norm1 = 0.5758, norm01 = 331.2) #> iinla: |lin1-lin0| = 331.2 #>        <eta-lin1,delta>/|delta| = 0.0006013 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.5758 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 152% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 24 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208446064269\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 503, norm1 = 191.1, norm01 = 311.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 311.3, norm1 = 0.8273, norm01 = 311.9) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 311.9, norm1 = 0.5239, norm01 = 311.9) #> iinla: |lin1-lin0| = 311.9 #>        <eta-lin1,delta>/|delta| = 8.206e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.5239 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 144% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 25 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847b76171d\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 474.4, norm1 = 180.3, norm01 = 294.1) #> iinla: Step rescaling: 100%, Overstep (norm0 = 293.5, norm1 = 0.7485, norm01 = 294.1) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 294.1, norm1 = 0.4751, norm01 = 294.1) #> iinla: |lin1-lin0| = 294.1 #>        <eta-lin1,delta>/|delta| = -0.0004054 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.4751 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 136% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 26 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084246e1e8b\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 447.9, norm1 = 170.2, norm01 = 277.6) #> iinla: Step rescaling: 100%, Overstep (norm0 = 277.1, norm1 = 0.6765, norm01 = 277.6) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 277.6, norm1 = 0.4304, norm01 = 277.6) #> iinla: |lin1-lin0| = 277.6 #>        <eta-lin1,delta>/|delta| = -0.0008408 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.4304 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 129% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 27 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084c357983\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 423.2, norm1 = 160.9, norm01 = 262.3) #> iinla: Step rescaling: 100%, Overstep (norm0 = 261.9, norm1 = 0.6113, norm01 = 262.3) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 262.3, norm1 = 0.3897, norm01 = 262.3) #> iinla: |lin1-lin0| = 262.3 #>        <eta-lin1,delta>/|delta| = -0.001219 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.3897 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 122% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 28 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845a7f85d9\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 400.3, norm1 = 152.2, norm01 = 248.1) #> iinla: Step rescaling: 100%, Overstep (norm0 = 247.7, norm1 = 0.5527, norm01 = 248.1) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 248.1, norm1 = 0.353, norm01 = 248.1) #> iinla: |lin1-lin0| = 248.1 #>        <eta-lin1,delta>/|delta| = -0.00154 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.353 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 116% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 29 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847e7cd553\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 379, norm1 = 144.1, norm01 = 234.8) #> iinla: Step rescaling: 100%, Overstep (norm0 = 234.4, norm1 = 0.5, norm01 = 234.8) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 234.8, norm1 = 0.32, norm01 = 234.8) #> iinla: |lin1-lin0| = 234.8 #>        <eta-lin1,delta>/|delta| = -0.00181 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.3199 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 110% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 30 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846baf8788\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 359, norm1 = 136.6, norm01 = 222.5) #> iinla: Step rescaling: 100%, Overstep (norm0 = 222.1, norm1 = 0.4524, norm01 = 222.5) #> iinla: Step rescaling: 100.2%, Approx Optimisation (norm0 = 222.5, norm1 = 0.29, norm01 = 222.5) #> iinla: |lin1-lin0| = 222.5 #>        <eta-lin1,delta>/|delta| = -0.002036 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.29 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 105% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 31 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084424bb974\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 340.3, norm1 = 129.5, norm01 = 210.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 210.5, norm1 = 0.4102, norm01 = 210.9) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 210.9, norm1 = 0.2634, norm01 = 210.9) #> iinla: |lin1-lin0| = 210.9 #>        <eta-lin1,delta>/|delta| = -0.002215 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.2634 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 99.8% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 32 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208458c6af4f\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 322.8, norm1 = 122.9, norm01 = 200) #> iinla: Step rescaling: 100%, Overstep (norm0 = 199.7, norm1 = 0.372, norm01 = 200) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 200, norm1 = 0.2393, norm01 = 200) #> iinla: |lin1-lin0| = 200 #>        <eta-lin1,delta>/|delta| = -0.00236 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.2393 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 94.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 33 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208459e56c2e\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 306.4, norm1 = 116.6, norm01 = 189.8) #> iinla: Step rescaling: 100%, Overstep (norm0 = 189.5, norm1 = 0.3377, norm01 = 189.8) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 189.8, norm1 = 0.2176, norm01 = 189.8) #> iinla: |lin1-lin0| = 189.8 #>        <eta-lin1,delta>/|delta| = -0.002475 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.2176 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 90.3% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 34 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208467d58b5\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 291, norm1 = 110.8, norm01 = 180.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 180, norm1 = 0.3067, norm01 = 180.2) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 180.2, norm1 = 0.1979, norm01 = 180.2) #> iinla: |lin1-lin0| = 180.2 #>        <eta-lin1,delta>/|delta| = -0.002563 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1979 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 86% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 35 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846ca0bc54\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 276.4, norm1 = 105.2, norm01 = 171.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 171, norm1 = 0.2788, norm01 = 171.2) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 171.2, norm1 = 0.1802, norm01 = 171.2) #> iinla: |lin1-lin0| = 171.2 #>        <eta-lin1,delta>/|delta| = -0.002628 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1802 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 82% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 36 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084752cd249\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 262.8, norm1 = 100.1, norm01 = 162.7) #> iinla: Step rescaling: 100%, Overstep (norm0 = 162.5, norm1 = 0.2536, norm01 = 162.7) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 162.7, norm1 = 0.1641, norm01 = 162.7) #> iinla: |lin1-lin0| = 162.7 #>        <eta-lin1,delta>/|delta| = -0.002672 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1641 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 78.1% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 37 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084685ca533\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 249.9, norm1 = 95.15, norm01 = 154.7) #> iinla: Step rescaling: 100%, Overstep (norm0 = 154.5, norm1 = 0.2308, norm01 = 154.7) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 154.7, norm1 = 0.1496, norm01 = 154.7) #> iinla: |lin1-lin0| = 154.7 #>        <eta-lin1,delta>/|delta| = -0.002699 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1495 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 74.5% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 38 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844b6ae999\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 237.7, norm1 = 90.53, norm01 = 147.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 147, norm1 = 0.2101, norm01 = 147.2) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 147.2, norm1 = 0.1364, norm01 = 147.2) #> iinla: |lin1-lin0| = 147.2 #>        <eta-lin1,delta>/|delta| = -0.002712 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1364 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 71% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 39 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208466024377\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 226.2, norm1 = 86.16, norm01 = 140) #> iinla: Step rescaling: 100%, Overstep (norm0 = 139.9, norm1 = 0.1915, norm01 = 140) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 140, norm1 = 0.1244, norm01 = 140) #> iinla: |lin1-lin0| = 140 #>        <eta-lin1,delta>/|delta| = -0.002711 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1244 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 67.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 40 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208426b80dd0\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 215.3, norm1 = 82.04, norm01 = 133.3) #> iinla: Step rescaling: 100%, Overstep (norm0 = 133.2, norm1 = 0.1745, norm01 = 133.3) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 133.3, norm1 = 0.1135, norm01 = 133.3) #> iinla: |lin1-lin0| = 133.3 #>        <eta-lin1,delta>/|delta| = -0.0027 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1135 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 64.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 41 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844d85f60c\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 205, norm1 = 78.12, norm01 = 126.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 126.8, norm1 = 0.1593, norm01 = 126.9) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 126.9, norm1 = 0.1038, norm01 = 126.9) #> iinla: |lin1-lin0| = 126.9 #>        <eta-lin1,delta>/|delta| = -0.002677 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1037 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 61.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 42 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084b154f14\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 195.3, norm1 = 74.42, norm01 = 120.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 120.8, norm1 = 0.1452, norm01 = 120.9) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 120.9, norm1 = 0.09469, norm01 = 120.9) #> iinla: |lin1-lin0| = 120.9 #>        <eta-lin1,delta>/|delta| = 0.002261 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.09466 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 58.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 43 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084112a354f\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 186.1, norm1 = 70.92, norm01 = 115.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 115.1, norm1 = 0.1325, norm01 = 115.2) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 115.2, norm1 = 0.08649, norm01 = 115.2) #> iinla: |lin1-lin0| = 115.2 #>        <eta-lin1,delta>/|delta| = 0.002064 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.08646 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 56.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 44 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208428397aa6\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 177.4, norm1 = 67.6, norm01 = 109.8) #> iinla: Step rescaling: 100%, Overstep (norm0 = 109.7, norm1 = 0.1209, norm01 = 109.8) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 109.8, norm1 = 0.07903, norm01 = 109.8) #> iinla: |lin1-lin0| = 109.8 #>        <eta-lin1,delta>/|delta| = 0.001885 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.07901 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 53.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 45 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845c29a38c\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 169.1, norm1 = 64.46, norm01 = 104.6) #> iinla: Step rescaling: 100%, Overstep (norm0 = 104.6, norm1 = 0.1104, norm01 = 104.6) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 104.6, norm1 = 0.07224, norm01 = 104.6) #> iinla: |lin1-lin0| = 104.6 #>        <eta-lin1,delta>/|delta| = 0.001723 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.07222 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 51.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 46 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208460a82df7\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 161.3, norm1 = 61.47, norm01 = 99.78) #> iinla: Step rescaling: 100%, Overstep (norm0 = 99.71, norm1 = 0.1009, norm01 = 99.78) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 99.78, norm1 = 0.06606, norm01 = 99.78) #> iinla: |lin1-lin0| = 99.78 #>        <eta-lin1,delta>/|delta| = 0.001574 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.06604 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 49% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 47 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20843070edce\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 153.8, norm1 = 58.63, norm01 = 95.17) #> iinla: Step rescaling: 100%, Overstep (norm0 = 95.1, norm1 = 0.09218, norm01 = 95.17) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 95.17, norm1 = 0.06041, norm01 = 95.17) #> iinla: |lin1-lin0| = 95.17 #>        <eta-lin1,delta>/|delta| = 0.001439 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.06039 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 46.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 48 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084663c4fa\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 146.7, norm1 = 55.94, norm01 = 90.78) #> iinla: Step rescaling: 100%, Overstep (norm0 = 90.72, norm1 = 0.08424, norm01 = 90.78) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 90.79, norm1 = 0.05526, norm01 = 90.78) #> iinla: |lin1-lin0| = 90.78 #>        <eta-lin1,delta>/|delta| = 0.001316 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.05525 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 44.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 49 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846b432def\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 140, norm1 = 53.38, norm01 = 86.62) #> iinla: Step rescaling: 100%, Overstep (norm0 = 86.56, norm1 = 0.07701, norm01 = 86.62) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 86.62, norm1 = 0.05056, norm01 = 86.62) #> iinla: |lin1-lin0| = 86.62 #>        <eta-lin1,delta>/|delta| = 0.001204 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.05055 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 42.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 50 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084259cceed\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 133.6, norm1 = 50.95, norm01 = 82.66) #> iinla: Step rescaling: 100%, Overstep (norm0 = 82.61, norm1 = 0.07042, norm01 = 82.66) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 82.66, norm1 = 0.04627, norm01 = 82.66) #> iinla: |lin1-lin0| = 82.66 #>        <eta-lin1,delta>/|delta| = 0.001101 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.04626 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 40.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 51 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084d4be543\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 127.5, norm1 = 48.64, norm01 = 78.9) #> iinla: Step rescaling: 100%, Overstep (norm0 = 78.85, norm1 = 0.0644, norm01 = 78.9) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 78.9, norm1 = 0.04235, norm01 = 78.9) #> iinla: |lin1-lin0| = 78.9 #>        <eta-lin1,delta>/|delta| = 0.001007 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.04234 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 39.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 52 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208460f07ab0\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 121.8, norm1 = 46.44, norm01 = 75.32) #> iinla: Step rescaling: 100%, Overstep (norm0 = 75.28, norm1 = 0.05891, norm01 = 75.32) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 75.33, norm1 = 0.03877, norm01 = 75.32) #> iinla: |lin1-lin0| = 75.32 #>        <eta-lin1,delta>/|delta| = 0.0009218 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.03876 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 37.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 53 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841d724408\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 116.3, norm1 = 44.34, norm01 = 71.92) #> iinla: Step rescaling: 100%, Overstep (norm0 = 71.88, norm1 = 0.0539, norm01 = 71.92) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 71.92, norm1 = 0.03549, norm01 = 71.92) #> iinla: |lin1-lin0| = 71.92 #>        <eta-lin1,delta>/|delta| = 0.0008437 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.03548 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 35.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 54 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846880f2b6\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 111, norm1 = 42.35, norm01 = 68.68) #> iinla: Step rescaling: 100%, Overstep (norm0 = 68.64, norm1 = 0.04932, norm01 = 68.68) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 68.68, norm1 = 0.0325, norm01 = 68.68) #> iinla: |lin1-lin0| = 68.68 #>        <eta-lin1,delta>/|delta| = 0.0007723 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.03249 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 34.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 55 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845a451a0\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 106, norm1 = 40.45, norm01 = 65.6) #> iinla: Step rescaling: 100%, Overstep (norm0 = 65.56, norm1 = 0.04513, norm01 = 65.6) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 65.6, norm1 = 0.02976, norm01 = 65.6) #> iinla: |lin1-lin0| = 65.6 #>        <eta-lin1,delta>/|delta| = 0.000707 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.02975 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 32.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 56 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844ee72ebe\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 101.3, norm1 = 38.64, norm01 = 62.66) #> iinla: Step rescaling: 100%, Overstep (norm0 = 62.63, norm1 = 0.04131, norm01 = 62.66) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 62.66, norm1 = 0.02726, norm01 = 62.66) #> iinla: |lin1-lin0| = 62.66 #>        <eta-lin1,delta>/|delta| = 0.0006473 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.02725 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 31.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 57 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842ab3e9e6\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 96.78, norm1 = 36.92, norm01 = 59.86) #> iinla: Step rescaling: 100%, Overstep (norm0 = 59.83, norm1 = 0.03781, norm01 = 59.86) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 59.86, norm1 = 0.02497, norm01 = 59.86) #> iinla: |lin1-lin0| = 59.86 #>        <eta-lin1,delta>/|delta| = 0.0005928 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.02496 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 29.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 58 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084159eed94\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 92.48, norm1 = 35.28, norm01 = 57.2) #> iinla: Step rescaling: 100%, Overstep (norm0 = 57.17, norm1 = 0.03462, norm01 = 57.2) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 57.2, norm1 = 0.02287, norm01 = 57.2) #> iinla: |lin1-lin0| = 57.2 #>        <eta-lin1,delta>/|delta| = 0.0005429 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.02286 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 28.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 59 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084183b4537\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 88.37, norm1 = 33.72, norm01 = 54.66) #> iinla: Step rescaling: 100%, Overstep (norm0 = 54.63, norm1 = 0.0317, norm01 = 54.66) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 54.66, norm1 = 0.02095, norm01 = 54.66) #> iinla: |lin1-lin0| = 54.66 #>        <eta-lin1,delta>/|delta| = 0.0004972 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.02095 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 27.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 60 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084280924dd\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 84.46, norm1 = 32.23, norm01 = 52.23) #> iinla: Step rescaling: 100%, Overstep (norm0 = 52.21, norm1 = 0.02903, norm01 = 52.23) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 52.23, norm1 = 0.0192, norm01 = 52.23) #> iinla: |lin1-lin0| = 52.23 #>        <eta-lin1,delta>/|delta| = 0.0004554 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01919 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 26.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 61 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208453a0c03e\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 80.73, norm1 = 30.8, norm01 = 49.92) #> iinla: Step rescaling: 100%, Overstep (norm0 = 49.9, norm1 = 0.02658, norm01 = 49.92) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 49.92, norm1 = 0.01759, norm01 = 49.92) #> iinla: |lin1-lin0| = 49.92 #>        <eta-lin1,delta>/|delta| = 0.0004172 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01758 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 25% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 62 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845b510283\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 77.17, norm1 = 29.45, norm01 = 47.72) #> iinla: Step rescaling: 100%, Overstep (norm0 = 47.7, norm1 = 0.02434, norm01 = 47.72) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 47.72, norm1 = 0.01612, norm01 = 47.72) #> iinla: |lin1-lin0| = 47.72 #>        <eta-lin1,delta>/|delta| = 0.0003822 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01611 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 23.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 63 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844c9f55b1\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 73.77, norm1 = 28.15, norm01 = 45.62) #> iinla: Step rescaling: 100%, Overstep (norm0 = 45.6, norm1 = 0.0223, norm01 = 45.62) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 45.62, norm1 = 0.01477, norm01 = 45.62) #> iinla: |lin1-lin0| = 45.62 #>        <eta-lin1,delta>/|delta| = 0.0003502 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01476 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 22.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 64 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208478f3ecb8\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 70.53, norm1 = 26.92, norm01 = 43.62) #> iinla: Step rescaling: 100%, Overstep (norm0 = 43.6, norm1 = 0.02043, norm01 = 43.62) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 43.62, norm1 = 0.01353, norm01 = 43.62) #> iinla: |lin1-lin0| = 43.62 #>        <eta-lin1,delta>/|delta| = 0.0003209 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01353 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 65 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084659e599b\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 67.44, norm1 = 25.74, norm01 = 41.7) #> iinla: Step rescaling: 100%, Overstep (norm0 = 41.69, norm1 = 0.01871, norm01 = 41.7) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 41.7, norm1 = 0.0124, norm01 = 41.7) #> iinla: |lin1-lin0| = 41.7 #>        <eta-lin1,delta>/|delta| = 0.000294 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.0124 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 21% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 66 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208479fc213b\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 64.49, norm1 = 24.61, norm01 = 39.88) #> iinla: Step rescaling: 100%, Overstep (norm0 = 39.87, norm1 = 0.01714, norm01 = 39.88) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 39.88, norm1 = 0.01137, norm01 = 39.88) #> iinla: |lin1-lin0| = 39.88 #>        <eta-lin1,delta>/|delta| = 0.0002694 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01137 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 20.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 67 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208413c87e3e\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 61.68, norm1 = 23.54, norm01 = 38.14) #> iinla: Step rescaling: 100%, Overstep (norm0 = 38.12, norm1 = 0.01571, norm01 = 38.14) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 38.14, norm1 = 0.01042, norm01 = 38.14) #> iinla: |lin1-lin0| = 38.14 #>        <eta-lin1,delta>/|delta| = 0.0002469 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01042 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 19.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 68 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208451b79aa0\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 58.99, norm1 = 22.51, norm01 = 36.47) #> iinla: Step rescaling: 100%, Overstep (norm0 = 36.46, norm1 = 0.01439, norm01 = 36.47) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 36.47, norm1 = 0.009552, norm01 = 36.47) #> iinla: |lin1-lin0| = 36.47 #>        <eta-lin1,delta>/|delta| = 0.0002263 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.009549 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 18.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 69 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208447713f9a\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 56.42, norm1 = 21.53, norm01 = 34.88) #> iinla: Step rescaling: 100%, Overstep (norm0 = 34.87, norm1 = 0.01319, norm01 = 34.88) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 34.88, norm1 = 0.008755, norm01 = 34.88) #> iinla: |lin1-lin0| = 34.88 #>        <eta-lin1,delta>/|delta| = 0.0002074 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.008753 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.6% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 70 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208429fd35dc\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 53.97, norm1 = 20.6, norm01 = 33.37) #> iinla: Step rescaling: 100%, Overstep (norm0 = 33.36, norm1 = 0.01208, norm01 = 33.37) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 33.37, norm1 = 0.008026, norm01 = 33.37) #> iinla: |lin1-lin0| = 33.37 #>        <eta-lin1,delta>/|delta| = 0.0001901 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.008024 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 71 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208469567d75\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 51.62, norm1 = 19.7, norm01 = 31.92) #> iinla: Step rescaling: 100%, Overstep (norm0 = 31.91, norm1 = 0.01107, norm01 = 31.92) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 31.92, norm1 = 0.007357, norm01 = 31.92) #> iinla: |lin1-lin0| = 31.92 #>        <eta-lin1,delta>/|delta| = 0.0001742 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.007355 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 72 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842b3d54e2\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 49.38, norm1 = 18.85, norm01 = 30.53) #> iinla: Step rescaling: 100%, Overstep (norm0 = 30.53, norm1 = 0.01015, norm01 = 30.53) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 30.53, norm1 = 0.006745, norm01 = 30.53) #> iinla: |lin1-lin0| = 30.53 #>        <eta-lin1,delta>/|delta| = 0.0001597 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.006743 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 73 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847b908b4\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 47.25, norm1 = 18.04, norm01 = 29.21) #> iinla: Step rescaling: 100%, Overstep (norm0 = 29.2, norm1 = 0.0093, norm01 = 29.21) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 29.21, norm1 = 0.006183, norm01 = 29.21) #> iinla: |lin1-lin0| = 29.21 #>        <eta-lin1,delta>/|delta| = 0.0001464 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.006181 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 74 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084262dbfd\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 45.2, norm1 = 17.26, norm01 = 27.95) #> iinla: Step rescaling: 100%, Overstep (norm0 = 27.94, norm1 = 0.008523, norm01 = 27.95) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 27.95, norm1 = 0.005668, norm01 = 27.95) #> iinla: |lin1-lin0| = 27.95 #>        <eta-lin1,delta>/|delta| = 0.0001342 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.005667 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 75 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846d342c36\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 43.25, norm1 = 16.51, norm01 = 26.74) #> iinla: Step rescaling: 100%, Overstep (norm0 = 26.73, norm1 = 0.007811, norm01 = 26.74) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 26.74, norm1 = 0.005197, norm01 = 26.74) #> iinla: |lin1-lin0| = 26.74 #>        <eta-lin1,delta>/|delta| = 0.000123 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.005195 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 76 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20845fec1f2a\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 41.39, norm1 = 15.8, norm01 = 25.59) #> iinla: Step rescaling: 100%, Overstep (norm0 = 25.58, norm1 = 0.007159, norm01 = 25.59) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 25.59, norm1 = 0.004764, norm01 = 25.59) #> iinla: |lin1-lin0| = 25.59 #>        <eta-lin1,delta>/|delta| = 0.0001127 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.004763 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 77 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084283650c3\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 39.6, norm1 = 15.12, norm01 = 24.48) #> iinla: Step rescaling: 100%, Overstep (norm0 = 24.48, norm1 = 0.006562, norm01 = 24.48) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 24.48, norm1 = 0.004368, norm01 = 24.48) #> iinla: |lin1-lin0| = 24.48 #>        <eta-lin1,delta>/|delta| = 0.0001033 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.004367 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 78 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208455ac5add\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 37.9, norm1 = 14.47, norm01 = 23.43) #> iinla: Step rescaling: 100%, Overstep (norm0 = 23.42, norm1 = 0.006015, norm01 = 23.43) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 23.43, norm1 = 0.004005, norm01 = 23.43) #> iinla: |lin1-lin0| = 23.43 #>        <eta-lin1,delta>/|delta| = 9.474e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.004004 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 79 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084486553a7\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 36.27, norm1 = 13.85, norm01 = 22.42) #> iinla: Step rescaling: 100%, Overstep (norm0 = 22.42, norm1 = 0.005513, norm01 = 22.42) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 22.42, norm1 = 0.003672, norm01 = 22.42) #> iinla: |lin1-lin0| = 22.42 #>        <eta-lin1,delta>/|delta| = 8.685e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.003671 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 80 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084216cbc44\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 34.71, norm1 = 13.25, norm01 = 21.46) #> iinla: Step rescaling: 100%, Overstep (norm0 = 21.45, norm1 = 0.005053, norm01 = 21.46) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 21.46, norm1 = 0.003366, norm01 = 21.46) #> iinla: |lin1-lin0| = 21.46 #>        <eta-lin1,delta>/|delta| = 7.962e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.003365 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 81 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084236a2d70\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 33.22, norm1 = 12.68, norm01 = 20.54) #> iinla: Step rescaling: 100%, Overstep (norm0 = 20.53, norm1 = 0.004632, norm01 = 20.54) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 20.54, norm1 = 0.003086, norm01 = 20.54) #> iinla: |lin1-lin0| = 20.54 #>        <eta-lin1,delta>/|delta| = 7.299e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.003085 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.4% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 82 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084ca70081\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 31.79, norm1 = 12.14, norm01 = 19.65) #> iinla: Step rescaling: 100%, Overstep (norm0 = 19.65, norm1 = 0.004246, norm01 = 19.65) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 19.65, norm1 = 0.00283, norm01 = 19.65) #> iinla: |lin1-lin0| = 19.65 #>        <eta-lin1,delta>/|delta| = 6.691e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.002829 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.99% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 83 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084270e7482\": #> No such file or directory #> Finish model fitting  #> Start model fitting  #> Start creating grid...  #> Finished creating grid, time  10.82506 #> iinla: Evaluate component inputs #> iinla: Evaluate component linearisations #> iinla: Evaluate component simplifications #> iinla: Evaluate predictor linearisation #> iinla: Construct inla stack #> iinla: Model initialisation completed #> iinla: Iteration 1 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846a6e4fe1\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 266, norm1 = 107.5, norm01 = 164.7) #> iinla: Step rescaling: 100%, Overstep (norm0 = 163.9, norm1 = 17.4, norm01 = 164.7) #> iinla: Step rescaling: 98.84%, Approx Optimisation (norm0 = 162, norm1 = 17.29, norm01 = 164.7) #> iinla: |lin1-lin0| = 164.7 #>        <eta-lin1,delta>/|delta| = -3.589 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 16.91 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Iteration 2 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847e71f0c8\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 93.1, norm1 = 34.8, norm01 = 58.41) #> iinla: Step rescaling: 100%, Overstep (norm0 = 57.86, norm1 = 1.428, norm01 = 58.41) #> iinla: Step rescaling: 100.9%, Approx Optimisation (norm0 = 58.37, norm1 = 1.337, norm01 = 58.41) #> iinla: |lin1-lin0| = 58.41 #>        <eta-lin1,delta>/|delta| = -0.06176 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 1.335 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 39.4% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 3 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208415074311\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 64.13, norm1 = 24.25, norm01 = 39.88) #> iinla: Step rescaling: 100%, Overstep (norm0 = 39.73, norm1 = 0.2422, norm01 = 39.88) #> iinla: Step rescaling: 100.4%, Approx Optimisation (norm0 = 39.88, norm1 = 0.1891, norm01 = 39.88) #> iinla: |lin1-lin0| = 39.88 #>        <eta-lin1,delta>/|delta| = -0.001805 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.1891 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.7% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 4 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847fed6643\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 60.24, norm1 = 22.93, norm01 = 37.31) #> iinla: Step rescaling: 100%, Overstep (norm0 = 37.26, norm1 = 0.07211, norm01 = 37.31) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 37.31, norm1 = 0.05168, norm01 = 37.31) #> iinla: |lin1-lin0| = 37.31 #>        <eta-lin1,delta>/|delta| = -0.0005429 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.05168 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.9% of SD, and line search is active [stop if: <10% and line search inactive] #> iinla: Iteration 5 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208422a3cc79\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 57.57, norm1 = 21.95, norm01 = 35.62) #> iinla: Step rescaling: 100%, Overstep (norm0 = 35.59, norm1 = 0.03358, norm01 = 35.62) #> iinla: Step rescaling: 100.1%, Approx Optimisation (norm0 = 35.62, norm1 = 0.02381, norm01 = 35.62) #> iinla: |lin1-lin0| = 35.62 #>        <eta-lin1,delta>/|delta| = 0.0004827 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.0238 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 6 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20841c1c20c\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 55.13, norm1 = 21.03, norm01 = 34.09) #> iinla: Step rescaling: 100%, Overstep (norm0 = 34.08, norm1 = 0.02116, norm01 = 34.09) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 34.1, norm1 = 0.01485, norm01 = 34.09) #> iinla: |lin1-lin0| = 34.09 #>        <eta-lin1,delta>/|delta| = 0.0003125 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01485 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 17.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 7 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20843ecd5a10\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 52.82, norm1 = 20.16, norm01 = 32.66) #> iinla: Step rescaling: 100%, Overstep (norm0 = 32.65, norm1 = 0.0158, norm01 = 32.66) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 32.66, norm1 = 0.01093, norm01 = 32.66) #> iinla: |lin1-lin0| = 32.66 #>        <eta-lin1,delta>/|delta| = 0.0002382 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.01093 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 16.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 8 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846a9c3d1e\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 50.6, norm1 = 19.31, norm01 = 31.29) #> iinla: Step rescaling: 100%, Overstep (norm0 = 31.28, norm1 = 0.01289, norm01 = 31.29) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 31.29, norm1 = 0.008801, norm01 = 31.29) #> iinla: |lin1-lin0| = 31.29 #>        <eta-lin1,delta>/|delta| = 0.0001973 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.008799 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 9 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208443aadd39\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 48.46, norm1 = 18.5, norm01 = 29.96) #> iinla: Step rescaling: 100%, Overstep (norm0 = 29.96, norm1 = 0.01102, norm01 = 29.96) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 29.97, norm1 = 0.00746, norm01 = 29.96) #> iinla: |lin1-lin0| = 29.96 #>        <eta-lin1,delta>/|delta| = 0.0001705 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.007458 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 15.1% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 10 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084635b8073\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 46.41, norm1 = 17.71, norm01 = 28.69) #> iinla: Step rescaling: 100%, Overstep (norm0 = 28.68, norm1 = 0.009684, norm01 = 28.69) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 28.69, norm1 = 0.006515, norm01 = 28.69) #> iinla: |lin1-lin0| = 28.69 #>        <eta-lin1,delta>/|delta| = 0.0001508 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.006513 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 14.5% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 11 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084613df7bc\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 44.43, norm1 = 16.96, norm01 = 27.47) #> iinla: Step rescaling: 100%, Overstep (norm0 = 27.46, norm1 = 0.008646, norm01 = 27.47) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 27.47, norm1 = 0.005794, norm01 = 27.47) #> iinla: |lin1-lin0| = 27.47 #>        <eta-lin1,delta>/|delta| = 0.0001352 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.005792 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.9% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 12 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084413ba166\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 42.53, norm1 = 16.23, norm01 = 26.29) #> iinla: Step rescaling: 100%, Overstep (norm0 = 26.29, norm1 = 0.007794, norm01 = 26.29) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 26.29, norm1 = 0.005211, norm01 = 26.29) #> iinla: |lin1-lin0| = 26.29 #>        <eta-lin1,delta>/|delta| = 0.0001222 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.005209 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 13.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 13 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084450416ed\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 40.7, norm1 = 15.54, norm01 = 25.17) #> iinla: Step rescaling: 100%, Overstep (norm0 = 25.16, norm1 = 0.007068, norm01 = 25.17) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 25.17, norm1 = 0.004719, norm01 = 25.17) #> iinla: |lin1-lin0| = 25.17 #>        <eta-lin1,delta>/|delta| = 0.000111 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.004718 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.8% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 14 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20842dd8fe09\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 38.96, norm1 = 14.87, norm01 = 24.09) #> iinla: Step rescaling: 100%, Overstep (norm0 = 24.08, norm1 = 0.006435, norm01 = 24.09) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 24.09, norm1 = 0.004293, norm01 = 24.09) #> iinla: |lin1-lin0| = 24.09 #>        <eta-lin1,delta>/|delta| = 0.0001012 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.004291 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 12.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 15 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file208414fb677c\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 37.29, norm1 = 14.23, norm01 = 23.05) #> iinla: Step rescaling: 100%, Overstep (norm0 = 23.05, norm1 = 0.005873, norm01 = 23.05) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 23.05, norm1 = 0.003916, norm01 = 23.05) #> iinla: |lin1-lin0| = 23.05 #>        <eta-lin1,delta>/|delta| = 9.241e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.003915 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 16 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20847c5352bd\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 35.69, norm1 = 13.62, norm01 = 22.06) #> iinla: Step rescaling: 100%, Overstep (norm0 = 22.06, norm1 = 0.005368, norm01 = 22.06) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 22.06, norm1 = 0.003579, norm01 = 22.06) #> iinla: |lin1-lin0| = 22.06 #>        <eta-lin1,delta>/|delta| = 8.451e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.003578 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 11.2% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 17 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20844625b427\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 34.15, norm1 = 13.04, norm01 = 21.11) #> iinla: Step rescaling: 100%, Overstep (norm0 = 21.11, norm1 = 0.004912, norm01 = 21.11) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 21.11, norm1 = 0.003274, norm01 = 21.11) #> iinla: |lin1-lin0| = 21.11 #>        <eta-lin1,delta>/|delta| = 7.736e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.003273 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.7% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 18 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20846f28513a\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 32.69, norm1 = 12.48, norm01 = 20.21) #> iinla: Step rescaling: 100%, Overstep (norm0 = 20.21, norm1 = 0.004497, norm01 = 20.21) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 20.21, norm1 = 0.002998, norm01 = 20.21) #> iinla: |lin1-lin0| = 20.21 #>        <eta-lin1,delta>/|delta| = 7.085e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.002997 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 10.3% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Iteration 19 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file2084662f63c0\": #> No such file or directory #> iinla: Step rescaling: 162%, Expand (norm0 = 31.29, norm1 = 11.95, norm01 = 19.34) #> iinla: Step rescaling: 100%, Overstep (norm0 = 19.34, norm1 = 0.004119, norm01 = 19.34) #> iinla: Step rescaling: 100%, Approx Optimisation (norm0 = 19.34, norm1 = 0.002746, norm01 = 19.34) #> iinla: |lin1-lin0| = 19.34 #>        <eta-lin1,delta>/|delta| = 6.491e-05 #>        |eta-lin0 - delta <delta,eta-lin0>/<delta,delta>| = 0.002745 #> iinla: Evaluate component linearisations #> iinla: Evaluate predictor linearisation #> iinla: Max deviation from previous: 9.83% of SD, and line search is inactive [stop if: <10% and line search inactive] #> iinla: Convergence criterion met, running final INLA integration with known theta mode. #> iinla: Iteration 20 [max:100] #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpN5g3Yb/file20843476c8f5\": #> No such file or directory #> Finish model fitting"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-posteriors-with-corresponding-starting-values","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions > Analysis of M6.7 catalogue","what":"Plot posteriors with corresponding starting values","title":"Sensitivity to starting point","text":"","code":"plots <- list()  trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.quietScenario[[1]]) post.df <- post.list[[1]] post.df$id <- 1  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.quietScenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[1]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"A.  Inversion of a 1000 day catalogue with no large events, nEvents =\", length(quiet.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` trueParas <- data.frame(value = c(mu, K, alpha, c, p), param = c(\"mu\", \"K\", \"alpha\", \"c\", \"p\"))  post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[1]]) post.df <- post.list[[1]] post.df$id <- 2  for (i in 2:nRealisations) {   post.list <- get_posterior_param(input.list = list.output.M6p7Scenario[[i]])   post.df.tmp <- post.list[[1]]   post.df.tmp$id <- i    post.df <- rbind(post.df, post.df.tmp) }  plots[[2]] <- ggplot(post.df, aes(x = x, y = y, group = id, color = factor(id), lty = factor(id))) +   geom_line() +   # scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) +   facet_wrap(facets = vars(param), scales = \"free\", labeller = label_parsed, nrow = 1) +   geom_vline(aes(xintercept = value),     data = trueParas, color = \"black\", linetype = 2,     label = \"True value\"   ) +   labs(color = \"Initial ETAS Para. Set\", linetype = \"Initial ETAS Para. Set\") +   ggtitle(paste(\"B. Inversion of a 1000 day catalogue with a M6.7 on day 500, nEvents =\", length(M6p7.ETAS.cat$ts))) +   xlab(\"ETAS Posteriors\") +   theme_bw() +   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +   theme(legend.position = \"hidden\") +   theme(plot.title = element_text(size = 12)) #> Warning in geom_vline(aes(xintercept = value), data = trueParas, color = #> \"black\", : Ignoring unknown parameters: `label` plt <- grid_arrange_shared_legend(plots[[1]], plots[[2]], ncol = 1, nrow = 2, position = \"bottom\") plt #> TableGrob (2 x 1) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange   gtable[arrange] #> 2 2 (2-2,1-1) arrange gtable[guide-box] # ggsave(\"initialCondition_posteriors.png\", plt) # ggsave(\"initialCondition_posteriors.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"explore-etas-triggering-function-using-posterior-samples","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Explore ETAS triggering function using posterior samples","title":"Sensitivity to starting point","text":"","code":"plot_triggering <- list() plot_triggering[[1]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"C. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[2]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 4, n.samp = 100) +   ggtitle(\"D. M4 triggering function\") +   theme_bw() +   ylim(0, 5.5) +   theme(plot.title = element_text(size = 8))  plot_triggering[[3]] <- triggering_fun_plot(list.output.quietScenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"E. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plot_triggering[[4]] <- triggering_fun_plot(list.output.M6p7Scenario[[1]], magnitude = 6.7, n.samp = 100) +   ggtitle(\"F. M6.7 triggering function\") +   theme_bw() +   ylim(0, 1700) +   theme(plot.title = element_text(size = 8))   plt <- grid.arrange(plot_triggering[[1]], plot_triggering[[3]], plot_triggering[[2]], plot_triggering[[4]], ncol = 2, nrow = 2, top = \"Triggering function variability\") +   theme(plot.title = element_text(size = 8)) #> Warning: Removed 8 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Warning: Removed 282 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Warning: Removed 47 rows containing missing values or values outside the scale range #> (`geom_line()`). plt #> NULL # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt) plot_omori <- list() plot_omori[[1]] <- omori_plot_posterior(list.output.quietScenario[[1]], n.samp = 100) +   ggtitle(\"A. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8))   plot_omori[[2]] <- omori_plot_posterior(list.output.M6p7Scenario[[1]], n.samp = 100) +   ggtitle(\"B. Omori decay\") +   theme_bw() +   ylim(0, 1) +   theme(plot.title = element_text(size = 8)) plt <- grid.arrange(plot_omori[[1]], plot_triggering[[1]], plot_triggering[[3]], plot_omori[[2]], plot_triggering[[2]], plot_triggering[[4]], ncol = 3, nrow = 2, top = \"Triggering  function variability\", left = \"M6.7 baseline            Unseeded baseline\") #> Warning: Removed 8 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Warning: Removed 282 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Warning: Removed 47 rows containing missing values or values outside the scale range #> (`geom_line()`). plt #> TableGrob (3 x 4) \"arrange\": 8 grobs #>   z     cells    name                 grob #> 1 1 (2-2,2-2) arrange       gtable[layout] #> 2 2 (2-2,3-3) arrange       gtable[layout] #> 3 3 (2-2,4-4) arrange       gtable[layout] #> 4 4 (3-3,2-2) arrange       gtable[layout] #> 5 5 (3-3,3-3) arrange       gtable[layout] #> 6 6 (3-3,4-4) arrange       gtable[layout] #> 7 7 (1-1,2-4) arrange text[GRID.text.1279] #> 8 8 (1-3,1-1) arrange text[GRID.text.1280] # ggsave(\"trigFuncVariability_runin.png\", plt) # ggsave(\"trigFuncVariability_runin.pdf\", plt)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"plot-the-samples-from-the-joint-posteriors-as-pairs-plots","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"Plot the samples from the joint posteriors as pairs plots","title":"Sensitivity to starting point","text":"","code":"post_pairs_plot(list.output.quietScenario[[1]], n.samp = 1000)$pair.plot post_pairs_plot(list.output.M6p7Scenario[[1]], n.samp = 1000)$pair_plot #> NULL"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/sensitivityToStartingPoint.html","id":"inlabru-convergence-diagnostics","dir":"Articles","previous_headings":"Analyse the sensitivity to starting conditions","what":"inlabru convergence diagnostics","title":"Sensitivity to starting point","text":"can also assess convergence inlabru method , using bru_convergence_plot() function. can reveal starting values inlabru estimation unreasonable, better starting values nonlinear iterations might speed computations.","code":"bru_convergence_plot(list.output.quietScenario[[1]]$model.fit) bru_convergence_plot(list.output.quietScenario[[2]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[1]]$model.fit) bru_convergence_plot(list.output.M6p7Scenario[[2]]$model.fit)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"introduction-to-etas-model","dir":"Articles","previous_headings":"","what":"Introduction to ETAS model","title":"2d Temporal Model: Tutorial on real data","text":"tutorial, show use ETAS.inlabru R-package fit temporal ETAS model real earthquakes data. tutorial shows prepare data, fit model, retrieve posterior distribution parameters posterior distribution quantities interest, generate synthetic catalogues fitted model, produce forecasts seismicity. Epidemic-Type Aftershock Sequence (ETAS) model belongs family Hawkes () point processes. temporal Hawkes process point process model conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} g(t- t_h) \\] \\(\\mathcal H_t\\) history process time \\(t\\). Generally speaking \\(\\mathcal H_t\\) contains events occurred \\(t\\). quantity \\(\\mu > 0\\) usually called , interpreted rate events occur spontaneously. function \\(g(t-t_h)\\) called function (excitation function, simply kernel) measures influence event \\(t_h\\) time \\(t\\). look \\(g(t-t_h)\\) function \\(t\\) intensity point process representing offspring event \\(t_h\\). seismology offspring event called , two terms used synonyms. essence, Hawkes process model can seen superposition background process intensity \\(\\mu\\) aftershock processes generated observations \\(\\mathcal H_t\\) one intensity \\(g(t-t_h)\\). makes Hawkes process model particularly suitable describe phenomena event ability trigger additional events, phenomena characterized cascades events earthquakes, infectious diseases, wildfires, financial crisis, similar. ETAS model particular instance Hawkes process model proven particularly suitable model earthquake occurrence. Earthquakes usually described modelled marked time points marking variable magnitude event. history process composed time-magnitude pairs, namely \\(\\mathcal H_t = \\{(t_h,m_h), h = 1,...,N_h\\}\\). Various slightly different ETAS formulations exist, usually characterized slightly different triggering functions, one implemented ETAS.inlabru R-package conditional intensity given \\[ \\lambda(t | \\mathcal H_t) = \\mu + \\sum_{t_h \\\\mathcal H_t} K \\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] \\(M_0\\) cutoff magnitude \\(m_h \\geq M_0\\) \\(h\\). value decided priori based quality catalogue used. parameters model : \\(\\mu \\geq 0\\), background rate \\(K \\geq 0\\) general productivity parameter, plays role determining average number aftershocks induced event catalogue. \\(\\alpha \\geq 0\\) magnitude scaling parameter, determines number aftershocks changes based magnitude event generating aftershocks. non-negative reflect fact stronger earthquakes generate aftershocks. \\(c > 0\\) time offset parameter, smaller values associated catalogues fewer missing events. \\(p > 1\\) aftershock decay parameter, determines rate aftershock activity decreases time. greater 1 otherwise event may generate infinite number aftershocks infinite interval time thought unphysical.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"priors","dir":"Articles","previous_headings":"","what":"Priors","title":"2d Temporal Model: Tutorial on real data","text":"Bayesian analysis need decide priors parameters. approximation method use considers parameters two different scales: original ETAS scale, internal scale. internal scale used package perform calculations. internal scale parameters constraint standard normal distribution prior. need set priors parameters ETAS scale. done considering copula transformation \\(\\eta(X)\\) \\(X \\sim N(0,1)\\) , \\(\\eta(X)\\) desired distribution. ETAS.inlabru R-package provides four different functions corresponding three different distributions: gamma_t(X, , b) Gamma distribution shape parameter \\(\\) rate \\(b\\). distribution mean \\(/b\\) variance \\(/b^2\\). unit_t(X, , b) Uniform distribution \\(\\) \\(b\\). exp_t(X, r) Exponential distribution rate \\(r\\). loggaus_t(X, m ,s) Log-Gaussian distribution mean logarithm \\(m\\) standard deviation logarithm \\(s\\). code generate 1000 observations normal distribution, transform using functions provided package, shows empirical density estimated sample.  package also provide inverse functions retrieve value parameter internal scale value ETAS scale provided. example decided priors going use analysis, need store corresponding copula transformations list. list one element parameter model (\\(5\\)), element list must name corresponding parameter. names fixed mu, K, alpha, c_, p. parameter \\(c\\) referred c_ avoid clashing names R function c(). useful inverse functions also, list used set initial value parameters later. code assumes parameter \\(\\mu\\) Gamma distribution prior parameters \\(0.3\\) \\(0.6\\), parameters \\(K, \\alpha,\\) \\(c\\) Uniform prior \\((0,10)\\), parameter \\(p\\) Uniform prior \\((1,10)\\).","code":"# obtain sample from standard normal distribution X <- rnorm(1000) # apply copula transformations gamma.X <- gamma_t(X, 1, 2) unif.X <- unif_t(X, 0, 1) exp.X <- exp_t(X, 1) loggaus.X <- loggaus_t(X, 0.5, 0.5)  # build data.frame for plotting df.to.plot <- rbind(   data.frame(     value = X,     distribution = \"Std Normal\"   ),   data.frame(     value = gamma.X,     distribution = \"Gamma\"   ),   data.frame(     value = unif.X,     distribution = \"Uniform\"   ),   data.frame(     value = exp.X,     distribution = \"Exponential\"   ),   data.frame(     value = loggaus.X,     distribution = \"Log-Gaussian\"   ) ) # plot them ggplot(df.to.plot, aes(value)) +   geom_histogram() +   theme_bw() +   facet_wrap(facets = ~distribution, scales = \"free\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. inv_gamma_t(gamma_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_unif_t(unif_t(1.2, 1, 2), 1, 2) #> [1] 1.2 inv_exp_t(exp_t(1.2, 1), 1) #> [1] 1.2 inv_loggaus_t(loggaus_t(1.2, 1, 2), 1, 2) #> [1] 1.2 # set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) )  # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"laquila-seismic-sequence","dir":"Articles","previous_headings":"","what":"L’Aquila seismic sequence","title":"2d Temporal Model: Tutorial on real data","text":"Earthquake data stored -called earthquake catalogues. Many different catalogues exists region easy way decide one better. , provide subset HOmogenized instRUmental Seismic (HORUS) catalogue 1960 2020. can downloaded http://horus.bo.ingv./. See data-raw/horus.R details subset created original data set. HORUS catalogue subset can accessed directly using horus ETAS.inlabru::horus: documentation data set available via ?horus. data reports earthquake time string (time_string), longitude (lon) latitude (lat) epicentre, depth kilometres (depth), moment magnitude (M). focus L’Aquila seismic sequence sufficient retain observations specific space-time-magnitude region include sequence interest. L’Aquila sequence, retain events magnitude greater equal \\(2.5\\) happened 2009 longitude \\((10.5, 16)\\) latitude \\((40.5, 45)\\). L’Aquila sequence selected way composed 1024 events. seismic sequence can selected similarly. selection convenient transform time string Date object select rows Horus catalogue verifying conditions. data can visually represented plotting time event magnitude. shows clustering observations correspondance high magnitude events. L’Aquila seismic sequence, times versus magnitudes","code":"# load HORUS catalogue head(horus) #>           time_string     lon     lat depth    M #> 1 1960-01-03T20:19:34 15.3000 39.3000   290 6.34 #> 2 1960-01-04T09:20:00 13.1667 43.1333     0 3.94 #> 3 1960-01-06T15:17:34 12.7000 46.4833     4 4.69 #> 4 1960-01-06T15:20:53 12.7000 46.4667     0 4.14 #> 5 1960-01-06T15:31:00 12.7500 46.4333     0 3.00 #> 6 1960-01-06T15:45:00 12.7500 46.4333     0 3.00 # transform time string in Date object horus$time_date <- as.POSIXct(   horus$time_string,   format = \"%Y-%m-%dT%H:%M:%OS\" ) # There may be some incorrectly registered data-times in the original data set, # that as.POSIXct() can't convert, depending on the system. # These should ideally be corrected, but for now, we just remove the rows that # couldn't be converted. horus <- na.omit(horus)  # set up parameters for selection start.date <- as.POSIXct(\"2009-01-01T00:00:00\", format = \"%Y-%m-%dT%H:%M:%OS\") end.date <- as.POSIXct(\"2010-01-01T00:00:00\", format = \"%Y-%m-%dT%H:%M:%OS\") min.longitude <- 10.5 max.longitude <- 16 min.latitude <- 40.5 max.latitude <- 45 M0 <- 2.5  # set up conditions for selection aquila.sel <- (horus$time_date >= start.date) &   (horus$time_date < end.date) &   (horus$lon >= min.longitude) &   (horus$lon <= max.longitude) &   (horus$lat >= min.latitude) &   (horus$lat <= max.latitude) &   (horus$M >= M0)  # select aquila <- horus[aquila.sel, ] ggplot(aquila, aes(time_date, M)) +   geom_point() +   theme_bw()"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"data-preparation-to-model-fitting","dir":"Articles","previous_headings":"","what":"Data preparation to model fitting","title":"2d Temporal Model: Tutorial on real data","text":"need prepare data.frame used input data fit ETAS model. data.frame must three columns: ts time difference starting date occurrence time events (measured days example), magnitudes magnitude events, idx.p index column different value event. names fixed changed , need set initial values parameters list containing inlabru options used. initial values stored list elements th.mu, th.K, th.alpha, th.c, th.p corresponds ETAS parameters. initial values must provided internal scale therefore useful retrieve using inverse copula transformations set . way, can find values parameters internal scale given value parameters ETAS scale. example uses \\(\\mu = 0.5, K = 0.1, \\alpha = 1, c = 0.1,\\) \\(p = 1.1\\) initial values. crucial set initial values cause numerical problems, general achieved setting initial values zero. values provided worked well various examples. Lastly, need set list inlabru options. main elements list : bru_verbose: number indicating type diagnostic output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Note: option list, one can also set number threads allowed INLA , e.g. num.threads = 8. override global option set beginning tutorial. code likely run many different systems, using global setting easier manage.","code":"# set up data.frame for model fitting aquila.bru <- data.frame(   ts = as.numeric(     difftime(aquila$time_date, start.date, units = \"days\")   ),   magnitudes = aquila$M,   idx.p = 1:nrow(aquila) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init # parameters' initial values )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"2d Temporal Model: Tutorial on real data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"# set starting and time of the time interval used for model fitting. In this case, we use the interval covered by the data. T1 <- 0 T2 <- max(aquila.bru$ts) + 0.2 # Use max(..., na.rm = TRUE) if there may still be NAs here # fit the model aquila.fit <- Temporal.ETAS(   total.data = aquila.bru,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  1.832277 #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f4e6a2671\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2fc858065\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6ba6ae04\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f77df3eed\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f3018e020\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5b2bad9b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f50c39d58\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f2bc785e8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f4e40b299\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7cc548fc\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7026fa1c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7b6786be\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f1da3cfc5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7f913e51\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2fb96ed6\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f4b542d2f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f48b1e776\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f688caec0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f21489c65\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6171a32f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f4bc20a80\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f97ccf39\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7475051b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f66e23cb8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5eaa99e6\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5105f565\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f118e647f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f1dabb1a6\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f30b587ae\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f58912158\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6668bc02\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2ff5aea70\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f61204f11\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f43d41546\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6f8d621c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f2532a64f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f30ed3e8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f61d6b94d\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f3679e84d\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5aae2e79\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6b720a9\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5f7f78b5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6923f026\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f6a87046c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7e044683\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f269f4fe\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f1e9769e3\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f68d8a72b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5c07a0d2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f18ac1f08\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f5155f399\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f164beb15\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f4539d2ab\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f26a263c2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f3dc64981\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f26873d3b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2fecd140c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2ffb9e64\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f7fecb6cd\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f76a265be\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f48787ef0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f2b86b060\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f1452e39c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f65cce85e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f448eeb2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f73163544\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f779327c2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpUD9ROF/file7e2f201733d1\": #> No such file or directory"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"create-input-list","dir":"Articles","previous_headings":"","what":"Create input list","title":"2d Temporal Model: Tutorial on real data","text":"model fitted package ETAS.inlabru offers various functions visually explore output. require input list. list must different elements depending function going use. retrieve posterior parameters sample posterior parameters need two elements: model.fit: output Temporal.ETAS link.functions: list copula transformations","code":"# create input list to explore model output input_list <- list(   model.fit = aquila.fit,   link.functions = link.f )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"2d Temporal Model: Tutorial on real data","text":"function get_posterior_param can use retrieve marginal posteriors parameters ETAS scale. function returns list elements: post.df: data.frame containing posterior parameters. data.frame three columns, x value parameter, y corresponding value posterior, param indicates ETAS parameter x y referring . post.plot: ggplot object containing plot marginal posteriors parameters","code":"# get marginal posterior information post.list <- get_posterior_param(input.list = input_list)  # plot marginal posteriors post.list$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"sample-the-joint-posterior-and-make-pair-plot","dir":"Articles","previous_headings":"","what":"Sample the joint posterior and make pair plot","title":"2d Temporal Model: Tutorial on real data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used analyse correlation parameters. function post_pairs_plot generate pair plot posterior samples taken input. function 4 arguments need specified. input : post.samp: data.frame samples joint posterior distribution parameters. NULL samples generated function . input.list: input list arguments model.fit link.functions used generate posterior samples. used post.samp = NULL. Default NULL. n.samp: number posterior samples. NULL, samples post.samp used. post.samp NULL, n.samp samples generated joint posterior. post.samp n.samp NULL n.samp samples randomly (uniformly replacement) selected post.samp. Default NULL max.batch number posterior samples generated simultaneously. used post.samp NULL. Default NULL function returns list two elements: post.samp posterior samples, pair.plot ggplot object containing pair plot.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = num.cores ) #> Warning: The `ncore` argument of `post_sampling()` is deprecated as of ETAS.inlabru #> 1.1.1.9001. #> ℹ Please use future::plan(future::multisession, workers = ncore) in your code #>   instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. head(post.samp) #>          mu         K    alpha          c        p #> 1 0.2957470 0.1725664 2.413612 0.04801873 1.135410 #> 2 0.2768673 0.1154192 2.453473 0.07599220 1.164837 #> 3 0.2721680 0.1082350 2.417968 0.09120665 1.182058 #> 4 0.2731851 0.1450367 2.410762 0.06949885 1.168560 #> 5 0.2656147 0.1515042 2.418646 0.07126906 1.194648 #> 6 0.2773447 0.1045952 2.492233 0.07888236 1.182113 pair.plot <- post_pairs_plot(   post.samp = post.samp,   input.list = NULL,   n.samp = NULL,   max.batch = 1000 ) #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 pair.plot$pair.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"check-posterior-number-of-events","dir":"Articles","previous_headings":"","what":"Check posterior number of events","title":"2d Temporal Model: Tutorial on real data","text":"quantity interest posterior distribution number events. can accessed using function get_posterior_N requires input list. However, list needs additional elements respect one used now. Specifically, need add T12 extremes time interval want calculate number events, M0 cutoff magnitude, catalog.bru data.frame containing observed events. latter format total.data used Temporal.ETAS function. function returns list three elements: post.plot plot distribution, post.plot.shaded plot distribution shaded regions representing \\(95\\%\\) interval distribution, post.df data.frame used generate plots. vertical line plots represent number events catalog.bru element input list.","code":"# set additional elements of the list input_list$T12 <- c(T1, T2) input_list$M0 <- M0 input_list$catalog.bru <- aquila.bru N.post <- get_posterior_N(input.list = input_list) N.post$post.plot"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"posterior-of-the-triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Posterior of the triggering function and Omori law","title":"2d Temporal Model: Tutorial on real data","text":"functions triggering_fun_plot triggering_fun_plot_prior plot, respectively, quantiles posterior prior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_fun_plot_prior value parameters sampled according prior distribution rather posterior, therefore, need specify posterior samples data.frame.   functions omori_plot_posterior omori_plot_prior functions triggering_fun_plot triggering_fun_plot_prior considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 ) triggering_fun_plot_prior(input.list = input_list, magnitude = 4, n.samp = 1000, t.end = 10) omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5) omori_plot_prior(input.list = input_list, n.samp = 1000, t.end = 5)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"generate-synthetic-catalogues-from-model","dir":"Articles","previous_headings":"","what":"Generate synthetic catalogues from model","title":"2d Temporal Model: Tutorial on real data","text":"earthquake forecast usually composed collection synthetic catalogues model. package ETAS.inlabru provides function generate synthetic catalogues given set parameters. can used produce forecasts simply produce synthetic catalogues. function generate synthetic catalogues called generate_temporal_ETAS_synthetic takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. Regarding magnitude distribution, exponential, specificically assume \\[ m - M_0 \\sim \\text{Exp}(\\beta) \\] parameter \\(\\beta\\) usually estimated independently ETAS parameters. use maximum likelihood estimator \\(\\beta\\) given \\[ \\hat\\beta = \\frac{1}{\\bar{m} - M_0} \\] \\(\\bar m\\) mean observed magnitudes values. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. example generate 1 synthetic catalogue using parameters one posterior samples generated . catalogue covers time span L’Aquila catalogue impose greatest event sequence.  can easily generate multiple catalogues. code generates 8 catalogues using different samples posterior distribution parameters. red point indicates event imposed last panel represents observed L’Aquila sequence.","code":"# maximum likelihood estimator for beta beta.p <- 1 / (mean(aquila.bru$magnitudes) - M0) synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = post.samp[1, ], # ETAS parameters   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1, # starting time   T2 = T2, # end time   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] # known events ) # merge into unique data.frame synth.cat.df <- do.call(rbind, synth.cat.list) # order events by time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ]  ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point(size = 0.5) set.seed(2) n.cat <- 8 # generate catalogues as list of lists multi.synth.cat.list <- lapply(seq_len(n.cat), \\(x) generate_temporal_ETAS_synthetic(   theta = post.samp[x, ],   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = aquila.bru[which.max(aquila.bru$magnitudes), ] ))  # store catalogues as list of data.frames multi.synth.cat.list.df <- lapply(multi.synth.cat.list, \\(x) do.call(rbind, x)) # set catalogue identifier multi.synth.cat.list.df <- lapply(seq_len(n.cat), \\(x) cbind(multi.synth.cat.list.df[[x]],   cat.idx = x )) # merge catalogues in unique data.frame multi.synth.cat.df <- do.call(rbind, multi.synth.cat.list.df)  # we need to bing the synthetics with the observed catalogue for plotting cat.df.for.plotting <- rbind(   multi.synth.cat.df,   cbind(aquila.bru[, c(\"ts\", \"magnitudes\")],     gen = NA,     cat.idx = \"observed\"   ) )  # plot them ggplot(cat.df.for.plotting, aes(ts, magnitudes)) +   geom_point(size = 0.5) +   geom_point(     data = aquila.bru[which.max(aquila.bru$magnitudes), ],     mapping = aes(ts, magnitudes),     color = \"red\"   ) +   facet_wrap(facets = ~cat.idx)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_real.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"2d Temporal Model: Tutorial on real data","text":"earthquake forecast usually collection synthetic catalogues generated model. bayesian models can reflect uncertainty parameters values generating synthetic catalogue composing forecast using different set parameters sampled join posterior distribution. can generate forecasts using function Temporal.ETAS.forecast. function takes input post.samp: data.frame samples posterior distribution parameters format described previous sections. n.cat: number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), rows post.samp sampled uniformly replacement n.cat times. n.cat smaller nrow(post.samp), , rows post.samp sampled uniformly without replacement n.cat times. n.cat NULL equal nrow(post.samp), , post.samp used . ncore: number cores used generate synthetic catalogues parallel. remaining inputs (beta.p, M0, T1, T2, Ht) ones used generate_temporal_ETAS_synthetic. output function list two elements: fore.df n.cat. element fore.df data.frame synthetic catalogues binded together row, multi.synth.cat.df created . element n.cat just number catalogues generated. need n.cat zero-events catalogues appear fore.df, corresponding cat.idx value missing. Therefore need n.cat recover total number catalogues. code creates daily forecast 24 hours starting 1 minute event greatest magnitude sequence. starting date end date forecast expressed unit used catalogue fit model (days case). Day zero correspond start.date stated beginning document example \\(2009-01-01 00:00:00\\). forecast generated assuming known events catalogue occurred forecasting period. can easily retrieve predictive distribution number events forecasting period looking frequencies catalogue identifiers appears fore.df element. Indeed, number rows fore.df cat.idx value represents number events synthetic catalogue. , frequency catalogue identifier appears fore.df$cat.idx correspond number events catalogue. allows easily retrieve predictive distribution number events using code . remark case can use function table find frequencies elements fore.df$cat.idx. catalogue identifier zero-events catalogues present fore.df$cat.idx. using table lead zero probability zero events day, quantity crucial intersted probability earthquake activity (probability least one event).","code":"# express 1 minute in days min.in.days <- 1 / (24 * 60) # find time of the event with the greatest magnitude t.max.mag <- aquila.bru$ts[which.max(aquila.bru$magnitudes)] # set starting time of the forecasting period T1.fore <- t.max.mag + min.in.days # set forecast length fore.length <- 1 # set end time of the forecasting period T2.fore <- T1.fore + fore.length # set known data Ht.fore <- aquila.bru[aquila.bru$ts < T1.fore, ]  # produce forecast daily.fore <- Temporal.ETAS.forecast(   post.samp = post.samp, # ETAS parameters posterior samples   n.cat = nrow(post.samp), # number of synthetic catalogues   beta.p = beta.p, # magnitude distribution parameter   M0 = M0, # cutoff magnitude   T1 = T1.fore, # forecast starting time   T2 = T2.fore, # forecast end time   Ht = Ht.fore, # known events   ncore = num.cores ) # number of cores # find number of events per catalogue N.fore <- vapply(   seq_len(daily.fore$n.cat),   \\(x) sum(daily.fore$fore.df$cat.idx == x), 0 ) # find number of observed events in the forecasting period N.obs <- sum(aquila.bru$ts >= T1.fore & aquila.bru$ts <= T2.fore) # plot the distribution ggplot() +   geom_histogram(aes(x = N.fore, y = after_stat(density)), binwidth = 1) +   geom_vline(xintercept = N.obs) +   xlim(100, 500) #> Warning: Removed 31 rows containing non-finite outside the scale range #> (`stat_bin()`). #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_bar()`)."},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2c Temporal Model: Tutorial on synthetic data","text":"tutorial shows use ETAS.inlabru package generate synthetic catalogue temporal ETAS model fit ETAS model data. also show retrieve posterior distribution parameters quantity interest. brief introduction ETAS model refer tutorial real earthquake data.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"generate-a-synthetic-catalogue","dir":"Articles","previous_headings":"","what":"Generate a synthetic catalogue","title":"2c Temporal Model: Tutorial on synthetic data","text":"function generate_temporal_ETAS_synthetic() can used generate synthetic catalogues temporal ETAS model fixed parameters spanning given interval time. generate_temporal_ETAS_synthetic() takes input theta: list ETAS parameters names mu, K, alpha, c, p, corresponding ETAS parameters. beta.p: parameter magnitude distribution M0: cutoff magnitude, generated event magnitude greater M0. T1: starting time catalogue (unit measure depends unit used fit model). T2: end time catalogue (unit measure depends unit used fit model). Ht: set known events. can also T1 T2, useful want generate catalogues imposed events. NULL events imposed. function returns list data.frame, element output list corresponds different generation. data.frame three columns: occurence time (ts), magnitude (magnitudes), generation identifier (gen). generation identifier uses following convention, \\(-1\\) indicates events Ht time T1 T2, \\(0\\) indicates first generation offspring events gen equal \\(-1\\), \\(1\\) indicates background events, \\(2\\) offspring events gen equal \\(0\\) \\(1\\), \\(3\\) indicates offspring events gen equal \\(2\\), \\(4\\) indicates offspring events gen equal \\(3\\), . obtain unique data.frame containing simulated events sufficient bind rows generations. code generates synthetic catalogue events magnitude greater \\(2.5\\) according temporal ETAS model parameters equal vector true.param. value parameters equal posterior mean parameters obtained fitting model L’Aquila seismic sequence done tutorial real data. Also parameter \\(\\beta\\) magnitude distribution comes example. output function list data.frames convenient transform single data.frame binding rows data.frames list. synthetic catalogue composed total \\(288\\) events \\(112\\) background events \\(176\\) aftershocks. can easily retrieve numbers looking gen column data. code plot occurrence time events magnitude color indicating generation event time evolution cumulative number events. multiplot function provided inlabru R-package can used combine plots.","code":"set.seed(111) # set true ETAS parameters true.param <- list(mu = 0.30106014, K = 0.13611399, alpha = 2.43945301, c = 0.07098607, p = 1.17838741) # set magnitude distribution parameter beta.p <- 2.353157 # set cutoff magnitude M0 <- 2.5 # set starting time of the synthetic catalogue T1 <- 0 # set end time of the synthetic catalogue T2 <- 365 # generate the catalogue - it returns a list of data.frames synth.cat.list <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = NULL ) synth.cat.df <- do.call(rbind, synth.cat.list) head(synth.cat.df) #>           ts magnitudes gen #> 1 135.204031   2.661688   1 #> 2 187.947198   2.632073   1 #> 3 137.847074   3.073890   1 #> 4 152.693124   2.653628   1 #> 5   3.890113   2.686633   1 #> 6 194.287763   3.035756   1 c(N = nrow(synth.cat.df), N.bkg = sum(synth.cat.df$gen == 1), N.after = sum(synth.cat.df$gen > 1)) #>       N   N.bkg N.after  #>     283     112     171 pl1 <- ggplot(synth.cat.df, aes(ts, magnitudes, color = as.factor(gen))) +   geom_point() +   labs(color = \"gen\")  t.breaks <- T1:T2 N.cumsum <- vapply(t.breaks, \\(x) sum(synth.cat.df$ts < x), 0) df.to.cumsum.plot <- data.frame(ts = t.breaks, N.cum = N.cumsum) pl2 <- ggplot(df.to.cumsum.plot, aes(ts, N.cum)) +   geom_line() +   ylab(\"cumulative number of events\")  inlabru::multiplot(pl1, pl2, cols = 2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"prepare-data-for-model-fitting","dir":"Articles","previous_headings":"","what":"Prepare data for model fitting","title":"2c Temporal Model: Tutorial on synthetic data","text":"order fit model synthetic catalogue need set parameters priors set initial value parameters set inlabru options prepare data model fitting set priors need create list copula transformation (simply link) functions. method works internal representation parameters parameter Gaussian distribution. need function transform parameters original ETAS scale set prior . ETAS.inlabru package offers four different functions corresponding four different prior distributions. functions gamma_t, unif_t, exp_t, loggaus_t corresponds Gamma distribution, Uniform distribution, Exponential distribution Log-Gaussian distribution. also provide inverse functions retrieve value parameters internal scale given value ETAS scale. inv_gamma_t, inv_unif_t, exp_t, inv_loggaus_t. example going consider following priors parameters \\[\\begin{align*} \\mu & \\sim \\Gamma(0.3, 0.6) \\\\ K & \\sim \\text{Unif}(0,10) \\\\ \\alpha & \\sim \\text{Unif}(0,10) \\\\ c & \\sim \\text{Unif}(0,10) \\\\ p & \\sim \\text{Unif}(1,10) \\end{align*}\\] list link functions corresponding priors initial value parameters inlabru algorithm must specified internal scale parameters. reason, useful create list inverse link functions can specify initial value parameters ETAS scale easily retrieve corresponding value parameters internal scale. can done shown initial value parameters specified list names th.mu, th.K, th.alpha, th.c, th.p, , example, th.mu corresponds initial value parameter \\(\\mu\\) internal scale. initial value parameters important ensure algorithm able converge. Indeed, start algorithm values parameters causing numerical problems, may prevent algorithm converge. experience, setting initial values parameter (e.g. \\(< 10^{-5}\\)) (e.g. \\(> 10^2\\)) safe choice. code uses following initial values parameters \\(\\mu_{\\text{init}} = 0.5, K_{\\text{init}} = 0.1, \\alpha_{\\text{init}} = 1, c_{\\text{init}} = 0.1, p_{\\text{init}} = 1.1\\) Also inlabru options provided list, main elements list : bru_verbose: number indicating type visual output. Set 0 output. bru_max_iter: maximum number iterations. set max_step inlabru algorithm stops stopping criterion met. However, setting max_step values smaller 1 forces algorithm run exactly bru_max_iter iterations. bru_method: relevant , thing may need set max_step argument. algorithm converge without fixing max_step suggest try fix value 1, experience \\(0.5\\) \\(0.2\\) works well. example line setting bru_method commented. bru_initial: list initial values created . Lastly, need prepare data model fitting. data must provided data.frame least 3 columns names ts corresponding occurrence time events, magnitudes corresponding magnitude, idx.p event identifier. events data.frame must sorted respect occurrence time. synthetic catalogue generated beginning already columns ts magnitudes, sorted generation time. code sort rows data.frame adds event identifier","code":"# set copula transformations list link.f <- list(   mu = \\(x) gamma_t(x, 0.3, 0.6),   K = \\(x) unif_t(x, 0, 10),   alpha = \\(x) unif_t(x, 0, 10),   c_ = \\(x) unif_t(x, 0, 10),   p = \\(x) unif_t(x, 1, 10) ) # set inverse copula transformations list inv.link.f <- list(   mu = \\(x) inv_gamma_t(x, 0.3, 0.6),   K = \\(x) inv_unif_t(x, 0, 10),   alpha = \\(x) inv_unif_t(x, 0, 10),   c_ = \\(x) inv_unif_t(x, 0, 10),   p = \\(x) inv_unif_t(x, 1, 10) ) # set up list of initial values th.init <- list(   th.mu = inv.link.f$mu(0.5),   th.K = inv.link.f$K(0.1),   th.alpha = inv.link.f$alpha(1),   th.c = inv.link.f$c_(0.1),   th.p = inv.link.f$p(1.1) ) # set up list of bru options bru.opt.list <- list(   bru_verbose = 3, # type of visual output   bru_max_iter = 70, # maximum number of iterations   # bru_method = list(max_step = 0.5),   bru_initial = th.init ) # parameters initial values # sort catalogue by occurrence time synth.cat.df <- synth.cat.df[order(synth.cat.df$ts), ] # add event identifier synth.cat.df$idx.p <- seq_len(nrow(synth.cat.df))"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"2c Temporal Model: Tutorial on synthetic data","text":"function Temporal.ETAS fit ETAS model returns bru object output. required inputs : total.data: data.frame containing observed events. format described previous Section. M0: cutoff magnitude. events total.data must magnitude greater equal number. T1: starting time time interval want fit model. T2: end time time interval want fit model. link.functions: list copula transformation functions format described previous sections. coef.t., delta.t., N.max.: parameters temporal binning. binning strategy described Appendix B paper Approximation Bayesian Hawkes process inlabru. parameters corresponds coef.t.\\(=\\delta\\), delta.t.\\(=\\Delta\\), N.max.\\(=n_{\\max}\\). bru.opt: list inlabru options described previous Section.","code":"synth.fit <- Temporal.ETAS(   total.data = synth.cat.df,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  0.421891 #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d2399b7c0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d668fd107\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d10c8504c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d7007353e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d6b3d8617\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d16683472\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d7b48f768\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d4b3213b5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d7755b160\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3d68a87b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3935db42\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d610821b2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d47143b57\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66dc9b7da0\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3f853df7\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d1ef1e98d\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d28ea47a5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d54532d04\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d743554d1\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3d6f3932\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d222bb2a4\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d41b12a39\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d19d2e812\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d196c3363\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d7e40d87f\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d4a0083ef\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d42d4851e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d39765684\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d4b78f6\": #> No such file or directory"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"check-marginal-posterior-distributions","dir":"Articles","previous_headings":"","what":"Check marginal posterior distributions","title":"2c Temporal Model: Tutorial on synthetic data","text":"order retrieve marginal posterior distributions parameter need provide list containing two elements: model.fit bru object containing fitted model, link.functions list link functions created . list created, function get_posterior_param returns marginal posterior distribution parameters ETAS scale. function returns list two elements: post.df data.frame three columns, x indicating value parameter, y indicating corresponding value marginal posterior distribution, param parameter identifier. output list also contains post.plot ggplot object containing plot marginal posterior distributions parameter. code retrieve marginal posterior distribution parameters plot along true value parameters represented vertical dashed lines.","code":"# create input list to explore model output input_list <- list(   model.fit = synth.fit,   link.functions = link.f ) # retrieve marginal posterior distributions post.list <- get_posterior_param(input.list = input_list)  # create data.frame of true value of parameters df.true.param <- data.frame(   x = unlist(true.param),   param = names(true.param) ) # add to the marginal posterior distribution of the parameters the true value of the parameters. post.list$post.plot +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"sampling-the-joint-posterior-distribution","dir":"Articles","previous_headings":"","what":"Sampling the joint posterior distribution","title":"2c Temporal Model: Tutorial on synthetic data","text":"function post_sampling generate samples joint posterior ETAS parameters. function takes input: input.list: list model.fit element link.functions elements described . n.samp: number posterior samples. max.batch: number posterior samples generated simultaneously. n.samp\\(>\\)max.batch, , samples generated parallel batches maximum size equal max.batch. Default \\(1000\\). ncore: number cores used parallel n.samp\\(>\\)max.batch. function returns data.frame columns corresponding ETAS parameters posterior samples can used estimate posterior distribution functions parameters.","code":"post.samp <- post_sampling(   input.list = input_list,   n.samp = 1000,   max.batch = 1000,   ncore = 1 ) #> Warning: The `ncore` argument of `post_sampling()` is deprecated as of ETAS.inlabru #> 1.1.1.9001. #> ℹ Please use future::plan(future::multisession, workers = ncore) in your code #>   instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. head(post.samp) #>          mu          K    alpha          c        p #> 1 0.2976822 0.12585754 2.493254 0.11125910 1.301873 #> 2 0.3169681 0.09364464 2.632223 0.06297592 1.201218 #> 3 0.3113409 0.09224866 2.580361 0.13218344 1.319184 #> 4 0.3157624 0.06983031 2.669594 0.09173271 1.266550 #> 5 0.2987647 0.06630971 2.597196 0.12698457 1.317309 #> 6 0.3375470 0.08756217 2.567756 0.07753307 1.188145"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"triggering-function-and-omori-law","dir":"Articles","previous_headings":"","what":"Triggering function and Omori law","title":"2c Temporal Model: Tutorial on synthetic data","text":"Interesting functions parameters triggering function Omori law. can estimate posterior distribution functions using samples joint posterior distribution parameters obtained previous section. functions triggering_fun_plot provides plot quantiles posterior distribution triggering function \\(g(t-t_h, mh)\\), namely, \\[ g(t - t_h, m_h) = K\\exp\\{\\alpha(m_h - M_0)\\}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} \\] function takes input input.list: input list defined functions used previously. post.samp: data.frame samples posterior distribution parameters. NULL, n.samp samples generated posterior. n.samp: number posterior samples parameters used generated. magnitude: magnitude event (\\(m_h\\)). t.end: maximum value \\(t\\) plot. n.breaks: number breaks interval \\((0, \\texttt{t.end})\\) divided. function returns ggplot object. sample parameters triggering function \\(0\\) t.end calculated. black solid lines represents \\(95\\%\\) posterior interval function, grey lines represent triggering function calculated posterior samples, horizontal red lines represent \\(95\\%\\) posterior interval background rate \\(\\mu\\). function triggering_plot_prior using parameters sampled priors parameters. code creates plot posterior triggering function adds triggering function calculated true parameter values blue. need add argument M0 input_list use function triggering_fun_plot.  functions omori_plot_posterior function triggering_fun_plot considering \\[ \\left(\\frac{t- t_h}{c} + 1\\right)^{-p} \\] instead whole triggering function without background rate.","code":"# add cutoff magnitude to input_list input_list$M0 <- M0  # generate triggering function plot trig.plot <- triggering_fun_plot(   input.list = input_list,   post.samp = post.samp,   n.samp = NULL, magnitude = 4,   t.end = 5, n.breaks = 100 )  # set times at which calculate the true triggering function t.breaks <- seq(1e-6, 5, length.out = 100) # calculate the function true.trig <- gt(unlist(true.param), t = t.breaks, th = 0, mh = 4, M0 = M0) # store in data.frame for plotting true.trig.df <- data.frame(ts = t.breaks, trig.fun = true.trig)  # add the true triggering function to the plot trig.plot +   geom_line(     data = true.trig.df,     mapping = aes(x = ts, y = trig.fun), color = \"blue\"   ) omori.plot <- omori_plot_posterior(input.list = input_list, post.samp = post.samp, n.samp = NULL, t.end = 5)  true.omori <- omori(theta = unlist(true.param), t = t.breaks, ti = 0) true.omori.df <- data.frame(ts = t.breaks, omori.fun = true.omori)  omori.plot +   geom_line(     data = true.omori.df,     mapping = aes(x = ts, y = omori.fun), color = \"blue\"   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/articles/tutorial_synth.html","id":"comparison-between-different-fitted-models","dir":"Articles","previous_headings":"","what":"Comparison between different fitted models","title":"2c Temporal Model: Tutorial on synthetic data","text":"interesting fit model multiple synthetic catalogues compare parameters posterior distributions obtained different catalogues. section, going generate second synthetic catalogue, fit model, compare posterior distributions ones obtained . second catalogue impose large event magnitude \\(6\\) happening midpoint time interval. first step set data.frame known events generate second synthetic catalogue Counting number background events aftershocks case slightly different . fact, count imposed event background event, aftershocks need include also event gen = 0 ones induced imposed event case 192. comparison number events two catalogues. Notice background events roughly expected given time interval . , just need set data.frame model fitting. inputs can use ones created first model fit. Now, extract marginal posterior distributions, need create input_list second model fit. Now, can retrieve marginal posterior distributions provided model fitted second catalogue compare ones obtained .  process shown can extended multiple (\\(>2\\)) input catalogues order study parameters identifiable. Also, using characteristics input catalogue catalogue identifier can study change posterior distribution characteristic input catalogue changes. interesting example number events catalogue, studying marginal posterior distributions change increase decrease number events.","code":"# set up data.frame of imposed events Ht.imposed <- data.frame(   ts = mean(c(T1, T2)),   magnitudes = 6 ) # generate second catalogue set.seed(1) synth.cat.list.2 <- generate_temporal_ETAS_synthetic(   theta = true.param,   beta.p = beta.p,   M0 = M0,   T1 = T1,   T2 = T2,   Ht = Ht.imposed,   ncore = 1 ) # transform it in a data.frame synth.cat.df.2 <- do.call(rbind, synth.cat.list.2) sum(synth.cat.df.2$gen == 0) #> [1] 192 rbind(   first = c(     N = nrow(synth.cat.df),     N.bkg = sum(synth.cat.df$gen == 1),     N.after = sum(synth.cat.df$gen > 1)   ),   second = c(     N = nrow(synth.cat.df.2),     N.bkg = sum(synth.cat.df.2$gen == 1 | synth.cat.df.2$gen == -1),     N.after = sum(synth.cat.df.2$gen > 1 | synth.cat.df.2$gen == 0)   ) ) #>           N N.bkg N.after #> first   283   112     171 #> second 1082   104     978 synth.cat.df.2 <- synth.cat.df.2[order(synth.cat.df.2$ts), ] synth.cat.df.2$idx.p <- seq_len(nrow(synth.cat.df.2))  synth.fit.2 <- Temporal.ETAS(   total.data = synth.cat.df.2,   M0 = M0,   T1 = T1,   T2 = T2,   link.functions = link.f,   coef.t. = 1,   delta.t. = 0.1,   N.max. = 5,   bru.opt = bru.opt.list ) #> Start creating grid...  #> Finished creating grid, time  1.61589 #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d4542f300\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3b71dd76\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d52b590eb\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d5d7be949\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d7e462b34\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d6760d7f5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d76b5d724\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d9fe9cad\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d41e22ea8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d72acf365\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3ef90ab8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d73fbf89c\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d168c0331\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d5c5511e8\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d1a82c8ce\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3b805772\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d5a65b0ac\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d73fe7a92\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d44003cd\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d74b6abc5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66dbc6ffd4\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d88889e2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d1862ad33\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3202624e\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3e44ed57\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d1716d0a5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d733c9810\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d21cc41b2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d788f966d\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d7479c594\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d6f76c5e6\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d682729bf\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3e1f6e63\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d43fbd9e6\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d60a39395\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66dabb487\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d6a046f37\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d2b7b8291\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d2cabff24\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d661738b1\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66df031204\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d61f1e3d2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d79ea95a2\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d3e126a07\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d4a3d98b\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d4ef36333\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d6ba1d539\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d291062f5\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d5dd68398\": #> No such file or directory #> Warning in normalizePath(inla.dir): path[1]=\"/tmp/RtmpdH0Ss5/filea66d255fb19d\": #> No such file or directory input_list.2 <- list(   model.fit = synth.fit.2,   link.functions = link.f ) # retrieve marginal posterior distributions post.list.2 <- get_posterior_param(input.list = input_list.2)  # set model identifier post.list$post.df$cat.used <- \"first catalogue\" post.list.2$post.df$cat.used <- \"second catalogue\"  # bind marginal posterior data.frames bind.post.df <- rbind(post.list$post.df, post.list.2$post.df)  # plot them ggplot(bind.post.df, aes(x = x, y = y, color = cat.used)) +   geom_line() +   facet_wrap(facets = ~param, scales = \"free\") +   xlab(\"param\") +   ylab(\"pdf\") +   geom_vline(     data = df.true.param,     mapping = aes(xintercept = x), linetype = 2   )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesco Serafini. Author, maintainer. Mark Naylor. Author, thesis advisor. Finn Lindgren. Author, thesis advisor.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mark Naylor, & Francesco Serafini (2023). edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes (v1.0.1).  Zenodo. https://doi.org/10.5281/zenodo.7515785 Mark Naylor, Francesco Serafini, Finn Lindgren (2023). doi:10.3389/fams.2023.1126759, https://www.frontiersin.org/articles/10.3389/fams.2023.1126759 Francesco Serafini, Finn Lindgren, Mark Naylor (2023). doi:10.1002/env.2798, https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798","code":"@Misc{,   title = {edinburgh-seismicity-hub/ETAS.inlabru: Temporal Hawkes},   author = {Mark Naylor and Francesco Serafini},   publisher = {Zenodo},   year = {2023},   number = {v1.0.1},   url = {https://doi.org/10.5281/zenodo.7515785},   doi = {10.5281/zenodo.7515785}, } @Article{,   title = {Bayesian modelling of the temporal evolution of seismicity using the ETAS.inlabru R-package},   author = {Mark Naylor and Francesco Serafini and Finn Lindgren},   journal = {Frontiers in Applied Mathematics and Statistics},   year = {2023},   doi = {10.3389/fams.2023.1126759},   url = {https://www.frontiersin.org/articles/10.3389/fams.2023.1126759}, } @Article{,   title = {Approximation of Bayesian Hawkes process with inlabru},   author = {{Serafini} and {Francesco} and {Lindgren} and {Finn} and {Naylor} and {Mark}},   journal = {Environmetrics},   year = {2023},   doi = {10.1002/env.2798},   url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/env.2798}, }"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"etasinlabru","dir":"","previous_headings":"","what":"Bayesian ETAS model for modelling seismic sequences with inlabru","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"R package implements ETAS Hawkes process modelling seismicity Online documentation: https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Dr Francesco Serafini Dr Mark Naylor , School GeoSciences, University Edinburgh Prof Finn Lindgren , School Mathematics, University Edinburgh Dr Kirsty Bayliss , Global Earthquake Model (GEM)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"study funded yhe Real-Time Earthquake Risk Reduction Resilient Europe RISE project , received funding European Union’s Horizon 2020 Research Innovation Program grant Agreement 821115. Naylor additionally funded NSFGEO-NERC grant NE/R000794/1. Bayliss funded EPSRC Studentship.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.inlabru work, need install R-INLA inlabru: inlabru (see https://inlabru-org.github.io/inlabru/): CRAN release, development version, R-INLA (see https://www.r-inla.org/download-install): can install development version ETAS.inlabru GitHub ","code":"install.packages(\"inlabru\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru\") install.packages(   \"INLA\",   repos = c(getOption(\"repos\"), INLA=\"https://inla.r-inla-download.org/R/testing\"),   dep = TRUE ) # install.packages(\"remotes\") remotes::install_github(\"edinburgh-seismicity-hub/ETAS.inlabru\")"},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"file-structure-in-package","dir":"","previous_headings":"Terminology and planning suggestions","what":"File structure in package","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"ETAS.triggering.function.R : Contains ETAS specific model functions HawkesProcess.R : Generic Hawkes code intended integration back inlabru generateSyntheticCatalogues.R : Contains iterative Hawkes functions generating triggered events actual triggering functions reside ETAS file introduce models temporalBinning.R : Code generate time bins make integration scheme efficient plottingFunctions.R : lets put standard plotting functions setupInlabruInputs.R : Put functions generating input.list ","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Let’s specific just temporal clear function names spatial spatial-temporal later Might anything bad? tried modify just theta","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"implemented","dir":"","previous_headings":"","what":"Implemented","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Generation synthetic ETAS catalogues ETAS.inlabru demonstration notebook","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"in-development","dir":"","previous_headings":"","what":"In development","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Add inversion modelling based original code Modify implementation generic Hawkes code can go inlabru ETAS triggering function code stay package Implement time varying incompleteness model Farnaz Kamranzad","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Bayesian ETAS model for modelling seismic sequences with inlabru","text":"Implement incompleteness fix Integrate spatial modelling","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Modelling inversion ETAS model seismicity using inlabru Epidemic Type Aftershock Sequence (ETAS) model designed model earthquakes triggered previous events. statistics, referred Hawkes process. code can used generate synthetic ETAS catalogues can also include seeded events model specific sequences. also implement Bayesian inversion scheme using Integrated Nested Laplace Approximation (INLA) using inlabru. temporal model, given training catalogue times magnitudes, code returns joint posteriors ETAS parameters. future roadmap, include tools model spatial distribution spatio-temporal evolution seismic sequences.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/ETAS.inlabru-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ETAS.inlabru: Bayesian ETAS model for modelling seismic sequences with inlabru — ETAS.inlabru-package","text":"Maintainer: Francesco Serafini francesco.serafini@newcastle.ac.uk (ORCID) Authors: Mark Naylor mark.naylor@ed.ac.uk (ORCID) [thesis advisor] Finn Lindgren Finn.Lindgren@ed.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Injection Rate function calculations — IntInjectionIntensity","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Forward time integrated function exponential rate decay, inverse","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injection Rate function calculations — IntInjectionIntensity","text":"","code":"IntInjectionIntensity(a = 50, V.i = 1, tau = 10, T.i, T2)  Inv_IntInjectionIntensity(   a = 50,   V.i = 1,   tau = 10,   T.i,   number.injected.events )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injection Rate function calculations — IntInjectionIntensity","text":"Event rate per unit volume injected V.Injected volume tau Decay rate [days] T.Time injection event T2 End temporal model domain number.injected.events number expected injected events, used inverse.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/IntInjectionIntensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injection Rate function calculations — IntInjectionIntensity","text":"IntInjectionIntensity returns forward time integrated function exponential rate decay. Inv_IntInjectionIntensity returns end time corresponding given expected number injected events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrated Omori's law — Int_ETAS_time_trig_function","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"","code":"Int_ETAS_time_trig_function(theta, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) th Time past event [days] start temporal domain, vector. T2 End temporal domain, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"Value integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrated Omori's law — Int_ETAS_time_trig_function","text":"function returns integral Omori's law, namely $$\\int_{t_h}^{T_2} \\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Inverse integrated Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"","code":"Inv_Int_ETAS_time_trig_function(theta, omega, th)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p) omega Value integral inverted, vector th Time integral calculated scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Value start temporal domain used calculate integral","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Inv_Int_ETAS_time_trig_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse of integrated Omori's law — Inv_Int_ETAS_time_trig_function","text":"Considering integral Omori's law $$\\omega = \\int_{t_h}^{T_2}\\left(\\frac{t - t_h}{c} + 1\\right)^{-p} dt$$ function applied value \\(\\omega\\) returns value \\(t_h\\).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate the integral of Omori's law — It_df","title":"Function to calculate the integral of Omori's law — It_df","text":"Function calculate integral Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate the integral of Omori's law — It_df","text":"","code":"It_df(param_, time.df)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate the integral of Omori's law — It_df","text":"param_ ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. time.df output function time_grid()","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/It_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate the integral of Omori's law — It_df","text":"vector integral values bin provided time.df","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"Fits remporal ETAS model returns results. function decomposes input.list `Hawkes.bru2`` function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"","code":"Temporal.ETAS.fit(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"input.list input data parameters passed inlabru via structured list. output function create_input_list_temporal_withCatalogue create_input_list_temporal_noCatalogue","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the remporal ETAS model and returns the results. This function decomposes the input.list for the `Hawkes.bru2`` function. — Temporal.ETAS.fit","text":"fitted model bru object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Temporal.ETAS.forecast","title":"Title — Temporal.ETAS.forecast","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Temporal.ETAS.forecast","text":"","code":"Temporal.ETAS.forecast(post.samp, n.cat, beta.p, M0, T1, T2, Ht, ncore = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Temporal.ETAS.forecast","text":"post.samp data.frame containing samples posterior distribution ETAS parameters. row data.frame corresponds different sample parameters order \\(\\mu\\), \\(K\\), \\(\\alpha\\), \\(c\\), \\(p\\). n.cat number synthetic catalogues composing forecast. n.cat greater nrow(post.samp), , n.cat rows sampled uniformly replacement post.samp. n.cat smaller nrow(post.samp), , n.cat rows sampled uniformly without replacement post.samp. n.cat NULL equal nrow(post.samp), post.samp used nrow(post.samp) catalogues generated. beta.p parameter magnitude distribution M0 cutoff magnitude, synthetic events magnitude greater value. T1 starting time forecast T2 end time forecast Ht set known events ncore Deprecated argument controlling parallelism. Use future::plan(future::multisession, workers = ncore) (similar) configure parallelism code instead.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Temporal.ETAS.forecast","text":"list two elements: fore.df data.frame containing synthetic catalogues composing forecast. data.frame four columns, ts occurrence time, magnitudes magnitude, gen generation event, cat.idx catalogue identifier second element output list n.cat number synthetic catalogues generated.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to fit Hawkes process model — Temporal.ETAS","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"function fit temporal ETAS model using inlabru.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"","code":"Temporal.ETAS(   total.data,   M0,   T1,   T2,   link.functions = NULL,   coef.t.,   delta.t.,   N.max.,   bru.opt )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"total.data Observed events: data.frame columns time (ts), magnitude (magnitudes), event identifier (idx.p). Column names must changed. M0 Minimum magnitude threshold, scalar T1 Start temporal model domain, scalar [measure unit sample.s$ts]. T2 End temporal model domain, scalar [measure unit sample.s$ts]. link.functions Functions transform parameters internal INLA scale ETAS scale. must list functions names (mu, K, alpha, c_, p) coef.t. TimeBinning parameter: parameter regulating relative length successive bins, scalar. delta.t. TimeBinning parameter: parameter regulating bins' width, scalar. N.max. TimeBinning parameter: parameter regulating Number bins (= N.max + 2), scalar. bru.opt Runtime options inlabru: See https://inlabru-org.github.io/inlabru/reference/bru_call_options.html, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/Temporal.ETAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to fit Hawkes process model — Temporal.ETAS","text":"fitted model 'bru' object, list","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Find breaks point for 1D grid — breaks_exp","title":"Find breaks point for 1D grid — breaks_exp","text":"breaks_exp return breaks points one dimensional grid depending three parameters, see details","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid, end.grid, coef.t = 2, delta.t, N.exp. = 10)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find breaks point for 1D grid — breaks_exp","text":"start.grid Starting point grid, scalar. end.grid End point grid, scalar. coef.t TimeBinning parameter: \\(\\delta > 0\\) determines relative length subsequent intervals, scalar. delta.t TimeBinning parameter: \\(\\Delta > 0\\) determines length intervals, scalar. N.exp. TimeBinning parameter: \\(n_{max} >0\\) determines maximum number intervals, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find breaks point for 1D grid — breaks_exp","text":"vector containing grid points","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find breaks point for 1D grid — breaks_exp","text":"grid calculated follows $$t, t + \\Delta, t + \\Delta(1 + \\delta), t + \\Delta(1 + \\delta)^2,...., T$$ \\(t\\) start.grid argument, \\(T\\) end.grid argument, \\(n_{max}\\) maximum value exponent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/breaks_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find breaks point for 1D grid — breaks_exp","text":"","code":"breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 3) #> [1]   1   2   3   5   9 100 breaks_exp(start.grid = 1, end.grid = 100, coef.t = 1, delta.t = 1, N.exp. = 10) #> [1]   1   2   3   5   9  17  33  65 100"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compute the integral of Omori's law efficiently — compute_grid","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"Function compute integral Omori's law efficiently","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"","code":"compute_grid(param., list.input_)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"param. ETAS parameters vector (\\(\\mu, K, \\alpha, c, p\\)), \\(c, p\\) used. list.input_ list containing information calculate integrals efficiently. list created inside Temporal.ETAS function Two elements used time.sel selection rows output time_grid unique t.ref_layer value, data.frame. Imapping mapper unique names provided time.sel original rows output time_grid(), vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/compute_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compute the integral of Omori's law efficiently — compute_grid","text":"vector length list.input_$Imapping integral Omori's law bin.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS conditional intensity - used by inlabru — cond_lambda","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Function calculate value ETAS model conditional intensity specified time given history process.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"","code":"cond_lambda(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"theta ETAS parameters list names mu, K, alpha, c, p t Time conditional intensity evaluated, scalar th Time events history process, vector mh Magnitudes events history process, vector M0 Minimum magnitude threshold","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"Value ETAS conditional intensity calculated t history th, mh, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/cond_lambda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS conditional intensity - used by inlabru — cond_lambda","text":"function takes single value t returns ETAS conditional intensity calculated t history th, mh. ETAS conditional intensity given $$\\lambda(t | \\mathcal H_t) = \\mu + \\sum_{h: (t_h,m_h) \\\\mathcal H_t} K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ use t vector.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"Function create default input list ETAS Hawkes temporal model catalogue specified input file","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"input_path Input file path string num.threads Optional argument number threads used parallel processing inlabru/INLA","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_noCatalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a default input list for the ETAS Hawkes temporal model where no catalogue is specified in the input file — create_input_list_temporal_noCatalogue","text":"","code":"create_input_list_temporal_noCatalogue(   system.file(\"extdata\", \"user_input_synthetic_noCatalogue.txt\", package = \"ETAS.inlabru\") ) #> $catalog #> NULL #>  #> $catalog.bru #> NULL #>  #> $time.int #> NULL #>  #> $T12 #> [1] \"T1\"  \" T2\" #>  #> $lat.int #> [1] -90  90 #>  #> $lon.int #> [1] -180  180 #>  #> $M0 #> NULL #>  #> $mu.init #> [1] 0.25 #>  #> $K.init #> [1] 0.3 #>  #> $alpha.init #> [1] 1.6 #>  #> $c.init #> [1] 0.2 #>  #> $p.init #> [1] 1.1 #>  #> $a_mu #> [1] 0.5 #>  #> $b_mu #> [1] 0.5 #>  #> $a_K #> [1] -1 #>  #> $b_K #> [1] 0.5 #>  #> $a_alpha #> [1] 0 #>  #> $b_alpha #> [1] 10 #>  #> $a_c #> [1] 0 #>  #> $b_c #> [1] 1 #>  #> $a_p #> [1] 1 #>  #> $b_p #> [1] 2 #>  #> $max_iter #> [1] 100 #>  #> $max_step #> NULL #>  #> $link.functions #> $link.functions$mu #> function (x)  #> gamma_t(x, a_mu, b_mu) #> <bytecode: 0x56417c1c2bc8> #> <environment: 0x56417c1c5418> #>  #> $link.functions$K #> function (x)  #> loggaus_t(x, a_K, b_K) #> <bytecode: 0x56417c1c28f0> #> <environment: 0x56417c1c5418> #>  #> $link.functions$alpha #> function (x)  #> unif_t(x, a_alpha, b_alpha) #> <bytecode: 0x56417c1c2618> #> <environment: 0x56417c1c5418> #>  #> $link.functions$c_ #> function (x)  #> unif_t(x, a_c, b_c) #> <bytecode: 0x56417c1c6170> #> <environment: 0x56417c1c5418> #>  #> $link.functions$p #> function (x)  #> unif_t(x, a_p, b_p) #> <bytecode: 0x56417c1c5e98> #> <environment: 0x56417c1c5418> #>  #>  #> $bru.opt.list #> $bru.opt.list$bru_verbose #> [1] 3 #>  #> $bru.opt.list$bru_max_iter #> [1] 100 #>  #> $bru.opt.list$num.threads #> NULL #>  #> $bru.opt.list$bru_initial #> $bru.opt.list$bru_initial$th.mu #> [1] -0.2978078 #>  #> $bru.opt.list$bru_initial$th.K #> [1] -0.4079456 #>  #> $bru.opt.list$bru_initial$th.alpha #> [1] -0.9944579 #>  #> $bru.opt.list$bru_initial$th.c #> [1] -0.8416212 #>  #> $bru.opt.list$bru_initial$th.p #> [1] -1.281552 #>  #>  #>  #> $coef.t #> [1] 1 #>  #> $delta.t #> [1] 0.1 #>  #> $Nmax #> [1] 8 #>  #> $n.periods #> [1] 120 #>  #> $period.length #> [1] 1 #>  #> $start.date.fore #> NULL #>  #> $magnitude.update #> [1] 5.5 #>  #> $output.name #> [1] \"report_ETAS\" #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"Function create default input file ETAS Hawkes temporal model catalogue specified input file.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"","code":"create_input_list_temporal_withCatalogue(input_path, num.threads = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"input_path path txt file containing experiment's information num.threads Optional argument number threads used parallel processing inlabru/INLA","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/create_input_list_temporal_withCatalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a default input file for the ETAS Hawkes temporal model where a catalogue is specified in the input file. — create_input_list_temporal_withCatalogue","text":"formatted input.list elements required temporal Hawkes model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"Copula transformation standard Normal distribution Exponential distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"","code":"exp_t(x, r)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"x values standard Normal distribution, vector. r rate exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to an Exponential distribution — exp_t","text":"values Exponential distribution rate r, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"Copula transformation standard Normal distribution Gamma distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"","code":"gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"x values standard Normal distribution, vector. shape parameter gamma distribution scalar. b rate parameter gamma distribution scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Gamma distribution — gamma_t","text":"values Gamma distribution shape rate b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"Generates synthetic catalogue using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"generate_temporal_ETAS_synthetic(   theta,   beta.p,   M0,   T1,   T2,   Ht = NULL,   format = \"list\",   ncore = NULL )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). M0 minimum magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. Ht catalogue history impose synthetic sequence. format \"list\", return list data.frame objects, one generation. \"df\", return data.frame list element joined single data.frame, ordered ts ncore Deprecated argument controlling parallelism. Use future::plan(future::multisession, workers = ncore) (similar) configure parallelism code instead.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"list data.frame objects temporal catalogue columns [ts, magnitudes, gen] , ts times t_i, magnitudes magnitudes M_i, gen includes information generation number, gen_i. join time-ordered data.frame,   ","code":"cata <- generate_temporal_ETAS_synthetic(...) cata <- dplyr::bind_rows(cata) cata <- dplyr::arrange(cata, ts) cata <- generate_temporal_ETAS_synthetic(..., format = \"df\")"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/generate_temporal_ETAS_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a synthetic catalogue using the ETAS model — generate_temporal_ETAS_synthetic","text":"","code":"## EXAMPLE 1: Generate a 1000 day synthetic ETAS catalogue  generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000 ) #> [[1]] #>            ts magnitudes gen #> 1  157.208442   2.649195   1 #> 2    7.399441   3.748984   1 #> 3  466.393497   2.516118   1 #> 4  497.777389   2.800636   1 #> 5  289.767245   2.689587   1 #> 6  732.881987   3.266736   1 #> 7  772.521511   4.146449   1 #> 8  874.600661   2.772782   1 #> 9  174.940627   3.068401   1 #> 10  34.241333   3.227999   1 #> 11 320.385731   2.506645   1 #> 12 402.328238   2.639286   1 #> 13 195.669835   2.510242   1 #> 14 403.538117   2.791457   1 #> 15  63.661457   2.681345   1 #> 16 388.701313   2.503456   1 #> 17 975.547835   2.608060   1 #> 18 289.892295   2.616370   1 #> 19 678.380427   2.576160   1 #> 20 735.319599   2.574818   1 #> 21 195.956733   3.066612   1 #> 22 980.539675   2.734198   1 #> 23 741.521529   3.452630   1 #> 24  51.446276   2.641759   1 #> 25 530.212464   2.666282   1 #> 26 695.823879   2.566938   1 #> 27 688.556003   2.662815   1 #> 28  31.230325   3.115491   1 #> 29 225.562535   2.511274   1 #> 30 300.830806   2.581260   1 #> 31 636.465615   3.348565   1 #> 32 479.024550   2.673570   1 #> 33 432.171258   3.167409   1 #> 34 706.433838   2.901213   1 #> 35 948.576576   2.804862   1 #> 36 180.338768   3.077273   1 #> 37 216.899876   2.777151   1 #> 38 680.162918   2.675009   1 #> 39 498.845611   2.564704   1 #> 40 641.679348   2.501354   1 #> 41 660.284349   2.631892   1 #> 42  96.024158   2.645763   1 #> 43 765.600164   3.075458   1 #> 44 769.674804   2.976917   1 #> 45 990.712312   2.706804   1 #> 46 970.520903   2.642697   1 #> 47 389.182761   3.560997   1 #> 48 461.186465   2.523174   1 #> 49 315.241752   3.477510   1 #> 50 174.675894   2.662052   1 #> 51 531.573541   3.236251   1 #> 52 493.637016   2.596888   1 #> 53 779.308626   2.530301   1 #> 54 204.178343   2.615406   1 #> 55 713.397279   2.509661   1 #> 56  65.216112   2.563310   1 #> 57 354.206799   3.819061   1 #> 58 825.199421   2.573731   1 #> 59 273.818245   2.867455   1 #> 60 570.044951   2.589030   1 #> 61 335.719081   2.578032   1 #> 62 596.262789   2.725102   1 #> 63 191.518032   2.791911   1 #> 64 947.763938   2.728282   1 #> 65 542.480409   3.091608   1 #> 66 544.603393   3.147487   1 #> 67 278.597154   3.530564   1 #> 68 446.702469   2.635485   1 #> 69 371.511184   2.588599   1 #> 70  28.060974   2.636365   1 #> 71 465.987191   2.938818   1 #> 72 390.031387   2.715292   1 #> 73  20.065218   3.219330   1 #> 74 376.970928   3.909991   1 #> 75 559.912840   2.601551   1 #> 76 857.083586   2.585534   1 #> 77 384.809711   3.073513   1 #> 78 527.917036   2.655838   1 #> 79 600.637524   4.043804   1 #> 80 261.371358   2.650655   1 #> 81 290.050162   3.011697   1 #> 82 480.075174   2.700231   1 #> 83 920.005546   2.722394   1 #> 84 400.720185   2.537208   1 #> 85 213.172711   3.227669   1 #>  #> [[2]] #>           ts magnitudes gen #> 1  114.03518   3.289379   2 #> 2  497.87280   3.053609   2 #> 3  796.78237   2.669335   2 #> 4  775.93604   2.629744   2 #> 5  801.27472   3.176701   2 #> 6   69.98832   2.690899   2 #> 7  735.94602   3.480289   2 #> 8  998.69222   2.577645   2 #> 9  461.52986   2.759421   2 #> 10 503.66966   3.367265   2 #> 11 198.67284   3.331373   2 #> 12 398.54714   3.100772   2 #> 13 390.41274   2.554559   2 #> 14 487.88047   2.508973   2 #> 15 390.73308   2.779317   2 #> 16 361.31774   2.600267   2 #> 17 601.47351   2.884927   2 #> 18 334.23155   2.514394   2 #> 19 395.08361   3.648756   2 #> 20 601.40364   2.640852   2 #>  #> [[3]] #>         ts magnitudes gen #> 1 816.5045   3.101398   3 #> 2 736.1580   2.813806   3 #> 3 519.3329   2.666780   3 #> 4 426.1174   3.565697   3 #> 5 601.8018   3.758710   3 #>  #> [[4]] #>         ts magnitudes gen #> 1 524.7377   2.868373   4 #>    ## EXAMPLE 2: To generate a 1000 day catalogue including a M6.7 event on day 500  Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) generate_temporal_ETAS_synthetic(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #> [[1]] #>    ts magnitudes gen #> 1 500        6.7  -1 #>  #> [[2]] #>               ts magnitudes gen #> 1    502.8871237   2.573326   0 #> 2    500.2884717   2.816172   0 #> 3    500.8105612   3.317809   0 #> 4    501.5233807   3.465290   0 #> 5    500.0804476   3.544813   0 #> 6    500.1179982   2.507750   0 #> 7    533.9909160   2.726603   0 #> 8    501.3217962   2.515997   0 #> 9    545.8823993   3.271727   0 #> 10   500.4854135   2.670430   0 #> 11   853.8561554   3.109276   0 #> 12   501.6511907   2.599584   0 #> 13   584.8632474   2.606521   0 #> 14   500.6775253   2.878477   0 #> 15   526.6828477   2.513589   0 #> 16   506.3517448   2.814603   0 #> 17   846.7469665   3.508826   0 #> 18   500.5830056   3.014439   0 #> 19   610.4793723   2.675073   0 #> 20   532.5002126   2.978656   0 #> 21   500.5089210   2.784882   0 #> 22   626.3648819   2.560077   0 #> 23   563.6389431   3.555764   0 #> 24   514.4311058   2.576532   0 #> 25   535.3756972   2.828383   0 #> 26   500.6385626   3.139573   0 #> 27   501.3560409   2.729248   0 #> 28   501.1968427   2.616662   0 #> 29   521.3074098   3.264308   0 #> 30   500.3735383   2.587402   0 #> 31   809.1968540   3.431973   0 #> 32   538.0855061   2.694593   0 #> 33   651.5886078   2.707032   0 #> 34   511.0028133   2.629553   0 #> 35   513.1703100   3.015928   0 #> 36   500.0073909   2.858684   0 #> 37   501.3463087   2.710287   0 #> 38   569.9001487   2.825025   0 #> 39   500.3730558   2.914808   0 #> 40   510.2810683   3.900443   0 #> 41   500.5788926   2.570269   0 #> 42   502.5479003   2.990958   0 #> 43   500.8607940   3.006049   0 #> 44   500.0000821   3.330394   0 #> 45   601.0523941   2.693245   0 #> 46   511.9136939   2.945698   0 #> 47   523.1225090   3.149942   0 #> 48   500.5946564   3.093397   0 #> 49   503.8330749   3.528709   0 #> 50   503.6681225   2.784504   0 #> 51   583.0601866   2.730025   0 #> 52   737.3798894   3.265206   0 #> 53   506.6147209   2.705965   0 #> 54   529.8755658   2.592167   0 #> 55   500.9995336   2.592377   0 #> 56   501.7648774   2.800734   0 #> 57   509.1505619   3.101951   0 #> 58   508.6262077   2.804726   0 #> 59   500.6430062   2.600125   0 #> 60   500.0686391   2.553357   0 #> 61   541.6173862   2.598122   0 #> 62   501.3222679   2.666477   0 #> 63   500.0712077   3.512731   0 #> 64   506.9059517   3.341666   0 #> 65   515.9870298   3.874940   0 #> 66   501.1145183   2.727274   0 #> 67   509.2289950   2.582466   0 #> 68   500.3548796   2.508233   0 #> 69   500.0687711   3.009709   0 #> 70   500.3282065   2.595939   0 #> 71   500.7856129   2.667710   0 #> 72   500.4627222   3.330039   0 #> 73   518.4523472   3.116131   0 #> 74   574.9764319   2.841507   0 #> 75   689.6867122   2.548858   0 #> 76   569.8379578   2.699402   0 #> 77   500.3988834   2.713597   0 #> 78   507.3945808   2.638095   0 #> 79   536.0274060   2.525939   0 #> 80   500.2056795   4.787096   0 #> 81   535.6201712   3.738302   0 #> 82   500.1716505   2.579692   0 #> 83   646.6901035   2.787079   0 #> 84   509.3466494   2.718580   0 #> 85   503.2675194   2.676054   0 #> 86   904.4523211   2.615812   0 #> 87   500.3250409   2.544987   0 #> 88   516.9439406   2.645994   0 #> 89   502.4364013   2.609539   0 #> 90   518.7122189   2.530502   0 #> 91   569.8866789   3.480263   0 #> 92   500.2182179   2.959514   0 #> 93   502.2984277   2.546646   0 #> 94   639.1299800   3.911966   0 #> 95   505.3038955   3.287804   0 #> 96   523.5042892   4.322671   0 #> 97   511.5613880   2.708002   0 #> 98   502.1437896   3.456948   0 #> 99   500.4400802   2.969771   0 #> 100  500.0434869   2.806983   0 #> 101  942.2135078   2.604725   0 #> 102  500.0335684   2.592615   0 #> 103  980.0908109   2.550411   0 #> 104  509.4244111   3.560989   0 #> 105  500.0888802   2.974878   0 #> 106  500.1102363   3.001537   0 #> 107  511.5974231   2.803665   0 #> 108  500.0749925   2.787817   0 #> 109  510.6985595   2.589161   0 #> 110  500.7846021   2.818548   0 #> 111  508.8085476   2.557929   0 #> 112  582.2763514   2.513044   0 #> 113  716.8879381   2.669726   0 #> 114  500.1039601   3.062759   0 #> 115  510.3418703   2.779684   0 #> 116  506.9423435   3.215081   0 #> 117  503.6271946   2.621406   0 #> 118  502.6426678   2.508333   0 #> 119  500.0685368   2.772782   0 #> 120  500.3939972   3.188652   0 #> 121  503.7369284   2.687962   0 #> 122  500.3474460   2.520631   0 #> 123  501.1757427   4.594553   0 #> 124  746.8173972   2.821028   0 #> 125  528.4884219   2.506032   0 #> 126  517.4376686   3.331464   0 #> 127  501.5271064   4.289851   0 #> 128  504.2675651   3.175393   0 #> 129  505.8452178   3.827298   0 #> 130  502.1362579   2.521304   0 #> 131  500.5494421   2.663032   0 #> 132  501.0324200   2.552168   0 #> 133  500.2355111   2.715112   0 #> 134  500.1031020   3.104659   0 #> 135  511.3731205   2.572307   0 #> 136  501.3343258   2.819929   0 #> 137  507.6167330   3.264379   0 #> 138  514.3749587   2.772571   0 #> 139  500.0019656   2.656023   0 #> 140  548.7601241   2.678178   0 #> 141  583.5799647   2.757715   0 #> 142  500.0055241   2.884573   0 #> 143  525.2724034   2.592752   0 #> 144  500.3718095   3.259331   0 #> 145  500.5691467   2.643282   0 #> 146  501.9076867   2.884175   0 #> 147  520.3678963   3.644675   0 #> 148  500.2714176   3.228726   0 #> 149  526.4482108   3.561440   0 #> 150  501.0132516   2.795313   0 #> 151  713.8224297   2.650721   0 #> 152  502.0497154   2.758598   0 #> 153  501.6979252   3.852943   0 #> 154  734.1554619   2.720542   0 #> 155  503.7420383   2.885814   0 #> 156  594.5811425   2.632285   0 #> 157  600.7907346   2.804969   0 #> 158  559.0695309   2.737592   0 #> 159  521.6594847   2.799735   0 #> 160  503.2836397   2.503945   0 #> 161  500.1484591   2.915726   0 #> 162  500.4898640   3.558773   0 #> 163  545.9401552   2.798600   0 #> 164  511.6911572   3.361095   0 #> 165  500.9721452   2.529124   0 #> 166  501.9952630   2.951602   0 #> 167  597.0020915   2.623603   0 #> 168  562.4472462   2.614429   0 #> 169  500.1452808   2.685454   0 #> 170  509.5881807   3.287638   0 #> 171  501.1688855   3.107629   0 #> 172  515.7388528   2.857640   0 #> 173  522.2339362   3.413685   0 #> 174  885.5591857   2.807578   0 #> 175  520.2829381   2.693877   0 #> 176  500.1435895   3.271226   0 #> 177  500.0631051   2.759558   0 #> 178  535.5981641   3.534061   0 #> 179  666.5279515   2.551001   0 #> 180  506.4273621   2.944680   0 #> 181  654.2165649   2.774121   0 #> 182  501.0421511   3.150016   0 #> 183  502.2471169   2.862244   0 #> 184  500.2770662   3.024626   0 #> 185  527.7724481   2.723029   0 #> 186  722.3627559   2.799055   0 #> 187  510.1246486   3.461186   0 #> 188  547.5370850   2.608656   0 #> 189  557.7342408   2.991947   0 #> 190  521.4362112   4.106867   0 #> 191  503.9011206   2.519879   0 #> 192  503.7846635   2.790271   0 #> 193  500.0120864   4.084815   0 #> 194  500.1839003   2.705878   0 #> 195  624.2125427   2.524838   0 #> 196  500.2731502   2.702065   0 #> 197  500.0266934   2.774271   0 #> 198  500.0029765   3.052231   0 #> 199  501.2674870   2.514741   0 #> 200  599.5162727   4.202665   0 #> 201  500.0410581   2.685728   0 #> 202  682.4839232   2.714406   0 #> 203  828.4115397   4.534723   0 #> 204  502.3704338   2.674714   0 #> 205  868.8110315   2.628199   0 #> 206  500.0269692   2.793156   0 #> 207  500.0543150   3.681990   0 #> 208  658.1432328   2.764486   0 #> 209  500.2813285   3.048798   0 #> 210  507.2726953   2.702496   0 #> 211  776.5898280   2.559902   0 #> 212  790.7806145   2.900758   0 #> 213  501.0415533   4.141531   0 #> 214  510.6443551   3.165933   0 #> 215  505.5393996   3.033330   0 #> 216  503.4013631   2.807224   0 #> 217  500.8178137   3.335078   0 #> 218  500.0009668   2.617888   0 #> 219  633.7116274   3.384678   0 #> 220  505.7033697   2.532082   0 #> 221  517.9728732   2.761936   0 #> 222  532.0377487   3.129154   0 #> 223  508.5905197   2.902252   0 #> 224  500.0083836   2.600477   0 #> 225  501.2957812   4.165256   0 #> 226  516.0875383   2.653094   0 #> 227  502.9040750   2.924160   0 #> 228  500.7972643   2.602653   0 #> 229  755.1385759   2.990286   0 #> 230  595.3983181   3.709820   0 #> 231  550.2281323   2.755000   0 #> 232  516.7499940   2.767834   0 #> 233  500.0060576   2.789493   0 #> 234  502.4448759   2.737220   0 #> 235  500.0177470   2.718955   0 #> 236  500.0233852   3.219915   0 #> 237  695.0751960   3.875842   0 #> 238  500.7420142   2.743385   0 #> 239  511.4327088   2.602266   0 #> 240  503.9046177   2.566144   0 #> 241  500.0244610   3.558057   0 #> 242  500.0225315   2.552808   0 #> 243  501.1421749   2.746168   0 #> 244  562.3076703   3.021477   0 #> 245  509.7854717   2.859434   0 #> 246  500.5423971   2.640786   0 #> 247  502.9261861   2.723205   0 #> 248  502.5056585   2.730164   0 #> 249  501.0599235   2.813680   0 #> 250  510.9337822   3.105963   0 #> 251  540.4673461   2.631805   0 #> 252  598.6051407   2.950795   0 #> 253  507.6067628   3.790643   0 #> 254  500.0553962   5.456376   0 #> 255  500.1002679   2.751895   0 #> 256  500.1387452   2.712654   0 #> 257  503.4461428   3.065502   0 #> 258  997.9474699   3.003896   0 #> 259  525.9752543   2.550444   0 #> 260  513.1400137   2.880276   0 #> 261  529.0543665   2.892188   0 #> 262  500.5370744   2.964209   0 #> 263  500.1090059   2.706260   0 #> 264  614.9188367   3.029272   0 #> 265  501.5831000   2.529309   0 #> 266  502.3797633   2.517177   0 #> 267  763.2558078   2.681316   0 #> 268  511.8773584   2.762246   0 #> 269  544.5720003   2.630994   0 #> 270  501.5311600   2.888963   0 #> 271  502.2972260   2.576643   0 #> 272  505.9265757   2.923921   0 #> 273  624.9833887   2.581887   0 #> 274  617.6154673   2.544277   0 #> 275  503.9377455   2.528271   0 #> 276  929.7425758   3.009407   0 #> 277  500.0322063   2.523959   0 #> 278  562.0191050   2.663111   0 #> 279  507.5138927   2.722737   0 #> 280  506.4427646   2.637590   0 #> 281  504.2349454   2.844249   0 #> 282  560.7565885   3.818750   0 #> 283  502.1355800   3.445796   0 #> 284  503.1031513   2.637892   0 #> 285  501.1161086   2.891276   0 #> 286  501.1407250   2.923576   0 #> 287  585.5152726   2.986028   0 #> 288  520.4927624   2.513767   0 #> 289  508.0753644   2.693576   0 #> 290  519.6382165   3.406773   0 #> 291  618.1412984   3.591824   0 #> 292  504.9994854   2.681066   0 #> 293  619.7740754   2.637417   0 #> 294  525.1116231   2.674371   0 #> 295  524.6215906   2.959245   0 #> 296  500.5057134   2.536537   0 #> 297  500.5317992   2.887315   0 #> 298  737.2298327   2.718371   0 #> 299  500.1273947   3.588914   0 #> 300  506.5431288   3.058490   0 #> 301  500.1225409   2.630183   0 #> 302  509.6794150   3.090215   0 #> 303  500.0594523   2.614634   0 #> 304  503.1323816   2.715375   0 #> 305  500.9031743   2.946391   0 #> 306  691.4427022   2.670860   0 #> 307  506.2937783   2.856533   0 #> 308  500.5238297   3.602634   0 #> 309  504.1747963   2.703578   0 #> 310  503.2757030   2.770615   0 #> 311  502.6892244   2.743838   0 #> 312  500.1100499   3.081860   0 #> 313  520.6120615   2.758511   0 #> 314  501.6780178   2.557127   0 #> 315  502.0509906   2.532341   0 #> 316  509.2343576   3.435039   0 #> 317  529.2468662   3.006249   0 #> 318  628.7667723   2.566212   0 #> 319  515.5598438   2.513653   0 #> 320  565.5115601   4.335484   0 #> 321  500.4753064   2.867764   0 #> 322  500.5533608   2.634613   0 #> 323  644.3232064   2.602127   0 #> 324  520.5657589   4.089121   0 #> 325  501.8510898   2.993113   0 #> 326  503.9441185   3.187600   0 #> 327  500.0384609   2.697810   0 #> 328  500.4972175   2.677516   0 #> 329  506.7289189   2.548582   0 #> 330  514.8536377   3.748882   0 #> 331  500.0422441   2.629484   0 #> 332  513.4169769   3.043368   0 #> 333  501.7004626   3.548058   0 #> 334  504.0854621   2.643519   0 #> 335  533.4719307   2.748563   0 #> 336  500.0045244   3.383599   0 #> 337  503.4423258   2.626276   0 #> 338  785.1615305   2.988697   0 #> 339  815.0255432   2.812847   0 #> 340  500.1194109   2.867154   0 #> 341  501.6205251   2.653145   0 #> 342  501.4972590   2.837358   0 #> 343  528.5839442   2.597586   0 #> 344  611.8456259   3.903523   0 #> 345  517.4884392   3.131671   0 #> 346  500.1107912   2.563831   0 #> 347  500.0724629   2.736744   0 #> 348  500.0147327   2.981978   0 #> 349  588.7571298   2.737546   0 #> 350  508.1550286   2.851876   0 #> 351  500.0472021   3.778947   0 #> 352  562.0292192   3.201224   0 #> 353  507.1841148   2.532565   0 #> 354  502.7426255   3.305659   0 #> 355  511.9620122   2.531900   0 #> 356  500.0196715   3.535249   0 #> 357  501.2718160   3.148622   0 #> 358  509.6237380   2.776471   0 #> 359  500.2939490   2.835883   0 #> 360  558.3385877   3.812197   0 #> 361  509.9791231   3.785570   0 #> 362  501.8769499   2.765706   0 #> 363  500.5407495   3.003586   0 #> 364  502.5638846   5.539919   0 #> 365  500.0589981   3.163198   0 #> 366  500.9899753   2.688975   0 #> 367  502.2973046   2.803556   0 #> 368  575.4185184   2.613968   0 #> 369  523.9305426   2.839860   0 #> 370  528.7583734   2.554491   0 #> 371  513.2638186   2.551542   0 #> 372  503.7591181   2.860892   0 #> 373  500.0191146   3.172306   0 #> 374  502.5688275   2.581512   0 #> 375  506.5247474   3.054204   0 #> 376  942.7575946   2.605333   0 #> 377  500.3258139   2.514784   0 #> 378  500.1079368   2.703977   0 #> 379  500.0448736   3.499973   0 #> 380  506.8263827   3.042648   0 #> 381  504.5716817   3.736747   0 #> 382  514.0278511   3.041131   0 #> 383  511.2270550   2.936226   0 #> 384  503.8631080   2.653902   0 #> 385  545.3623989   3.587424   0 #> 386  500.0300031   3.082614   0 #> 387  501.7295033   3.074048   0 #> 388  522.4644084   2.760802   0 #> 389  500.0344866   2.517703   0 #> 390  619.0207160   2.532060   0 #> 391  500.9181010   2.926712   0 #> 392  524.8221825   3.173801   0 #> 393  509.6258916   2.948421   0 #> 394  500.6133838   3.066362   0 #> 395  763.2733558   3.627895   0 #> 396  779.7299457   3.268911   0 #> 397  506.2689307   3.159445   0 #> 398  519.1252400   2.767470   0 #> 399  500.1122631   3.714790   0 #> 400  511.3073691   2.603570   0 #> 401  795.2047229   2.808057   0 #> 402  500.0063156   2.775431   0 #> 403  538.5863836   3.007202   0 #> 404  501.8514117   3.287046   0 #> 405  502.8705645   2.524439   0 #> 406  687.6298488   2.750047   0 #> 407  502.3129360   3.306016   0 #> 408  506.6536451   2.737521   0 #> 409  643.1274759   3.240388   0 #> 410  520.7250088   4.636582   0 #> 411  706.3054955   3.247045   0 #> 412  507.0324711   3.926166   0 #> 413  500.0303198   3.769138   0 #> 414  507.3212466   2.640325   0 #> 415  501.7237712   3.980958   0 #> 416  501.0927095   2.618979   0 #> 417  539.3446699   2.741836   0 #> 418  500.5442036   3.355643   0 #> 419  571.0293482   2.820660   0 #> 420  646.9984664   3.747031   0 #> 421  503.3698674   2.564344   0 #> 422  500.1156791   2.517619   0 #> 423  605.5567216   2.577734   0 #> 424  672.0442103   2.553923   0 #> 425  536.7199081   2.731102   0 #> 426  503.0393539   2.727897   0 #> 427  500.0717944   2.587595   0 #> 428  501.2233986   2.907055   0 #> 429  511.4531893   2.860572   0 #> 430  504.5013334   2.593049   0 #> 431  506.6322808   2.561388   0 #> 432  500.2530554   2.743129   0 #> 433  511.7696770   2.573803   0 #> 434  500.5443678   3.028492   0 #> 435  512.5283576   5.047500   0 #> 436  501.0150825   2.566016   0 #> 437  501.5453132   3.468891   0 #> 438  500.7760865   3.031814   0 #> 439  525.2249247   2.920456   0 #> 440  524.2898298   2.532647   0 #> 441  500.0786360   2.673345   0 #> 442  836.9203557   2.571690   0 #> 443  501.9323752   3.021253   0 #> 444  501.1428261   3.420209   0 #> 445  500.7664864   2.887111   0 #> 446  501.0818993   2.504419   0 #> 447  500.0179336   2.933308   0 #> 448  500.1643624   2.526118   0 #> 449  508.5623783   2.693738   0 #> 450  514.7247307   3.320273   0 #> 451  500.0999631   3.442284   0 #> 452  537.9299492   2.992431   0 #> 453  500.2844274   2.783959   0 #> 454  500.0666473   3.769044   0 #> 455  898.8307506   3.997660   0 #> 456  508.4609127   2.593382   0 #> 457  519.5641701   2.510952   0 #> 458  503.8753643   2.791574   0 #> 459  840.7139340   2.580702   0 #> 460  506.0770588   2.598625   0 #> 461  500.0854631   3.550699   0 #> 462  569.8846563   3.992805   0 #> 463  632.8653740   2.720369   0 #> 464  500.7015279   2.972863   0 #> 465  711.2124650   2.921750   0 #> 466  503.2184617   4.995190   0 #> 467  500.3743940   3.620261   0 #> 468  500.0085151   2.676646   0 #> 469  500.0185780   3.308725   0 #> 470  534.2727810   2.603098   0 #> 471  500.0358185   3.015791   0 #> 472  501.9693180   3.021591   0 #> 473  500.3285863   3.508634   0 #> 474  513.9437811   2.775702   0 #> 475  504.8321642   2.817612   0 #> 476  500.2828174   2.620120   0 #> 477  500.0134008   3.687161   0 #> 478  507.0635891   2.758055   0 #> 479  520.5933307   3.246237   0 #> 480  650.9768219   2.532233   0 #> 481  501.3441678   2.828339   0 #> 482  500.1335254   2.540627   0 #> 483  500.6662199   2.854793   0 #> 484  862.0909083   2.552775   0 #> 485  709.8177722   2.740374   0 #> 486  700.8339021   2.666310   0 #> 487  500.3385163   2.583341   0 #> 488  500.4292410   2.629790   0 #> 489  500.5694428   4.594511   0 #> 490  500.2079048   3.133241   0 #> 491  506.2744172   2.684259   0 #> 492  505.0493059   2.511286   0 #> 493  516.3889417   3.327421   0 #> 494  733.8988247   2.608190   0 #> 495  500.5051156   3.087689   0 #> 496  612.3858789   2.766622   0 #> 497  687.2583905   2.827922   0 #> 498  500.0186753   3.206454   0 #> 499  500.5038188   2.903275   0 #> 500  639.4661484   3.455628   0 #> 501  513.5789647   3.076721   0 #> 502  502.2028491   2.610475   0 #> 503  589.7388220   2.644522   0 #> 504  500.0064750   2.627015   0 #> 505  682.4504435   2.652701   0 #> 506  592.0188981   2.590067   0 #> 507  500.2854728   2.648256   0 #> 508  501.0335493   2.682622   0 #> 509  501.7574631   2.712191   0 #> 510  567.8032690   3.478555   0 #> 511  500.4864868   2.650337   0 #> 512  501.4218308   3.366217   0 #> 513  994.1011232   2.768059   0 #> 514  500.0332098   2.541521   0 #> 515  500.3480499   2.505563   0 #> 516  912.9266673   3.535376   0 #> 517  519.0804599   3.301745   0 #> 518  500.5899090   2.687717   0 #> 519  502.2516985   2.601320   0 #> 520  637.4731771   2.853479   0 #> 521  500.1165584   3.084022   0 #> 522  506.1434472   2.748964   0 #> 523  653.9893091   2.968167   0 #> 524  635.8085388   2.834475   0 #> 525  508.8815740   2.656091   0 #> 526  500.2088449   3.010457   0 #> 527  505.6490069   3.236773   0 #> 528  548.1212631   3.890944   0 #> 529  500.2661013   2.798337   0 #> 530  522.6719659   3.200876   0 #> 531  521.1079892   3.360416   0 #> 532  500.3064004   3.561893   0 #> 533  500.2380918   2.746573   0 #> 534  623.3517659   2.528828   0 #> 535  502.2140211   2.592843   0 #> 536  500.0579641   2.637418   0 #> 537  500.2541736   2.991381   0 #> 538  796.7532191   2.789029   0 #> 539  501.2163000   3.045630   0 #> 540  503.4985929   3.020183   0 #> 541  500.0152311   3.570790   0 #> 542  517.0488505   2.826050   0 #> 543  933.0370623   2.554040   0 #> 544  597.1091499   2.547661   0 #> 545  500.7159429   2.887768   0 #> 546  500.9022221   2.983400   0 #> 547  501.1233891   3.131922   0 #> 548  510.4937833   2.649587   0 #> 549  543.6930599   2.534890   0 #> 550  518.6232227   3.330636   0 #> 551  521.2644537   2.842497   0 #> 552  537.0359185   3.039473   0 #> 553  510.0762910   3.458763   0 #> 554  747.4347036   2.986405   0 #> 555  506.0700624   3.184286   0 #> 556  503.2785259   3.369596   0 #> 557  590.1913120   3.000191   0 #> 558  512.6494897   2.514506   0 #> 559  539.0077256   2.737565   0 #> 560  510.4544668   2.815689   0 #> 561  589.1010250   2.726359   0 #> 562  776.0660821   2.779606   0 #> 563  688.8331527   2.984847   0 #> 564  552.7032581   2.614250   0 #> 565  577.1953784   2.552284   0 #> 566  510.1596160   2.853713   0 #> 567  501.2268767   3.270129   0 #> 568  505.3973549   2.680337   0 #> 569  504.5682949   2.994784   0 #> 570  500.0284056   2.997769   0 #> 571  740.1883959   2.833022   0 #> 572  506.3286860   3.131213   0 #> 573  673.8115792   3.120443   0 #> 574  500.3904492   3.073278   0 #> 575  502.0170095   3.777316   0 #> 576  500.0961816   2.577899   0 #> 577  500.1854502   2.653286   0 #> 578  505.4304878   2.525211   0 #> 579  501.3532769   3.330231   0 #> 580  581.1343330   2.647046   0 #> 581  508.6320127   2.817202   0 #> 582  575.1297762   2.572156   0 #> 583  604.6963198   3.573060   0 #> 584  608.4019200   2.974383   0 #> 585  500.1467938   2.814832   0 #> 586  515.5427404   2.630685   0 #> 587  501.6533040   2.746751   0 #> 588  501.1048944   3.766330   0 #> 589  528.4009376   3.792259   0 #> 590  500.7988141   3.088931   0 #> 591  500.8764638   3.139791   0 #> 592  510.4556564   3.350261   0 #> 593  500.2702671   3.341789   0 #> 594  500.0613280   3.322585   0 #> 595  501.9309556   2.882767   0 #> 596  500.2123984   3.541883   0 #> 597  562.9959116   2.932927   0 #> 598  500.0145411   2.653388   0 #> 599  590.3336124   3.273656   0 #> 600  500.4159776   2.507413   0 #> 601  630.5649833   3.076538   0 #> 602  500.1508569   2.649604   0 #> 603  500.3665649   2.592851   0 #> 604  504.9457229   2.832207   0 #> 605  524.2287144   2.650569   0 #> 606  500.5192525   2.782719   0 #> 607  502.7596369   2.790606   0 #> 608  501.6368027   3.138913   0 #> 609  505.8380121   3.317152   0 #> 610  501.1429450   3.464297   0 #> 611  505.4436227   2.711918   0 #> 612  501.0112536   2.881732   0 #> 613  655.6329811   2.992746   0 #> 614  520.6677334   2.591682   0 #> 615  500.5849200   2.604379   0 #> 616  683.1323200   5.114223   0 #> 617  508.0476362   3.234659   0 #> 618  562.4443405   2.976120   0 #> 619  500.2318158   2.826647   0 #> 620  508.2702301   2.586585   0 #> 621  587.3931549   2.633436   0 #> 622  577.0587099   4.447442   0 #> 623  531.1847487   2.742970   0 #> 624  637.2211666   3.221240   0 #> 625  964.5494270   2.539676   0 #> 626  509.1266998   3.223644   0 #> 627  500.5721671   2.758641   0 #> 628  502.5517433   2.743033   0 #> 629  605.3550075   2.652783   0 #> 630  500.2429891   3.040709   0 #> 631  531.0402517   2.630711   0 #> 632  959.4558454   2.649152   0 #> 633  530.7897148   4.194226   0 #> 634  513.1583061   3.649624   0 #> 635  501.0176370   2.538445   0 #> 636  536.7306170   3.055942   0 #> 637  582.6312713   2.906825   0 #> 638  667.6703768   2.900621   0 #> 639  520.6770038   3.096763   0 #> 640  500.0907653   2.840219   0 #> 641  624.8332512   2.675943   0 #> 642  500.5418517   2.969281   0 #> 643  516.3139045   2.529302   0 #> 644  503.0639080   2.502691   0 #> 645  502.7066041   4.102976   0 #> 646  854.6585899   2.544498   0 #> 647  552.2266375   3.053727   0 #> 648  505.4088927   3.849308   0 #> 649  500.5099858   2.613873   0 #> 650  501.6526851   2.556230   0 #> 651  808.8916251   2.779395   0 #> 652  500.1177818   2.675253   0 #> 653  781.5502087   3.136729   0 #> 654  500.0951127   3.119951   0 #> 655  522.8372279   2.504213   0 #> 656  527.8590456   2.724096   0 #> 657  501.5230858   2.796206   0 #> 658  500.3314890   2.602466   0 #> 659  956.6699693   2.918045   0 #> 660  892.2246669   3.131294   0 #> 661  532.1535191   2.840399   0 #> 662  502.4161307   2.745098   0 #> 663  507.9370104   2.766608   0 #> 664  500.8802009   3.506111   0 #> 665  523.7130801   3.048812   0 #> 666  517.0093910   2.536852   0 #> 667  521.0349502   2.926688   0 #> 668  500.0116873   3.585298   0 #> 669  510.5314279   3.202835   0 #> 670  500.0445731   4.229314   0 #> 671  545.9687909   2.611162   0 #> 672  500.0860364   2.783860   0 #> 673  511.2356162   3.660704   0 #> 674  713.7032673   2.744632   0 #> 675  500.1106191   3.019198   0 #> 676  500.4881993   3.376060   0 #> 677  500.8035704   3.275696   0 #> 678  543.0392679   2.579440   0 #> 679  505.1938608   2.571252   0 #> 680  524.6344270   2.549227   0 #> 681  500.0553189   3.053495   0 #> 682  523.1661529   3.138499   0 #> 683  500.5307418   3.006345   0 #> 684  961.7581230   2.730837   0 #> 685  500.0424614   2.573137   0 #> 686  500.0058540   2.699426   0 #> 687  833.3521946   3.223413   0 #> 688  516.7073496   2.553127   0 #> 689  705.3380726   2.611758   0 #> 690  789.0151554   3.183041   0 #> 691  570.5429467   2.525444   0 #> 692  662.5012599   3.286072   0 #> 693  603.0243446   2.821876   0 #> 694  500.5138629   2.685248   0 #> 695  546.6955574   3.248704   0 #> 696  500.7455517   3.488821   0 #> 697  536.8331225   2.542702   0 #> 698  500.2903978   2.535004   0 #> 699  532.4879745   2.770234   0 #> 700  511.6777114   2.838968   0 #> 701  500.5389959   2.577068   0 #> 702  580.2191535   2.966512   0 #> 703  500.3906296   2.779954   0 #> 704  544.9849284   2.726172   0 #> 705  985.9328702   3.289068   0 #> 706  612.0142901   2.545123   0 #> 707  506.5273960   3.119107   0 #> 708  556.4484378   2.587790   0 #> 709  549.5557731   2.541947   0 #> 710  579.5366789   2.812903   0 #> 711  563.3919298   2.683726   0 #> 712  500.0983225   2.812668   0 #> 713  505.3059276   2.901264   0 #> 714  515.3766259   2.617270   0 #> 715  500.1596420   3.841359   0 #> 716  501.4597342   3.129752   0 #> 717  755.7806233   2.729606   0 #> 718  739.1148170   3.313217   0 #> 719  500.0359150   3.182546   0 #> 720  500.0912007   2.735471   0 #> 721  500.2721687   2.819270   0 #> 722  500.2591985   2.523152   0 #> 723  519.8150584   2.993442   0 #> 724  500.0117497   2.736279   0 #> 725  501.1440875   2.662086   0 #> 726  587.5302045   3.487964   0 #> 727  500.4943071   2.827221   0 #> 728  609.0580326   2.584492   0 #> 729  551.4478492   2.715668   0 #> 730  500.1491549   4.567575   0 #> 731  847.8054315   2.543461   0 #> 732  551.5334719   2.507856   0 #> 733  527.7385396   2.521233   0 #> 734  512.6245629   2.521050   0 #> 735  503.8202215   3.026391   0 #> 736  508.5117687   3.062014   0 #> 737  500.0031770   2.717769   0 #> 738  500.2040062   2.590872   0 #> 739  500.4137239   2.853166   0 #> 740  564.2484980   2.505089   0 #> 741  604.7659106   2.868982   0 #> 742  655.2386029   3.025582   0 #> 743  593.5938771   2.927995   0 #> 744  500.0154509   2.895884   0 #> 745  520.9368707   2.678075   0 #> 746  506.1955143   2.745005   0 #> 747  500.2824782   2.948177   0 #> 748  507.2454156   3.548703   0 #> 749  500.7175533   2.589484   0 #> 750  548.0445513   2.542589   0 #> 751  500.1162467   3.578583   0 #> 752  503.3467855   3.033265   0 #> 753  500.0377128   2.670880   0 #> 754  562.6492129   3.016943   0 #> 755  501.1555146   2.789421   0 #> 756  536.2301184   2.533193   0 #> 757  558.8707980   2.521751   0 #> 758  501.4917454   2.593463   0 #> 759  501.3489995   2.502357   0 #> 760  500.1038521   2.557997   0 #> 761  500.1190875   2.674028   0 #> 762  501.9683144   3.601173   0 #> 763  500.5727583   2.622540   0 #> 764  500.6398324   2.918364   0 #> 765  718.2642039   3.102594   0 #> 766  500.7796043   2.514447   0 #> 767  987.5249743   2.623078   0 #> 768  500.5794906   2.577070   0 #> 769  500.3326967   2.730944   0 #> 770  500.2634665   4.546037   0 #> 771  501.9185944   2.638498   0 #> 772  501.3411692   2.808116   0 #> 773  503.0535886   3.105723   0 #> 774  510.9162673   2.518400   0 #> 775  501.9304539   3.799470   0 #> 776  501.7667308   2.658145   0 #> 777  500.0339679   2.585708   0 #> 778  556.7546326   3.111073   0 #> 779  515.2884343   2.696311   0 #> 780  681.8070554   2.891896   0 #> 781  505.2781918   3.073993   0 #> 782  500.1773828   2.510491   0 #> 783  500.3601718   2.700934   0 #> 784  937.9504894   2.807278   0 #> 785  503.3006349   2.560315   0 #> 786  743.8355365   2.919638   0 #> 787  617.5267180   2.640943   0 #> 788  500.5858200   2.566446   0 #> 789  553.2028144   3.570940   0 #> 790  524.1317968   4.696487   0 #> 791  500.9294867   3.096203   0 #> 792  503.2134912   2.753443   0 #> 793  500.1240279   3.016849   0 #> 794  500.0105934   2.617758   0 #> 795  501.4763312   4.247122   0 #> 796  588.3374322   3.244412   0 #> 797  513.6045971   2.666608   0 #> 798  500.1878556   3.166588   0 #> 799  500.2914680   2.700986   0 #> 800  500.0587245   2.846469   0 #> 801  637.1067925   3.316176   0 #> 802  506.1782610   2.524359   0 #> 803  723.5685423   2.692355   0 #> 804  505.7540438   3.197480   0 #> 805  500.2260961   3.025563   0 #> 806  501.9782838   2.662838   0 #> 807  500.3814451   2.539778   0 #> 808  500.8845244   3.230873   0 #> 809  500.7273439   3.502620   0 #> 810  534.3007161   2.562110   0 #> 811  551.0592140   2.569123   0 #> 812  500.2537354   2.863007   0 #> 813  522.9541095   2.560039   0 #> 814  500.0087394   2.941934   0 #> 815  631.6396850   3.283878   0 #> 816  500.9200503   3.503946   0 #> 817  502.0104230   2.514280   0 #> 818  501.1503126   2.601582   0 #> 819  540.9383267   2.629495   0 #> 820  500.0655490   2.932868   0 #> 821  501.6676888   3.145716   0 #> 822  505.9927963   4.293075   0 #> 823  500.0740295   4.960472   0 #> 824  526.9034538   2.528194   0 #> 825  500.2984947   2.827885   0 #> 826  500.1470610   2.905358   0 #> 827  500.1878480   2.771019   0 #> 828  533.6427890   2.797241   0 #> 829  501.9246140   2.743314   0 #> 830  503.7802886   2.606098   0 #> 831  636.8087882   2.570471   0 #> 832  516.2593303   2.690943   0 #> 833  500.3968241   6.125064   0 #> 834  502.9435990   2.566621   0 #> 835  503.3461942   2.526049   0 #> 836  500.0901637   2.582873   0 #> 837  500.0167821   3.511230   0 #> 838  509.2086146   2.664435   0 #> 839  698.9829391   2.806641   0 #> 840  769.1727833   2.597772   0 #> 841  500.2774959   2.805395   0 #> 842  500.0481669   2.637360   0 #> 843  500.6605355   3.191988   0 #> 844  500.0742962   2.677471   0 #> 845  500.5147270   2.896492   0 #> 846  500.4300118   2.992936   0 #> 847  711.3145300   2.526106   0 #> 848  548.6830982   2.733135   0 #> 849  619.7402755   3.210806   0 #> 850  500.5463483   2.560927   0 #> 851  679.9705789   2.695527   0 #> 852  500.1427816   2.813025   0 #> 853  518.1377757   3.774462   0 #> 854  500.2241293   2.717155   0 #> 855  500.2770814   2.703421   0 #> 856  529.1513202   3.560449   0 #> 857  644.6636583   3.682830   0 #> 858  507.7141776   3.530066   0 #> 859  500.3872865   2.854519   0 #> 860  672.8501581   2.713865   0 #> 861  747.3652644   3.201027   0 #> 862  507.6568856   2.587790   0 #> 863  692.9254690   3.631246   0 #> 864  517.9520077   2.602103   0 #> 865  501.5098154   4.083699   0 #> 866  500.3062615   2.717098   0 #> 867  508.0892890   3.491360   0 #> 868  501.0321034   2.868787   0 #> 869  506.9477662   3.158444   0 #> 870  876.4028133   2.892173   0 #> 871  500.7759548   4.595437   0 #> 872  513.2179848   2.818867   0 #> 873  503.8857564   2.660147   0 #> 874  500.5467210   2.550482   0 #> 875  675.0077865   2.667858   0 #> 876  504.6330368   3.184724   0 #> 877  500.8652711   2.515844   0 #> 878  735.1715164   3.140294   0 #> 879  637.5513472   2.859153   0 #> 880  500.0779024   2.740501   0 #> 881  500.9022924   2.627667   0 #> 882  780.4816627   2.656557   0 #> 883  500.0490515   3.867967   0 #> 884  583.2033670   3.047318   0 #> 885  510.4236913   2.886713   0 #> 886  500.8318393   2.766337   0 #> 887  503.9913059   2.639190   0 #> 888  525.1078674   3.058549   0 #> 889  509.8167129   2.771261   0 #> 890  559.1319389   2.561440   0 #> 891  579.6405559   2.778890   0 #> 892  501.3501007   3.657650   0 #> 893  500.2410677   2.923991   0 #> 894  500.1158746   2.678097   0 #> 895  503.0114137   3.359568   0 #> 896  558.2546477   2.776038   0 #> 897  501.5999721   3.120073   0 #> 898  500.0030304   2.582682   0 #> 899  534.5795668   2.586680   0 #> 900  519.6567380   2.647082   0 #> 901  501.4013204   4.984315   0 #> 902  520.2648472   2.520178   0 #> 903  501.9311138   2.837330   0 #> 904  502.4452655   2.501803   0 #> 905  914.7045499   2.824926   0 #> 906  500.0618332   3.270160   0 #> 907  500.1841518   3.055752   0 #> 908  501.0951545   2.865660   0 #> 909  500.6927557   2.683467   0 #> 910  500.2423856   3.076396   0 #> 911  518.3461761   2.578642   0 #> 912  530.1047107   2.562747   0 #> 913  501.6295133   3.712686   0 #> 914  551.9288582   2.854881   0 #> 915  500.2379261   2.646688   0 #> 916  500.7739196   3.941668   0 #> 917  899.5216253   4.212994   0 #> 918  500.0646983   2.845718   0 #> 919  500.1022348   2.874238   0 #> 920  616.9501337   3.343914   0 #> 921  652.6061181   5.641910   0 #> 922  506.5996430   2.557530   0 #> 923  500.2870862   2.720031   0 #> 924  503.4500244   3.328426   0 #> 925  581.2311269   2.817587   0 #> 926  523.3415031   2.666063   0 #> 927  501.9528130   2.880330   0 #> 928  500.0545272   2.520897   0 #> 929  500.6842470   3.362737   0 #> 930  500.3330606   2.609886   0 #> 931  587.1183149   2.514638   0 #> 932  701.9595837   3.513047   0 #> 933  571.1833166   2.634065   0 #> 934  500.0321782   2.784303   0 #> 935  561.0739936   2.880413   0 #> 936  500.1786432   2.641838   0 #> 937  511.9690745   2.507793   0 #> 938  985.3913441   3.551589   0 #> 939  584.0075428   2.554178   0 #> 940  662.8057778   2.775550   0 #> 941  563.1237647   2.538754   0 #> 942  501.1848885   2.993442   0 #> 943  512.0419191   3.462598   0 #> 944  522.3887270   2.562202   0 #> 945  812.9076044   3.600695   0 #> 946  500.4671534   2.777244   0 #> 947  500.4152738   2.752309   0 #> 948  500.1357315   3.160438   0 #> 949  677.1122822   2.505202   0 #> 950  509.0225934   2.692642   0 #> 951  500.5383465   3.918767   0 #> 952  638.2610063   2.703135   0 #> 953  502.8399428   2.651665   0 #> 954  771.6888306   3.442138   0 #> 955  501.9071164   2.521007   0 #> 956  500.6149606   2.727336   0 #> 957  523.8133087   2.599009   0 #> 958  500.5276842   3.277269   0 #> 959  500.1085999   2.569786   0 #> 960  500.1012506   3.359436   0 #> 961  509.1392043   2.642454   0 #> 962  500.0120180   2.546042   0 #> 963  552.6965042   2.520918   0 #> 964  501.0262601   3.061708   0 #> 965   34.8996436   3.338119   1 #> 966  438.7572692   2.503995   1 #> 967  644.4697606   3.046914   1 #> 968  994.8324047   3.498123   1 #> 969  314.6626207   2.627493   1 #> 970  855.8819662   2.650890   1 #> 971  540.3376815   2.588722   1 #> 972  873.4173523   3.002885   1 #> 973  515.5856195   3.050797   1 #> 974  869.4592980   2.544551   1 #> 975  856.5225946   3.122633   1 #> 976  345.6831840   2.535013   1 #> 977    0.1036914   3.131066   1 #> 978  205.1797453   2.561309   1 #> 979  945.2204907   2.813161   1 #> 980  281.3335131   2.599024   1 #> 981  880.9342172   2.831528   1 #> 982  961.1162767   2.840370   1 #> 983    4.0184539   2.633502   1 #> 984  552.9002056   2.508015   1 #> 985  219.2359727   2.522843   1 #> 986  646.7271433   2.879857   1 #> 987  727.7020467   3.301411   1 #> 988  872.5874424   3.513076   1 #> 989  381.9815461   4.064769   1 #> 990  892.7457042   2.698195   1 #> 991  843.8702857   2.517513   1 #> 992  729.7612086   2.980088   1 #> 993   38.4149766   2.711083   1 #> 994  333.8233174   2.521089   1 #> 995  749.2726522   2.805461   1 #> 996  913.1580107   2.608384   1 #> 997  204.3290630   3.487403   1 #> 998  471.7556115   2.661392   1 #> 999  385.1831004   2.726753   1 #> 1000 392.7519289   2.555925   1 #> 1001 218.3384304   2.741862   1 #> 1002   7.2089406   2.620787   1 #> 1003 363.7121432   3.025058   1 #> 1004 526.1067299   2.991304   1 #> 1005 844.1633934   2.798996   1 #> 1006 135.9911708   2.854925   1 #> 1007 376.4673308   2.685367   1 #> 1008 263.3086485   4.262559   1 #> 1009 497.8529697   2.609839   1 #> 1010  19.5252507   2.784829   1 #> 1011  87.1838098   2.624268   1 #> 1012 995.9626645   2.681087   1 #> 1013 942.1322055   2.552146   1 #> 1014 124.3734511   3.579560   1 #> 1015 115.1893022   2.605538   1 #> 1016 366.6881036   4.353185   1 #> 1017 471.0400356   2.925132   1 #> 1018 784.1724455   2.544179   1 #> 1019 490.3928128   3.211018   1 #> 1020 101.9509549   3.867433   1 #> 1021 943.4597243   2.660380   1 #> 1022 706.1395023   2.512510   1 #> 1023 502.2642366   2.519532   1 #> 1024 529.9347765   2.727667   1 #> 1025 258.4263484   3.513465   1 #> 1026 711.7534170   3.131619   1 #> 1027 968.4625498   2.768999   1 #> 1028 661.0777897   2.551580   1 #> 1029 796.2505904   2.703015   1 #> 1030  73.2091321   2.974219   1 #> 1031 884.7428844   2.608634   1 #> 1032 826.7003768   3.166541   1 #> 1033 725.7639593   2.657040   1 #> 1034 367.3290217   2.752453   1 #> 1035 523.4284166   3.276245   1 #> 1036 469.8789127   2.965070   1 #> 1037  98.5663857   2.726579   1 #> 1038 516.0349102   2.700734   1 #> 1039 449.7338275   2.534031   1 #> 1040 549.4615478   2.516880   1 #> 1041 649.5061899   2.878552   1 #> 1042 159.0348261   2.595805   1 #> 1043 293.7507920   3.587345   1 #> 1044 891.2848670   3.748303   1 #> 1045 588.0786260   2.644091   1 #> 1046 633.2315633   2.632866   1 #> 1047 259.5094764   2.956604   1 #> 1048 318.2127271   2.619997   1 #> 1049 339.2538810   2.844802   1 #> 1050 760.7611385   2.568429   1 #> 1051  10.8724642   3.458104   1 #> 1052  63.1373390   2.710482   1 #> 1053 263.8417922   2.542753   1 #> 1054 593.8365886   2.616864   1 #> 1055 297.5600292   3.142462   1 #> 1056  94.6227722   2.659157   1 #> 1057 761.2553602   3.134887   1 #> 1058 772.4768475   3.454827   1 #> 1059 401.9903932   2.741160   1 #> 1060  59.0829530   2.637517   1 #> 1061 750.2478843   2.817017   1 #> 1062 528.3223554   2.544766   1 #> 1063 275.8051176   3.366939   1 #> 1064 261.2375501   2.711607   1 #> 1065 543.8311689   2.741851   1 #> 1066 199.0007793   4.234507   1 #> 1067 645.0547725   2.756562   1 #> 1068 750.2398461   2.630282   1 #> 1069 270.9778345   2.631164   1 #> 1070 875.6219093   2.538567   1 #> 1071 851.7431740   2.533556   1 #> 1072  45.8493107   3.116014   1 #> 1073 381.0568589   2.509524   1 #> 1074 183.3120543   2.538038   1 #> 1075 921.7996413   3.224688   1 #> 1076 906.1868489   2.512807   1 #>  #> [[3]] #>           ts magnitudes gen #> 1   501.6025   3.168749   2 #> 2   500.4004   2.793011   2 #> 3   510.0886   2.625353   2 #> 4   517.1818   4.096033   2 #> 5   577.6869   2.878355   2 #> 6   649.2276   2.866571   2 #> 7   567.3403   2.519938   2 #> 8   533.2613   2.536437   2 #> 9   753.1522   2.800800   2 #> 10  536.8920   2.693609   2 #> 11  566.5658   2.509641   2 #> 12  696.3312   4.625982   2 #> 13  563.7063   2.730728   2 #> 14  531.7751   2.559496   2 #> 15  508.9028   3.791142   2 #> 16  540.6647   2.783119   2 #> 17  515.9955   2.708162   2 #> 18  516.1160   3.148516   2 #> 19  500.5610   4.571737   2 #> 20  555.1404   2.901643   2 #> 21  500.2314   2.569459   2 #> 22  500.3046   2.653414   2 #> 23  500.2138   2.881996   2 #> 24  504.6159   2.952763   2 #> 25  500.2094   2.970921   2 #> 26  868.1508   2.597150   2 #> 27  506.6186   2.641341   2 #> 28  539.1869   2.910172   2 #> 29  569.9411   3.121749   2 #> 30  536.0220   2.871105   2 #> 31  864.1265   2.996559   2 #> 32  639.2727   3.033777   2 #> 33  733.5754   2.915850   2 #> 34  526.2843   2.973866   2 #> 35  523.6649   3.280966   2 #> 36  513.0878   2.801960   2 #> 37  983.2979   2.665292   2 #> 38  512.6178   2.883037   2 #> 39  563.9726   2.999202   2 #> 40  717.2895   2.570014   2 #> 41  501.4995   2.562446   2 #> 42  505.9483   3.826893   2 #> 43  502.6099   2.919881   2 #> 44  501.6701   2.897055   2 #> 45  540.1193   2.780077   2 #> 46  501.6114   2.763058   2 #> 47  501.8722   2.527649   2 #> 48  501.5434   2.625304   2 #> 49  501.6310   2.655652   2 #> 50  511.0170   2.945619   2 #> 51  503.0090   2.600216   2 #> 52  656.3907   2.524242   2 #> 53  502.5488   2.933041   2 #> 54  641.5782   3.073609   2 #> 55  585.0062   2.981264   2 #> 56  568.3625   2.610454   2 #> 57  502.2460   2.690996   2 #> 58  514.1456   2.573044   2 #> 59  736.5295   2.509691   2 #> 60  511.9105   2.573315   2 #> 61  518.5051   2.730874   2 #> 62  620.8492   3.021055   2 #> 63  522.6976   2.554618   2 #> 64  650.6578   2.771461   2 #> 65  523.2924   4.379749   2 #> 66  521.6953   2.563712   2 #> 67  957.0949   2.632854   2 #> 68  523.1387   2.991104   2 #> 69  545.8162   2.905986   2 #> 70  601.0360   2.929060   2 #> 71  599.8045   3.725567   2 #> 72  599.5737   2.932164   2 #> 73  828.5554   2.858866   2 #> 74  829.7626   2.664738   2 #> 75  828.6662   3.163822   2 #> 76  834.9421   2.899685   2 #> 77  829.8406   2.613747   2 #> 78  500.6900   2.649834   2 #> 79  517.2980   2.715657   2 #> 80  501.6658   2.519162   2 #> 81  502.7413   3.318080   2 #> 82  891.0415   3.305808   2 #> 83  502.9642   2.757525   2 #> 84  633.7449   2.573118   2 #> 85  710.6548   2.820379   2 #> 86  552.5922   2.670096   2 #> 87  507.7517   3.353760   2 #> 88  501.8433   2.562318   2 #> 89  721.0025   3.353986   2 #> 90  830.7587   3.247754   2 #> 91  595.4088   2.537595   2 #> 92  695.1087   3.356737   2 #> 93  747.2173   2.749547   2 #> 94  695.0873   2.916745   2 #> 95  562.4691   3.089625   2 #> 96  502.5071   2.772662   2 #> 97  543.9408   4.342650   2 #> 98  504.2905   3.236263   2 #> 99  500.4945   3.014966   2 #> 100 506.3628   5.300854   2 #> 101 501.4343   2.809719   2 #> 102 551.0602   2.647897   2 #> 103 502.4670   3.126226   2 #> 104 515.7041   2.890785   2 #> 105 500.0824   2.736152   2 #> 106 527.3654   3.851896   2 #> 107 565.3291   2.633437   2 #> 108 512.9899   3.788608   2 #> 109 500.2548   2.882711   2 #> 110 500.5837   2.508260   2 #> 111 500.0888   3.000665   2 #> 112 669.4997   2.784488   2 #> 113 886.2776   2.531708   2 #> 114 500.6196   2.719235   2 #> 115 611.0340   2.911492   2 #> 116 501.2501   4.413732   2 #> 117 500.1276   3.235047   2 #> 118 505.1130   2.731204   2 #> 119 517.8506   5.107671   2 #> 120 509.3117   3.929021   2 #> 121 500.2318   3.269715   2 #> 122 502.6511   2.585326   2 #> 123 584.7620   2.633596   2 #> 124 514.5513   2.797520   2 #> 125 500.1009   2.556330   2 #> 126 500.0712   2.725826   2 #> 127 500.1289   3.776399   2 #> 128 556.2939   2.500231   2 #> 129 521.6190   2.594191   2 #> 130 500.2372   3.235719   2 #> 131 500.5510   2.905725   2 #> 132 505.2874   2.753979   2 #> 133 500.3596   2.595911   2 #> 134 500.2031   2.711233   2 #> 135 564.2121   2.550359   2 #> 136 500.0707   2.659439   2 #> 137 500.8697   2.751844   2 #> 138 503.2003   3.021005   2 #> 139 500.4925   2.553486   2 #> 140 500.2135   2.781868   2 #> 141 500.1171   2.861746   2 #> 142 503.0709   3.029549   2 #> 143 506.1132   3.120933   2 #> 144 501.0826   4.214111   2 #> 145 500.5130   3.083982   2 #> 146 505.8762   2.735364   2 #> 147 562.7823   2.939828   2 #> 148 500.6314   2.952977   2 #> 149 500.1791   2.585580   2 #> 150 837.5431   2.929722   2 #> 151 507.4371   3.127903   2 #> 152 520.6762   3.086027   2 #> 153 618.4252   3.313914   2 #> 154 526.7818   2.765815   2 #> 155 523.5206   2.695901   2 #> 156 526.8913   2.724506   2 #> 157 505.4658   2.710980   2 #> 158 540.1567   2.648284   2 #> 159 511.5086   2.567297   2 #> 160 566.2268   2.576414   2 #> 161 758.1625   2.728177   2 #> 162 726.6633   2.685162   2 #> 163 521.7277   2.664209   2 #> 164 524.1220   2.686302   2 #> 165 504.2608   2.735364   2 #> 166 517.1184   2.572973   2 #> 167 517.0471   2.851386   2 #> 168 654.2266   3.152676   2 #> 169 504.8853   3.140329   2 #> 170 632.7757   3.203257   2 #> 171 892.7887   2.711223   2 #> 172 500.5082   2.876633   2 #> 173 520.9974   3.542236   2 #> 174 507.9968   3.450435   2 #> 175 502.7323   2.534256   2 #> 176 549.5896   3.240326   2 #> 177 558.5406   4.853565   2 #> 178 572.1224   2.758103   2 #> 179 515.0625   3.238722   2 #> 180 510.5966   2.879431   2 #> 181 512.5438   2.608623   2 #> 182 521.3228   4.911637   2 #> 183 503.3579   2.532911   2 #> 184 503.2139   2.816687   2 #> 185 616.7964   3.702981   2 #> 186 502.5990   2.668606   2 #> 187 524.7265   2.911963   2 #> 188 502.7971   2.608252   2 #> 189 564.9293   3.111905   2 #> 190 502.9811   2.969044   2 #> 191 502.6415   3.569772   2 #> 192 521.5394   2.817208   2 #> 193 502.5934   2.837911   2 #> 194 506.0598   2.555731   2 #> 195 503.8262   3.259921   2 #> 196 510.3171   3.663809   2 #> 197 507.4821   2.657994   2 #> 198 509.7718   3.114149   2 #> 199 578.1227   2.795283   2 #> 200 608.3803   2.910596   2 #> 201 502.5856   2.610201   2 #> 202 515.0500   3.547928   2 #> 203 512.1490   2.755250   2 #> 204 502.7085   3.329116   2 #> 205 502.6720   3.080065   2 #> 206 520.5896   2.764623   2 #> 207 544.8114   2.899659   2 #> 208 502.7527   3.158153   2 #> 209 635.5908   3.251820   2 #> 210 502.6032   3.344099   2 #> 211 535.3829   2.688724   2 #> 212 554.1514   2.667895   2 #> 213 505.7114   2.746553   2 #> 214 507.9774   3.540177   2 #> 215 502.7149   2.791301   2 #> 216 502.7454   4.354544   2 #> 217 503.2659   2.545598   2 #> 218 505.9664   3.701002   2 #> 219 502.6587   3.315555   2 #> 220 505.5110   3.219865   2 #> 221 502.5738   2.528453   2 #> 222 778.7992   2.761660   2 #> 223 537.8870   2.623230   2 #> 224 671.4409   2.664205   2 #> 225 503.2987   2.644455   2 #> 226 504.3145   2.775769   2 #> 227 504.7410   3.113388   2 #> 228 719.2244   2.819285   2 #> 229 706.4462   2.535213   2 #> 230 502.7274   2.717931   2 #> 231 541.4550   2.979501   2 #> 232 502.5947   2.590270   2 #> 233 760.4474   2.562917   2 #> 234 502.5655   2.964159   2 #> 235 502.6402   2.638191   2 #> 236 569.7646   2.583549   2 #> 237 502.5989   3.078426   2 #> 238 502.5871   2.589873   2 #> 239 502.7928   2.731707   2 #> 240 563.5282   2.625333   2 #> 241 502.9129   2.504407   2 #> 242 502.6322   2.754915   2 #> 243 503.1413   3.509448   2 #> 244 557.5890   2.706791   2 #> 245 500.1259   3.607678   2 #> 246 528.2584   2.605692   2 #> 247 535.5766   2.529817   2 #> 248 724.9041   3.021271   2 #> 249 501.1107   2.700580   2 #> 250 763.3836   2.752602   2 #> 251 794.5545   2.832406   2 #> 252 502.6929   2.595401   2 #> 253 686.5356   3.419165   2 #> 254 525.7831   2.637827   2 #> 255 552.1450   3.020402   2 #> 256 564.6990   2.564359   2 #> 257 628.1872   2.892635   2 #> 258 525.4443   2.556180   2 #> 259 579.3154   2.797358   2 #> 260 601.2062   2.714064   2 #> 261 528.5147   2.558814   2 #> 262 502.1627   2.808183   2 #> 263 708.6890   2.786245   2 #> 264 501.8845   3.127419   2 #> 265 622.8740   3.103841   2 #> 266 647.9665   2.925942   2 #> 267 647.4303   2.644862   2 #> 268 503.1726   2.775117   2 #> 269 501.7679   2.644551   2 #> 270 500.3508   2.587895   2 #> 271 512.5588   2.570005   2 #> 272 789.9073   2.742191   2 #> 273 623.1111   2.524015   2 #> 274 513.0113   2.774232   2 #> 275 512.7103   2.571195   2 #> 276 515.4078   2.930463   2 #> 277 540.5092   2.835197   2 #> 278 513.4516   2.736047   2 #> 279 517.9040   2.756699   2 #> 280 544.9428   2.799111   2 #> 281 512.8529   2.813693   2 #> 282 534.7259   3.811196   2 #> 283 521.3198   2.726101   2 #> 284 500.7465   2.624735   2 #> 285 958.4096   2.740075   2 #> 286 515.2751   3.173328   2 #> 287 500.4554   2.607620   2 #> 288 550.4991   3.590892   2 #> 289 538.9625   2.526293   2 #> 290 504.2295   2.894740   2 #> 291 505.6649   2.607823   2 #> 292 613.0971   2.732523   2 #> 293 504.5998   2.541183   2 #> 294 503.8199   3.648010   2 #> 295 508.5195   2.740140   2 #> 296 507.8981   3.203072   2 #> 297 505.5096   3.047105   2 #> 298 540.6211   2.669277   2 #> 299 503.2921   2.546520   2 #> 300 503.3773   2.665780   2 #> 301 525.1409   2.712250   2 #> 302 515.5657   6.539672   2 #> 303 503.4298   3.353804   2 #> 304 509.3916   3.373520   2 #> 305 503.2541   3.072426   2 #> 306 641.1518   2.633800   2 #> 307 504.2186   2.945907   2 #> 308 502.9587   2.627403   2 #> 309 520.1434   2.628461   2 #> 310 509.7824   2.631246   2 #> 311 644.3730   2.896319   2 #> 312 535.1693   2.611407   2 #> 313 501.5125   2.529649   2 #> 314 537.6174   2.888926   2 #> 315 508.4646   2.513651   2 #> 316 502.3444   3.555996   2 #> 317 501.1345   2.979500   2 #> 318 763.9385   2.851894   2 #> 319 501.3876   2.659712   2 #> 320 711.9094   2.599888   2 #> 321 502.3389   3.046189   2 #> 322 504.0965   2.550508   2 #> 323 519.1382   3.363665   2 #> 324 521.9450   2.534365   2 #> 325 523.8298   2.665759   2 #> 326 516.8529   2.506469   2 #> 327 720.7523   2.642323   2 #> 328 510.4629   2.515162   2 #> 329 712.7690   2.511036   2 #> 330 513.9432   2.919955   2 #> 331 568.8031   3.209991   2 #> 332 528.4743   2.652528   2 #> 333 510.6320   2.966194   2 #> 334 793.6811   3.107736   2 #> 335 550.3018   3.031123   2 #> 336 632.5048   2.731079   2 #> 337 558.8206   3.041159   2 #> 338 749.3430   2.536288   2 #> 339 691.3314   2.851579   2 #> 340 792.3820   3.097180   2 #> 341 701.3909   2.587376   2 #> 342 683.1507   3.931816   2 #> 343 683.4883   2.595920   2 #> 344 683.2686   2.897603   2 #> 345 683.1340   2.548850   2 #> 346 683.1725   2.742134   2 #> 347 687.6523   3.041989   2 #> 348 684.0550   2.838607   2 #> 349 710.1136   2.691871   2 #> 350 685.1734   2.528469   2 #> 351 709.1292   2.504159   2 #> 352 684.0904   2.798585   2 #> 353 685.4332   4.100503   2 #> 354 683.2840   2.919088   2 #> 355 683.1585   3.187085   2 #> 356 683.4972   3.167323   2 #> 357 683.1466   2.919179   2 #> 358 689.5207   3.498258   2 #> 359 683.2116   3.033636   2 #> 360 684.2490   3.454983   2 #> 361 515.6359   2.514650   2 #> 362 880.5036   3.051450   2 #> 363 577.7971   2.501023   2 #> 364 577.2300   3.134591   2 #> 365 657.6947   2.586788   2 #> 366 531.1331   2.706487   2 #> 367 574.6313   2.553355   2 #> 368 922.4981   2.892446   2 #> 369 530.9764   3.158627   2 #> 370 503.0094   2.965606   2 #> 371 502.7705   2.940095   2 #> 372 512.8303   2.639352   2 #> 373 538.9222   2.574872   2 #> 374 502.7329   2.698446   2 #> 375 832.7521   2.620620   2 #> 376 561.2210   3.234073   2 #> 377 508.5325   3.080486   2 #> 378 500.1852   2.600638   2 #> 379 500.9500   2.578044   2 #> 380 512.5028   2.505478   2 #> 381 500.7213   2.669416   2 #> 382 504.2062   3.103434   2 #> 383 531.9851   2.999637   2 #> 384 543.7137   2.891639   2 #> 385 506.5603   3.186515   2 #> 386 523.2158   2.870371   2 #> 387 666.3476   2.541087   2 #> 388 511.9452   2.822092   2 #> 389 505.2906   3.782687   2 #> 390 594.5549   3.152110   2 #> 391 500.3450   3.722876   2 #> 392 528.7138   2.523125   2 #> 393 502.1930   2.584299   2 #> 394 526.1793   2.528732   2 #> 395 500.5099   2.878833   2 #> 396 501.9966   3.304460   2 #> 397 501.0574   2.645608   2 #> 398 502.0775   2.557494   2 #> 399 511.2171   2.552832   2 #> 400 500.6392   2.571770   2 #> 401 500.1767   2.804876   2 #> 402 500.5626   3.562844   2 #> 403 500.2697   2.891541   2 #> 404 510.9118   2.735382   2 #> 405 501.7073   2.570950   2 #> 406 908.8860   2.865411   2 #> 407 508.3627   2.689997   2 #> 408 910.2619   2.743221   2 #> 409 500.7707   2.575747   2 #> 410 500.8432   3.506440   2 #> 411 522.7059   2.643481   2 #> 412 502.8724   2.531972   2 #> 413 500.5480   2.919091   2 #> 414 503.6739   2.821830   2 #> 415 503.1927   2.581194   2 #> 416 535.8133   2.784699   2 #> 417 501.3768   2.621106   2 #> 418 529.1213   2.683280   2 #> 419 620.0922   3.332005   2 #> 420 524.7905   2.972902   2 #> 421 553.5580   2.641681   2 #> 422 525.4448   2.935677   2 #> 423 844.3560   3.674372   2 #> 424 524.7149   2.779132   2 #> 425 525.0888   2.519288   2 #> 426 533.5803   2.633167   2 #> 427 527.8302   3.236838   2 #> 428 588.3401   2.966979   2 #> 429 501.0818   3.936755   2 #> 430 872.5426   3.561463   2 #> 431 506.8625   2.572005   2 #> 432 500.1000   2.526300   2 #> 433 529.2369   2.520469   2 #> 434 500.3608   3.078254   2 #> 435 843.7348   4.799810   2 #> 436 502.0028   3.235688   2 #> 437 518.5828   3.014546   2 #> 438 500.2163   2.639059   2 #> 439 500.3952   4.472239   2 #> 440 504.1959   2.584316   2 #> 441 508.7792   2.844351   2 #> 442 711.3421   2.596392   2 #> 443 500.8302   3.538276   2 #> 444 500.2525   2.506091   2 #> 445 555.4465   2.784569   2 #> 446 500.8420   2.809247   2 #> 447 541.0424   2.554363   2 #> 448 506.1231   2.545075   2 #> 449 535.3966   2.765609   2 #> 450 507.7741   3.056059   2 #> 451 656.8067   2.717427   2 #> 452 502.2156   2.904716   2 #> 453 511.9490   2.610523   2 #> 454 690.1234   2.590664   2 #> 455 513.9326   2.787340   2 #> 456 500.7071   2.967375   2 #> 457 500.7431   2.722739   2 #> 458 506.4141   2.804106   2 #> 459 501.8976   2.532196   2 #> 460 907.5233   3.580545   2 #> 461 511.1314   2.569521   2 #> 462 500.9887   2.719683   2 #> 463 623.6645   2.600078   2 #> 464 716.6679   2.576689   2 #> 465 502.8826   2.537812   2 #> 466 500.4884   2.589530   2 #> 467 502.2868   3.716257   2 #> 468 500.8868   3.160561   2 #> 469 504.7434   3.590535   2 #> 470 505.7880   2.770089   2 #> 471 509.6425   2.780269   2 #> 472 503.1178   3.524618   2 #> 473 801.0573   3.232344   2 #> 474 500.4302   2.564273   2 #> 475 500.5746   2.656464   2 #> 476 500.4194   2.531373   2 #> 477 591.4335   2.654340   2 #> 478 662.4657   2.512741   2 #> 479 501.1255   2.514336   2 #> 480 512.3110   2.769126   2 #> 481 502.9529   2.523067   2 #> 482 532.2810   3.009537   2 #> 483 503.5378   2.729232   2 #> 484 500.7262   3.008182   2 #> 485 500.5519   2.756926   2 #> 486 500.5967   2.532581   2 #> 487 635.0720   2.644240   2 #> 488 503.7210   2.507978   2 #> 489 708.7928   2.799270   2 #> 490 758.4392   2.783670   2 #> 491 770.8496   2.548590   2 #> 492 504.2678   2.547612   2 #> 493 502.3403   2.567739   2 #> 494 500.4194   3.814998   2 #> 495 500.7539   3.048901   2 #> 496 505.7923   3.247332   2 #> 497 518.6352   2.606673   2 #> 498 566.3690   3.024299   2 #> 499 509.9563   2.588913   2 #> 500 520.5925   2.513563   2 #> 501 526.1181   3.135284   2 #> 502 506.1574   2.651285   2 #> 503 500.4913   2.578748   2 #> 504 508.5059   2.501766   2 #> 505 500.6104   2.925725   2 #> 506 500.4643   2.711363   2 #> 507 502.2766   2.591605   2 #> 508 513.7959   2.824914   2 #> 509 500.5373   2.842709   2 #> 510 736.1978   2.611038   2 #> 511 500.4560   3.602690   2 #> 512 500.6991   2.727342   2 #> 513 500.4769   4.525344   2 #> 514 746.6118   3.189077   2 #> 515 500.4337   2.626756   2 #> 516 505.7586   2.936546   2 #> 517 616.1957   3.659673   2 #> 518 500.3991   2.517478   2 #> 519 512.5205   2.724335   2 #> 520 500.5665   2.513276   2 #> 521 500.9159   2.661983   2 #> 522 510.0378   3.548276   2 #> 523 594.0982   3.795349   2 #> 524 500.4015   2.858043   2 #> 525 511.9819   3.180746   2 #> 526 501.3737   2.720361   2 #> 527 502.9730   2.572545   2 #> 528 500.8318   2.802705   2 #> 529 502.2169   3.455167   2 #> 530 553.7942   2.995901   2 #> 531 500.4930   2.536522   2 #> 532 500.6784   2.580252   2 #> 533 500.4217   3.220234   2 #> 534 510.3504   4.342080   2 #> 535 500.5372   2.963271   2 #> 536 500.5245   2.503848   2 #> 537 517.6576   2.756564   2 #> 538 502.4533   2.986200   2 #> 539 501.5013   2.505482   2 #> 540 500.4147   2.871669   2 #> 541 612.7448   2.669100   2 #> 542 500.5795   2.609148   2 #> 543 508.0362   2.723818   2 #> 544 500.4216   3.023766   2 #> 545 717.5811   3.073795   2 #> 546 511.2599   2.721926   2 #> 547 502.8210   4.697425   2 #> 548 502.3806   2.693389   2 #> 549 500.5805   2.574720   2 #> 550 500.4056   3.173052   2 #> 551 500.4748   2.671178   2 #> 552 568.4159   2.524399   2 #> 553 510.4260   2.713083   2 #> 554 501.6832   2.797510   2 #> 555 576.4225   3.470881   2 #> 556 546.0598   2.910960   2 #> 557 500.4644   2.696031   2 #> 558 500.3982   2.594641   2 #> 559 503.6051   3.833037   2 #> 560 901.7745   2.986976   2 #> 561 501.1621   3.139552   2 #> 562 711.9469   2.575116   2 #> 563 500.4683   3.573161   2 #> 564 501.6819   2.716578   2 #> 565 508.0412   3.053092   2 #> 566 538.8597   3.751439   2 #> 567 500.5772   2.857693   2 #> 568 623.5270   3.615386   2 #> 569 500.4419   2.691528   2 #> 570 554.2682   2.832562   2 #> 571 502.5057   3.210309   2 #> 572 561.7646   2.519759   2 #> 573 500.7883   2.944650   2 #> 574 503.0770   3.071925   2 #> 575 516.2443   2.763910   2 #> 576 519.7952   2.819579   2 #> 577 790.5320   2.588992   2 #> 578 741.0634   2.657757   2 #> 579 500.6190   2.609850   2 #> 580 503.7872   2.628662   2 #> 581 677.9837   2.775773   2 #> 582 540.2307   2.731325   2 #> 583 500.7925   2.631176   2 #> 584 501.6037   2.785789   2 #> 585 504.5705   2.811300   2 #> 586 532.2237   2.520850   2 #> 587 821.0870   3.010287   2 #> 588 885.6140   3.449509   2 #> 589 616.4919   2.568930   2 #> 590 500.5143   3.103304   2 #> 591 503.0328   2.521032   2 #> 592 576.7364   2.929735   2 #> 593 500.4248   2.802274   2 #> 594 500.4870   2.641113   2 #> 595 565.2023   2.623776   2 #> 596 645.9688   3.377428   2 #> 597 501.2787   2.749393   2 #> 598 501.7510   3.217078   2 #> 599 500.5554   2.964071   2 #> 600 502.5470   2.505942   2 #> 601 510.1613   3.556501   2 #> 602 500.5581   2.521123   2 #> 603 876.4976   2.919476   2 #> 604 865.7401   2.585641   2 #> 605 500.4045   3.181922   2 #> 606 536.4087   3.751571   2 #> 607 734.0374   2.535694   2 #> 608 500.9085   2.608693   2 #> 609 500.8699   2.589685   2 #> 610 515.5641   2.602190   2 #> 611 500.7922   4.148813   2 #> 612 500.5000   3.193486   2 #> 613 516.9403   2.563626   2 #> 614 501.5649   2.682731   2 #> 615 533.9946   2.707993   2 #> 616 502.7402   3.073796   2 #> 617 512.6199   2.778211   2 #> 618 523.4184   2.929455   2 #> 619 502.0286   2.543731   2 #> 620 500.6278   3.765950   2 #> 621 501.2958   2.507665   2 #> 622 510.3726   2.713164   2 #> 623 501.7301   2.707566   2 #> 624 501.8269   2.629149   2 #> 625 502.3420   2.737028   2 #> 626 511.6407   3.453525   2 #> 627 504.6701   2.999404   2 #> 628 513.5703   2.758888   2 #> 629 500.6079   3.339029   2 #> 630 501.3738   3.124711   2 #> 631 526.3076   2.676402   2 #> 632 504.1970   2.501318   2 #> 633 506.3201   2.739401   2 #> 634 647.8831   3.425994   2 #> 635 500.4045   2.697574   2 #> 636 539.5785   3.257711   2 #> 637 500.6334   2.675657   2 #> 638 500.5672   2.532607   2 #> 639 500.5363   3.746401   2 #> 640 514.2356   2.590371   2 #> 641 506.3331   3.296223   2 #> 642 500.7092   3.370100   2 #> 643 500.4918   2.779972   2 #> 644 500.9957   3.005337   2 #> 645 519.3957   2.549922   2 #> 646 502.3797   2.930654   2 #> 647 500.4816   2.630250   2 #> 648 500.5923   2.530446   2 #> 649 501.2416   2.862260   2 #> 650 501.4147   2.638520   2 #> 651 503.1625   3.000408   2 #> 652 500.4428   3.368491   2 #> 653 557.6882   3.221643   2 #> 654 553.8891   2.834052   2 #> 655 814.2875   2.734456   2 #> 656 550.2499   2.517702   2 #> 657 501.0228   2.734064   2 #> 658 501.7264   3.476069   2 #> 659 500.5030   2.521619   2 #> 660 589.7153   2.973155   2 #> 661 701.8527   2.766995   2 #> 662 500.6107   2.829266   2 #> 663 504.4023   3.094129   2 #> 664 509.4460   2.525439   2 #> 665 570.9375   3.512387   2 #> 666 505.0382   2.823478   2 #> 667 549.6918   2.987196   2 #> 668 732.8093   2.760988   2 #> 669 522.2427   3.538451   2 #> 670 851.7272   3.310778   2 #> 671 748.7969   2.685392   2 #> 672 585.6085   3.753521   2 #> 673 607.5263   2.727145   2 #> 674 500.7201   2.932146   2 #> 675 513.1145   2.814917   2 #> 676 502.3788   3.036161   2 #> 677 543.7839   2.535736   2 #> 678 503.8816   2.722742   2 #> 679 774.4698   2.778563   2 #> 680 502.5243   2.692502   2 #> 681 510.8346   2.608856   2 #> 682 714.5798   3.807806   2 #> 683 500.7184   2.908112   2 #> 684 500.4217   3.285875   2 #> 685 701.9463   2.861641   2 #> 686 500.6879   2.854624   2 #> 687 500.7971   2.769072   2 #> 688 520.2623   2.606290   2 #> 689 526.6162   3.159688   2 #> 690 684.6298   2.681380   2 #> 691 683.1503   2.878795   2 #> 692 645.0741   3.604718   2 #> 693 508.7894   3.921466   2 #> 694 692.9913   2.906089   2 #> 695 699.8850   2.791145   2 #> 696 693.7820   2.614378   2 #> 697 514.1803   4.078897   2 #> 698 500.9801   3.625968   2 #> 699 771.5118   2.575874   2 #> 700 501.6091   2.683860   2 #> 701 689.9821   3.756943   2 #> 702 501.2300   2.981665   2 #> 703 500.8105   3.072679   2 #> 704 500.7951   3.777045   2 #> 705 500.7912   2.556348   2 #> 706 594.7219   3.870601   2 #> 707 527.7621   2.549903   2 #> 708 500.9824   2.538338   2 #> 709 500.6725   2.590510   2 #> 710 586.0504   3.184876   2 #> 711 509.9226   2.608493   2 #> 712 505.1528   2.832441   2 #> 713 501.5295   2.524693   2 #> 714 559.3302   3.134351   2 #> 715 564.1027   2.883819   2 #> 716 538.6993   2.812866   2 #> 717 501.6171   3.204313   2 #> 718 504.4283   2.682162   2 #> 719 501.7829   2.510655   2 #> 720 501.6043   3.145425   2 #> 721 501.5145   2.524589   2 #> 722 501.8068   3.149453   2 #> 723 507.0469   2.689898   2 #> 724 501.4173   2.859884   2 #> 725 501.5264   3.873324   2 #> 726 510.2216   3.079688   2 #> 727 507.0673   3.536375   2 #> 728 501.6048   2.700842   2 #> 729 721.2925   2.883893   2 #> 730 501.4022   3.136144   2 #> 731 501.5725   3.152533   2 #> 732 502.7802   2.953656   2 #> 733 506.6003   3.402998   2 #> 734 503.8435   2.509931   2 #> 735 502.1887   2.855756   2 #> 736 500.5717   2.505971   2 #> 737 552.2218   2.874731   2 #> 738 500.0940   2.516084   2 #> 739 620.7106   2.508088   2 #> 740 653.3196   2.711790   2 #> 741 656.0204   3.343596   2 #> 742 658.7578   2.949062   2 #> 743 653.9655   2.704526   2 #> 744 652.8006   2.883368   2 #> 745 664.8876   3.009739   2 #> 746 675.2840   2.797233   2 #> 747 676.3240   3.102908   2 #> 748 727.7000   2.556740   2 #> 749 655.9135   3.226838   2 #> 750 741.8175   3.854159   2 #> 751 653.0338   2.538746   2 #> 752 652.6355   2.525664   2 #> 753 653.1879   2.679447   2 #> 754 655.8400   2.810715   2 #> 755 655.3990   2.525196   2 #> 756 652.7689   3.026356   2 #> 757 653.0051   2.670336   2 #> 758 666.4933   3.021651   2 #> 759 659.4801   2.733278   2 #> 760 652.9550   3.102861   2 #> 761 654.3238   2.964029   2 #> 762 655.3279   3.291103   2 #> 763 652.8714   2.863248   2 #> 764 653.6125   3.021977   2 #> 765 659.7752   2.509285   2 #> 766 652.8748   2.989116   2 #> 767 653.7292   3.052405   2 #> 768 822.7796   2.714782   2 #> 769 658.6543   2.873423   2 #> 770 774.5134   2.521577   2 #> 771 653.2611   2.991572   2 #> 772 690.5333   2.642434   2 #> 773 655.5151   3.173546   2 #> 774 653.5138   2.930015   2 #> 775 654.2116   3.082622   2 #> 776 653.9336   2.506529   2 #> 777 741.1012   4.815500   2 #> 778 652.7004   3.124981   2 #> 779 674.5058   2.578865   2 #> 780 775.0165   2.666224   2 #> 781 654.2098   2.553629   2 #> 782 654.0450   5.541519   2 #> 783 672.7971   2.628141   2 #> 784 652.6094   2.841646   2 #> 785 686.6358   3.442223   2 #> 786 656.5617   3.644282   2 #> 787 652.7960   2.850263   2 #> 788 652.8014   2.822511   2 #> 789 653.3550   2.644005   2 #> 790 708.4491   3.323197   2 #> 791 652.6255   2.995368   2 #> 792 931.5807   2.535813   2 #> 793 658.6741   2.856025   2 #> 794 653.4578   2.656803   2 #> 795 653.1198   3.147437   2 #> 796 652.7244   2.746390   2 #> 797 653.0289   3.853573   2 #> 798 945.6775   3.555758   2 #> 799 656.3155   3.645406   2 #> 800 653.3752   2.501070   2 #> 801 652.9662   2.597519   2 #> 802 668.3132   3.321130   2 #> 803 653.7564   2.569685   2 #> 804 653.7472   4.146113   2 #> 805 796.5114   2.978648   2 #> 806 652.8782   3.506486   2 #> 807 652.6123   2.607182   2 #> 808 654.6188   2.552088   2 #> 809 652.8405   2.916467   2 #> 810 652.6923   3.071056   2 #> 811 652.6519   2.699079   2 #> 812 692.4791   3.591855   2 #> 813 656.0547   2.529206   2 #> 814 654.9094   2.541518   2 #> 815 652.7774   3.083094   2 #> 816 699.3459   2.518439   2 #> 817 548.3308   3.185456   2 #> 818 583.6523   3.531527   2 #> 819 523.4045   3.501915   2 #> 820 501.2844   3.169053   2 #> 821 521.6806   3.102753   2 #> 822 823.9843   2.883842   2 #> 823 812.9690   2.593899   2 #> 824 580.7354   3.162308   2 #> 825 772.5698   2.588311   2 #> 826 383.5895   2.578317   2 #> 827 399.5850   3.255767   2 #> 828 856.0697   3.701536   2 #> 829 821.9409   3.520739   2 #> 830 326.9217   3.436154   2 #> 831 376.4780   2.647529   2 #> 832 265.1132   2.620786   2 #> 833 391.6914   2.922753   2 #> 834 263.7889   2.621180   2 #> 835 439.5110   3.051522   2 #> 836 371.8539   2.532062   2 #> 837 367.7789   3.059558   2 #> 838 814.0684   2.729848   2 #> 839 533.6490   3.013043   2 #> 840 369.4177   3.045647   2 #> 841 368.7329   3.026831   2 #> 842 379.9995   2.532507   2 #> 843 368.2871   2.623331   2 #> 844 494.4239   2.619247   2 #> 845 102.3352   3.048949   2 #> 846 101.9942   2.950291   2 #> 847 502.2900   2.536970   2 #> 848 481.6089   2.550018   2 #> 849 294.1381   2.602451   2 #> 850 892.1695   2.769827   2 #> 851 748.4272   2.978302   2 #> 852 750.4979   3.431358   2 #> 853 201.7575   3.337063   2 #> 854 199.5328   2.703500   2 #> 855 200.2948   2.981800   2 #> 856 199.4017   2.916630   2 #>  #> [[4]] #>            ts magnitudes gen #> 1    503.7635   2.728600   3 #> 2    520.2058   2.627383   3 #> 3    572.6890   2.937822   3 #> 4    698.2008   2.858535   3 #> 5    696.5249   3.038561   3 #> 6    696.8033   2.541575   3 #> 7    698.7604   2.504757   3 #> 8    781.9731   2.588811   3 #> 9    700.4765   3.084762   3 #> 10   574.1067   2.658703   3 #> 11   502.6848   3.322459   3 #> 12   500.5936   3.511378   3 #> 13   502.4522   2.821626   3 #> 14   861.2494   3.034341   3 #> 15   500.8773   2.572390   3 #> 16   501.0982   2.939661   3 #> 17   500.8188   3.019991   3 #> 18   500.8190   2.741455   3 #> 19   524.6884   2.607081   3 #> 20   500.8298   2.975052   3 #> 21   503.5936   3.494823   3 #> 22   501.6598   2.778773   3 #> 23   556.1407   2.697270   3 #> 24   620.4562   2.994317   3 #> 25   971.2035   3.282170   3 #> 26   539.7146   3.092579   3 #> 27   984.2371   3.162404   3 #> 28   528.5132   3.490616   3 #> 29   634.0969   2.666864   3 #> 30   506.1634   2.619518   3 #> 31   523.6024   2.763771   3 #> 32   535.2224   2.937631   3 #> 33   532.7032   2.845564   3 #> 34   539.8471   2.950273   3 #> 35   524.6127   2.905053   3 #> 36   530.0055   2.537553   3 #> 37   555.7176   2.598663   3 #> 38   524.0026   2.507326   3 #> 39   523.7458   2.649354   3 #> 40   523.5761   2.529020   3 #> 41   585.6127   2.742841   3 #> 42   634.3697   2.923937   3 #> 43   626.9159   2.665521   3 #> 44   605.5464   3.000087   3 #> 45   839.2198   2.658959   3 #> 46   695.5099   2.749273   3 #> 47   695.2768   2.568021   3 #> 48   562.7623   2.705831   3 #> 49   544.8270   2.666385   3 #> 50   546.2983   3.268140   3 #> 51   544.2868   2.578637   3 #> 52   544.6324   2.613410   3 #> 53   693.3630   3.022697   3 #> 54   543.9465   2.923745   3 #> 55   551.7644   2.530076   3 #> 56   916.2216   2.670376   3 #> 57   507.0398   2.514394   3 #> 58   508.1492   2.769046   3 #> 59   541.3934   3.372092   3 #> 60   918.3544   3.283815   3 #> 61   510.1819   2.874417   3 #> 62   779.5545   2.641080   3 #> 63   559.1504   2.631867   3 #> 64   695.8969   3.106460   3 #> 65   508.4253   3.159814   3 #> 66   506.5900   3.503288   3 #> 67   507.9360   3.332971   3 #> 68   506.8354   2.533259   3 #> 69   507.1876   2.725938   3 #> 70   506.4292   2.934435   3 #> 71   507.0884   2.677999   3 #> 72   506.3996   2.801634   3 #> 73   863.3195   2.580779   3 #> 74   507.4514   3.171483   3 #> 75   667.6919   3.124028   3 #> 76   508.1426   2.654320   3 #> 77   533.9836   3.024545   3 #> 78   692.9948   2.642479   3 #> 79   509.9483   3.085126   3 #> 80   866.3026   2.778145   3 #> 81   512.4300   2.763253   3 #> 82   506.4271   2.577393   3 #> 83   506.4709   2.876191   3 #> 84   506.4039   2.560375   3 #> 85   506.5211   2.885823   3 #> 86   506.9853   4.052364   3 #> 87   506.6593   2.980835   3 #> 88   510.0234   2.702267   3 #> 89   506.3716   3.675670   3 #> 90   507.8168   2.653350   3 #> 91   598.7344   4.116649   3 #> 92   640.3532   3.208515   3 #> 93   507.3234   3.233848   3 #> 94   506.4413   2.729753   3 #> 95   510.0691   2.974644   3 #> 96   541.2666   2.866181   3 #> 97   513.1165   3.505585   3 #> 98   508.1098   2.631896   3 #> 99   528.8783   2.950225   3 #> 100  528.7571   2.532524   3 #> 101  513.8747   4.862165   3 #> 102  611.1351   2.677717   3 #> 103  570.7500   2.504274   3 #> 104  686.3272   2.534044   3 #> 105  502.0620   3.127124   3 #> 106  508.0794   2.628188   3 #> 107  706.1120   2.629420   3 #> 108  517.8693   3.001435   3 #> 109  530.2724   2.876966   3 #> 110  524.9788   3.642145   3 #> 111  520.4705   3.050264   3 #> 112  517.9605   3.140738   3 #> 113  518.9753   2.649939   3 #> 114  518.2042   2.584641   3 #> 115  525.1340   2.971509   3 #> 116  523.7596   2.910356   3 #> 117  517.8899   3.350092   3 #> 118  576.2672   3.105746   3 #> 119  521.8940   3.650838   3 #> 120  808.2433   2.593156   3 #> 121  521.5615   2.626535   3 #> 122  555.7791   2.523177   3 #> 123  521.2768   2.526440   3 #> 124  520.0137   2.595359   3 #> 125  538.5149   2.562776   3 #> 126  518.4164   4.610793   3 #> 127  518.2960   3.342153   3 #> 128  522.1004   2.793791   3 #> 129  554.4202   2.884949   3 #> 130  614.6745   3.833310   3 #> 131  564.6184   2.936464   3 #> 132  518.4949   3.157638   3 #> 133  518.2199   3.322106   3 #> 134  518.2662   2.629166   3 #> 135  509.4118   2.759473   3 #> 136  509.2900   2.663576   3 #> 137  989.8362   2.594310   3 #> 138  506.0181   2.677719   3 #> 139  500.6364   2.853863   3 #> 140  501.6479   3.362478   3 #> 141  500.3414   3.415780   3 #> 142  599.3997   3.487147   3 #> 143  500.2421   2.889815   3 #> 144  564.2969   2.748994   3 #> 145  537.1520   3.183208   3 #> 146  501.2755   3.350012   3 #> 147  501.1039   2.556986   3 #> 148  507.1031   2.870920   3 #> 149  798.6307   3.074978   3 #> 150  517.1335   2.901556   3 #> 151  527.4881   2.538557   3 #> 152  560.4298   3.734831   3 #> 153  558.8538   2.575145   3 #> 154  615.9753   2.852457   3 #> 155  834.1858   3.104396   3 #> 156  567.0395   3.197748   3 #> 157  558.6786   2.555354   3 #> 158  599.9655   3.164441   3 #> 159  879.2250   3.097092   3 #> 160  558.5661   2.508741   3 #> 161  559.6477   2.532800   3 #> 162  577.9593   2.535462   3 #> 163  588.3555   2.973785   3 #> 164  566.1129   3.336218   3 #> 165  560.0449   2.576805   3 #> 166  558.6031   2.775194   3 #> 167  573.3291   2.764076   3 #> 168  515.1728   3.099893   3 #> 169  521.6586   2.547604   3 #> 170  523.1804   3.126578   3 #> 171  645.4393   2.785770   3 #> 172  522.6707   3.395258   3 #> 173  522.4547   2.815012   3 #> 174  522.3864   2.828815   3 #> 175  521.6779   2.537681   3 #> 176  521.3578   2.769520   3 #> 177  522.2776   2.527563   3 #> 178  521.4860   2.562752   3 #> 179  521.4448   2.525685   3 #> 180  522.9027   2.727022   3 #> 181  522.4517   2.694880   3 #> 182  522.0108   2.515309   3 #> 183  654.4893   2.660037   3 #> 184  526.5202   3.695761   3 #> 185  506.4559   3.147737   3 #> 186  836.0493   4.002787   3 #> 187  515.2115   2.578136   3 #> 188  502.6335   3.348768   3 #> 189  825.8980   2.763212   3 #> 190  502.8669   2.804826   3 #> 191  547.7897   2.693784   3 #> 192  511.2372   2.681297   3 #> 193  503.1983   3.311363   3 #> 194  608.5665   2.892692   3 #> 195  893.5658   3.009740   3 #> 196  728.7455   2.644239   3 #> 197  686.5423   4.957795   3 #> 198  622.9452   3.484436   3 #> 199  630.1759   3.657955   3 #> 200  839.8039   2.626745   3 #> 201  581.2630   2.732980   3 #> 202  654.1253   2.683412   3 #> 203  515.5822   2.814379   3 #> 204  575.3807   2.547544   3 #> 205  516.6087   2.587887   3 #> 206  515.6439   3.717510   3 #> 207  694.5328   2.784797   3 #> 208  618.7119   2.717646   3 #> 209  560.1866   2.780478   3 #> 210  527.8496   2.640155   3 #> 211  523.2043   2.754522   3 #> 212  516.3068   2.899274   3 #> 213  551.9671   2.726604   3 #> 214  519.4543   2.501985   3 #> 215  515.7253   2.777262   3 #> 216  569.8886   2.520450   3 #> 217  519.5726   2.507445   3 #> 218  515.6694   2.523164   3 #> 219  534.4516   2.704831   3 #> 220  892.1151   3.881099   3 #> 221  515.6315   2.621928   3 #> 222  517.7211   2.669892   3 #> 223  515.5983   4.206038   3 #> 224  516.4450   2.652116   3 #> 225  515.8694   2.547244   3 #> 226  522.4164   2.576085   3 #> 227  515.6137   2.744241   3 #> 228  516.9231   3.009966   3 #> 229  516.5952   3.124878   3 #> 230  516.7295   2.987808   3 #> 231  516.3746   3.133111   3 #> 232  525.2751   2.692525   3 #> 233  579.7473   2.801375   3 #> 234  516.2131   2.674785   3 #> 235  516.6438   3.189486   3 #> 236  521.9514   2.514715   3 #> 237  541.3539   2.593298   3 #> 238  982.3082   2.919456   3 #> 239  517.2447   2.733933   3 #> 240  515.8646   2.555908   3 #> 241  515.7420   3.095293   3 #> 242  515.7054   2.589828   3 #> 243  520.7043   2.522049   3 #> 244  515.5913   3.007226   3 #> 245  518.2314   2.525600   3 #> 246  516.3531   2.683391   3 #> 247  517.3557   3.273173   3 #> 248  854.9016   2.665268   3 #> 249  515.7385   3.827203   3 #> 250  631.7537   3.745581   3 #> 251  525.1181   2.679283   3 #> 252  526.4597   2.525239   3 #> 253  555.5387   2.660753   3 #> 254  516.9145   2.579577   3 #> 255  524.5916   3.102319   3 #> 256  540.6832   2.615451   3 #> 257  840.9691   4.637596   3 #> 258  670.1983   3.349519   3 #> 259  515.6264   2.788001   3 #> 260  685.4222   3.080621   3 #> 261  516.1475   2.724735   3 #> 262  515.9149   2.619114   3 #> 263  517.3089   2.685112   3 #> 264  534.2617   3.698338   3 #> 265  546.4528   2.878570   3 #> 266  518.4739   2.803734   3 #> 267  522.7316   2.891759   3 #> 268  808.8830   3.261979   3 #> 269  515.8884   2.580531   3 #> 270  519.1147   2.780889   3 #> 271  526.5960   2.709531   3 #> 272  515.6178   2.767080   3 #> 273  556.8440   2.801306   3 #> 274  515.7968   3.116933   3 #> 275  546.2157   2.775542   3 #> 276  515.5754   3.016605   3 #> 277  523.5945   3.091393   3 #> 278  515.5742   2.619819   3 #> 279  515.8664   3.146884   3 #> 280  516.7613   2.529294   3 #> 281  529.0792   2.533754   3 #> 282  519.7648   2.853352   3 #> 283  515.6355   2.794547   3 #> 284  515.6261   3.775988   3 #> 285  518.2048   2.542137   3 #> 286  515.6142   5.119332   3 #> 287  649.3914   2.514480   3 #> 288  515.8188   2.806562   3 #> 289  515.9101   2.772310   3 #> 290  515.6418   3.076615   3 #> 291  516.7840   3.020351   3 #> 292  515.7013   2.845127   3 #> 293  516.5775   3.180089   3 #> 294  515.6188   2.557454   3 #> 295  515.8212   2.942183   3 #> 296  891.8249   2.507104   3 #> 297  515.7466   2.620513   3 #> 298  515.8664   2.506138   3 #> 299  516.8854   2.759854   3 #> 300  606.6953   2.808068   3 #> 301  516.5913   2.741773   3 #> 302  517.6470   2.529383   3 #> 303  515.7714   3.448811   3 #> 304  516.6918   2.509766   3 #> 305  519.1847   2.564895   3 #> 306  515.8146   5.727412   3 #> 307  519.3883   2.784634   3 #> 308  523.0198   2.835338   3 #> 309  530.2751   2.694466   3 #> 310  516.0342   2.687226   3 #> 311  516.1311   3.037628   3 #> 312  520.0234   3.044681   3 #> 313  519.7741   2.730638   3 #> 314  515.6546   3.416454   3 #> 315  516.0481   2.545303   3 #> 316  516.2877   3.297563   3 #> 317  520.4566   2.658216   3 #> 318  516.6322   2.615711   3 #> 319  526.2030   3.418007   3 #> 320  543.5365   2.678832   3 #> 321  550.1048   2.557692   3 #> 322  515.6623   2.972025   3 #> 323  516.2062   3.595206   3 #> 324  519.9087   3.056912   3 #> 325  515.6080   2.547182   3 #> 326  515.7735   3.356553   3 #> 327  515.8474   2.536604   3 #> 328  540.4203   2.843207   3 #> 329  529.4416   2.784466   3 #> 330  544.9524   3.464296   3 #> 331  518.4135   2.658451   3 #> 332  516.0999   2.991469   3 #> 333  558.4460   3.053810   3 #> 334  518.4120   2.698042   3 #> 335  515.5887   2.502891   3 #> 336  816.4007   2.681277   3 #> 337  518.4047   4.082554   3 #> 338  527.8232   2.691778   3 #> 339  517.4351   2.603526   3 #> 340  520.1940   3.139735   3 #> 341  530.2723   2.548679   3 #> 342  995.7774   2.940594   3 #> 343  518.4506   2.702951   3 #> 344  518.7629   2.753973   3 #> 345  518.5764   3.280883   3 #> 346  779.5834   2.510826   3 #> 347  516.5263   2.647053   3 #> 348  525.9022   2.553906   3 #> 349  824.6541   2.639553   3 #> 350  515.6023   3.068314   3 #> 351  555.7281   3.679071   3 #> 352  516.9956   2.507861   3 #> 353  520.8393   2.987585   3 #> 354  515.6393   3.146614   3 #> 355  515.5984   3.241931   3 #> 356  516.6678   3.258697   3 #> 357  516.8872   2.977920   3 #> 358  603.0966   2.734968   3 #> 359  529.6526   3.063534   3 #> 360  519.7259   2.693995   3 #> 361  523.6917   2.816390   3 #> 362  517.4766   2.842427   3 #> 363  572.7835   2.790175   3 #> 364  524.1656   2.911623   3 #> 365  517.2203   3.845626   3 #> 366  609.5434   2.709865   3 #> 367  574.0742   3.011204   3 #> 368  689.9358   2.525320   3 #> 369  532.1822   3.938047   3 #> 370  544.6973   2.790789   3 #> 371  516.1615   2.873424   3 #> 372  517.7423   2.900664   3 #> 373  568.0853   3.000744   3 #> 374  517.2210   2.594881   3 #> 375  521.4380   2.776288   3 #> 376  515.6287   3.292464   3 #> 377  515.6015   2.742547   3 #> 378  516.0866   2.505374   3 #> 379  515.6524   3.287655   3 #> 380  531.3458   2.617203   3 #> 381  520.0480   2.705248   3 #> 382  585.4764   3.604676   3 #> 383  643.5088   2.821267   3 #> 384  518.9491   2.545587   3 #> 385  516.0445   2.541415   3 #> 386  625.1594   2.698165   3 #> 387  527.5022   3.262146   3 #> 388  518.8105   4.393992   3 #> 389  606.5209   2.974242   3 #> 390  532.6690   2.970226   3 #> 391  515.6061   3.240490   3 #> 392  532.9308   3.817117   3 #> 393  518.0129   3.062398   3 #> 394  530.8081   2.616731   3 #> 395  525.7396   2.766403   3 #> 396  517.9253   3.153055   3 #> 397  515.7166   2.807567   3 #> 398  520.4393   3.286121   3 #> 399  523.2105   2.896380   3 #> 400  516.5983   2.971667   3 #> 401  634.6362   3.905895   3 #> 402  515.9503   2.605137   3 #> 403  517.9395   2.973303   3 #> 404  566.1715   3.130270   3 #> 405  516.8207   3.015079   3 #> 406  547.3468   2.793187   3 #> 407  515.8169   3.333061   3 #> 408  541.8127   2.590606   3 #> 409  515.7840   3.494548   3 #> 410  666.8452   2.594421   3 #> 411  528.3532   3.172398   3 #> 412  518.0417   3.686116   3 #> 413  517.4982   2.522807   3 #> 414  515.6495   3.598394   3 #> 415  519.4508   2.834667   3 #> 416  522.5670   2.913535   3 #> 417  519.6538   2.955424   3 #> 418  701.9501   3.026665   3 #> 419  516.1626   3.658175   3 #> 420  516.0195   3.276245   3 #> 421  515.6837   3.902071   3 #> 422  515.5763   2.634687   3 #> 423  516.5154   2.777874   3 #> 424  840.2516   3.104151   3 #> 425  527.5095   2.823253   3 #> 426  590.0222   2.930819   3 #> 427  521.9372   2.555281   3 #> 428  546.1859   2.943059   3 #> 429  515.6030   2.599954   3 #> 430  516.4327   2.826927   3 #> 431  516.6759   2.628637   3 #> 432  786.9238   4.186032   3 #> 433  774.0547   3.066702   3 #> 434  515.9708   2.556485   3 #> 435  516.0509   2.712284   3 #> 436  515.8339   2.662853   3 #> 437  783.4367   2.526747   3 #> 438  515.8021   3.844960   3 #> 439  534.6098   2.662092   3 #> 440  518.5152   2.596340   3 #> 441  518.2061   2.556353   3 #> 442  515.6307   2.642988   3 #> 443  515.6466   3.200584   3 #> 444  516.3429   2.721955   3 #> 445  653.5721   2.833079   3 #> 446  516.6956   3.008441   3 #> 447  529.0705   2.949509   3 #> 448  517.4171   2.795177   3 #> 449  524.5656   2.579946   3 #> 450  521.9317   2.702078   3 #> 451  536.5011   2.635188   3 #> 452  554.9537   2.504818   3 #> 453  542.4067   2.766525   3 #> 454  515.7114   2.872304   3 #> 455  535.5969   5.532573   3 #> 456  518.4111   4.670040   3 #> 457  517.3234   2.697085   3 #> 458  520.8127   2.961853   3 #> 459  520.9593   2.628804   3 #> 460  631.3137   2.945672   3 #> 461  515.6669   2.745440   3 #> 462  515.6705   2.885726   3 #> 463  607.2689   2.876506   3 #> 464  525.1429   3.204216   3 #> 465  576.0619   2.792781   3 #> 466  515.7133   2.729614   3 #> 467  517.0003   2.960944   3 #> 468  517.2868   3.053840   3 #> 469  535.6050   3.135751   3 #> 470  657.3885   4.158927   3 #> 471  515.6750   2.562638   3 #> 472  515.5669   2.878119   3 #> 473  521.1499   2.918229   3 #> 474  522.1337   3.357029   3 #> 475  520.3805   2.646687   3 #> 476  750.0046   2.503361   3 #> 477  543.1269   2.748930   3 #> 478  611.4790   2.761016   3 #> 479  567.3925   3.131562   3 #> 480  517.3182   2.525950   3 #> 481  934.0768   2.527327   3 #> 482  557.4521   2.729437   3 #> 483  515.6976   2.802098   3 #> 484  516.1950   2.839274   3 #> 485  537.6934   2.971147   3 #> 486  518.6741   2.616302   3 #> 487  515.6242   3.237288   3 #> 488  515.7953   2.759367   3 #> 489  516.8158   3.416981   3 #> 490  516.5451   3.238499   3 #> 491  517.3740   3.700218   3 #> 492  570.6784   3.109244   3 #> 493  518.9320   3.092957   3 #> 494  516.0181   2.661950   3 #> 495  587.1935   2.725848   3 #> 496  527.3059   2.524721   3 #> 497  515.6059   2.697480   3 #> 498  517.1298   2.501199   3 #> 499  516.4624   2.586894   3 #> 500  519.7906   3.165881   3 #> 501  515.8531   2.591184   3 #> 502  633.2893   2.524501   3 #> 503  521.6817   2.632054   3 #> 504  603.6976   3.418536   3 #> 505  809.9016   3.271301   3 #> 506  515.6939   3.098870   3 #> 507  678.4624   2.663684   3 #> 508  515.7310   2.647358   3 #> 509  515.5984   3.261106   3 #> 510  515.7255   2.547558   3 #> 511  516.0904   2.507278   3 #> 512  520.9813   3.642649   3 #> 513  562.2000   2.905838   3 #> 514  516.9297   2.670915   3 #> 515  524.5875   2.554736   3 #> 516  517.0221   2.705810   3 #> 517  527.9332   2.814486   3 #> 518  857.4609   2.507424   3 #> 519  523.9405   2.761550   3 #> 520  581.8703   2.795219   3 #> 521  773.9506   2.583725   3 #> 522  596.9390   2.578844   3 #> 523  515.7354   2.506170   3 #> 524  515.6044   2.974317   3 #> 525  529.3713   2.516297   3 #> 526  536.3404   3.045324   3 #> 527  526.9554   2.898743   3 #> 528  515.6382   2.861710   3 #> 529  515.5920   3.457428   3 #> 530  521.6182   2.518381   3 #> 531  783.2910   2.608616   3 #> 532  515.7519   2.804851   3 #> 533  517.4321   3.008761   3 #> 534  515.6103   3.722831   3 #> 535  515.8452   2.863122   3 #> 536  550.6196   2.825376   3 #> 537  519.8892   3.424642   3 #> 538  556.6743   2.964319   3 #> 539  515.6758   2.525274   3 #> 540  515.5877   5.092061   3 #> 541  631.0989   3.431623   3 #> 542  529.4110   2.716330   3 #> 543  519.0088   2.552948   3 #> 544  563.4049   2.557170   3 #> 545  964.3236   2.716407   3 #> 546  524.4714   2.518637   3 #> 547  517.2903   2.726607   3 #> 548  515.7275   2.569486   3 #> 549  515.8398   2.605190   3 #> 550  518.3790   2.553726   3 #> 551  525.5056   2.925725   3 #> 552  516.7218   3.274212   3 #> 553  593.2687   3.777627   3 #> 554  517.1149   4.294933   3 #> 555  517.1646   2.599581   3 #> 556  520.4729   2.556231   3 #> 557  722.9645   2.985405   3 #> 558  515.6004   3.857873   3 #> 559  515.7563   3.103537   3 #> 560  515.8390   2.881070   3 #> 561  515.8433   2.933400   3 #> 562  516.4693   2.759251   3 #> 563  515.6076   2.646576   3 #> 564  523.7917   3.093352   3 #> 565  621.8298   2.543908   3 #> 566  531.2667   2.675050   3 #> 567  521.0863   3.229771   3 #> 568  516.0998   2.959008   3 #> 569  522.3103   2.624524   3 #> 570  522.5842   2.611715   3 #> 571  515.6077   3.972143   3 #> 572  521.6866   2.686391   3 #> 573  571.6214   2.667431   3 #> 574  870.9821   2.937189   3 #> 575  917.9603   3.228203   3 #> 576  515.8097   3.331481   3 #> 577  515.8094   3.084279   3 #> 578  518.6864   2.737394   3 #> 579  515.6559   2.967749   3 #> 580  662.3391   3.108949   3 #> 581  523.1787   2.715223   3 #> 582  516.4247   3.829695   3 #> 583  535.4623   3.514146   3 #> 584  522.4950   2.800575   3 #> 585  516.1123   3.098617   3 #> 586  525.0334   2.649056   3 #> 587  864.7696   2.937684   3 #> 588  521.1765   2.849080   3 #> 589  519.8049   3.091899   3 #> 590  522.2939   2.544954   3 #> 591  515.5761   2.620571   3 #> 592  515.7264   2.628062   3 #> 593  522.5599   3.726910   3 #> 594  515.7403   3.443365   3 #> 595  515.8884   3.165600   3 #> 596  535.7642   3.652961   3 #> 597  520.3165   3.023122   3 #> 598  515.8296   2.853916   3 #> 599  520.6229   2.907950   3 #> 600  515.5676   2.569876   3 #> 601  543.2827   3.484494   3 #> 602  518.5969   2.605808   3 #> 603  515.7614   2.862591   3 #> 604  664.0028   3.017009   3 #> 605  516.6692   2.573991   3 #> 606  535.6566   2.692048   3 #> 607  516.7359   2.539250   3 #> 608  515.7900   2.731632   3 #> 609  714.9109   2.585905   3 #> 610  629.5715   3.006080   3 #> 611  515.8615   3.192708   3 #> 612  515.5961   2.513649   3 #> 613  539.7363   2.781554   3 #> 614  516.0727   2.882606   3 #> 615  524.0571   2.505508   3 #> 616  533.2739   2.710366   3 #> 617  515.9854   2.567536   3 #> 618  516.6609   2.937927   3 #> 619  637.3503   2.710600   3 #> 620  517.7518   2.734367   3 #> 621  515.5813   2.998774   3 #> 622  526.1449   3.217438   3 #> 623  522.4160   2.973793   3 #> 624  546.7870   2.802791   3 #> 625  551.9736   2.780154   3 #> 626  515.6352   2.918403   3 #> 627  613.3230   2.530942   3 #> 628  515.7592   2.959445   3 #> 629  519.4463   3.258689   3 #> 630  515.6811   2.681038   3 #> 631  516.2502   2.744594   3 #> 632  527.5104   3.262981   3 #> 633  516.2289   2.548264   3 #> 634  725.7829   2.917056   3 #> 635  515.7628   3.633416   3 #> 636  519.4484   2.749477   3 #> 637  515.5795   3.073910   3 #> 638  515.5836   2.602884   3 #> 639  515.6059   3.311053   3 #> 640  515.6119   2.997123   3 #> 641  519.3994   2.856320   3 #> 642  521.0723   3.144470   3 #> 643  556.5997   2.584873   3 #> 644  552.7566   2.987838   3 #> 645  515.7778   3.028289   3 #> 646  767.1319   3.589312   3 #> 647  515.7693   2.936602   3 #> 648  515.6336   2.559722   3 #> 649  578.6693   3.064496   3 #> 650  515.7609   3.185684   3 #> 651  518.2280   2.607518   3 #> 652  518.3933   3.250052   3 #> 653  658.9823   2.827416   3 #> 654  518.4095   2.538969   3 #> 655  515.5937   2.659122   3 #> 656  520.8771   2.788725   3 #> 657  517.0372   2.538332   3 #> 658  516.5000   2.607631   3 #> 659  518.2760   2.693500   3 #> 660  515.7582   2.660373   3 #> 661  533.2966   3.318113   3 #> 662  515.9707   2.633635   3 #> 663  517.5193   2.723543   3 #> 664  516.8460   2.631368   3 #> 665  555.7261   3.087987   3 #> 666  516.9953   2.503376   3 #> 667  516.3270   2.926393   3 #> 668  515.7258   3.015911   3 #> 669  600.3102   3.223380   3 #> 670  519.9340   3.305198   3 #> 671  604.7949   3.381651   3 #> 672  515.8766   2.674902   3 #> 673  562.0072   3.628772   3 #> 674  537.4173   2.796507   3 #> 675  516.1689   3.199576   3 #> 676  632.7476   2.595747   3 #> 677  515.5795   3.042613   3 #> 678  518.1289   2.620697   3 #> 679  516.0558   2.638934   3 #> 680  516.6373   3.407401   3 #> 681  583.6136   2.997649   3 #> 682  522.4874   2.820062   3 #> 683  516.2356   2.528579   3 #> 684  517.3011   2.500459   3 #> 685  664.3964   2.827948   3 #> 686  515.6758   2.521515   3 #> 687  527.3963   2.760224   3 #> 688  516.8902   2.710806   3 #> 689  534.3650   2.938696   3 #> 690  516.5796   2.704428   3 #> 691  515.5694   4.050287   3 #> 692  515.6415   2.850591   3 #> 693  516.0828   2.555381   3 #> 694  614.2348   2.665002   3 #> 695  516.6524   2.680839   3 #> 696  611.4113   2.820746   3 #> 697  973.5210   3.102265   3 #> 698  516.8983   2.500683   3 #> 699  515.7862   2.605001   3 #> 700  519.3299   2.634021   3 #> 701  515.9388   3.729843   3 #> 702  517.3519   2.993609   3 #> 703  524.2693   2.543110   3 #> 704  545.9111   2.608403   3 #> 705  605.7430   2.532724   3 #> 706  516.2639   2.558297   3 #> 707  519.0661   2.564752   3 #> 708  543.9323   2.914981   3 #> 709  516.7549   2.718321   3 #> 710  515.5844   2.608883   3 #> 711  517.3537   2.628940   3 #> 712  694.3123   2.693775   3 #> 713  515.9389   3.381138   3 #> 714  518.1272   3.035273   3 #> 715  518.2851   2.543942   3 #> 716  546.6278   2.691659   3 #> 717  524.3487   2.712847   3 #> 718  516.1185   2.812029   3 #> 719  679.4420   3.443514   3 #> 720  516.5647   2.735783   3 #> 721  604.7713   3.112701   3 #> 722  515.6402   3.255874   3 #> 723  534.1337   2.757377   3 #> 724  548.8421   3.205902   3 #> 725  533.2190   2.956931   3 #> 726  516.0039   2.841095   3 #> 727  521.9009   3.443239   3 #> 728  515.7581   3.000554   3 #> 729  520.1162   3.073440   3 #> 730  515.8705   6.249676   3 #> 731  515.5764   2.583367   3 #> 732  536.5222   2.624451   3 #> 733  515.5755   2.560730   3 #> 734  517.4283   2.635147   3 #> 735  515.8148   2.872245   3 #> 736  516.1575   2.706647   3 #> 737  516.0363   2.984432   3 #> 738  518.5712   3.135668   3 #> 739  515.7406   3.227928   3 #> 740  521.9218   2.553160   3 #> 741  516.7327   2.790780   3 #> 742  528.2093   2.928421   3 #> 743  524.8968   2.824260   3 #> 744  518.6373   2.828265   3 #> 745  522.3953   2.701254   3 #> 746  516.1281   2.717563   3 #> 747  570.9172   3.309196   3 #> 748  534.9574   2.961123   3 #> 749  516.3940   3.115811   3 #> 750  586.5877   2.885091   3 #> 751  515.8943   3.840039   3 #> 752  516.8860   3.535575   3 #> 753  516.3777   3.351661   3 #> 754  515.8661   2.616926   3 #> 755  516.8172   2.566177   3 #> 756  516.8120   2.851802   3 #> 757  515.5789   3.084588   3 #> 758  529.3450   2.584480   3 #> 759  565.5111   3.646466   3 #> 760  516.4975   3.177580   3 #> 761  515.6436   2.806117   3 #> 762  516.6913   2.651679   3 #> 763  518.0766   2.672638   3 #> 764  515.5965   2.696331   3 #> 765  518.2909   3.327071   3 #> 766  515.7411   2.514660   3 #> 767  516.7001   2.515627   3 #> 768  534.3682   2.793434   3 #> 769  519.7804   2.618104   3 #> 770  515.8683   3.198094   3 #> 771  515.6574   2.972718   3 #> 772  516.4892   3.356750   3 #> 773  517.3523   3.219813   3 #> 774  516.2103   3.253089   3 #> 775  585.4777   2.888730   3 #> 776  517.4457   3.112245   3 #> 777  602.5463   2.607336   3 #> 778  515.6496   2.820123   3 #> 779  540.2616   2.638381   3 #> 780  527.1787   2.922455   3 #> 781  517.2535   3.102156   3 #> 782  515.6540   3.437962   3 #> 783  582.5759   2.539753   3 #> 784  516.2780   3.123655   3 #> 785  515.8184   2.799622   3 #> 786  515.6637   4.478807   3 #> 787  536.5019   3.612638   3 #> 788  517.4569   2.696750   3 #> 789  553.2060   3.232577   3 #> 790  871.6484   2.567878   3 #> 791  515.5691   2.656146   3 #> 792  547.9579   3.110582   3 #> 793  516.3027   3.017840   3 #> 794  515.6447   2.610386   3 #> 795  541.0589   2.803740   3 #> 796  516.4767   2.840138   3 #> 797  586.6118   3.590396   3 #> 798  515.7654   2.517233   3 #> 799  949.1351   2.783089   3 #> 800  569.2230   2.504141   3 #> 801  516.6553   2.502872   3 #> 802  515.6100   2.728853   3 #> 803  699.4522   2.685552   3 #> 804  515.5829   3.222955   3 #> 805  517.3514   3.402096   3 #> 806  519.6541   2.649578   3 #> 807  902.2232   2.885830   3 #> 808  658.7189   2.614584   3 #> 809  515.6099   2.912113   3 #> 810  516.8204   2.568280   3 #> 811  516.0338   2.612495   3 #> 812  517.7124   2.572642   3 #> 813  530.3389   3.325696   3 #> 814  954.8420   2.953943   3 #> 815  644.7790   2.834834   3 #> 816  521.0182   2.617644   3 #> 817  516.5175   4.737010   3 #> 818  845.6158   3.758687   3 #> 819  515.6243   2.638151   3 #> 820  515.6166   3.298956   3 #> 821  522.9127   3.075124   3 #> 822  847.6330   2.662695   3 #> 823  585.2829   2.816498   3 #> 824  519.3248   2.795266   3 #> 825  597.8943   2.595596   3 #> 826  535.4732   3.393374   3 #> 827  601.9020   3.225160   3 #> 828  549.6255   3.375071   3 #> 829  753.0812   2.714446   3 #> 830  705.1237   2.582589   3 #> 831  523.3110   2.503160   3 #> 832  552.3845   3.754159   3 #> 833  516.0628   2.504133   3 #> 834  847.1605   2.606779   3 #> 835  540.8611   2.917377   3 #> 836  641.4331   2.869662   3 #> 837  531.6346   2.937422   3 #> 838  524.1392   3.534418   3 #> 839  516.4961   2.971762   3 #> 840  644.4875   2.635496   3 #> 841  658.9957   3.255705   3 #> 842  528.5347   3.132133   3 #> 843  691.7286   2.662517   3 #> 844  683.9284   3.625515   3 #> 845  710.1745   2.617352   3 #> 846  687.5260   2.643415   3 #> 847  686.8064   2.963521   3 #> 848  694.8742   3.052101   3 #> 849  684.3434   2.516405   3 #> 850  677.5619   2.556423   3 #> 851  577.4383   2.718254   3 #> 852  924.7168   2.575619   3 #> 853  775.4060   2.955410   3 #> 854  562.7023   2.690870   3 #> 855  500.2784   2.684117   3 #> 856  500.5790   2.677446   3 #> 857  503.4673   2.539307   3 #> 858  667.9758   3.095459   3 #> 859  503.7273   2.783915   3 #> 860  621.4604   2.527112   3 #> 861  872.7500   2.837372   3 #> 862  873.4881   2.741098   3 #> 863  857.0681   2.737516   3 #> 864  844.1464   2.740234   3 #> 865  843.8807   2.520206   3 #> 866  844.6457   4.019584   3 #> 867  843.9980   2.761191   3 #> 868  861.3182   3.369114   3 #> 869  844.1846   2.738766   3 #> 870  868.6027   3.048650   3 #> 871  848.5241   2.679420   3 #> 872  880.6835   2.678873   3 #> 873  514.6186   2.899426   3 #> 874  502.8442   2.658073   3 #> 875  503.1048   2.507686   3 #> 876  542.4606   2.594121   3 #> 877  500.6418   2.809552   3 #> 878  500.6165   2.582431   3 #> 879  908.6823   3.275012   3 #> 880  910.0994   2.657396   3 #> 881  908.4631   2.516692   3 #> 882  922.0572   3.020279   3 #> 883  505.2295   2.541915   3 #> 884  515.8556   2.999302   3 #> 885  801.6188   2.626619   3 #> 886  801.5594   3.234405   3 #> 887  503.0048   2.573381   3 #> 888  532.4410   2.585814   3 #> 889  500.9526   2.662330   3 #> 890  770.9196   2.739961   3 #> 891  500.4414   2.855903   3 #> 892  501.6946   3.866966   3 #> 893  684.5167   2.641086   3 #> 894  500.4844   2.618223   3 #> 895  500.7423   3.113525   3 #> 896  500.9018   2.850484   3 #> 897  550.7833   3.097746   3 #> 898  501.4362   2.745696   3 #> 899  500.9481   3.080575   3 #> 900  510.0676   3.102527   3 #> 901  565.3977   3.053198   3 #> 902  594.2682   2.793919   3 #> 903  505.5339   2.513437   3 #> 904  510.5512   3.713735   3 #> 905  549.2451   2.800699   3 #> 906  577.5139   3.122743   3 #> 907  619.3453   2.831356   3 #> 908  566.0675   2.798987   3 #> 909  505.1900   2.969181   3 #> 910  583.7383   2.588512   3 #> 911  503.0485   2.784604   3 #> 912  921.2176   2.634534   3 #> 913  593.7432   2.653627   3 #> 914  506.7211   2.528040   3 #> 915  503.3913   2.580318   3 #> 916  694.3597   2.704521   3 #> 917  610.2475   2.528886   3 #> 918  504.2011   2.820443   3 #> 919  521.9016   2.636839   3 #> 920  584.4487   2.544058   3 #> 921  554.7680   2.970766   3 #> 922  508.3483   2.520443   3 #> 923  568.1969   2.507247   3 #> 924  509.8596   3.085649   3 #> 925  541.0308   3.159794   3 #> 926  541.2235   2.661688   3 #> 927  538.9127   2.765692   3 #> 928  885.6611   2.555460   3 #> 929  502.7336   2.665843   3 #> 930  506.8411   2.820541   3 #> 931  500.8276   2.573231   3 #> 932  524.3303   3.088678   3 #> 933  500.7259   2.561698   3 #> 934  503.3731   3.257577   3 #> 935  512.2108   2.703210   3 #> 936  507.5100   3.021176   3 #> 937  510.6689   2.517419   3 #> 938  621.3158   2.659433   3 #> 939  501.0312   2.573670   3 #> 940  501.6147   3.189202   3 #> 941  504.2211   3.686758   3 #> 942  500.6120   2.856111   3 #> 943  505.3366   3.435731   3 #> 944  520.7195   2.586836   3 #> 945  550.7372   2.950912   3 #> 946  506.3465   3.049285   3 #> 947  506.3634   3.333904   3 #> 948  504.0544   2.629821   3 #> 949  503.3686   2.559900   3 #> 950  557.1194   3.638637   3 #> 951  501.7682   2.644259   3 #> 952  626.6006   2.638202   3 #> 953  564.5542   2.510633   3 #> 954  585.7974   3.373584   3 #> 955  500.7747   2.525397   3 #> 956  785.2696   2.907254   3 #> 957  786.3646   3.280820   3 #> 958  702.6932   3.371926   3 #> 959  645.5532   2.618296   3 #> 960  510.5095   3.970761   3 #> 961  510.2687   2.747281   3 #> 962  579.9021   2.795512   3 #> 963  833.9204   2.780676   3 #> 964  514.2997   2.521415   3 #> 965  515.5964   3.373586   3 #> 966  689.9968   2.656874   3 #> 967  923.0190   3.239889   3 #> 968  954.0427   3.284428   3 #> 969  594.7274   2.516100   3 #> 970  689.7778   2.758836   3 #> 971  555.0062   2.597932   3 #> 972  742.0889   2.660376   3 #> 973  657.5722   3.301372   3 #> 974  653.7660   2.539103   3 #> 975  741.5082   2.799040   3 #> 976  746.5450   2.650898   3 #> 977  741.4685   2.565110   3 #> 978  741.5785   2.568918   3 #> 979  741.1328   2.637453   3 #> 980  741.7952   2.536063   3 #> 981  777.6812   2.751123   3 #> 982  756.3065   3.949503   3 #> 983  758.4966   4.013723   3 #> 984  741.9280   3.085862   3 #> 985  741.3988   2.544712   3 #> 986  748.0566   2.765059   3 #> 987  741.1307   2.727864   3 #> 988  741.7472   2.837933   3 #> 989  772.7550   4.183466   3 #> 990  696.2019   2.510314   3 #> 991  654.1949   2.904503   3 #> 992  654.2456   3.158424   3 #> 993  673.6685   3.022086   3 #> 994  980.0397   3.171592   3 #> 995  696.7324   2.587920   3 #> 996  745.6086   2.843636   3 #> 997  830.5730   2.640774   3 #> 998  676.5612   2.988186   3 #> 999  697.3118   3.590637   3 #> 1000 655.6101   2.646095   3 #> 1001 680.4378   3.643872   3 #> 1002 657.3483   3.690141   3 #> 1003 666.9245   3.210526   3 #> 1004 654.0891   2.881437   3 #> 1005 655.1797   3.068392   3 #> 1006 716.3646   2.514898   3 #> 1007 790.5136   2.840297   3 #> 1008 655.2401   2.564711   3 #> 1009 664.2272   2.514520   3 #> 1010 655.3570   2.590832   3 #> 1011 673.0818   2.609141   3 #> 1012 683.9181   3.050265   3 #> 1013 657.5236   2.734153   3 #> 1014 654.2064   2.574654   3 #> 1015 654.0690   2.629096   3 #> 1016 660.5666   2.804841   3 #> 1017 667.0914   3.739421   3 #> 1018 658.0558   2.500645   3 #> 1019 654.1342   3.149667   3 #> 1020 675.1676   2.719557   3 #> 1021 661.8253   2.847333   3 #> 1022 654.0524   2.514715   3 #> 1023 657.8586   3.022069   3 #> 1024 725.5267   2.627441   3 #> 1025 654.6668   2.595599   3 #> 1026 718.2863   2.974156   3 #> 1027 699.7986   2.687988   3 #> 1028 821.7504   2.613393   3 #> 1029 666.1715   2.642061   3 #> 1030 663.9758   2.528997   3 #> 1031 676.5289   2.597604   3 #> 1032 654.1769   2.505768   3 #> 1033 671.3119   2.588729   3 #> 1034 654.2329   3.114678   3 #> 1035 654.4664   2.989930   3 #> 1036 656.3118   2.714579   3 #> 1037 654.4036   2.634392   3 #> 1038 882.2948   2.525223   3 #> 1039 656.3358   2.961458   3 #> 1040 655.2106   2.550246   3 #> 1041 654.8889   2.898233   3 #> 1042 658.0480   3.696751   3 #> 1043 663.8322   3.019891   3 #> 1044 654.2808   2.959275   3 #> 1045 654.2668   2.947364   3 #> 1046 726.0478   2.603059   3 #> 1047 654.2714   3.691656   3 #> 1048 654.0563   2.773625   3 #> 1049 654.5454   2.638901   3 #> 1050 654.1295   2.592088   3 #> 1051 654.1914   3.359410   3 #> 1052 656.5839   2.750421   3 #> 1053 654.0553   2.599898   3 #> 1054 863.8321   2.818758   3 #> 1055 708.5930   2.526612   3 #> 1056 669.7893   2.688850   3 #> 1057 950.1039   2.719843   3 #> 1058 653.7806   3.359652   3 #> 1059 655.0568   2.500513   3 #> 1060 654.2656   2.502516   3 #> 1061 654.9312   2.808315   3 #> 1062 697.0494   2.707448   3 #> 1063 804.1314   2.841191   3 #> 1064 556.2514   2.838912   3 #> 1065 881.4477   2.763366   3 #> 1066 750.7546   2.551712   3 #> 1067 465.0791   2.780270   3 #>  #> [[5]] #>           ts magnitudes gen #> 1   696.5367   3.289065   4 #> 2   503.6155   2.620083   4 #> 3   656.1916   4.972255   4 #> 4   916.6966   3.127504   4 #> 5   514.2645   4.094685   4 #> 6   517.9689   2.584790   4 #> 7   506.4360   2.562257   4 #> 8   506.5279   2.625739   4 #> 9   745.1562   3.499928   4 #> 10  506.5723   2.532311   4 #> 11  545.8313   2.503860   4 #> 12  782.5372   3.071247   4 #> 13  724.5590   2.523488   4 #> 14  586.8771   2.914260   4 #> 15  507.3352   3.139496   4 #> 16  507.1734   3.196264   4 #> 17  523.3392   2.529227   4 #> 18  507.0549   3.362597   4 #> 19  507.3069   2.676678   4 #> 20  506.3938   2.821646   4 #> 21  604.5612   2.719267   4 #> 22  510.0869   3.538673   4 #> 23  531.7406   2.984218   4 #> 24  513.9211   3.476779   4 #> 25  515.0827   2.766795   4 #> 26  582.7524   2.838007   4 #> 27  672.2570   3.615726   4 #> 28  519.1797   2.678343   4 #> 29  874.6152   2.966902   4 #> 30  521.4593   3.389071   4 #> 31  515.3950   2.623158   4 #> 32  513.9560   2.612287   4 #> 33  522.1380   2.887816   4 #> 34  528.8399   2.623543   4 #> 35  525.3473   2.638738   4 #> 36  518.2671   2.727669   4 #> 37  519.2821   2.735153   4 #> 38  956.4618   2.836384   4 #> 39  522.3203   2.801747   4 #> 40  945.0879   2.581456   4 #> 41  520.6285   2.737154   4 #> 42  541.4186   3.256885   4 #> 43  665.9364   2.646873   4 #> 44  518.2698   2.700411   4 #> 45  599.4472   2.876947   4 #> 46  502.4058   3.119955   4 #> 47  560.9662   3.492822   4 #> 48  646.5733   3.211993   4 #> 49  573.4174   2.610016   4 #> 50  523.7845   3.985334   4 #> 51  527.9532   2.861897   4 #> 52  526.5480   2.604328   4 #> 53  876.0430   3.314146   4 #> 54  547.9170   2.959421   4 #> 55  952.3086   2.572674   4 #> 56  690.8987   3.273473   4 #> 57  799.6053   2.710519   4 #> 58  690.8683   2.881061   4 #> 59  686.5910   2.822490   4 #> 60  688.6996   2.833253   4 #> 61  687.9816   2.603333   4 #> 62  686.7431   2.667233   4 #> 63  687.7488   2.820103   4 #> 64  686.8542   3.366632   4 #> 65  686.5446   3.186907   4 #> 66  688.6476   2.607881   4 #> 67  690.9425   2.900732   4 #> 68  689.7372   2.918574   4 #> 69  686.8880   2.719340   4 #> 70  687.3669   2.582423   4 #> 71  690.0137   2.782008   4 #> 72  639.1180   2.698923   4 #> 73  640.6016   3.417984   4 #> 74  550.3686   2.592383   4 #> 75  519.0855   4.355243   4 #> 76  697.0258   2.557898   4 #> 77  529.7615   2.856262   4 #> 78  520.3709   2.784290   4 #> 79  515.8470   3.553298   4 #> 80  515.7984   2.818129   4 #> 81  537.3394   2.919945   4 #> 82  571.0127   2.566559   4 #> 83  515.9169   2.621548   4 #> 84  517.5019   2.526267   4 #> 85  518.9552   2.517269   4 #> 86  521.0033   2.603676   4 #> 87  519.0593   2.514111   4 #> 88  529.4546   2.876006   4 #> 89  920.8718   2.589567   4 #> 90  515.8583   2.528249   4 #> 91  517.7554   2.571389   4 #> 92  516.2107   5.505783   4 #> 93  631.7717   2.543093   4 #> 94  967.9983   2.716106   4 #> 95  523.8854   2.585746   4 #> 96  847.1953   2.705045   4 #> 97  841.0038   2.970421   4 #> 98  841.0815   3.132087   4 #> 99  850.3795   3.135421   4 #> 100 900.8861   2.567455   4 #> 101 842.7239   2.642520   4 #> 102 874.0277   3.998362   4 #> 103 922.9928   2.750430   4 #> 104 857.6438   2.799156   4 #> 105 921.4315   3.699838   4 #> 106 841.2492   3.019924   4 #> 107 524.1276   2.787055   4 #> 108 515.9340   3.040981   4 #> 109 517.0973   2.549174   4 #> 110 516.0988   2.689865   4 #> 111 715.1784   2.958685   4 #> 112 515.8367   2.504522   4 #> 113 515.9352   3.006899   4 #> 114 516.2830   2.628684   4 #> 115 516.5085   2.782066   4 #> 116 516.7342   2.786443   4 #> 117 516.1188   2.673541   4 #> 118 526.7112   2.607027   4 #> 119 519.8188   2.683272   4 #> 120 519.5120   2.659905   4 #> 121 516.9538   3.307734   4 #> 122 516.2633   2.697078   4 #> 123 515.6960   2.609632   4 #> 124 516.9052   2.692300   4 #> 125 515.8621   3.301809   4 #> 126 515.6211   3.360551   4 #> 127 526.0167   2.698081   4 #> 128 515.9458   3.436434   4 #> 129 538.4996   2.904578   4 #> 130 515.7346   2.543324   4 #> 131 515.6251   2.743522   4 #> 132 516.2234   3.301293   4 #> 133 515.7567   3.841469   4 #> 134 515.6455   2.692514   4 #> 135 578.9059   2.529116   4 #> 136 896.0316   3.028013   4 #> 137 515.7559   2.818402   4 #> 138 691.9358   3.715705   4 #> 139 516.2193   2.558808   4 #> 140 717.2937   3.270522   4 #> 141 516.3218   2.590579   4 #> 142 917.1434   3.936760   4 #> 143 527.1922   2.919495   4 #> 144 517.1967   2.966053   4 #> 145 516.2549   2.606950   4 #> 146 515.6375   2.640778   4 #> 147 523.1406   2.588019   4 #> 148 930.0425   2.584821   4 #> 149 517.6308   2.583519   4 #> 150 516.1961   3.070095   4 #> 151 519.1792   2.651922   4 #> 152 516.5764   2.530591   4 #> 153 566.5903   2.762529   4 #> 154 521.6443   2.570443   4 #> 155 516.5987   2.535816   4 #> 156 582.3915   2.614431   4 #> 157 520.2771   2.841916   4 #> 158 515.8602   2.718107   4 #> 159 515.8541   2.677708   4 #> 160 515.8397   2.906707   4 #> 161 718.1638   3.215680   4 #> 162 573.8719   2.852908   4 #> 163 519.5840   2.647125   4 #> 164 605.2203   3.321485   4 #> 165 552.7965   4.228598   4 #> 166 517.2269   2.901047   4 #> 167 519.1132   3.120941   4 #> 168 519.7267   2.699634   4 #> 169 838.3693   3.496581   4 #> 170 517.2897   3.257551   4 #> 171 515.9787   3.504815   4 #> 172 516.4180   3.470810   4 #> 173 709.5239   2.507530   4 #> 174 690.6907   3.307108   4 #> 175 515.8345   2.718873   4 #> 176 516.8825   2.864569   4 #> 177 515.9201   2.522864   4 #> 178 516.9128   2.690190   4 #> 179 555.3864   2.554329   4 #> 180 516.1273   2.806500   4 #> 181 531.3821   2.674272   4 #> 182 519.2838   2.744346   4 #> 183 517.5856   2.720169   4 #> 184 515.9081   2.850937   4 #> 185 517.5891   2.520053   4 #> 186 621.8286   2.985304   4 #> 187 516.2883   2.720404   4 #> 188 515.9160   3.109466   4 #> 189 695.3257   2.621025   4 #> 190 516.4887   2.679691   4 #> 191 532.3137   2.534554   4 #> 192 515.8527   2.611509   4 #> 193 530.9286   3.643838   4 #> 194 518.1945   3.613148   4 #> 195 544.0111   4.040426   4 #> 196 517.0656   2.553294   4 #> 197 516.2305   2.691448   4 #> 198 562.6779   2.550060   4 #> 199 537.4009   2.625004   4 #> 200 726.8056   2.779558   4 #> 201 516.2503   2.623793   4 #> 202 573.7726   3.274970   4 #> 203 516.5113   3.176580   4 #> 204 523.0073   2.916596   4 #> 205 515.9150   2.570662   4 #> 206 545.0618   2.621719   4 #> 207 516.1105   3.059466   4 #> 208 515.8621   4.335702   4 #> 209 516.4130   2.618277   4 #> 210 519.0195   3.685503   4 #> 211 515.9224   3.020670   4 #> 212 517.9158   2.503965   4 #> 213 516.3016   2.528024   4 #> 214 516.2535   2.852934   4 #> 215 522.8164   2.770523   4 #> 216 516.2609   2.666648   4 #> 217 541.6170   2.518955   4 #> 218 516.9812   2.844386   4 #> 219 515.8360   2.723683   4 #> 220 821.0767   2.518159   4 #> 221 519.2466   2.675118   4 #> 222 516.6299   2.609902   4 #> 223 531.4637   4.172499   4 #> 224 639.3687   2.665476   4 #> 225 518.5025   2.812535   4 #> 226 519.1614   2.653225   4 #> 227 525.1528   4.292822   4 #> 228 517.6211   2.517839   4 #> 229 519.0225   2.939298   4 #> 230 533.5810   2.587731   4 #> 231 515.8154   2.539897   4 #> 232 540.2310   3.318223   4 #> 233 685.6443   3.062939   4 #> 234 987.1137   3.322432   4 #> 235 567.5069   2.653078   4 #> 236 599.7596   2.563729   4 #> 237 599.9254   2.771670   4 #> 238 516.4265   3.603425   4 #> 239 587.9351   3.087733   4 #> 240 561.4052   3.427962   4 #> 241 522.9479   4.533068   4 #> 242 517.2604   2.696517   4 #> 243 521.3383   2.871951   4 #> 244 572.6735   2.968390   4 #> 245 523.9479   2.504285   4 #> 246 955.8987   2.989844   4 #> 247 640.0014   2.843582   4 #> 248 541.2007   2.961185   4 #> 249 580.9328   3.313900   4 #> 250 516.2153   3.007986   4 #> 251 581.3577   3.138425   4 #> 252 516.6483   2.694065   4 #> 253 515.8532   2.826115   4 #> 254 517.0047   2.706122   4 #> 255 521.8254   2.913030   4 #> 256 517.1221   3.022134   4 #> 257 933.3799   3.215776   4 #> 258 515.6643   2.947287   4 #> 259 630.7827   2.554651   4 #> 260 515.7624   3.113582   4 #> 261 518.4147   2.916939   4 #> 262 518.4724   2.907028   4 #> 263 521.0184   2.666983   4 #> 264 598.7773   2.691796   4 #> 265 561.0462   2.640133   4 #> 266 548.5131   2.914547   4 #> 267 604.2899   2.801342   4 #> 268 520.0350   2.768623   4 #> 269 930.5201   2.841631   4 #> 270 518.1447   2.611610   4 #> 271 517.4356   2.654217   4 #> 272 804.4253   2.663103   4 #> 273 531.0177   2.557770   4 #> 274 518.6432   2.684043   4 #> 275 518.8470   3.765200   4 #> 276 518.9261   2.906915   4 #> 277 524.1513   3.781231   4 #> 278 518.9549   3.104393   4 #> 279 528.3054   2.553635   4 #> 280 697.4920   3.153706   4 #> 281 587.6901   2.681176   4 #> 282 634.6509   3.037913   4 #> 283 516.8396   3.072079   4 #> 284 526.9102   2.718686   4 #> 285 517.8815   3.280332   4 #> 286 519.6602   2.821109   4 #> 287 521.5200   2.798703   4 #> 288 516.1737   2.576467   4 #> 289 516.7301   3.636061   4 #> 290 840.5487   3.250280   4 #> 291 843.4210   2.851161   4 #> 292 548.8679   2.881236   4 #> 293 787.0584   3.419221   4 #> 294 786.9408   2.961557   4 #> 295 787.5179   2.619328   4 #> 296 517.8008   2.524975   4 #> 297 519.8275   2.959200   4 #> 298 524.5701   2.796471   4 #> 299 686.1103   2.619376   4 #> 300 724.0029   2.624344   4 #> 301 812.5370   3.248951   4 #> 302 538.3889   2.660515   4 #> 303 651.7573   2.538130   4 #> 304 535.7518   2.767870   4 #> 305 543.2380   4.624912   4 #> 306 545.1408   2.625841   4 #> 307 536.2853   2.709724   4 #> 308 539.9126   2.876484   4 #> 309 535.6177   2.925579   4 #> 310 535.7931   4.275174   4 #> 311 541.5851   2.922602   4 #> 312 535.6696   2.724525   4 #> 313 555.8331   2.584387   4 #> 314 535.6260   2.938574   4 #> 315 536.8490   2.532265   4 #> 316 535.6407   2.810962   4 #> 317 536.4250   2.678197   4 #> 318 537.5588   4.681856   4 #> 319 535.6513   3.438051   4 #> 320 535.7134   3.243861   4 #> 321 542.8475   2.911502   4 #> 322 669.1888   2.533100   4 #> 323 536.6800   2.698865   4 #> 324 545.1846   3.232708   4 #> 325 536.9495   2.651283   4 #> 326 646.1062   2.697003   4 #> 327 535.9685   3.941654   4 #> 328 536.0323   2.724519   4 #> 329 584.5000   2.584779   4 #> 330 938.0047   2.734073   4 #> 331 538.5447   2.530134   4 #> 332 535.7955   3.956007   4 #> 333 576.1176   2.559541   4 #> 334 546.8685   2.879191   4 #> 335 540.1551   2.556951   4 #> 336 536.3127   3.232962   4 #> 337 535.5989   3.199080   4 #> 338 552.8571   2.504757   4 #> 339 535.8124   3.338457   4 #> 340 569.3596   2.581620   4 #> 341 619.2526   2.530650   4 #> 342 535.6029   2.668826   4 #> 343 538.9896   2.911073   4 #> 344 548.7922   3.188277   4 #> 345 535.6524   2.600135   4 #> 346 878.9293   2.611557   4 #> 347 535.7660   2.571338   4 #> 348 581.8132   2.996468   4 #> 349 615.3630   2.924834   4 #> 350 896.3618   2.956968   4 #> 351 612.7436   3.238136   4 #> 352 538.3864   2.593391   4 #> 353 893.8432   2.708099   4 #> 354 535.7798   2.654791   4 #> 355 536.5613   2.649897   4 #> 356 535.7176   2.756972   4 #> 357 535.6201   3.776908   4 #> 358 685.8769   2.859370   4 #> 359 559.0712   2.602428   4 #> 360 867.2332   3.028700   4 #> 361 518.4344   2.803211   4 #> 362 555.8352   2.744805   4 #> 363 522.6181   3.388127   4 #> 364 520.1740   3.405446   4 #> 365 554.8093   2.527563   4 #> 366 518.0582   2.819909   4 #> 367 562.1966   2.587221   4 #> 368 687.8461   2.933556   4 #> 369 525.6741   2.954677   4 #> 370 537.8036   2.558165   4 #> 371 766.2262   2.827594   4 #> 372 522.3519   2.772110   4 #> 373 518.9236   2.936883   4 #> 374 517.7269   2.977074   4 #> 375 604.1382   2.940008   4 #> 376 810.2861   2.516839   4 #> 377 517.2482   2.892955   4 #> 378 725.5695   3.062764   4 #> 379 528.6762   2.505626   4 #> 380 527.5619   3.455913   4 #> 381 834.0148   2.602203   4 #> 382 693.4147   2.635816   4 #> 383 521.6763   3.331322   4 #> 384 616.1025   2.984079   4 #> 385 515.6985   2.708957   4 #> 386 521.4156   2.531797   4 #> 387 515.5922   4.030694   4 #> 388 526.7064   2.563083   4 #> 389 573.7311   3.101869   4 #> 390 517.9505   2.629215   4 #> 391 769.5545   3.065603   4 #> 392 521.7230   2.556532   4 #> 393 742.0535   2.919180   4 #> 394 516.0281   2.529819   4 #> 395 523.6270   3.660065   4 #> 396 541.0199   2.732029   4 #> 397 515.7358   3.096423   4 #> 398 575.0594   2.973726   4 #> 399 517.6155   2.597840   4 #> 400 515.8827   2.504653   4 #> 401 525.6802   2.829561   4 #> 402 515.6092   2.667327   4 #> 403 516.5434   2.559046   4 #> 404 515.8346   4.282241   4 #> 405 520.8407   3.910646   4 #> 406 519.8617   3.716255   4 #> 407 631.7560   3.688920   4 #> 408 638.1080   6.130206   4 #> 409 950.9606   2.819495   4 #> 410 892.0147   4.446898   4 #> 411 593.6129   3.313713   4 #> 412 598.2187   2.850500   4 #> 413 517.5922   2.637352   4 #> 414 517.6274   3.837663   4 #> 415 517.7066   2.613252   4 #> 416 517.2023   2.629058   4 #> 417 519.2423   2.959216   4 #> 418 520.1340   3.099271   4 #> 419 516.4542   2.652076   4 #> 420 521.2413   2.604578   4 #> 421 528.3325   2.946875   4 #> 422 601.6245   3.378277   4 #> 423 878.0149   2.871272   4 #> 424 586.5169   2.830533   4 #> 425 613.3654   2.827341   4 #> 426 534.8568   2.730323   4 #> 427 522.9724   2.621644   4 #> 428 524.1352   3.038871   4 #> 429 516.7420   2.750468   4 #> 430 551.7077   2.604857   4 #> 431 664.2582   2.749123   4 #> 432 516.2210   3.160399   4 #> 433 538.9168   3.233566   4 #> 434 516.4362   2.746285   4 #> 435 515.6925   3.111765   4 #> 436 519.6849   2.704545   4 #> 437 521.2107   2.891578   4 #> 438 517.7746   2.881008   4 #> 439 638.5631   2.566599   4 #> 440 895.7796   3.245462   4 #> 441 676.6419   3.192646   4 #> 442 538.8417   3.776407   4 #> 443 522.5175   2.503767   4 #> 444 666.5294   3.255182   4 #> 445 515.6231   2.805588   4 #> 446 564.0103   2.779756   4 #> 447 520.2109   2.697267   4 #> 448 516.6405   2.749184   4 #> 449 553.3243   2.584530   4 #> 450 515.9373   2.580707   4 #> 451 516.3535   3.196023   4 #> 452 516.4973   3.480047   4 #> 453 556.4354   2.513097   4 #> 454 574.4727   2.528279   4 #> 455 521.7653   2.615553   4 #> 456 541.6313   3.157890   4 #> 457 776.1458   2.758864   4 #> 458 516.1778   2.688747   4 #> 459 799.1590   2.988223   4 #> 460 517.8266   2.646474   4 #> 461 515.9260   2.516221   4 #> 462 516.1292   2.674355   4 #> 463 523.7302   2.678233   4 #> 464 542.5860   2.877428   4 #> 465 516.3368   2.595751   4 #> 466 516.1981   3.236027   4 #> 467 520.4980   3.105541   4 #> 468 516.1370   2.501141   4 #> 469 515.8873   2.794258   4 #> 470 527.0575   3.441016   4 #> 471 516.1304   2.703719   4 #> 472 534.0146   2.630578   4 #> 473 516.2433   2.682416   4 #> 474 763.6038   2.637877   4 #> 475 519.4955   2.720329   4 #> 476 790.3440   2.770587   4 #> 477 526.5038   2.615788   4 #> 478 517.5717   2.718378   4 #> 479 516.3861   2.681296   4 #> 480 516.5405   2.759061   4 #> 481 515.9543   3.099199   4 #> 482 520.8971   3.182475   4 #> 483 688.5771   2.852925   4 #> 484 530.3993   2.691771   4 #> 485 517.1990   3.601406   4 #> 486 927.3771   2.888539   4 #> 487 591.8691   3.072319   4 #> 488 522.6262   2.981443   4 #> 489 516.8594   2.656979   4 #> 490 551.5151   2.558653   4 #> 491 516.2753   2.514842   4 #> 492 524.9780   2.871604   4 #> 493 516.3364   3.308987   4 #> 494 521.0682   2.558261   4 #> 495 516.4200   2.663824   4 #> 496 515.8789   2.581830   4 #> 497 517.3322   2.606527   4 #> 498 673.6055   2.521519   4 #> 499 516.0624   3.023856   4 #> 500 515.8775   3.198013   4 #> 501 540.3664   2.686260   4 #> 502 530.2405   3.344542   4 #> 503 516.2094   2.502888   4 #> 504 515.9075   2.532329   4 #> 505 589.3092   2.978723   4 #> 506 517.3394   2.815290   4 #> 507 516.3493   3.688605   4 #> 508 981.2180   2.601486   4 #> 509 516.4225   4.124831   4 #> 510 516.0528   4.462702   4 #> 511 517.5989   3.670720   4 #> 512 526.5801   3.079985   4 #> 513 516.3768   2.564606   4 #> 514 519.1490   2.710801   4 #> 515 892.6181   3.690246   4 #> 516 536.8236   2.596805   4 #> 517 515.8727   2.803761   4 #> 518 527.3757   2.723000   4 #> 519 523.2457   3.441027   4 #> 520 614.7830   2.622890   4 #> 521 545.7248   3.256010   4 #> 522 516.0113   2.783656   4 #> 523 515.9937   3.680958   4 #> 524 630.9432   2.849264   4 #> 525 515.8757   2.736689   4 #> 526 699.6549   2.511009   4 #> 527 515.9222   2.722504   4 #> 528 526.5694   3.123234   4 #> 529 534.1319   3.047407   4 #> 530 703.3984   2.940101   4 #> 531 515.9967   2.953045   4 #> 532 523.4491   2.525510   4 #> 533 516.3084   2.746664   4 #> 534 933.4736   2.503905   4 #> 535 643.3760   2.638234   4 #> 536 518.6668   2.699061   4 #> 537 515.9326   2.552794   4 #> 538 982.4283   2.878012   4 #> 539 516.0039   2.935957   4 #> 540 520.1860   3.540508   4 #> 541 519.5285   2.567634   4 #> 542 517.5796   3.213431   4 #> 543 518.0961   2.751515   4 #> 544 588.6092   2.788519   4 #> 545 516.1426   2.666495   4 #> 546 527.9403   3.057279   4 #> 547 519.0247   3.864060   4 #> 548 628.4457   3.748543   4 #> 549 546.4718   3.305527   4 #> 550 528.0419   2.702693   4 #> 551 516.1838   2.561695   4 #> 552 952.8785   2.686388   4 #> 553 515.8921   2.779780   4 #> 554 842.1236   2.594002   4 #> 555 515.9304   3.244316   4 #> 556 539.0173   3.138935   4 #> 557 515.8942   3.484803   4 #> 558 517.7773   2.647662   4 #> 559 568.4429   2.736251   4 #> 560 517.4734   3.477627   4 #> 561 517.0407   2.692983   4 #> 562 516.1644   2.545638   4 #> 563 700.7090   2.674181   4 #> 564 538.6981   2.651892   4 #> 565 527.6818   2.578178   4 #> 566 523.7440   3.663207   4 #> 567 518.7019   2.869405   4 #> 568 517.5838   2.687845   4 #> 569 559.0992   2.929382   4 #> 570 516.3287   3.397074   4 #> 571 596.2308   3.174259   4 #> 572 522.2472   2.553506   4 #> 573 516.4204   2.576338   4 #> 574 515.8840   2.703377   4 #> 575 520.8534   4.671395   4 #> 576 516.3012   3.349419   4 #> 577 515.8721   3.395897   4 #> 578 516.0460   3.566398   4 #> 579 536.3479   2.619224   4 #> 580 516.2410   2.551868   4 #> 581 515.8847   3.019806   4 #> 582 519.6479   2.784288   4 #> 583 517.5357   2.538195   4 #> 584 542.5213   3.036799   4 #> 585 517.1755   2.934867   4 #> 586 518.7970   3.405093   4 #> 587 526.6733   2.825972   4 #> 588 516.3038   2.931073   4 #> 589 550.9340   3.142769   4 #> 590 516.2219   2.582797   4 #> 591 517.7292   2.615976   4 #> 592 516.8003   2.748527   4 #> 593 517.2278   2.691243   4 #> 594 519.0720   3.490243   4 #> 595 516.8506   2.905171   4 #> 596 516.5074   2.613480   4 #> 597 515.9453   3.186661   4 #> 598 527.6749   2.610056   4 #> 599 780.6074   3.144916   4 #> 600 515.9927   2.766104   4 #> 601 911.5635   2.578190   4 #> 602 519.2814   2.556680   4 #> 603 581.7327   3.079589   4 #> 604 525.0337   2.917606   4 #> 605 633.0701   2.726019   4 #> 606 615.5921   2.522685   4 #> 607 517.6590   3.146083   4 #> 608 525.9915   2.539717   4 #> 609 515.8813   3.095607   4 #> 610 520.1081   2.579147   4 #> 611 517.4173   2.529097   4 #> 612 736.7551   3.041993   4 #> 613 516.9457   3.123322   4 #> 614 521.2014   2.511680   4 #> 615 523.0387   2.571800   4 #> 616 516.2122   3.465203   4 #> 617 515.9418   3.137454   4 #> 618 519.8754   3.171771   4 #> 619 515.9141   2.894023   4 #> 620 538.3933   2.770849   4 #> 621 515.8720   2.861025   4 #> 622 521.2012   3.061257   4 #> 623 842.4352   3.021380   4 #> 624 521.1435   3.077530   4 #> 625 521.2704   3.342325   4 #> 626 822.5487   3.207015   4 #> 627 515.9793   2.808039   4 #> 628 526.0033   3.074609   4 #> 629 534.3123   2.725363   4 #> 630 558.9360   3.344793   4 #> 631 554.3646   2.689429   4 #> 632 517.4150   2.699971   4 #> 633 522.8583   3.037734   4 #> 634 552.3906   2.634111   4 #> 635 517.2450   3.018789   4 #> 636 668.5093   3.158464   4 #> 637 515.8956   2.707517   4 #> 638 536.9019   2.668278   4 #> 639 560.8273   2.599573   4 #> 640 557.9114   3.092714   4 #> 641 532.1360   2.699148   4 #> 642 546.7973   2.533440   4 #> 643 516.0625   2.942873   4 #> 644 592.4820   2.647878   4 #> 645 528.2126   3.529100   4 #> 646 659.1400   2.859073   4 #> 647 537.8447   2.575000   4 #> 648 521.2648   3.029922   4 #> 649 520.3029   2.771550   4 #> 650 516.5021   2.809489   4 #> 651 532.0436   3.428602   4 #> 652 515.9508   2.733120   4 #> 653 517.5880   3.358014   4 #> 654 516.2133   2.635256   4 #> 655 516.5826   2.712789   4 #> 656 515.8886   2.530584   4 #> 657 515.8915   2.884843   4 #> 658 525.1246   3.068791   4 #> 659 515.8792   3.619170   4 #> 660 583.3146   2.541921   4 #> 661 516.0173   3.513301   4 #> 662 522.9420   2.837471   4 #> 663 516.0195   2.666332   4 #> 664 551.6103   2.516744   4 #> 665 862.2426   3.319310   4 #> 666 522.9916   2.703241   4 #> 667 516.1758   2.770543   4 #> 668 516.3889   3.071727   4 #> 669 520.5308   3.001987   4 #> 670 520.3049   2.543325   4 #> 671 515.9232   3.221036   4 #> 672 605.2662   3.827045   4 #> 673 834.7174   3.750721   4 #> 674 566.7282   2.592665   4 #> 675 516.1454   2.706623   4 #> 676 524.0111   3.022399   4 #> 677 622.8924   2.600615   4 #> 678 535.8925   3.521615   4 #> 679 524.4615   2.775332   4 #> 680 515.9789   3.443473   4 #> 681 518.2173   2.733476   4 #> 682 763.2599   3.882068   4 #> 683 518.2779   2.648968   4 #> 684 516.1392   3.259326   4 #> 685 529.3488   3.145405   4 #> 686 626.4165   2.511456   4 #> 687 860.0746   2.553395   4 #> 688 516.0130   3.663497   4 #> 689 516.1659   2.652597   4 #> 690 536.9407   2.514653   4 #> 691 516.5335   2.500289   4 #> 692 539.4897   2.546787   4 #> 693 515.9532   2.697502   4 #> 694 518.2322   2.747596   4 #> 695 518.9748   2.887112   4 #> 696 608.5330   2.925659   4 #> 697 621.1134   2.519652   4 #> 698 526.5943   2.684522   4 #> 699 516.2157   2.503281   4 #> 700 518.4766   2.946557   4 #> 701 522.9458   2.690570   4 #> 702 517.8250   3.125424   4 #> 703 516.0301   2.692925   4 #> 704 522.3209   4.189333   4 #> 705 534.5896   2.860481   4 #> 706 730.7508   2.770535   4 #> 707 516.0368   2.684696   4 #> 708 547.5771   2.606455   4 #> 709 515.9773   2.731618   4 #> 710 549.4499   2.542908   4 #> 711 516.7291   2.791214   4 #> 712 516.7565   2.948879   4 #> 713 519.0370   3.314390   4 #> 714 529.5309   2.925432   4 #> 715 523.3240   2.631472   4 #> 716 570.9333   2.852504   4 #> 717 515.8807   2.505784   4 #> 718 515.9035   2.590572   4 #> 719 520.2798   2.729590   4 #> 720 518.1403   2.658383   4 #> 721 742.1627   2.805472   4 #> 722 516.0619   2.756411   4 #> 723 515.8728   2.674882   4 #> 724 525.6105   3.537361   4 #> 725 526.8944   2.849113   4 #> 726 515.8815   3.541601   4 #> 727 899.6895   3.142389   4 #> 728 517.6354   2.639048   4 #> 729 517.9769   2.500553   4 #> 730 520.1547   2.965737   4 #> 731 516.0602   3.126779   4 #> 732 524.4476   2.855825   4 #> 733 529.2175   2.564224   4 #> 734 518.2221   2.851359   4 #> 735 516.0657   2.941422   4 #> 736 597.8619   2.741083   4 #> 737 697.7376   3.431936   4 #> 738 526.5663   3.988810   4 #> 739 543.4385   2.653504   4 #> 740 626.0008   2.510524   4 #> 741 517.8626   2.711471   4 #> 742 516.1410   2.588497   4 #> 743 517.9210   3.246731   4 #> 744 516.0341   2.907590   4 #> 745 536.7742   3.215629   4 #> 746 545.7542   2.675841   4 #> 747 516.0712   3.226612   4 #> 748 516.0426   2.616406   4 #> 749 515.9342   2.840485   4 #> 750 516.3153   2.804847   4 #> 751 515.9044   3.010211   4 #> 752 519.5498   2.517690   4 #> 753 855.3902   2.594114   4 #> 754 522.9177   2.551301   4 #> 755 515.9434   3.195331   4 #> 756 613.8996   2.651774   4 #> 757 516.5440   2.780730   4 #> 758 668.1331   2.796719   4 #> 759 516.1710   2.815160   4 #> 760 515.8733   2.626299   4 #> 761 518.9909   3.058056   4 #> 762 592.3503   2.512027   4 #> 763 515.8891   2.571187   4 #> 764 665.8241   3.075403   4 #> 765 520.3039   2.798516   4 #> 766 515.8738   2.652279   4 #> 767 515.9312   2.712170   4 #> 768 515.9276   2.619722   4 #> 769 516.0338   3.009821   4 #> 770 536.9393   2.510216   4 #> 771 543.8879   3.151472   4 #> 772 517.5033   2.614266   4 #> 773 516.5656   2.982737   4 #> 774 516.0097   2.564253   4 #> 775 591.2070   2.755453   4 #> 776 688.7660   2.634288   4 #> 777 515.8859   2.914622   4 #> 778 515.8763   2.551110   4 #> 779 884.8776   3.569041   4 #> 780 516.2044   2.657941   4 #> 781 625.1668   3.872586   4 #> 782 516.6045   2.504293   4 #> 783 516.1323   2.805569   4 #> 784 516.6184   2.976799   4 #> 785 719.2097   3.917715   4 #> 786 516.0207   2.549841   4 #> 787 519.8250   2.616113   4 #> 788 520.6527   2.978291   4 #> 789 688.5039   2.805386   4 #> 790 835.6414   2.541151   4 #> 791 516.3255   2.848248   4 #> 792 526.6024   3.253551   4 #> 793 517.0915   3.254230   4 #> 794 571.5568   2.555347   4 #> 795 571.1311   2.545140   4 #> 796 540.4276   2.860172   4 #> 797 516.9365   2.542391   4 #> 798 516.7669   2.761467   4 #> 799 565.6572   2.878883   4 #> 800 570.7152   2.522274   4 #> 801 586.1350   2.719164   4 #> 802 518.1770   2.886141   4 #> 803 517.7725   2.820457   4 #> 804 599.3406   3.373667   4 #> 805 588.5779   2.543136   4 #> 806 515.9562   3.251950   4 #> 807 515.7418   3.752916   4 #> 808 585.8869   3.413967   4 #> 809 527.9559   2.501481   4 #> 810 662.8998   3.278553   4 #> 811 515.7173   2.584629   4 #> 812 516.5826   3.810961   4 #> 813 846.8055   2.821298   4 #> 814 774.0671   2.716173   4 #> 815 519.9828   2.914510   4 #> 816 960.5509   2.517845   4 #> 817 516.7664   2.985200   4 #> 818 519.4126   3.495844   4 #> 819 529.0943   2.925941   4 #> 820 517.8933   2.773670   4 #> 821 516.5907   2.510014   4 #> 822 516.9436   2.558313   4 #> 823 518.4848   3.252674   4 #> 824 521.6366   2.771100   4 #> 825 516.6557   2.893720   4 #> 826 529.5699   2.680271   4 #> 827 769.7913   3.637673   4 #> 828 519.8881   3.212360   4 #> 829 563.4621   2.621379   4 #> 830 536.7060   2.947152   4 #> 831 553.7472   2.909126   4 #> 832 547.3033   2.562592   4 #> 833 684.8694   2.851353   4 #> 834 696.1057   2.536622   4 #> 835 696.0324   4.615402   4 #> 836 776.5687   4.228483   4 #> 837 847.5816   2.510906   4 #> 838 851.1850   2.503502   4 #> 839 844.6626   2.659395   4 #> 840 564.1273   2.640046   4 #> 841 501.1255   2.741188   4 #> 842 515.7937   3.219721   4 #> 843 615.1049   2.928386   4 #> 844 527.2776   2.690638   4 #> 845 566.2189   3.294225   4 #> 846 694.6293   2.896789   4 #> 847 508.9350   2.824573   4 #> 848 541.4695   2.805986   4 #> 849 507.9584   3.187246   4 #> 850 505.7052   2.787833   4 #> 851 506.4176   2.714685   4 #> 852 558.5719   3.071935   4 #> 853 861.9286   2.615161   4 #> 854 514.4015   2.521066   4 #> 855 515.7145   2.805751   4 #> 856 761.2061   2.579968   4 #> 857 756.3251   2.573190   4 #> 858 756.4762   2.713611   4 #> 859 756.4455   2.822984   4 #> 860 756.7228   2.653391   4 #> 861 884.6614   3.797958   4 #> 862 772.9631   2.691389   4 #> 863 772.8630   2.501273   4 #> 864 772.7552   2.859853   4 #> 865 773.4495   2.891109   4 #> 866 776.2382   2.868736   4 #> 867 657.4359   3.775651   4 #> 868 667.2140   2.567079   4 #> 869 803.2742   2.785851   4 #> 870 654.3715   3.660063   4 #> 871 670.0007   2.579177   4 #> 872 688.1356   2.582966   4 #>  #> [[6]] #>           ts magnitudes gen #> 1   657.3078   2.535656   5 #> 2   661.2570   2.530285   5 #> 3   664.9837   2.905385   5 #> 4   656.2466   2.996180   5 #> 5   659.3045   2.889054   5 #> 6   730.8713   2.963336   5 #> 7   657.0374   2.874429   5 #> 8   657.4288   2.502379   5 #> 9   666.7021   2.589590   5 #> 10  674.5671   3.003275   5 #> 11  745.3563   3.506818   5 #> 12  656.1954   2.515102   5 #> 13  756.5443   2.554817   5 #> 14  661.1097   2.557684   5 #> 15  657.5063   2.924493   5 #> 16  658.6176   3.192588   5 #> 17  656.6546   3.876866   5 #> 18  715.4388   2.644136   5 #> 19  664.7732   2.626240   5 #> 20  701.9439   2.706385   5 #> 21  656.5636   2.709255   5 #> 22  656.3954   2.769549   5 #> 23  714.7249   3.147143   5 #> 24  514.3759   2.746023   5 #> 25  675.2552   2.732202   5 #> 26  746.1666   3.285023   5 #> 27  546.2034   3.028451   5 #> 28  508.2761   2.887747   5 #> 29  536.2297   3.016318   5 #> 30  541.5441   3.166885   5 #> 31  546.7122   2.893915   5 #> 32  522.3518   2.717404   5 #> 33  686.5943   2.672154   5 #> 34  533.5581   3.096615   5 #> 35  976.9095   2.829965   5 #> 36  691.2735   2.757420   5 #> 37  690.1146   2.654576   5 #> 38  586.1652   2.693064   5 #> 39  653.3149   2.538919   5 #> 40  535.7969   3.737734   5 #> 41  519.4781   2.626219   5 #> 42  520.6059   2.768360   5 #> 43  519.3936   2.516458   5 #> 44  525.5983   2.563663   5 #> 45  515.9626   2.576512   5 #> 46  521.6400   2.618552   5 #> 47  516.8827   2.609185   5 #> 48  516.2274   2.602898   5 #> 49  516.2166   3.032156   5 #> 50  526.3204   2.673004   5 #> 51  529.8366   2.678227   5 #> 52  517.9890   2.589754   5 #> 53  516.3500   2.870373   5 #> 54  520.3240   2.933612   5 #> 55  517.0980   4.161282   5 #> 56  613.0508   2.928502   5 #> 57  519.2257   2.709590   5 #> 58  517.1448   2.809775   5 #> 59  703.5638   2.757828   5 #> 60  858.7464   3.257055   5 #> 61  523.9700   4.210075   5 #> 62  649.9080   3.533777   5 #> 63  546.7334   3.997387   5 #> 64  604.9839   3.505034   5 #> 65  518.4422   2.781329   5 #> 66  516.3526   3.568244   5 #> 67  516.7993   2.548285   5 #> 68  516.3759   3.606339   5 #> 69  516.2630   3.163444   5 #> 70  516.9848   2.638513   5 #> 71  516.5582   2.698128   5 #> 72  516.3472   2.775466   5 #> 73  522.0065   2.518486   5 #> 74  516.3647   2.747684   5 #> 75  516.6980   3.206773   5 #> 76  516.9972   3.917226   5 #> 77  679.1373   2.699408   5 #> 78  525.5534   2.821591   5 #> 79  536.2042   2.768927   5 #> 80  520.0103   2.580148   5 #> 81  516.2898   2.546752   5 #> 82  516.2147   2.549046   5 #> 83  630.3342   2.724805   5 #> 84  592.0767   3.044307   5 #> 85  516.5950   2.913835   5 #> 86  517.5856   2.954069   5 #> 87  520.3041   2.733956   5 #> 88  516.5911   2.601349   5 #> 89  516.3619   3.239678   5 #> 90  518.3563   3.934448   5 #> 91  516.2328   2.832693   5 #> 92  516.3647   2.540860   5 #> 93  582.4820   4.108506   5 #> 94  874.4611   2.529534   5 #> 95  556.7062   2.547492   5 #> 96  520.8795   3.012516   5 #> 97  516.1645   3.296833   5 #> 98  625.6407   3.765264   5 #> 99  516.7348   2.519152   5 #> 100 519.3036   2.663894   5 #> 101 536.1842   2.679450   5 #> 102 544.4085   3.775856   5 #> 103 692.3828   2.748834   5 #> 104 756.0625   2.650164   5 #> 105 917.1647   2.860901   5 #> 106 528.3797   2.535643   5 #> 107 552.9663   2.878169   5 #> 108 850.7693   2.538569   5 #> 109 519.7552   2.914692   5 #> 110 678.7266   2.606096   5 #> 111 579.9857   2.614338   5 #> 112 707.4264   4.236257   5 #> 113 690.8488   3.187060   5 #> 114 517.1269   2.860031   5 #> 115 534.0114   3.346771   5 #> 116 544.0300   2.648883   5 #> 117 549.4428   2.545570   5 #> 118 536.7484   2.829356   5 #> 119 545.0750   2.788718   5 #> 120 515.8627   3.788750   5 #> 121 517.2586   2.766743   5 #> 122 543.3324   2.879318   5 #> 123 516.0139   2.921360   5 #> 124 535.7396   2.533102   5 #> 125 546.2357   2.548470   5 #> 126 531.5031   2.525603   5 #> 127 548.0536   2.855737   5 #> 128 526.6808   3.037872   5 #> 129 525.1693   2.802159   5 #> 130 525.2845   2.609728   5 #> 131 522.9683   3.050483   5 #> 132 523.7939   2.551655   5 #> 133 625.3685   3.157873   5 #> 134 527.1622   2.964269   5 #> 135 523.4306   2.559329   5 #> 136 523.0732   2.823835   5 #> 137 774.9575   2.725234   5 #> 138 542.8713   3.325540   5 #> 139 523.0933   2.541991   5 #> 140 523.1894   2.747355   5 #> 141 523.1440   2.763857   5 #> 142 768.3837   3.314696   5 #> 143 640.1315   3.157405   5 #> 144 898.3580   2.701735   5 #> 145 519.8432   3.774081   5 #> 146 518.8474   3.149002   5 #> 147 525.3762   2.536389   5 #> 148 523.6160   2.974990   5 #> 149 844.6965   2.754583   5 #> 150 843.5338   3.150386   5 #> 151 787.6557   2.771642   5 #> 152 543.4583   2.803841   5 #> 153 552.0003   2.677424   5 #> 154 543.9384   3.347001   5 #> 155 544.4852   2.885754   5 #> 156 543.2950   2.714050   5 #> 157 543.5825   2.578888   5 #> 158 738.4064   2.767176   5 #> 159 544.4475   2.520682   5 #> 160 545.2752   2.588266   5 #> 161 571.3337   3.295874   5 #> 162 536.4187   3.389700   5 #> 163 535.8064   3.279957   5 #> 164 859.9940   2.594492   5 #> 165 536.1583   3.265148   5 #> 166 596.5563   3.222679   5 #> 167 537.9505   2.737758   5 #> 168 538.1595   2.523666   5 #> 169 540.2975   2.865703   5 #> 170 537.6049   2.610059   5 #> 171 571.5287   2.527174   5 #> 172 549.7515   3.261767   5 #> 173 875.1455   2.957917   5 #> 174 550.5106   3.026542   5 #> 175 969.9986   4.067504   5 #> 176 545.5382   3.743124   5 #> 177 557.0485   2.728293   5 #> 178 901.1200   2.514409   5 #> 179 520.4499   2.738816   5 #> 180 915.4349   2.723053   5 #> 181 524.6224   2.583333   5 #> 182 810.6882   2.793611   5 #> 183 582.0438   2.829602   5 #> 184 527.5214   2.613963   5 #> 185 616.9472   3.111560   5 #> 186 515.6260   3.295877   5 #> 187 526.7203   2.548460   5 #> 188 574.7716   3.957713   5 #> 189 748.4000   2.622808   5 #> 190 516.6592   3.354281   5 #> 191 719.2522   2.824640   5 #> 192 853.1483   3.001918   5 #> 193 515.8417   3.227635   5 #> 194 515.9222   3.139607   5 #> 195 517.0156   2.704920   5 #> 196 521.0157   5.003877   5 #> 197 863.9692   2.632144   5 #> 198 531.1226   2.826070   5 #> 199 521.0738   3.027123   5 #> 200 519.9708   3.416414   5 #> 201 521.5303   2.525129   5 #> 202 639.5102   2.887482   5 #> 203 639.0665   2.833437   5 #> 204 698.2500   2.991642   5 #> 205 666.2975   3.570229   5 #> 206 651.1702   2.862970   5 #> 207 740.9187   2.877142   5 #> 208 638.1659   2.658101   5 #> 209 930.5852   2.663375   5 #> 210 701.0331   2.750964   5 #> 211 638.2531   2.913788   5 #> 212 640.8287   2.628729   5 #> 213 674.3193   3.071358   5 #> 214 656.8798   3.282113   5 #> 215 638.5349   2.615190   5 #> 216 638.3622   3.753946   5 #> 217 685.3378   2.748799   5 #> 218 638.3727   2.788499   5 #> 219 996.6545   3.011785   5 #> 220 638.2344   2.664476   5 #> 221 646.5500   3.249854   5 #> 222 673.7042   2.666902   5 #> 223 676.1454   2.624745   5 #> 224 646.2926   3.384495   5 #> 225 651.7723   2.565611   5 #> 226 669.5046   2.615496   5 #> 227 735.4953   2.515636   5 #> 228 638.1531   2.976625   5 #> 229 638.1871   2.797404   5 #> 230 660.6983   2.647790   5 #> 231 752.6568   2.634855   5 #> 232 745.5047   3.298411   5 #> 233 638.3123   4.003200   5 #> 234 735.1574   2.517431   5 #> 235 648.9884   3.228973   5 #> 236 639.1363   2.610235   5 #> 237 665.4496   2.802858   5 #> 238 655.1791   2.743214   5 #> 239 647.6776   3.151910   5 #> 240 666.3865   2.721896   5 #> 241 644.0117   3.072775   5 #> 242 638.4831   2.575177   5 #> 243 638.7937   3.121686   5 #> 244 815.5861   2.509642   5 #> 245 685.8333   3.393029   5 #> 246 638.1583   2.749819   5 #> 247 980.1380   3.508910   5 #> 248 865.9393   2.719179   5 #> 249 639.8415   2.599842   5 #> 250 638.1538   2.692666   5 #> 251 638.1180   2.889329   5 #> 252 792.3492   3.330421   5 #> 253 655.9004   2.970628   5 #> 254 642.1497   2.671657   5 #> 255 727.4187   2.621809   5 #> 256 638.1811   3.209320   5 #> 257 804.2029   2.591960   5 #> 258 934.0127   4.032084   5 #> 259 652.9389   2.722362   5 #> 260 638.4423   2.822534   5 #> 261 675.0769   2.666839   5 #> 262 638.9714   2.658071   5 #> 263 711.9570   2.883682   5 #> 264 638.8315   2.516872   5 #> 265 638.1760   2.852986   5 #> 266 655.0958   2.891684   5 #> 267 639.6530   2.580030   5 #> 268 654.4434   3.057016   5 #> 269 638.3580   2.686610   5 #> 270 638.3168   2.624109   5 #> 271 844.4924   2.552380   5 #> 272 638.2126   2.767619   5 #> 273 775.1492   2.743401   5 #> 274 640.5572   3.053896   5 #> 275 641.6496   2.951090   5 #> 276 639.3906   3.247560   5 #> 277 640.3108   2.974549   5 #> 278 730.7774   2.553959   5 #> 279 645.9880   2.637744   5 #> 280 662.8655   2.566902   5 #> 281 641.5118   2.586652   5 #> 282 638.3111   3.992211   5 #> 283 655.9011   3.203682   5 #> 284 638.1869   2.697368   5 #> 285 638.7999   2.803768   5 #> 286 638.3284   2.573613   5 #> 287 640.1484   2.928483   5 #> 288 638.3454   2.720585   5 #> 289 638.2289   3.234025   5 #> 290 683.2180   2.872006   5 #> 291 644.8719   2.598223   5 #> 292 660.8480   3.223597   5 #> 293 638.2173   3.386384   5 #> 294 641.0967   3.913658   5 #> 295 745.2770   2.796901   5 #> 296 662.2767   3.449781   5 #> 297 638.3889   2.634942   5 #> 298 638.3748   3.768728   5 #> 299 652.6772   2.638163   5 #> 300 638.1536   2.814404   5 #> 301 928.0760   2.605664   5 #> 302 638.1203   3.820214   5 #> 303 645.2643   2.962031   5 #> 304 911.8145   4.342604   5 #> 305 712.8637   3.528563   5 #> 306 638.4101   2.859761   5 #> 307 638.5926   2.583724   5 #> 308 639.0761   2.597369   5 #> 309 641.4401   3.318901   5 #> 310 639.0994   2.805025   5 #> 311 638.7317   3.119715   5 #> 312 694.4299   3.118905   5 #> 313 701.0110   2.769580   5 #> 314 823.6743   2.900784   5 #> 315 641.5004   3.947867   5 #> 316 656.7278   3.012617   5 #> 317 700.3730   2.948689   5 #> 318 638.4274   3.127129   5 #> 319 638.1500   3.048527   5 #> 320 638.8076   2.558816   5 #> 321 638.8109   3.079597   5 #> 322 639.7397   2.951308   5 #> 323 638.4500   3.029313   5 #> 324 644.0753   2.569064   5 #> 325 640.4687   2.572648   5 #> 326 669.6692   2.650320   5 #> 327 725.1137   2.598827   5 #> 328 638.2239   2.774163   5 #> 329 639.8991   2.536333   5 #> 330 638.2309   3.391511   5 #> 331 639.2623   2.733068   5 #> 332 640.6658   3.036132   5 #> 333 776.4317   3.007471   5 #> 334 640.1095   2.750454   5 #> 335 777.6568   2.569792   5 #> 336 639.4718   2.556340   5 #> 337 638.6514   2.678648   5 #> 338 638.2318   2.534470   5 #> 339 646.6569   2.574399   5 #> 340 638.2272   2.585633   5 #> 341 638.7784   3.142442   5 #> 342 638.6216   2.566665   5 #> 343 719.8838   3.961817   5 #> 344 675.4102   3.407623   5 #> 345 639.0729   2.960083   5 #> 346 638.3803   3.125889   5 #> 347 760.4312   2.646951   5 #> 348 647.8569   3.227431   5 #> 349 695.3932   3.047566   5 #> 350 638.2220   2.688899   5 #> 351 642.8107   2.961012   5 #> 352 789.3481   2.527951   5 #> 353 640.9819   2.569001   5 #> 354 664.7003   2.719126   5 #> 355 638.7338   2.790708   5 #> 356 708.2475   2.714403   5 #> 357 641.0890   2.911510   5 #> 358 638.2935   2.670372   5 #> 359 692.7308   3.096637   5 #> 360 639.0898   2.557950   5 #> 361 645.8228   2.770393   5 #> 362 639.6888   3.115338   5 #> 363 638.1120   2.657798   5 #> 364 638.2763   2.510468   5 #> 365 649.9913   2.884544   5 #> 366 638.3921   2.603117   5 #> 367 653.7658   3.041311   5 #> 368 638.3214   2.917686   5 #> 369 640.0148   2.903509   5 #> 370 638.2906   3.009481   5 #> 371 638.2145   2.507065   5 #> 372 667.3075   2.500237   5 #> 373 971.7349   2.529786   5 #> 374 647.2466   3.286074   5 #> 375 638.2737   4.335948   5 #> 376 691.1677   2.892581   5 #> 377 652.3007   2.730959   5 #> 378 654.9795   2.593551   5 #> 379 638.3128   2.598514   5 #> 380 645.3976   2.840975   5 #> 381 642.2016   2.570767   5 #> 382 641.7058   2.502812   5 #> 383 641.0277   2.681582   5 #> 384 895.2183   3.045609   5 #> 385 639.1496   3.305288   5 #> 386 736.9591   2.592969   5 #> 387 640.0061   2.792470   5 #> 388 640.7221   3.391786   5 #> 389 882.0687   3.544111   5 #> 390 641.7856   2.601027   5 #> 391 652.1170   2.524429   5 #> 392 638.1445   2.701860   5 #> 393 638.1735   2.603719   5 #> 394 638.5021   2.595628   5 #> 395 639.6135   2.855739   5 #> 396 641.5004   2.911023   5 #> 397 692.3394   3.475529   5 #> 398 903.9225   2.744756   5 #> 399 640.8660   4.701890   5 #> 400 638.4908   3.131924   5 #> 401 638.2453   4.150233   5 #> 402 839.6619   2.592658   5 #> 403 671.0146   2.630166   5 #> 404 638.1821   4.772522   5 #> 405 739.8544   2.835878   5 #> 406 992.0943   2.592395   5 #> 407 638.2053   2.712170   5 #> 408 639.1131   3.638675   5 #> 409 700.8032   3.443202   5 #> 410 643.6538   2.718266   5 #> 411 639.0236   2.502357   5 #> 412 674.6207   2.697567   5 #> 413 639.8642   3.245506   5 #> 414 671.0275   3.571415   5 #> 415 638.5447   2.529027   5 #> 416 641.3540   2.506133   5 #> 417 646.0850   3.040504   5 #> 418 638.1927   2.969435   5 #> 419 639.2533   4.096935   5 #> 420 785.2952   2.964091   5 #> 421 638.1140   3.174591   5 #> 422 639.7319   2.552155   5 #> 423 673.6206   2.941736   5 #> 424 638.2393   2.541447   5 #> 425 638.1538   2.964843   5 #> 426 673.7843   3.899047   5 #> 427 638.1569   2.936295   5 #> 428 638.1230   2.784377   5 #> 429 672.8247   2.810915   5 #> 430 666.5303   3.304739   5 #> 431 646.4779   3.207091   5 #> 432 638.1148   3.686146   5 #> 433 638.2795   2.600944   5 #> 434 638.6608   2.516148   5 #> 435 793.6335   2.882440   5 #> 436 639.4827   3.050465   5 #> 437 644.3427   2.714030   5 #> 438 638.6808   3.499219   5 #> 439 897.4830   2.697818   5 #> 440 893.7990   3.697226   5 #> 441 977.5573   2.631231   5 #> 442 899.0832   3.386650   5 #> 443 517.9006   2.897144   5 #> 444 667.4704   3.939040   5 #> 445 639.4162   3.110728   5 #> 446 677.6707   2.587498   5 #> 447 547.7303   3.208861   5 #> 448 540.8901   3.581916   5 #> 449 545.0881   2.920116   5 #> 450 520.5031   2.863053   5 #> 451 527.1049   2.584867   5 #> 452 540.9076   2.960475   5 #> 453 800.2969   2.642254   5 #> 454 827.8094   3.088370   5 #> 455 640.9916   2.554722   5 #> 456 517.5293   2.691911   5 #> 457 524.9796   4.166970   5 #> 458 518.0762   2.639115   5 #> 459 517.0820   2.817743   5 #> 460 875.8228   2.680009   5 #> 461 903.4747   3.554100   5 #> 462 516.2338   3.463599   5 #> 463 567.2756   2.785932   5 #> 464 516.3877   2.807753   5 #> 465 542.7758   2.541543   5 #> 466 521.5038   2.509590   5 #> 467 516.3704   2.527334   5 #> 468 852.1512   2.501131   5 #> 469 534.1593   2.666062   5 #> 470 706.2961   3.136439   5 #> 471 528.2957   2.584837   5 #> 472 944.4780   2.682383   5 #> 473 596.9789   2.890004   5 #> 474 519.0742   3.096816   5 #> 475 539.1533   2.565576   5 #> 476 528.5704   2.513798   5 #> 477 517.7301   2.958227   5 #> 478 526.6467   3.340956   5 #> 479 520.9404   2.887640   5 #> 480 521.7184   3.488539   5 #> 481 531.7804   2.580759   5 #> 482 523.9101   2.580186   5 #> 483 551.7613   2.900405   5 #> 484 520.9226   2.671816   5 #> 485 522.5849   2.981474   5 #> 486 521.0969   2.534303   5 #> 487 619.5433   2.870508   5 #> 488 560.9984   2.529567   5 #> 489 665.0155   4.461544   5 #> 490 524.0740   3.585736   5 #> 491 522.1553   3.381680   5 #> 492 667.3526   2.710192   5 #> 493 540.2300   2.717518   5 #> 494 521.6198   2.917940   5 #> 495 564.7472   2.658822   5 #> 496 521.7642   2.814424   5 #> 497 523.9616   2.643475   5 #> 498 519.7184   2.595013   5 #> 499 570.7968   2.537446   5 #> 500 516.8521   2.567999   5 #> 501 518.2754   2.577560   5 #> 502 611.8764   3.296092   5 #> 503 543.6807   3.029779   5 #> 504 545.0469   2.516820   5 #> 505 522.9369   3.183484   5 #> 506 835.5418   2.630533   5 #> 507 542.1976   2.941501   5 #> 508 913.6665   2.886629   5 #> 509 521.3314   2.681608   5 #> 510 553.8214   2.679865   5 #> 511 560.8304   4.867269   5 #> 512 559.8995   2.527197   5 #> 513 559.8772   2.618563   5 #> 514 598.8627   3.428090   5 #> 515 553.3365   2.667798   5 #> 516 524.4887   2.522169   5 #> 517 523.5498   3.050948   5 #> 518 605.3321   2.547591   5 #> 519 605.3729   3.384074   5 #> 520 650.1973   3.075493   5 #> 521 856.2853   2.935794   5 #> 522 839.9098   2.565678   5 #> 523 763.9884   3.835482   5 #> 524 518.0861   2.567800   5 #> 525 517.0354   2.654736   5 #> 526 527.7478   2.792175   5 #> 527 528.0156   2.578739   5 #> 528 621.2540   2.660376   5 #> 529 517.2606   2.912847   5 #> 530 519.0944   3.781115   5 #> 531 530.8656   3.523331   5 #> 532 532.6411   2.983698   5 #> 533 559.6567   2.746179   5 #> 534 526.8883   2.964221   5 #> 535 526.6036   2.742762   5 #> 536 544.4478   2.759511   5 #> 537 515.9658   3.527991   5 #> 538 545.0992   2.853750   5 #> 539 545.4044   2.600535   5 #> 540 521.1590   3.127376   5 #> 541 678.2077   2.662488   5 #> 542 959.5835   2.575031   5 #> 543 630.5021   2.762961   5 #> 544 564.4184   2.631889   5 #> 545 516.8889   3.739069   5 #> 546 721.5399   2.706644   5 #> 547 598.7355   2.882904   5 #> 548 517.8933   2.604016   5 #> 549 600.5446   3.199877   5 #> 550 551.6314   3.071742   5 #> 551 778.3978   3.227018   5 #> 552 846.8619   3.190970   5 #> 553 518.4873   3.331727   5 #> 554 525.8076   2.759006   5 #> 555 539.2034   3.394032   5 #> 556 917.7084   2.544187   5 #> 557 696.0964   2.749059   5 #> 558 717.4410   3.440357   5 #> 559 698.4269   3.140878   5 #> 560 696.2110   3.361448   5 #> 561 696.4897   2.868064   5 #> 562 698.4023   2.588838   5 #> 563 696.7132   3.124117   5 #> 564 696.0369   2.722873   5 #> 565 717.1185   3.287899   5 #> 566 696.6267   2.688346   5 #> 567 776.7356   2.715121   5 #> 568 792.0812   2.544006   5 #> 569 847.8627   2.652524   5 #> 570 848.0275   2.600380   5 #> 571 536.6303   2.717711   5 #> 572 567.5158   2.623985   5 #> 573 514.5899   3.840973   5 #> 574 603.3402   2.683998   5 #> 575 956.3305   2.773062   5 #> 576 657.4454   4.213774   5 #> 577 688.5231   3.060051   5 #>  #> [[7]] #>           ts magnitudes gen #> 1   732.8621   4.539190   6 #> 2   745.4543   3.384788   6 #> 3   656.7132   2.908882   6 #> 4   749.6775   2.562084   6 #> 5   557.8228   2.528284   6 #> 6   535.7971   2.555105   6 #> 7   522.0177   2.984696   6 #> 8   517.7540   2.730715   6 #> 9   528.5618   2.549546   6 #> 10  530.8119   3.101528   6 #> 11  526.2238   2.536089   6 #> 12  547.8571   2.618218   6 #> 13  547.0847   3.027618   6 #> 14  774.0465   3.029860   6 #> 15  551.4863   2.596599   6 #> 16  804.4370   2.798836   6 #> 17  517.0193   2.624532   6 #> 18  536.6380   2.693272   6 #> 19  592.8569   2.588345   6 #> 20  518.1094   3.048055   6 #> 21  520.7549   2.942413   6 #> 22  558.0905   2.800208   6 #> 23  583.3785   2.941314   6 #> 24  583.8616   2.785917   6 #> 25  607.6940   3.101401   6 #> 26  522.2730   2.943678   6 #> 27  544.3239   2.643031   6 #> 28  720.2171   3.091263   6 #> 29  671.7905   2.867258   6 #> 30  630.8782   2.625000   6 #> 31  691.7482   3.114367   6 #> 32  546.7662   3.077556   6 #> 33  544.7693   2.867545   6 #> 34  581.5760   2.523882   6 #> 35  709.0682   3.388850   6 #> 36  716.5373   2.707814   6 #> 37  714.7576   2.815088   6 #> 38  711.7507   2.595620   6 #> 39  550.3942   2.554325   6 #> 40  516.5374   2.508170   6 #> 41  920.6471   2.697625   6 #> 42  625.5494   2.795533   6 #> 43  722.6517   3.251674   6 #> 44  998.3556   4.995221   6 #> 45  547.7684   3.978384   6 #> 46  678.4772   3.099016   6 #> 47  769.6098   3.562817   6 #> 48  999.9904   2.830393   6 #> 49  972.9074   2.771234   6 #> 50  971.0043   3.501011   6 #> 51  560.1727   2.654992   6 #> 52  590.1383   3.744832   6 #> 53  515.6512   2.709306   6 #> 54  595.4655   3.924935   6 #> 55  595.0965   2.621535   6 #> 56  575.1989   3.584542   6 #> 57  603.1511   2.506012   6 #> 58  524.3574   2.631600   6 #> 59  521.5716   3.303800   6 #> 60  521.5695   2.666345   6 #> 61  522.3576   2.653148   6 #> 62  524.2425   3.227462   6 #> 63  521.1096   2.630922   6 #> 64  521.6594   3.099844   6 #> 65  854.5537   2.553308   6 #> 66  526.2494   3.007606   6 #> 67  521.4440   2.639135   6 #> 68  739.1691   2.527968   6 #> 69  521.1409   2.507781   6 #> 70  557.9378   2.521628   6 #> 71  651.6947   2.549203   6 #> 72  584.4096   2.708933   6 #> 73  521.5311   3.547480   6 #> 74  639.1774   2.688779   6 #> 75  701.7635   3.506084   6 #> 76  672.5893   3.941212   6 #> 77  667.4850   2.797535   6 #> 78  657.2443   2.592090   6 #> 79  638.8061   3.448708   6 #> 80  638.3633   3.204601   6 #> 81  715.0365   2.848609   6 #> 82  639.6710   3.690058   6 #> 83  996.3058   3.042670   6 #> 84  980.9406   2.567267   6 #> 85  640.2253   2.843535   6 #> 86  793.8098   3.070314   6 #> 87  816.5179   2.972624   6 #> 88  936.4193   2.691490   6 #> 89  655.9438   2.712618   6 #> 90  776.7961   2.962352   6 #> 91  756.8526   2.642440   6 #> 92  640.6984   3.185549   6 #> 93  645.0143   2.999957   6 #> 94  647.2912   2.600878   6 #> 95  662.3616   2.656234   6 #> 96  639.2548   3.143581   6 #> 97  639.3004   2.583849   6 #> 98  648.6384   2.704865   6 #> 99  853.8410   2.531913   6 #> 100 645.4887   2.951336   6 #> 101 912.5586   2.543935   6 #> 102 920.6045   3.851593   6 #> 103 912.0689   3.274619   6 #> 104 684.2244   2.976679   6 #> 105 644.7697   3.954488   6 #> 106 656.8062   2.603452   6 #> 107 641.6071   2.552656   6 #> 108 640.6111   2.595197   6 #> 109 644.7129   2.539100   6 #> 110 724.9367   2.562651   6 #> 111 720.0533   2.942132   6 #> 112 894.0879   2.570797   6 #> 113 643.5731   3.383455   6 #> 114 649.1397   2.541568   6 #> 115 857.4334   2.505795   6 #> 116 776.9508   2.534548   6 #> 117 660.3882   2.871116   6 #> 118 639.6081   2.685954   6 #> 119 686.3321   2.579090   6 #> 120 638.6159   2.506622   6 #> 121 646.9036   3.260760   6 #> 122 660.1383   3.954851   6 #> 123 638.2758   4.898314   6 #> 124 638.3700   3.478672   6 #> 125 726.1652   2.873591   6 #> 126 640.8572   4.513658   6 #> 127 639.5478   2.615806   6 #> 128 640.2568   2.940624   6 #> 129 874.6489   2.709250   6 #> 130 692.3522   2.536562   6 #> 131 641.8467   3.378737   6 #> 132 641.1179   2.752397   6 #> 133 640.8727   2.568052   6 #> 134 658.4208   3.534330   6 #> 135 640.8898   2.611859   6 #> 136 640.8688   2.994604   6 #> 137 642.6156   2.585795   6 #> 138 642.5546   3.183829   6 #> 139 643.3677   2.735398   6 #> 140 641.7575   3.164478   6 #> 141 641.6101   2.856086   6 #> 142 640.9400   2.794696   6 #> 143 643.6028   2.608184   6 #> 144 640.8914   3.055365   6 #> 145 838.8887   2.735684   6 #> 146 641.6267   2.576845   6 #> 147 640.6485   2.544475   6 #> 148 638.8325   4.241713   6 #> 149 653.5851   2.793805   6 #> 150 639.3978   2.774194   6 #> 151 638.9721   2.518940   6 #> 152 638.2382   2.612525   6 #> 153 638.6602   4.121410   6 #> 154 644.3607   3.131229   6 #> 155 640.2623   2.714025   6 #> 156 638.8340   2.958981   6 #> 157 723.8115   2.594701   6 #> 158 638.2663   2.721665   6 #> 159 641.4932   2.723451   6 #> 160 638.4848   3.097269   6 #> 161 646.7900   2.598166   6 #> 162 638.4206   3.019036   6 #> 163 638.3287   3.203611   6 #> 164 669.5477   3.202082   6 #> 165 638.2435   3.504212   6 #> 166 639.6550   2.533584   6 #> 167 697.0049   3.005665   6 #> 168 907.4037   2.636736   6 #> 169 639.5577   3.018628   6 #> 170 707.9577   3.141763   6 #> 171 640.0662   2.775259   6 #> 172 640.0351   3.137303   6 #> 173 639.3510   2.794549   6 #> 174 718.7707   2.554164   6 #> 175 650.4611   3.643234   6 #> 176 756.8714   3.129147   6 #> 177 642.7387   2.681743   6 #> 178 903.1304   2.755984   6 #> 179 638.7402   2.731446   6 #> 180 541.4314   2.531080   6 #> 181 540.9883   2.843154   6 #> 182 526.0010   2.563219   6 #> 183 539.3697   2.538375   6 #> 184 526.6054   2.814282   6 #> 185 525.0293   3.622938   6 #> 186 565.3139   3.010377   6 #> 187 909.7862   2.880227   6 #> 188 516.2790   2.931775   6 #> 189 517.8655   3.091692   6 #> 190 533.8771   3.839026   6 #> 191 675.0312   2.973592   6 #> 192 683.2064   2.852878   6 #> 193 526.3525   2.806074   6 #> 194 526.4184   2.547028   6 #> 195 544.0202   2.888858   6 #> 196 542.4889   2.553409   6 #> 197 931.1378   4.065894   6 #> 198 562.0958   4.349235   6 #> 199 778.3933   3.437366   6 #> 200 561.3596   2.554507   6 #> 201 563.8540   2.902863   6 #> 202 563.8151   2.621246   6 #> 203 561.3897   2.669943   6 #> 204 564.6763   3.513605   6 #> 205 562.4068   2.734643   6 #> 206 622.4010   3.014131   6 #> 207 563.8737   2.509732   6 #> 208 560.9945   3.252059   6 #> 209 562.6280   2.716299   6 #> 210 586.9532   2.544879   6 #> 211 571.8836   2.849115   6 #> 212 567.5358   2.531900   6 #> 213 894.9419   3.003345   6 #> 214 652.2957   2.801163   6 #> 215 720.0800   2.690796   6 #> 216 692.6041   2.683257   6 #> 217 708.9146   3.409831   6 #> 218 521.4757   2.580103   6 #> 219 800.1064   2.526457   6 #> 220 698.8138   3.225684   6 #> 221 962.3968   2.974060   6 #> 222 519.9612   2.574183   6 #> 223 676.6041   3.319625   6 #> 224 657.7008   2.768023   6 #> 225 881.0619   2.508202   6 #>  #> [[8]] #>          ts magnitudes gen #> 1  733.0190   3.199378   7 #> 2  740.1521   2.767611   7 #> 3  734.4948   2.746244   7 #> 4  732.8993   2.733048   7 #> 5  732.9115   2.591837   7 #> 6  747.4392   3.191261   7 #> 7  656.9107   2.796026   7 #> 8  532.1980   3.684270   7 #> 9  526.7369   2.744655   7 #> 10 982.1972   2.555970   7 #> 11 778.2890   2.693399   7 #> 12 518.4228   2.719859   7 #> 13 821.1025   3.396569   7 #> 14 698.5415   2.586055   7 #> 15 998.8239   2.751587   7 #> 16 999.4804   3.061122   7 #> 17 548.8550   3.036024   7 #> 18 771.6729   3.481405   7 #> 19 590.1449   2.833407   7 #> 20 590.8527   2.899565   7 #> 21 621.4397   3.686001   7 #> 22 982.8343   2.714498   7 #> 23 575.5787   2.581996   7 #> 24 541.4051   3.026138   7 #> 25 586.8828   3.224490   7 #> 26 672.7743   3.202886   7 #> 27 667.7089   3.101734   7 #> 28 641.3370   3.831059   7 #> 29 715.3492   3.360638   7 #> 30 802.2449   2.959784   7 #> 31 858.6965   3.599485   7 #> 32 756.8688   2.715898   7 #> 33 704.9954   2.743833   7 #> 34 927.2759   3.476862   7 #> 35 920.7815   3.765780   7 #> 36 912.3772   2.740566   7 #> 37 649.3219   3.045458   7 #> 38 696.9070   2.588882   7 #> 39 666.9447   2.650606   7 #> 40 675.6613   3.381207   7 #> 41 741.9864   2.549149   7 #> 42 652.1150   4.233840   7 #> 43 935.6354   3.338177   7 #> 44 638.6594   2.978610   7 #> 45 847.3283   2.785358   7 #> 46 638.5752   2.931740   7 #> 47 640.1478   2.598877   7 #> 48 646.5799   3.046464   7 #> 49 639.2484   3.205710   7 #> 50 638.6936   2.610808   7 #> 51 642.6189   2.506543   7 #> 52 641.1543   2.992968   7 #> 53 641.0583   3.086167   7 #> 54 726.4259   2.664677   7 #> 55 652.9447   2.888976   7 #> 56 646.8206   2.969126   7 #> 57 641.1036   2.703747   7 #> 58 770.6867   2.838700   7 #> 59 745.2483   3.434075   7 #> 60 641.9049   2.629036   7 #> 61 639.4027   2.835074   7 #> 62 648.6807   2.997254   7 #> 63 888.3891   3.001779   7 #> 64 977.9627   2.830051   7 #> 65 639.1919   2.736296   7 #> 66 638.8508   2.678473   7 #> 67 638.9109   2.931078   7 #> 68 640.9236   2.679479   7 #> 69 680.0604   2.912586   7 #> 70 639.9020   3.287570   7 #> 71 641.5399   2.654716   7 #> 72 642.5458   2.828251   7 #> 73 638.7133   2.636352   7 #> 74 644.7616   2.996324   7 #> 75 656.4966   3.069124   7 #> 76 525.4268   2.828909   7 #> 77 566.8996   2.911029   7 #> 78 913.0565   2.587585   7 #> 79 568.6085   3.176765   7 #> 80 535.0370   2.818349   7 #> 81 932.6114   3.043270   7 #> 82 931.8775   2.957149   7 #> 83 953.8504   2.551252   7 #> 84 563.1909   2.634210   7 #> 85 572.3980   2.511479   7 #> 86 567.8928   3.690841   7 #> 87 563.9297   6.651039   7 #> 88 581.8365   2.663908   7 #> 89 870.0497   2.787079   7 #> 90 597.9644   3.374990   7 #> 91 650.1474   2.756736   7 #> 92 571.9069   2.527253   7 #> 93 896.4170   2.644582   7 #> 94 652.3452   3.059341   7 #> 95 977.3688   3.727129   7 #>  #> [[9]] #>           ts magnitudes gen #> 1   771.6486   3.851247   8 #> 2   748.3922   2.773615   8 #> 3   532.2315   3.104257   8 #> 4   806.9355   2.542343   8 #> 5   571.5056   2.825862   8 #> 6   541.6195   2.513859   8 #> 7   678.9477   2.780207   8 #> 8   861.7305   2.618733   8 #> 9   803.5780   2.896994   8 #> 10  928.8208   2.608291   8 #> 11  655.7285   2.827337   8 #> 12  639.7126   2.721423   8 #> 13  641.1658   3.347962   8 #> 14  640.9433   2.790464   8 #> 15  672.0752   3.675491   8 #> 16  773.4618   2.731959   8 #> 17  747.3335   2.732409   8 #> 18  751.0844   3.283247   8 #> 19  968.3658   2.774075   8 #> 20  681.3815   3.818739   8 #> 21  657.6510   2.630085   8 #> 22  657.3844   2.731946   8 #> 23  525.4636   2.995449   8 #> 24  567.9859   2.693425   8 #> 25  601.3644   2.862583   8 #> 26  613.3161   3.228522   8 #> 27  564.2372   2.900929   8 #> 28  567.1775   2.632566   8 #> 29  565.8416   3.020362   8 #> 30  565.2521   2.658358   8 #> 31  578.8603   3.083870   8 #> 32  583.4981   2.579923   8 #> 33  571.2798   2.730881   8 #> 34  565.1974   2.667639   8 #> 35  567.8224   3.182270   8 #> 36  564.1806   3.085251   8 #> 37  564.0335   2.519074   8 #> 38  623.7343   2.974711   8 #> 39  565.6323   3.196533   8 #> 40  566.7217   2.958849   8 #> 41  564.0370   2.546636   8 #> 42  643.1083   2.813808   8 #> 43  617.6179   2.867943   8 #> 44  565.1912   2.607796   8 #> 45  571.5071   2.511246   8 #> 46  576.0931   4.465055   8 #> 47  608.6323   3.081724   8 #> 48  705.3000   3.608586   8 #> 49  566.0179   2.801093   8 #> 50  671.2743   3.124852   8 #> 51  650.5947   2.578435   8 #> 52  587.0421   3.298064   8 #> 53  651.2984   2.857878   8 #> 54  564.2704   2.661667   8 #> 55  564.3938   2.856286   8 #> 56  574.2727   3.071408   8 #> 57  577.1216   3.190383   8 #> 58  564.0021   2.768804   8 #> 59  565.6401   3.373069   8 #> 60  672.2453   2.683329   8 #> 61  564.7308   3.459252   8 #> 62  566.9748   3.183674   8 #> 63  566.9574   3.734938   8 #> 64  565.2103   2.716998   8 #> 65  563.9499   2.559885   8 #> 66  564.0927   2.676344   8 #> 67  564.4076   2.607895   8 #> 68  571.0941   2.883328   8 #> 69  651.2346   3.197663   8 #> 70  567.4601   3.948778   8 #> 71  563.9337   2.708625   8 #> 72  564.1813   2.945166   8 #> 73  600.1139   2.784682   8 #> 74  564.9181   2.983726   8 #> 75  564.0213   2.552944   8 #> 76  565.7210   2.676329   8 #> 77  563.9692   2.519966   8 #> 78  567.9306   2.756172   8 #> 79  613.5187   4.535929   8 #> 80  565.5951   2.762281   8 #> 81  574.0123   2.610754   8 #> 82  568.5034   2.593414   8 #> 83  564.7136   2.698790   8 #> 84  566.6254   2.548612   8 #> 85  564.1255   2.575019   8 #> 86  571.3879   2.638393   8 #> 87  564.2064   2.653943   8 #> 88  598.7006   2.842198   8 #> 89  591.2130   3.073322   8 #> 90  564.5369   2.653217   8 #> 91  564.9000   2.914777   8 #> 92  563.9540   2.549999   8 #> 93  563.9987   3.554523   8 #> 94  564.0447   2.741265   8 #> 95  564.1592   3.215992   8 #> 96  583.4786   3.613121   8 #> 97  564.0455   2.534825   8 #> 98  564.5724   3.137280   8 #> 99  874.7595   2.693512   8 #> 100 612.2499   2.739772   8 #> 101 569.2869   3.139253   8 #> 102 565.6628   3.038081   8 #> 103 565.0903   2.673136   8 #> 104 564.4405   2.526582   8 #> 105 568.6492   2.501147   8 #> 106 565.6804   3.754987   8 #> 107 563.9379   3.215121   8 #> 108 563.9645   3.037428   8 #> 109 677.8371   3.008051   8 #> 110 565.2546   3.717256   8 #> 111 582.7236   2.751642   8 #> 112 565.2384   2.588578   8 #> 113 691.5325   3.398799   8 #> 114 567.0815   2.874205   8 #> 115 586.2870   3.209617   8 #> 116 575.4447   2.711671   8 #> 117 570.2979   2.712245   8 #> 118 565.9836   2.634708   8 #> 119 704.3763   3.566038   8 #> 120 623.0064   3.429353   8 #> 121 564.1668   2.782266   8 #> 122 564.5178   3.843603   8 #> 123 754.8164   3.485903   8 #> 124 881.1970   2.847902   8 #> 125 567.3814   2.870528   8 #> 126 651.5168   2.558592   8 #> 127 564.1398   2.772057   8 #> 128 572.3811   2.743827   8 #> 129 569.8624   2.622275   8 #> 130 796.0645   2.506042   8 #> 131 954.9359   2.648215   8 #> 132 564.7510   3.281078   8 #> 133 665.0259   2.794639   8 #> 134 840.7200   2.581128   8 #> 135 597.9179   2.590163   8 #> 136 966.2123   3.393687   8 #> 137 564.1617   2.758203   8 #> 138 565.6083   2.515918   8 #> 139 649.9990   2.747356   8 #> 140 564.8063   3.289208   8 #> 141 570.9524   3.439164   8 #> 142 567.5111   4.414985   8 #> 143 565.6761   2.764196   8 #> 144 565.4047   3.093955   8 #> 145 564.2295   3.327196   8 #> 146 567.2778   3.090237   8 #> 147 565.3739   2.519360   8 #> 148 577.3825   2.708477   8 #> 149 721.0130   2.537025   8 #> 150 567.1270   2.535855   8 #> 151 564.9536   2.806015   8 #> 152 587.2628   2.547521   8 #> 153 563.9602   2.910781   8 #> 154 680.8713   4.309089   8 #> 155 806.8569   2.877429   8 #> 156 572.4555   3.695807   8 #> 157 564.3574   2.789806   8 #> 158 707.5881   2.533382   8 #> 159 563.9657   2.713249   8 #> 160 564.4050   2.820250   8 #> 161 613.0434   3.093707   8 #> 162 564.9453   2.640247   8 #> 163 563.9366   3.065432   8 #> 164 616.2742   2.557578   8 #> 165 712.6210   2.662141   8 #> 166 563.9351   2.987108   8 #> 167 564.6254   2.850716   8 #> 168 640.0738   2.752512   8 #> 169 577.3959   2.587920   8 #> 170 568.5487   3.336597   8 #> 171 564.2474   2.643699   8 #> 172 564.2177   2.580997   8 #> 173 615.1522   2.589038   8 #> 174 620.0739   2.627118   8 #> 175 604.1158   3.084163   8 #> 176 581.2030   2.799429   8 #> 177 564.0114   2.851523   8 #> 178 607.8843   2.591490   8 #> 179 595.9262   2.709052   8 #> 180 565.9195   2.544216   8 #> 181 564.3834   2.575097   8 #> 182 567.5226   2.954716   8 #> 183 565.8259   2.746019   8 #> 184 564.3021   2.642433   8 #> 185 656.0405   4.424518   8 #> 186 571.3692   2.970154   8 #> 187 738.2457   2.648614   8 #> 188 626.7245   3.635339   8 #> 189 564.5358   3.543462   8 #> 190 565.1515   3.138958   8 #> 191 564.8717   2.763776   8 #> 192 595.1619   2.722703   8 #> 193 565.4968   2.550211   8 #> 194 564.1917   4.418701   8 #> 195 564.9533   2.525605   8 #> 196 589.2391   3.053549   8 #> 197 564.2437   3.746409   8 #> 198 799.0499   3.773721   8 #> 199 564.9306   3.333234   8 #> 200 564.5428   2.977292   8 #> 201 563.9378   2.541207   8 #> 202 674.7191   2.861844   8 #> 203 568.5643   2.705042   8 #> 204 776.7516   3.262228   8 #> 205 564.1366   2.893022   8 #> 206 579.3586   2.564806   8 #> 207 568.9708   2.747209   8 #> 208 563.9867   2.911074   8 #> 209 564.2696   2.819237   8 #> 210 573.0141   2.850731   8 #> 211 570.5399   2.937706   8 #> 212 581.6347   2.725882   8 #> 213 565.6135   3.804295   8 #> 214 600.1777   2.970692   8 #> 215 574.5551   2.714305   8 #> 216 565.9798   3.004821   8 #> 217 564.5691   3.400566   8 #> 218 566.0222   3.247466   8 #> 219 564.0989   2.983484   8 #> 220 721.8650   4.335001   8 #> 221 564.8449   2.623273   8 #> 222 830.1576   3.363751   8 #> 223 570.0667   2.639229   8 #> 224 564.4219   3.111381   8 #> 225 566.0142   2.922509   8 #> 226 564.0598   2.964467   8 #> 227 575.2562   2.756775   8 #> 228 568.9805   2.539603   8 #> 229 569.3336   2.810937   8 #> 230 566.1198   2.501378   8 #> 231 578.6095   2.535751   8 #> 232 565.7115   5.066607   8 #> 233 564.2978   2.786727   8 #> 234 564.1972   2.871389   8 #> 235 585.8347   2.651935   8 #> 236 565.9465   2.802526   8 #> 237 564.0474   2.681092   8 #> 238 563.9977   2.607229   8 #> 239 564.1775   4.203933   8 #> 240 727.4706   2.590784   8 #> 241 579.2289   3.020205   8 #> 242 564.1427   3.423626   8 #> 243 603.7735   2.993970   8 #> 244 579.0855   2.688652   8 #> 245 569.7634   3.435782   8 #> 246 563.9818   2.843383   8 #> 247 782.3812   2.741942   8 #> 248 564.2555   2.624511   8 #> 249 564.1641   2.909944   8 #> 250 591.4061   3.202308   8 #> 251 814.3619   3.387343   8 #> 252 583.8947   2.536268   8 #> 253 566.2296   2.858005   8 #> 254 674.1345   2.685790   8 #> 255 591.0020   2.790432   8 #> 256 695.4826   2.558117   8 #> 257 564.2626   3.379273   8 #> 258 584.4933   3.011326   8 #> 259 585.7693   2.844251   8 #> 260 566.6639   3.150019   8 #> 261 564.2638   3.147542   8 #> 262 565.7017   2.766712   8 #> 263 579.3201   2.514946   8 #> 264 624.6245   3.391757   8 #> 265 564.4572   2.516545   8 #> 266 570.1202   2.920660   8 #> 267 618.0169   3.051619   8 #> 268 568.1413   2.538742   8 #> 269 641.8339   4.773695   8 #> 270 564.1263   2.873408   8 #> 271 564.0044   2.970445   8 #> 272 583.5583   2.651256   8 #> 273 566.1313   3.025402   8 #> 274 619.0591   2.583183   8 #> 275 563.9300   2.501425   8 #> 276 976.8240   2.980815   8 #> 277 580.6710   2.553017   8 #> 278 563.9347   2.683075   8 #> 279 564.0311   2.723873   8 #> 280 564.6501   2.555376   8 #> 281 735.1621   2.523143   8 #> 282 572.0207   2.801660   8 #> 283 642.8777   2.694422   8 #> 284 565.2146   2.522471   8 #> 285 606.2992   2.954695   8 #> 286 568.8123   2.937510   8 #> 287 564.2153   3.005099   8 #> 288 564.2067   3.323244   8 #> 289 999.0891   3.143218   8 #> 290 563.9581   2.592915   8 #> 291 570.1342   2.588752   8 #> 292 572.8430   3.972717   8 #> 293 567.8453   3.734618   8 #> 294 632.8025   2.987840   8 #> 295 590.8465   2.790909   8 #> 296 565.5753   2.559876   8 #> 297 564.5451   2.726454   8 #> 298 583.7725   4.048098   8 #> 299 567.5568   3.032846   8 #> 300 578.0406   2.624311   8 #> 301 946.2556   3.321870   8 #> 302 565.4919   2.837884   8 #> 303 564.0466   3.232521   8 #> 304 595.7657   2.503666   8 #> 305 585.7958   2.624286   8 #> 306 612.7237   2.806922   8 #> 307 589.9538   2.552918   8 #> 308 577.8710   2.521221   8 #> 309 567.5039   2.774045   8 #> 310 628.6955   2.966600   8 #> 311 586.7930   3.044326   8 #> 312 564.4488   2.780712   8 #> 313 564.2631   2.808300   8 #> 314 575.8649   2.608034   8 #> 315 564.5589   2.550972   8 #> 316 564.0106   3.903519   8 #> 317 574.2214   2.703439   8 #> 318 589.8563   3.064822   8 #> 319 575.8486   2.625608   8 #> 320 762.0110   2.870556   8 #> 321 565.8584   2.683018   8 #> 322 564.1836   2.591745   8 #> 323 691.8821   2.579396   8 #> 324 565.0944   3.524731   8 #> 325 598.7865   3.596576   8 #> 326 606.6134   2.939383   8 #> 327 567.1384   2.778539   8 #> 328 708.5428   2.930656   8 #> 329 568.6718   3.295256   8 #> 330 569.8754   3.367145   8 #> 331 564.0828   2.947382   8 #> 332 564.9443   2.718732   8 #> 333 564.1222   2.984453   8 #> 334 928.4035   2.500259   8 #> 335 564.2740   2.933891   8 #> 336 565.0837   2.536979   8 #> 337 569.5734   2.595993   8 #> 338 565.1971   2.827836   8 #> 339 566.0472   2.748260   8 #> 340 564.4489   2.820198   8 #> 341 563.9311   2.547599   8 #> 342 565.7675   2.620510   8 #> 343 577.0309   2.973170   8 #> 344 568.9080   3.525791   8 #> 345 563.9310   2.688774   8 #> 346 564.0177   2.665256   8 #> 347 564.0123   2.565432   8 #> 348 592.0247   2.731821   8 #> 349 569.4771   2.830464   8 #> 350 564.6022   2.667760   8 #> 351 627.1144   2.509890   8 #> 352 583.0418   2.771194   8 #> 353 610.9143   2.505228   8 #> 354 908.3604   2.503334   8 #> 355 648.0455   2.856772   8 #> 356 564.1540   2.653951   8 #> 357 892.9620   2.676414   8 #> 358 565.8217   3.061708   8 #> 359 654.7167   3.517119   8 #> 360 572.3924   2.533012   8 #> 361 576.0806   2.773421   8 #> 362 576.1926   3.241586   8 #> 363 574.8525   3.197280   8 #> 364 564.8430   2.585103   8 #> 365 564.3539   2.587240   8 #> 366 563.9800   2.545322   8 #> 367 566.4609   2.702547   8 #> 368 582.6411   2.524148   8 #> 369 858.3982   2.964628   8 #> 370 564.1215   3.076765   8 #> 371 566.3724   2.909595   8 #> 372 563.9940   2.704233   8 #> 373 564.1170   2.896817   8 #> 374 564.5049   3.097584   8 #> 375 627.0180   2.661588   8 #> 376 566.9729   2.507546   8 #> 377 703.3570   3.241225   8 #> 378 564.1117   3.019688   8 #> 379 563.9650   2.959819   8 #> 380 572.4999   2.736174   8 #> 381 565.1432   3.157327   8 #> 382 566.3365   2.742506   8 #> 383 942.8486   3.169102   8 #> 384 565.5117   2.672499   8 #> 385 745.0334   2.649394   8 #> 386 563.9857   3.209566   8 #> 387 563.9428   2.712645   8 #> 388 564.6139   3.371318   8 #> 389 800.2486   3.240046   8 #> 390 568.4246   4.948289   8 #> 391 564.1900   2.932376   8 #> 392 665.1552   2.863075   8 #> 393 564.0427   2.545320   8 #> 394 564.0555   2.718425   8 #> 395 564.1182   2.585339   8 #> 396 566.3463   2.768124   8 #> 397 564.3411   2.629756   8 #> 398 653.1081   2.640641   8 #> 399 563.9640   2.927695   8 #> 400 594.1069   2.894947   8 #> 401 574.4975   2.658097   8 #> 402 588.2547   2.620711   8 #> 403 564.0750   4.125382   8 #> 404 958.3595   2.521779   8 #> 405 564.7487   2.694368   8 #> 406 565.9233   2.943404   8 #> 407 563.9553   2.555326   8 #> 408 624.4455   2.953179   8 #> 409 563.9661   2.620073   8 #> 410 564.0322   2.927923   8 #> 411 669.1465   2.526864   8 #> 412 567.5247   2.794633   8 #> 413 563.9732   2.717896   8 #> 414 638.9384   3.369393   8 #> 415 578.4905   3.587639   8 #> 416 675.1973   4.004847   8 #> 417 616.2710   3.054231   8 #> 418 566.4496   3.113255   8 #> 419 577.1895   2.503600   8 #> 420 613.9991   2.727402   8 #> 421 564.1003   3.433355   8 #> 422 609.5377   2.546930   8 #> 423 569.8407   3.367387   8 #> 424 565.4437   3.376283   8 #> 425 564.1282   2.607344   8 #> 426 571.8132   2.605528   8 #> 427 564.1513   2.762371   8 #> 428 566.1733   2.544351   8 #> 429 599.9401   4.179904   8 #> 430 563.9586   2.725685   8 #> 431 631.1956   2.920029   8 #> 432 563.9695   3.496496   8 #> 433 563.9770   2.608736   8 #> 434 564.2161   2.645179   8 #> 435 564.9277   2.518347   8 #> 436 664.6282   2.747772   8 #> 437 574.7226   2.625917   8 #> 438 567.5845   4.302668   8 #> 439 604.8469   3.818383   8 #> 440 566.5874   2.622360   8 #> 441 674.6783   2.627589   8 #> 442 745.8097   3.007630   8 #> 443 564.0300   2.661035   8 #> 444 564.4567   2.972253   8 #> 445 997.8015   3.641559   8 #> 446 564.0650   3.210188   8 #> 447 588.5350   3.249512   8 #> 448 569.8874   2.714809   8 #> 449 563.9577   3.727099   8 #> 450 766.9228   2.612495   8 #> 451 592.9411   3.559648   8 #> 452 564.4417   2.566696   8 #> 453 728.7518   2.619972   8 #> 454 564.9535   2.727618   8 #> 455 564.8736   2.682850   8 #> 456 632.5749   2.588467   8 #> 457 629.5076   2.500511   8 #> 458 592.7174   3.240768   8 #> 459 567.1582   2.663196   8 #> 460 564.4284   3.316653   8 #> 461 563.9779   2.611207   8 #> 462 574.3967   2.611690   8 #> 463 564.0921   2.968477   8 #> 464 581.2302   2.804365   8 #> 465 577.1863   4.007014   8 #> 466 566.4540   3.015996   8 #> 467 565.3047   2.986930   8 #> 468 565.5337   2.866701   8 #> 469 563.9681   2.967168   8 #> 470 564.5432   2.537890   8 #> 471 566.0920   2.683753   8 #> 472 571.8539   3.298450   8 #> 473 564.4770   2.531326   8 #> 474 733.8695   2.590298   8 #> 475 564.3567   3.081934   8 #> 476 813.4536   2.844340   8 #> 477 565.1140   3.838643   8 #> 478 564.0153   2.509491   8 #> 479 616.3272   2.825287   8 #> 480 567.6570   2.772119   8 #> 481 581.6944   2.523412   8 #> 482 614.7940   4.319459   8 #> 483 711.5588   2.721686   8 #> 484 564.4417   2.600654   8 #> 485 564.4025   3.299120   8 #> 486 570.4499   2.992519   8 #> 487 617.2603   2.677782   8 #> 488 564.4885   3.283611   8 #> 489 564.1100   3.116110   8 #> 490 568.5429   3.662540   8 #> 491 574.0392   2.523997   8 #> 492 594.4314   2.548494   8 #> 493 565.3270   2.509840   8 #> 494 862.9133   3.504130   8 #> 495 810.9802   4.156486   8 #> 496 578.9048   3.405836   8 #> 497 564.8661   2.670179   8 #> 498 565.4825   2.878513   8 #> 499 589.4979   2.527222   8 #> 500 564.3233   2.966640   8 #> 501 563.9822   5.404416   8 #> 502 566.3828   2.922904   8 #> 503 695.9097   2.999858   8 #> 504 564.0485   2.601220   8 #> 505 565.8602   2.733350   8 #> 506 564.2554   3.037840   8 #> 507 564.0383   2.967425   8 #> 508 605.2202   2.789202   8 #> 509 834.3853   3.615039   8 #> 510 565.7209   2.746835   8 #> 511 565.0145   2.678964   8 #> 512 565.2368   2.792779   8 #> 513 963.1394   2.918241   8 #> 514 740.5306   3.579939   8 #> 515 564.6716   2.691107   8 #> 516 626.1506   3.075484   8 #> 517 715.5268   2.850980   8 #> 518 566.9646   2.725200   8 #> 519 565.2172   2.825612   8 #> 520 573.1892   2.565199   8 #> 521 567.1986   3.532808   8 #> 522 564.6679   3.823115   8 #> 523 586.2518   2.916765   8 #> 524 563.9644   3.459293   8 #> 525 564.2533   3.571002   8 #> 526 563.9631   2.995699   8 #> 527 572.1529   4.133521   8 #> 528 575.9771   2.606623   8 #> 529 564.0199   3.115230   8 #> 530 608.0335   3.239192   8 #> 531 568.5098   3.039677   8 #> 532 566.1900   2.572362   8 #> 533 640.1820   3.104825   8 #> 534 635.0148   3.340560   8 #> 535 736.9530   2.860693   8 #> 536 606.3913   3.357674   8 #> 537 574.0918   3.022136   8 #> 538 570.3003   3.097204   8 #> 539 584.8950   2.678094   8 #> 540 571.2880   3.342014   8 #> 541 566.0059   2.500130   8 #> 542 572.8508   2.539682   8 #> 543 567.6725   2.716573   8 #> 544 739.0154   3.107571   8 #> 545 564.0711   2.642848   8 #> 546 587.1019   2.924582   8 #> 547 565.0082   2.549327   8 #> 548 574.7624   2.683732   8 #> 549 564.3173   2.981523   8 #> 550 680.1649   2.994828   8 #> 551 568.3306   2.859055   8 #> 552 564.0328   2.738991   8 #> 553 566.6181   3.165905   8 #> 554 565.9653   2.571936   8 #> 555 568.8215   2.578219   8 #> 556 572.0736   4.099116   8 #> 557 563.9831   3.174842   8 #> 558 564.1043   3.133757   8 #> 559 567.3343   3.030062   8 #> 560 563.9391   2.900447   8 #> 561 564.2028   2.678643   8 #> 562 564.0214   2.748492   8 #> 563 802.1557   2.631366   8 #> 564 621.2536   2.714004   8 #> 565 565.4635   2.572495   8 #> 566 566.5732   3.338156   8 #> 567 566.5688   2.732830   8 #> 568 692.6617   2.680521   8 #> 569 564.1516   3.130990   8 #> 570 564.3945   3.048088   8 #> 571 564.7424   2.524329   8 #> 572 570.7458   2.831952   8 #> 573 564.7920   2.521239   8 #> 574 563.9331   2.778631   8 #> 575 586.6332   2.622297   8 #> 576 575.2260   2.702350   8 #> 577 565.3866   2.751330   8 #> 578 566.4809   3.066040   8 #> 579 586.3678   2.916653   8 #> 580 568.5579   3.166599   8 #> 581 579.3425   2.629926   8 #> 582 568.2300   2.827818   8 #> 583 567.6021   3.203989   8 #> 584 565.9929   3.082860   8 #> 585 568.4156   2.605328   8 #> 586 564.3804   2.770440   8 #> 587 619.3537   2.594783   8 #> 588 570.4738   3.408705   8 #> 589 587.5946   2.865421   8 #> 590 702.5651   2.677642   8 #> 591 573.2049   2.634982   8 #> 592 569.5560   3.121955   8 #> 593 647.3362   2.606868   8 #> 594 600.1567   2.727640   8 #> 595 568.0564   2.793913   8 #> 596 565.3514   2.511934   8 #> 597 617.2606   2.594699   8 #> 598 564.0627   2.761035   8 #> 599 678.2385   2.601610   8 #> 600 567.4020   2.769452   8 #> 601 592.9785   2.725334   8 #> 602 564.7040   2.502013   8 #> 603 657.3751   3.186076   8 #> 604 571.7777   2.694130   8 #> 605 567.6200   3.455639   8 #> 606 564.0819   3.126524   8 #> 607 573.6709   2.780054   8 #> 608 590.4833   2.634714   8 #> 609 564.0496   2.899414   8 #> 610 564.4051   2.722023   8 #> 611 566.6916   2.555068   8 #> 612 574.4534   3.069072   8 #> 613 564.8217   2.654599   8 #> 614 565.5063   2.916431   8 #> 615 564.1361   2.521819   8 #> 616 563.9656   3.027516   8 #> 617 602.8392   2.801296   8 #> 618 606.6982   2.573915   8 #> 619 564.0512   3.020882   8 #> 620 568.3929   2.984438   8 #> 621 564.5476   2.684798   8 #> 622 667.9817   3.170711   8 #> 623 564.3751   2.602774   8 #> 624 571.0516   2.599252   8 #> 625 566.7292   2.633608   8 #> 626 874.3368   3.825419   8 #> 627 576.5949   2.554200   8 #> 628 631.3770   2.740561   8 #> 629 564.9317   4.887939   8 #> 630 581.9813   3.084779   8 #> 631 568.5468   2.613178   8 #> 632 564.8338   2.868302   8 #> 633 564.0762   2.591857   8 #> 634 563.9893   2.641195   8 #> 635 564.3280   2.560987   8 #> 636 564.6969   2.869633   8 #> 637 838.3287   2.911780   8 #> 638 565.9560   2.653262   8 #> 639 565.8403   2.990721   8 #> 640 564.1230   2.623653   8 #> 641 619.7256   2.964517   8 #> 642 564.5874   2.592698   8 #> 643 568.3037   2.528491   8 #> 644 565.5784   2.589522   8 #> 645 564.6046   2.557525   8 #> 646 564.0161   3.077177   8 #> 647 618.2473   3.180600   8 #> 648 564.0294   2.917031   8 #> 649 563.9343   3.416920   8 #> 650 564.0175   2.517534   8 #> 651 569.3756   3.539465   8 #> 652 568.1462   2.693532   8 #> 653 579.5427   4.138264   8 #> 654 572.9334   2.653548   8 #> 655 564.4309   3.504608   8 #> 656 689.9992   2.836890   8 #> 657 577.0966   3.421870   8 #> 658 569.9714   2.542865   8 #> 659 564.2459   3.310744   8 #> 660 570.3774   2.705300   8 #> 661 564.4883   2.541232   8 #> 662 566.5986   3.180555   8 #> 663 563.9775   2.617549   8 #> 664 569.9478   2.502570   8 #> 665 573.8126   2.978235   8 #> 666 915.1751   2.526648   8 #> 667 564.4199   3.109608   8 #> 668 564.7137   3.032501   8 #> 669 564.5841   3.064005   8 #> 670 572.8455   2.753964   8 #> 671 671.7871   3.627119   8 #> 672 564.3200   2.792412   8 #> 673 570.8166   2.554585   8 #> 674 791.9008   2.867297   8 #> 675 570.2233   2.591744   8 #> 676 879.5683   3.538468   8 #> 677 566.5930   3.284392   8 #> 678 564.1328   3.514054   8 #> 679 564.0496   2.874419   8 #> 680 577.7289   2.697198   8 #> 681 563.9776   3.435536   8 #> 682 564.5935   3.076600   8 #> 683 564.0111   2.902968   8 #> 684 565.0176   4.405742   8 #> 685 563.9763   2.861441   8 #> 686 564.9669   3.692975   8 #> 687 567.3027   2.712542   8 #> 688 564.0719   3.428790   8 #> 689 571.3500   2.584503   8 #> 690 599.6878   2.684912   8 #> 691 607.9854   3.739264   8 #> 692 574.4866   2.806413   8 #> 693 564.2736   2.613196   8 #> 694 586.9328   2.638725   8 #> 695 565.3245   3.004957   8 #> 696 815.3719   3.085485   8 #> 697 564.3915   2.965424   8 #> 698 564.0227   2.695993   8 #> 699 564.0025   4.239778   8 #> 700 570.6925   2.626376   8 #> 701 575.4842   2.589680   8 #> 702 580.5238   2.530896   8 #> 703 566.0548   2.721981   8 #> 704 564.1186   2.802582   8 #> 705 564.0234   3.437501   8 #> 706 567.7103   3.276771   8 #> 707 564.4408   3.064997   8 #> 708 565.3102   2.873283   8 #> 709 568.9741   2.583037   8 #> 710 571.0010   2.900763   8 #> 711 669.5972   2.578680   8 #> 712 571.3272   2.519919   8 #> 713 564.3441   2.559484   8 #> 714 570.2160   3.720351   8 #> 715 564.5854   3.273128   8 #> 716 564.7265   2.828091   8 #> 717 674.6923   3.121590   8 #> 718 567.4068   3.272676   8 #> 719 564.4344   2.688227   8 #> 720 797.5212   2.681119   8 #> 721 752.3470   2.753825   8 #> 722 578.8992   3.229587   8 #> 723 566.1070   2.532467   8 #> 724 840.0804   3.118404   8 #> 725 575.1696   3.031547   8 #> 726 625.7895   2.710899   8 #> 727 564.3917   2.769992   8 #> 728 566.0676   2.503361   8 #> 729 564.4510   3.083253   8 #> 730 668.5693   3.396205   8 #> 731 579.9643   3.063890   8 #> 732 564.2640   3.418549   8 #> 733 583.2975   3.106352   8 #> 734 564.0211   2.819941   8 #> 735 650.3668   3.935076   8 #> 736 565.2634   2.797845   8 #> 737 565.6216   2.679587   8 #> 738 564.5017   2.517015   8 #> 739 563.9614   2.698575   8 #> 740 815.0819   3.543769   8 #> 741 568.4428   3.032635   8 #> 742 564.0243   2.594149   8 #> 743 565.8788   2.626259   8 #> 744 678.5687   3.136168   8 #> 745 590.8641   2.945025   8 #> 746 564.3698   2.591422   8 #> 747 569.5667   2.626889   8 #> 748 564.3998   2.608726   8 #> 749 571.3002   2.540104   8 #> 750 564.8937   2.653560   8 #> 751 565.9582   3.414919   8 #> 752 754.9385   3.285082   8 #> 753 569.7304   2.680854   8 #> 754 564.0151   2.852949   8 #> 755 568.0316   2.501657   8 #> 756 791.2886   2.869287   8 #> 757 564.6616   3.451192   8 #> 758 568.6334   2.883020   8 #> 759 563.9617   2.681829   8 #> 760 564.8988   2.753266   8 #> 761 563.9693   3.093129   8 #> 762 568.0934   2.705379   8 #> 763 563.9780   2.985781   8 #> 764 563.9882   3.468416   8 #> 765 571.5888   4.793818   8 #> 766 667.7456   2.537528   8 #> 767 622.0851   3.027139   8 #> 768 564.5610   3.077446   8 #> 769 566.1548   2.552398   8 #> 770 563.9919   3.246886   8 #> 771 564.8649   3.594376   8 #> 772 564.8716   2.650590   8 #> 773 578.3787   3.238398   8 #> 774 564.1803   2.529175   8 #> 775 564.0745   2.866834   8 #> 776 564.1255   3.063591   8 #> 777 564.0113   2.565929   8 #> 778 564.1580   3.559104   8 #> 779 582.8392   2.615368   8 #> 780 564.0915   3.280692   8 #> 781 564.6133   2.688785   8 #> 782 563.9675   2.676290   8 #> 783 574.9174   2.539473   8 #> 784 563.9352   2.886742   8 #> 785 566.0718   2.799391   8 #> 786 738.7688   2.609708   8 #> 787 981.4992   2.616793   8 #> 788 565.5992   3.407396   8 #> 789 564.3621   3.004801   8 #> 790 573.6941   2.554959   8 #> 791 569.2364   2.877562   8 #> 792 564.1627   3.015071   8 #> 793 669.9055   2.508920   8 #> 794 564.4363   2.917777   8 #> 795 587.3256   3.185165   8 #> 796 566.9990   2.517223   8 #> 797 577.6176   3.009626   8 #> 798 565.1245   2.779047   8 #> 799 586.2694   3.150365   8 #> 800 565.9852   2.539927   8 #> 801 568.6175   2.675903   8 #> 802 618.0459   2.549762   8 #> 803 564.1893   3.500195   8 #> 804 564.4506   2.863247   8 #> 805 564.1514   2.786060   8 #>  #> [[10]] #>           ts magnitudes gen #> 1   798.7054   2.917627   9 #> 2   775.8383   3.129786   9 #> 3   642.1313   2.935687   9 #> 4   796.7593   2.750997   9 #> 5   748.8379   3.640616   9 #> 6   747.5036   2.549236   9 #> 7   645.7808   2.686389   9 #> 8   668.0873   2.620631   9 #> 9   576.5042   2.766481   9 #> 10  963.7648   3.278958   9 #> 11  705.3756   3.653033   9 #> 12  680.7450   3.260916   9 #> 13  567.0238   2.770762   9 #> 14  575.0386   2.835713   9 #> 15  567.6450   3.134910   9 #> 16  567.2857   2.933795   9 #> 17  614.8680   2.518615   9 #> 18  738.6957   3.410221   9 #> 19  615.0535   2.686524   9 #> 20  674.9334   2.650203   9 #> 21  613.7581   2.759491   9 #> 22  620.3488   3.199846   9 #> 23  613.7587   2.773817   9 #> 24  613.6644   3.514845   9 #> 25  615.5174   3.019169   9 #> 26  564.8960   2.511378   9 #> 27  808.3064   2.500956   9 #> 28  586.1554   2.702113   9 #> 29  599.1094   3.148593   9 #> 30  568.4920   2.759049   9 #> 31  656.5465   2.596974   9 #> 32  708.0873   4.532077   9 #> 33  568.2226   2.722408   9 #> 34  566.3948   3.295649   9 #> 35  650.3026   3.153378   9 #> 36  565.0262   2.822695   9 #> 37  566.5132   3.964736   9 #> 38  576.8154   5.155872   9 #> 39  705.2702   2.888583   9 #> 40  569.5698   3.965176   9 #> 41  609.9145   2.514408   9 #> 42  565.9983   2.644668   9 #> 43  565.6664   3.953806   9 #> 44  689.5015   2.961671   9 #> 45  754.2989   3.607888   9 #> 46  565.0737   3.076962   9 #> 47  566.4852   2.550477   9 #> 48  643.9226   3.031661   9 #> 49  635.3369   2.556752   9 #> 50  564.1681   2.568122   9 #> 51  566.0859   3.559904   9 #> 52  926.3731   2.744816   9 #> 53  656.6528   2.747903   9 #> 54  660.3179   2.517872   9 #> 55  697.7355   2.738195   9 #> 56  658.2085   2.762744   9 #> 57  660.2132   3.347793   9 #> 58  627.7372   2.968518   9 #> 59  628.3674   2.723474   9 #> 60  565.6095   2.792414   9 #> 61  564.8711   2.684280   9 #> 62  841.2343   2.545693   9 #> 63  590.7178   2.951195   9 #> 64  564.6012   2.725511   9 #> 65  564.4576   3.003913   9 #> 66  964.2510   3.387000   9 #> 67  566.0711   2.517344   9 #> 68  565.0492   2.550911   9 #> 69  564.4542   2.730989   9 #> 70  564.3653   3.023530   9 #> 71  881.0416   3.002786   9 #> 72  636.8803   3.000326   9 #> 73  819.5311   3.027903   9 #> 74  574.4187   2.813541   9 #> 75  577.7595   2.869595   9 #> 76  600.6156   2.672461   9 #> 77  774.9970   2.924236   9 #> 78  724.9263   2.843652   9 #> 79  722.0696   3.215945   9 #> 80  723.5785   3.324498   9 #> 81  572.4486   2.691689   9 #> 82  566.3083   2.571821   9 #> 83  568.9761   2.608858   9 #> 84  565.7229   2.588836   9 #> 85  574.2101   2.737694   9 #> 86  730.5929   2.666940   9 #> 87  569.5427   4.123383   9 #> 88  570.1817   2.838939   9 #> 89  565.7145   2.810369   9 #> 90  592.1662   2.835027   9 #> 91  565.7608   3.131377   9 #> 92  568.0715   3.707816   9 #> 93  570.2336   3.838134   9 #> 94  565.7225   2.811815   9 #> 95  577.4568   2.549894   9 #> 96  584.3943   3.650589   9 #> 97  661.1512   2.706103   9 #> 98  581.2159   2.930193   9 #> 99  565.7140   2.569004   9 #> 100 936.7983   3.766278   9 #> 101 939.6761   2.651840   9 #> 102 568.5714   2.912762   9 #> 103 566.8020   3.676843   9 #> 104 586.3254   4.938199   9 #> 105 814.3830   2.505385   9 #> 106 564.5678   2.803824   9 #> 107 684.6152   2.575037   9 #> 108 644.5260   2.766791   9 #> 109 644.0542   2.820940   9 #> 110 641.8510   3.694246   9 #> 111 643.6294   2.561502   9 #> 112 642.5158   3.206915   9 #> 113 642.1783   2.559545   9 #> 114 641.8457   2.955329   9 #> 115 691.4130   3.142505   9 #> 116 580.7287   2.662309   9 #> 117 574.2870   2.763777   9 #> 118 577.1436   2.510867   9 #> 119 607.3748   2.575288   9 #> 120 584.9703   2.726682   9 #> 121 588.6479   2.769937   9 #> 122 641.7978   2.740281   9 #> 123 573.4615   3.351310   9 #> 124 573.1816   2.732661   9 #> 125 957.4033   3.071790   9 #> 126 599.4085   3.384938   9 #> 127 649.7140   2.593777   9 #> 128 599.1349   2.965280   9 #> 129 584.4526   2.617229   9 #> 130 765.5033   2.511818   9 #> 131 610.5688   2.947624   9 #> 132 600.2151   2.721871   9 #> 133 569.4706   3.236337   9 #> 134 570.3539   2.701616   9 #> 135 569.0561   2.730566   9 #> 136 569.1551   2.919838   9 #> 137 568.9372   2.664527   9 #> 138 600.6781   2.865242   9 #> 139 578.1285   2.591227   9 #> 140 575.5437   2.731666   9 #> 141 800.2704   2.506425   9 #> 142 574.4157   3.009507   9 #> 143 600.8223   3.361404   9 #> 144 569.5625   3.453150   9 #> 145 575.6710   4.789862   9 #> 146 571.5338   2.798425   9 #> 147 660.7586   4.506895   9 #> 148 581.2969   2.897179   9 #> 149 584.5556   2.512144   9 #> 150 574.6480   2.637596   9 #> 151 572.0774   2.500206   9 #> 152 569.0597   2.900932   9 #> 153 591.4155   2.817820   9 #> 154 595.2600   2.610833   9 #> 155 622.5310   2.665407   9 #> 156 583.8174   2.990517   9 #> 157 799.7672   2.901641   9 #> 158 607.3206   2.538788   9 #> 159 570.6720   2.960361   9 #> 160 571.5429   2.908171   9 #> 161 569.2770   2.902892   9 #> 162 772.2892   3.227713   9 #> 163 586.0672   3.023716   9 #> 164 568.7755   3.426482   9 #> 165 593.4428   3.609478   9 #> 166 569.5943   2.779581   9 #> 167 564.4825   3.014032   9 #> 168 838.4456   2.509812   9 #> 169 603.0414   2.530770   9 #> 170 646.0423   2.874755   9 #> 171 576.2804   2.939593   9 #> 172 569.9784   2.688816   9 #> 173 604.3893   3.067798   9 #> 174 604.0170   2.604563   9 #> 175 570.7154   2.656452   9 #> 176 611.2434   2.577650   9 #> 177 727.9655   2.693719   9 #> 178 601.4902   2.921734   9 #> 179 578.5113   2.597832   9 #> 180 567.8160   3.486110   9 #> 181 567.5928   3.063729   9 #> 182 646.7809   2.618589   9 #> 183 612.8472   3.836591   9 #> 184 568.0440   2.569870   9 #> 185 637.7607   2.902747   9 #> 186 998.0737   2.553040   9 #> 187 599.7779   2.642029   9 #> 188 835.3836   2.648919   9 #> 189 616.7005   2.800271   9 #> 190 610.8308   2.631656   9 #> 191 567.3133   3.001613   9 #> 192 565.0249   2.903143   9 #> 193 571.9259   4.090866   9 #> 194 564.8020   2.718541   9 #> 195 564.4232   3.922333   9 #> 196 813.7451   2.734286   9 #> 197 646.9074   2.559412   9 #> 198 565.4225   2.525313   9 #> 199 614.8744   2.524497   9 #> 200 667.4862   2.586985   9 #> 201 616.5789   2.581139   9 #> 202 616.8890   2.779107   9 #> 203 570.9511   2.593337   9 #> 204 811.0687   2.694338   9 #> 205 817.9835   2.573018   9 #> 206 583.7276   3.132066   9 #> 207 564.0452   2.609416   9 #> 208 567.8770   2.869122   9 #> 209 576.1568   2.933677   9 #> 210 564.4831   2.995598   9 #> 211 564.9207   3.322164   9 #> 212 564.5503   2.742885   9 #> 213 564.0879   3.059035   9 #> 214 564.1576   2.720239   9 #> 215 607.9058   3.299981   9 #> 216 564.4440   2.557705   9 #> 217 565.3312   3.482771   9 #> 218 569.5275   2.945475   9 #> 219 563.9926   3.617701   9 #> 220 581.1806   2.686192   9 #> 221 571.0166   3.724907   9 #> 222 603.6401   2.733496   9 #> 223 566.8278   2.862162   9 #> 224 564.2772   2.844938   9 #> 225 570.4624   2.785823   9 #> 226 564.1111   3.682037   9 #> 227 564.1680   2.555259   9 #> 228 571.8761   3.052583   9 #> 229 564.7538   2.602089   9 #> 230 564.9964   2.904089   9 #> 231 564.9219   2.640390   9 #> 232 566.3510   3.570588   9 #> 233 564.4092   3.129314   9 #> 234 564.4420   2.654193   9 #> 235 573.9437   3.689581   9 #> 236 564.6189   2.979822   9 #> 237 564.0520   2.997212   9 #> 238 622.6534   3.116116   9 #> 239 564.4527   2.717409   9 #> 240 603.3951   4.532705   9 #> 241 663.5619   2.587107   9 #> 242 715.7396   3.485575   9 #> 243 727.9603   3.441595   9 #> 244 583.5552   3.024921   9 #> 245 652.3283   2.655073   9 #> 246 677.4529   2.522625   9 #> 247 594.7213   2.838511   9 #> 248 564.2402   2.687311   9 #> 249 564.7654   2.576146   9 #> 250 565.0286   2.821637   9 #> 251 564.3538   3.072149   9 #> 252 567.2371   2.950972   9 #> 253 569.9220   2.772476   9 #> 254 564.2990   2.732890   9 #> 255 693.4391   2.874521   9 #> 256 608.1992   2.956725   9 #> 257 572.5808   2.914522   9 #> 258 564.3028   3.187135   9 #> 259 776.1240   3.285581   9 #> 260 605.8221   2.952157   9 #> 261 564.7738   2.548481   9 #> 262 942.6473   2.926434   9 #> 263 603.8138   3.149650   9 #> 264 874.4204   2.607726   9 #> 265 574.2522   2.766033   9 #> 266 565.3993   3.207100   9 #> 267 786.3573   3.054883   9 #> 268 565.1357   2.547042   9 #> 269 566.9230   3.533149   9 #> 270 583.7250   2.610042   9 #> 271 564.9356   2.540287   9 #> 272 565.0107   3.206221   9 #> 273 598.6059   3.116224   9 #> 274 565.1438   2.704736   9 #> 275 613.5539   3.371993   9 #> 276 603.5853   3.144225   9 #> 277 565.4368   2.640162   9 #> 278 565.9759   2.751607   9 #> 279 797.0682   3.721547   9 #> 280 570.5266   3.609793   9 #> 281 619.7826   2.712826   9 #> 282 566.0588   2.698324   9 #> 283 623.6036   2.795283   9 #> 284 570.0834   2.591741   9 #> 285 678.2697   2.763391   9 #> 286 598.3934   3.017417   9 #> 287 578.1235   2.892319   9 #> 288 564.4844   2.697012   9 #> 289 673.3174   2.735534   9 #> 290 899.0900   2.641051   9 #> 291 590.6974   2.599575   9 #> 292 565.7289   2.770111   9 #> 293 598.1165   2.691119   9 #> 294 835.4152   3.041413   9 #> 295 599.4506   2.669599   9 #> 296 567.2868   2.820918   9 #> 297 613.4008   2.805700   9 #> 298 608.3702   2.571337   9 #> 299 567.2756   2.828250   9 #> 300 564.4372   3.818288   9 #> 301 566.0955   3.006396   9 #> 302 565.5163   3.831345   9 #> 303 564.3486   3.836019   9 #> 304 638.1777   2.746655   9 #> 305 569.8883   2.618886   9 #> 306 600.7475   2.836755   9 #> 307 941.8398   3.407299   9 #> 308 606.7035   2.657350   9 #> 309 674.7264   2.535161   9 #> 310 567.6807   2.694360   9 #> 311 651.6498   3.345594   9 #> 312 815.7741   3.742143   9 #> 313 819.8148   2.668680   9 #> 314 756.2248   3.256851   9 #> 315 762.7077   2.647590   9 #> 316 564.1011   2.664201   9 #> 317 572.7925   2.686506   9 #> 318 706.3195   3.178876   9 #> 319 804.8389   2.850984   9 #> 320 571.5993   3.498777   9 #> 321 571.7977   2.713764   9 #> 322 578.1142   2.646807   9 #> 323 736.0663   2.964462   9 #> 324 608.0613   2.562387   9 #> 325 571.7153   2.885185   9 #> 326 572.2144   2.826772   9 #> 327 668.5795   2.513696   9 #> 328 614.5026   2.609879   9 #> 329 571.6025   3.032195   9 #> 330 632.6783   2.526916   9 #> 331 566.7895   4.035391   9 #> 332 702.3933   3.098563   9 #> 333 564.2866   2.553375   9 #> 334 564.1532   2.595775   9 #> 335 570.2125   2.978948   9 #> 336 569.4589   2.505072   9 #> 337 569.3915   2.751892   9 #> 338 564.4283   3.257942   9 #> 339 566.4464   3.642601   9 #>  #> [[11]] #>           ts magnitudes gen #> 1   776.3563   2.562834  10 #> 2   748.8897   2.567634  10 #> 3   741.0963   2.531944  10 #> 4   685.1342   2.660247  10 #> 5   766.5537   3.187767  10 #> 6   600.1636   2.761056  10 #> 7   727.5530   2.794766  10 #> 8   709.6510   2.586867  10 #> 9   708.2934   2.727777  10 #> 10  708.3462   4.232331  10 #> 11  711.4339   2.641595  10 #> 12  576.8599   2.562291  10 #> 13  576.8317   3.284364  10 #> 14  624.1214   2.567399  10 #> 15  579.0977   3.402633  10 #> 16  584.5031   2.580237  10 #> 17  579.5748   3.034123  10 #> 18  578.7525   2.788014  10 #> 19  578.6776   2.655582  10 #> 20  577.2224   2.581698  10 #> 21  623.0984   2.797995  10 #> 22  843.9085   2.515470  10 #> 23  633.4158   2.521004  10 #> 24  577.0222   3.234225  10 #> 25  580.0541   2.645776  10 #> 26  580.6921   2.939619  10 #> 27  577.1530   2.805728  10 #> 28  577.0697   3.105437  10 #> 29  577.0641   2.636700  10 #> 30  583.8601   2.788217  10 #> 31  570.5910   3.164667  10 #> 32  569.6255   2.800214  10 #> 33  592.8050   2.577819  10 #> 34  577.5346   2.759176  10 #> 35  590.1191   3.318158  10 #> 36  616.8942   2.690491  10 #> 37  568.7517   2.664431  10 #> 38  754.7101   2.880308  10 #> 39  601.7582   3.192072  10 #> 40  669.9116   2.664075  10 #> 41  571.8527   2.854741  10 #> 42  893.4400   2.955219  10 #> 43  775.6354   2.772942  10 #> 44  725.0835   3.248021  10 #> 45  823.4614   2.710172  10 #> 46  569.6149   2.885483  10 #> 47  660.2358   2.826133  10 #> 48  824.7262   2.625147  10 #> 49  592.7320   2.652300  10 #> 50  569.2549   2.504644  10 #> 51  607.5889   2.890846  10 #> 52  585.2119   2.848634  10 #> 53  665.1309   3.795964  10 #> 54  587.6468   2.852347  10 #> 55  605.1728   3.543833  10 #> 56  612.2564   3.441285  10 #> 57  587.0774   2.575422  10 #> 58  596.4073   3.038920  10 #> 59  668.9450   2.676965  10 #> 60  933.2029   2.928359  10 #> 61  586.3418   3.668933  10 #> 62  599.8401   2.995166  10 #> 63  587.1143   3.018380  10 #> 64  782.8204   2.671985  10 #> 65  643.8171   2.758182  10 #> 66  642.5143   3.215169  10 #> 67  764.1895   2.815162  10 #> 68  616.1846   3.628057  10 #> 69  601.5237   2.925248  10 #> 70  570.0366   3.217585  10 #> 71  631.1720   2.707220  10 #> 72  578.9764   2.685164  10 #> 73  686.5678   2.782919  10 #> 74  577.0268   2.552577  10 #> 75  658.0338   3.278583  10 #> 76  575.8447   2.805504  10 #> 77  600.8481   3.289702  10 #> 78  608.9408   2.900075  10 #> 79  575.8067   2.726381  10 #> 80  584.4118   2.655914  10 #> 81  584.8784   2.990766  10 #> 82  576.4855   2.784434  10 #> 83  728.3304   2.518780  10 #> 84  660.8688   3.482531  10 #> 85  660.8041   2.605924  10 #> 86  662.5811   2.903096  10 #> 87  800.0382   3.584674  10 #> 88  897.5522   2.625671  10 #> 89  660.8395   3.260543  10 #> 90  661.3085   2.707554  10 #> 91  772.6304   2.611182  10 #> 92  591.4291   2.752276  10 #> 93  724.2043   2.961151  10 #> 94  578.5559   2.886778  10 #> 95  592.2688   2.819623  10 #> 96  572.7809   2.639778  10 #> 97  571.9355   2.705470  10 #> 98  572.2858   2.870001  10 #> 99  595.7343   2.726712  10 #> 100 572.2105   2.801614  10 #> 101 565.4859   3.227689  10 #> 102 862.9008   3.239651  10 #> 103 650.8133   2.653686  10 #> 104 573.3386   3.096946  10 #> 105 630.5665   2.732886  10 #> 106 594.8911   2.871480  10 #> 107 571.8189   3.122786  10 #> 108 565.6899   2.526494  10 #> 109 578.1949   2.906968  10 #> 110 580.6657   2.849363  10 #> 111 906.3981   3.135869  10 #> 112 880.4547   2.515705  10 #> 113 571.3067   2.765980  10 #> 114 574.3121   3.029206  10 #> 115 580.4092   2.758808  10 #> 116 606.9083   2.606444  10 #> 117 603.6968   2.845366  10 #> 118 835.9720   3.603174  10 #> 119 633.6338   3.647769  10 #> 120 604.7065   3.294931  10 #> 121 596.5057   2.864652  10 #> 122 590.3617   2.580148  10 #> 123 574.9894   2.582191  10 #> 124 573.9489   2.674537  10 #> 125 575.5046   2.713605  10 #> 126 643.6244   3.334854  10 #> 127 797.2521   2.656220  10 #> 128 978.6959   3.198126  10 #> 129 836.2156   2.680887  10 #> 130 588.3213   2.760108  10 #> 131 564.6548   2.553110  10 #> 132 898.0391   2.514064  10 #> 133 564.3608   2.574416  10 #> 134 641.7942   2.585701  10 #> 135 661.5292   2.626863  10 #> 136 743.3855   2.667707  10 #> 137 580.4357   3.054660  10 #> 138 578.2119   2.563159  10 #> 139 678.6170   2.591170  10 #> 140 750.9515   2.794150  10 #> 141 578.4827   2.530264  10 #> 142 588.9852   3.219241  10 #> 143 889.9684   2.962428  10 #>  #> [[12]] #>          ts magnitudes gen #> 1  769.1761   3.168962  11 #> 2  790.9594   2.776216  11 #> 3  766.9241   2.819690  11 #> 4  722.8419   2.943556  11 #> 5  623.4326   3.068551  11 #> 6  894.3069   2.566322  11 #> 7  570.0601   2.839362  11 #> 8  668.9487   2.597988  11 #> 9  959.3341   2.709184  11 #> 10 794.6409   2.694019  11 #> 11 579.0803   2.617590  11 #> 12 576.2115   2.511172  11 #> 13 585.3956   3.422315  11 #> 14 801.3374   2.865495  11 #> 15 972.9963   2.533580  11 #> 16 572.2167   2.728400  11 #> 17 584.1799   2.558804  11 #> 18 582.3642   2.969989  11 #> 19 725.8558   2.761427  11 #> 20 575.5509   2.530188  11 #>  #> [[13]] #>         ts magnitudes gen #> 1 726.7927    2.64938  12 #>"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior distribution of the expected number of events — get_posterior_N","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"Plot posterior distribution expected number events","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"","code":"get_posterior_N(input.list, domain.extension = 0.1)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"input.list combined input file (link functions) bru output (marginals) domain.extension Percentage posterior quantiles extend domain specified scalar. Default set 0.10.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior distribution of the expected number of events — get_posterior_N","text":"list three objects: post.df: data.frame containing posterior informations posterior distribution number events post.plot : ggplot object showing posterior distribution expected number events post.plot.shaded : ggplot object showing posterior distribution expected number events, shaded region corresponds 0.025 0.975 quantiles distribution distribution number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"Retrieve posterior distribution ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"","code":"get_posterior_param(input.list)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"input.list input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/get_posterior_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posterior distribution of ETAS parameters — get_posterior_param","text":"list two elements: post.df : data.frame posterior distributions parameters columns x (value parameter), y (value posterior), param (parameter name) post.plot : ggplot object showing posterior distribution parameter","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":null,"dir":"Reference","previous_headings":"","what":"ETAS triggering function - used by inlabru — gt","title":"ETAS triggering function - used by inlabru — gt","text":"function returns value ETAS triggering function specified time t points history th, mh","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ETAS triggering function - used by inlabru — gt","text":"","code":"gt(theta, t, th, mh, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ETAS triggering function - used by inlabru — gt","text":"theta ETAS parameters list names K, alpha, c, p t Time function calculated, scalar vector th Time events history [days, months,...], scalar vector mh Magnitude events history, scalar vector M0 Minimum magnitude threshold, scalar","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ETAS triggering function - used by inlabru — gt","text":"value ETAS triggering function evaluated t history th, mh.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/gt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ETAS triggering function - used by inlabru — gt","text":"ETAS triggering function evaluated $$g(t - t_h | m_h) = K e^{\\alpha(m_h - M_0)} \\left( \\frac{t - t_h}{c} + 1\\right)^{-p}$$ \\(K, \\alpha, c > 0\\), \\(p \\geq 1\\) ETAS parameters, \\(t\\) (t) time function evaluated, considering past observation \\(t_h, m_h\\) (th, mh). function returns 0 \\(t_h > t\\). \\(t\\) scalar \\(t_h, m_h\\) vectors function returns vector, \\(t\\) vector \\(t_h, m_h\\) scalars, \\(t, t_h, m_h\\) vectors length. use \\(t\\) \\(t_h, m_h\\) vectors different lengths.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":null,"dir":"Reference","previous_headings":"","what":"HORUS Ita Catalogue — horus","title":"HORUS Ita Catalogue — horus","text":"HOmogenized instRUmental Seismic catalog (HORUS) Italy 1960 present, limited limited 1960-2019.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HORUS Ita Catalogue — horus","text":"","code":"horus"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"HORUS Ita Catalogue — horus","text":"Original file format: Year: Origin Time (OT) year Mo: OT month Da: OT day Ho: OT hour Mi OT minute Se OT seconds fractions Lat epicenter N latitude (degrees) Lon epicenter E longitude (degrees) Depth hypocenter depth (km) Mw true proxy moment magnitude sigMw moment magnitude uncertainty Geo.Ita \"*\" indicates epicenter within Italian mainland territory, otherwise \" \" Geo.CPTI15 \"*\" indicates epicenter within spatial window CPTI15 catalog (Rovida et al., 2020, Bull Earth Eng, doi: 10.1007/s10518-020-00818-y) Ev..type \"x\" indicates event earthquake (e.g. explosion, eruption, landslide, ...) (since May 1st 2012) Iside.n. ISIDe id number (since April 16th 2005) ETAS.inlabru format: time_string: Data-time event, ISO 8601 format; format = \"%Y-%m-%dT%H:%M:%OS\" use .POSIXct() lon: Original Lon lat: Original Lat depth Original Depth M: Original Mw","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"HORUS Ita Catalogue — horus","text":"http://horus.bo.ingv./","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HORUS Ita Catalogue — horus","text":"original entire HORUS catalog provided single tab separated ascii file: HORUS_Ita_Catalog.txt random second decimal digit added ML Md INGV bulletin (ISIDe) computing Mw proxies (Lolli et al., Seism. Res. Lett., 91, 3208-3222, doi: 10.1785/0220200148), HORUS_Ita_Catalog_o.txt original ML Md used compute Mw proxies. ETAS.inlabru includes reformatted version data HORUS_Ita_Catalog.txt data.frame, limited 1960-2019. data provided , express implied warranty given.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/horus.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"HORUS Ita Catalogue — horus","text":"Barbara Lolli(1), Daniele Randazzo(1), Gianfranco Vannucci(1) Paolo Gasperini (2),(1) (2020). Homogenized Instrumental Seismic Catalog (HORUS) Italy 1960 Present, Seismol. Res. Lett, doi: 10.1785/0220200148. (1) Istituto Nazionale di Geofisica e Vulcanologia, Sezione di Bologna (2) Dipartimento di Fisica e Astronomia, Università di Bologna","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"Copula transformation Exponential standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"","code":"inv_exp_t(x, rate)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"x values Exponential distribution, vector. rate rate Exponential distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_exp_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Exponential to a standard Normal distribution — inv_exp_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"Copula transformation Gamma standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"","code":"inv_gamma_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"x values Gamma distribution, vector. shape parameter Gamma distribution, scalar. b rate parameter Gamma distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_gamma_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Gamma to a standard Normal distribution — inv_gamma_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"Copula transformation Log-Normal standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"","code":"inv_loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"x values Log-Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Log-Normal to a standard Normal distribution — inv_loggaus_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"Copula transformation Uniform standard Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"","code":"inv_unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"x values Uniform distribution, vector. minimum Uniform distribution, scalar. b maximum Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/inv_unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from an Uniform to a standard Normal distribution — inv_unif_t","text":"values standard Normal distribution, vector length x","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the integral of the ETAS conditional intensity — lambda_N","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Calculate number events time interval T1 T2 given imposed events ETAS","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"","code":"lambda_N(th.mu, th.K, th.alpha, th.c, th.p, T1, T2, M0, Ht, link.functions)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"th.mu Background rate, mu, internal parameter scale th.K ETAS triggering parameter K internal parameter scale th.alpha ETAS triggering parameter alpha internal parameter scale th.c ETAS triggering parameter c internal parameter scale th.p ETAS triggering parameter p internal parameter scale T1 Start temporal model domain. T2 End temporal model domain. M0 Minimum magnitude threshold Ht History process, set known events interval. must data.frame columns ts (time) magnitudes (magnitudes). link.functions list functions transform parameters internal scale ETAS scale","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/lambda_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the integral of the ETAS conditional intensity — lambda_N","text":"Integral ETAS conditional intensity T1 T2 minimum magnitude M0, .e. expected number events.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"","code":"log_Lambda_h(theta, th, mh, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"theta ETAS parameters data.frame(mu=mu, K=K, alpha=alpha, c=c, p=p). th Time parent event. mh Magnitude parent event M0 Minimum magnitude threshold T1 Start temporal model domain. T2 End temporal model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/log_Lambda_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logarithm of the integral of the ETAS triggering function — log_Lambda_h","text":"Logarithm integral ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Copula transformation standard Normal distribution Log-Normal distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"","code":"loggaus_t(x, m, s)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"x values standard Normal distribution, vector. m mean logarithm Log-Normal distribution, scalar. s standard deviation logarithm Log-Normal distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/loggaus_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Log-Normal distribution — loggaus_t","text":"Values Log-Normal distribution logarithmic mean m standard deviation s, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate Omori's law — omori","title":"Function to calculate Omori's law — omori","text":"Function calculate Omori's law","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate Omori's law — omori","text":"","code":"omori(theta, t, ti)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate Omori's law — omori","text":"theta ETAS parameters (list(mu = mu, K = K, alpha = alpha, c = c, p = p), parameters c p used t Time Omori's law evaluated ti Time event history","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate Omori's law — omori","text":"Value Omori's law point t event happened ti","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"Function plot Omori's law corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"","code":"omori_plot_posterior(   input.list,   post.samp = NULL,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL. n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different posterior samples — omori_plot_posterior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"Function plot Omori's law corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"","code":"omori_plot_prior(input.list, n.samp = 10, t.end = 1, n.breaks = 100)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/omori_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot Omori's law corresponding to different prior samples — omori_plot_prior","text":"ggplot object","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"Plot posterior densities ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"","code":"post_pairs_plot(   input.list = NULL,   n.samp = NULL,   post.samp = NULL,   max.batch = 1000 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors plot post.samp data.frame columns mu, K, alpha, c, p rows corresponding different posterior samples. NULL function samples joint posterior distribution n.samp times. default NULL. max.batch parameter post_sampling function used case post.samp = NULL","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_pairs_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the posterior densities of the ETAS parameters — post_pairs_plot","text":"list: elements post.samp.df:data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters. post.samp NULL returns post.samp pair.plot: ggplot object reporting pair plot parameters samples. obtained using ggpairs function Ggally library","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from the posterior of the ETAS parameters — post_sampling","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"Sample posterior ETAS parameters","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"","code":"post_sampling(input.list, n.samp, max.batch = 1000, ncore = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale n.samp number samples draw posteriors max.batch Maximum number posterior samples generated simultaneously. Default 1000. ncore Deprecated argument controlling parallelism. Use future::plan(future::multisession, workers = ncore) (similar) configure parallelism code instead.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/post_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from the posterior of the ETAS parameters — post_sampling","text":"data.frame posterior samples nrow = n.samp columns mu, K, alpha, c, p corresponding ETAS parameters.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"Return sample magnitudes drawn GR distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n, beta.p, M0)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"n Number events sample. beta.p Related b-value via b ln(10). M0 Minimum magnitude sample.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"list magnitudes length n drawn GR distribution.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_GR_magnitudes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a sample of magnitudes drawn from the GR distribution — sample_GR_magnitudes","text":"","code":"sample_GR_magnitudes(n = 100, beta.p = log(10), M0 = 2.5) #>   [1] 4.306709 2.944634 2.575399 3.202266 2.550676 2.662066 2.715610 3.746075 #>   [9] 2.558650 2.892967 3.036345 3.092362 2.592120 4.407113 3.226427 2.684419 #>  [17] 2.930978 2.764932 3.020096 3.356788 3.213683 2.546561 2.514803 3.118964 #>  [25] 2.800018 3.070179 3.124049 2.563683 4.019588 2.763711 2.546588 4.010031 #>  [33] 2.713685 2.686510 2.664653 2.606061 3.409516 2.593911 2.965454 3.188315 #>  [41] 3.483759 2.595378 2.679358 2.909867 3.222622 2.598187 2.505835 2.506241 #>  [49] 2.627053 3.308714 2.765447 2.879825 4.099907 3.102728 2.606792 3.110479 #>  [57] 3.415944 2.567594 3.247983 2.517334 2.553885 3.181790 3.016186 3.001037 #>  [65] 2.647462 3.101806 2.506962 2.946314 2.532918 2.813586 2.527983 2.836814 #>  [73] 3.024076 2.944054 2.756732 2.576006 2.603905 2.639665 3.520685 2.797227 #>  [81] 3.015269 4.653122 2.557553 3.319834 2.792296 2.651941 3.213808 2.909081 #>  [89] 3.143582 2.992907 3.185303 2.537072 2.514326 2.582479 2.820094 2.785030 #>  [97] 2.805960 2.634133 5.399505 2.726272"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) length n.ev one parent event occuring time t_h using ETAS model.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"","code":"sample_temporal_ETAS_daughters(theta, beta.p, th, n.ev, M0, T1, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). th Time parent event [days]. n.ev number events placed. M0 Minimum magnitude synthetic catalogue. T1 Start time synthetic catalogue [days]. T2 End time synthetic catalogue [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_daughters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample of new events data.frame(t_i, M_i) of length n.ev for one parent event occuring at time t_h using the ETAS model. — sample_temporal_ETAS_daughters","text":"Generate sample new events data.frame(t_i, M_i) one parent","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":null,"dir":"Reference","previous_headings":"","what":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Take previous parent events Ht=data.frame[ts, magnitudes] generates daughters events using ETAS model","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"sample_temporal_ETAS_generation(theta, beta.p, Ht, M0, T1, T2, ncore = NULL)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). beta.p Slope GR relation: beta = b ln(10). Ht set parent events form data.frame[ts, magnitudes] M0 minimum earthquake magnitude synthetic catalogue. T1 start time synthetic catalogue [days]. T2 end time synthetic catalogue [days]. ncore Deprecated argument controlling parallelism. Use future::plan(future::multisession, workers = ncore) (similar) configure parallelism code instead.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"Return one generation daughters parents Ht form data.frame(t_i, M_i).","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_generation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take all previous parent events from Ht=data.frame[ts, magnitudes] and generates their daughters events using the ETAS model — sample_temporal_ETAS_generation","text":"","code":"# The parents are specified in Ht Ht <- data.frame(ts = c(500), magnitudes = c(6.7)) sample_temporal_ETAS_generation(   theta = list(mu = 0.1, K = 0.089, alpha = 2.29, c = 0.11, p = 1.08),   beta.p = log(10),   M0 = 2.5,   T1 = 0, T2 = 1000,   Ht = Ht ) #>           ts magnitudes #> 1   673.9341   2.532985 #> 2   515.9706   2.547470 #> 3   625.4076   2.584586 #> 4   828.7094   2.786686 #> 5   921.8883   4.360517 #> 6   500.5331   2.521237 #> 7   539.0931   2.806188 #> 8   500.0026   3.522394 #> 9   500.2553   3.065051 #> 10  506.4746   3.202831 #> 11  527.6555   2.554095 #> 12  500.1372   2.828518 #> 13  500.9616   2.827710 #> 14  747.2843   2.696378 #> 15  500.4959   4.080056 #> 16  500.3166   3.124068 #> 17  502.6676   2.505862 #> 18  501.2085   2.558536 #> 19  504.6805   2.517142 #> 20  528.3704   4.385899 #> 21  502.0983   2.655960 #> 22  512.7747   2.532853 #> 23  503.4205   2.829646 #> 24  712.7995   2.628618 #> 25  518.1258   2.694929 #> 26  500.3719   3.020393 #> 27  500.0424   3.131797 #> 28  733.9833   3.119108 #> 29  500.7223   3.791902 #> 30  500.4740   2.942798 #> 31  503.3026   2.544673 #> 32  500.5079   2.888056 #> 33  500.3897   2.520975 #> 34  500.6122   2.824147 #> 35  500.0708   3.063983 #> 36  509.5867   4.713047 #> 37  500.4951   3.309042 #> 38  500.0913   3.142026 #> 39  629.3599   2.952373 #> 40  512.1945   3.605951 #> 41  501.6068   3.186116 #> 42  511.4815   4.123174 #> 43  500.0087   2.861956 #> 44  500.1381   2.829289 #> 45  693.6341   3.097285 #> 46  527.5255   3.170553 #> 47  578.1838   2.670518 #> 48  501.1987   2.617851 #> 49  517.5450   2.683891 #> 50  518.2611   2.537413 #> 51  501.1770   3.058596 #> 52  500.0504   2.565274 #> 53  500.2127   2.598288 #> 54  723.5392   2.586056 #> 55  501.2298   2.726991 #> 56  500.1515   2.850502 #> 57  510.2579   2.512757 #> 58  588.8770   2.645740 #> 59  500.1363   2.916838 #> 60  540.6403   2.921529 #> 61  500.2902   2.811306 #> 62  501.4373   2.546444 #> 63  525.2619   3.285211 #> 64  532.2829   2.579727 #> 65  503.5620   3.023307 #> 66  500.3887   2.635861 #> 67  516.5327   2.518907 #> 68  508.7678   2.656027 #> 69  600.6504   2.614788 #> 70  501.2001   2.512641 #> 71  519.3195   3.318022 #> 72  603.7736   2.645849 #> 73  503.4985   2.950387 #> 74  500.0201   3.751989 #> 75  502.8955   2.746404 #> 76  506.8037   2.690038 #> 77  555.2722   2.574621 #> 78  504.6532   3.163392 #> 79  580.4184   3.088780 #> 80  830.5686   2.724100 #> 81  939.6951   2.829356 #> 82  568.4348   3.162683 #> 83  500.0343   2.654604 #> 84  840.9291   2.672101 #> 85  500.1161   2.647223 #> 86  500.5800   2.596591 #> 87  536.8588   2.535249 #> 88  589.8184   2.870890 #> 89  503.7039   3.134519 #> 90  500.0649   2.597083 #> 91  607.7097   3.160692 #> 92  507.5661   2.507288 #> 93  501.8536   2.565408 #> 94  503.1420   2.699700 #> 95  510.8555   2.834821 #> 96  501.3164   2.926968 #> 97  501.0931   2.696451 #> 98  587.7833   2.895883 #> 99  501.7312   2.595778 #> 100 809.2298   2.777361 #> 101 514.5404   2.566821 #> 102 501.0798   2.919406 #> 103 520.7801   2.860714 #> 104 502.1084   2.871580 #> 105 532.0530   3.193304 #> 106 542.1409   3.208041 #> 107 507.0524   3.129609 #> 108 511.8053   2.946758 #> 109 504.7230   2.775846 #> 110 502.1032   4.282471 #> 111 542.7769   2.645893 #> 112 521.6796   2.758710 #> 113 500.0352   2.556124 #> 114 501.6744   3.493084 #> 115 516.1205   3.738540 #> 116 500.1626   2.760884 #> 117 503.4424   3.108949 #> 118 513.9760   3.091153 #> 119 501.0657   2.556964 #> 120 500.0930   2.500541 #> 121 500.0057   2.727088 #> 122 500.8850   3.044424 #> 123 520.9433   2.649292 #> 124 500.6271   2.642371 #> 125 506.7894   2.856079 #> 126 520.0044   2.563104 #> 127 808.5357   2.682746 #> 128 500.2036   3.512157 #> 129 514.2532   3.975372 #> 130 500.6284   2.769430 #> 131 518.2677   2.729688 #> 132 505.1459   2.568541 #> 133 511.1627   3.656041 #> 134 500.0032   2.528052 #> 135 506.7654   2.809629 #> 136 500.0409   3.105535 #> 137 500.0140   2.584206 #> 138 507.4484   3.756080 #> 139 501.1019   2.705884 #> 140 529.2985   2.810673 #> 141 522.8812   2.903541 #> 142 501.2001   2.680356 #> 143 691.3927   2.966899 #> 144 500.0044   2.652931 #> 145 523.4838   2.753973 #> 146 500.6197   2.569079 #> 147 500.2462   3.654103 #> 148 564.0678   3.072100 #> 149 500.0286   2.558535 #> 150 528.9938   3.230541 #> 151 515.7321   2.653732 #> 152 500.1969   2.604799 #> 153 547.9442   2.692012 #> 154 597.6385   2.594727 #> 155 611.0571   2.721923 #> 156 510.5447   2.516355 #> 157 529.6131   2.847547 #> 158 562.7408   3.498635 #> 159 544.8893   2.583782 #> 160 521.9210   2.727715 #> 161 519.1132   2.569812 #> 162 510.8366   2.967166 #> 163 500.0434   2.520032 #> 164 500.6076   2.606997 #> 165 500.8659   2.529399 #> 166 502.1330   2.796214 #> 167 536.8937   2.659398 #> 168 595.2779   2.946992 #> 169 511.3023   3.073852 #> 170 666.5766   2.887526 #> 171 510.4889   2.604800 #> 172 501.8029   3.227736 #> 173 500.2530   3.067306 #> 174 503.7596   2.532573 #> 175 507.2585   3.501188 #> 176 509.7686   3.057648 #> 177 502.3964   2.933647 #> 178 633.9291   2.575690 #> 179 500.3102   2.774327 #> 180 500.0049   3.029400 #> 181 764.3851   2.500246 #> 182 500.1381   2.529548 #> 183 506.5657   2.925359 #> 184 500.3133   2.645735 #> 185 500.8096   2.520963 #> 186 504.4719   2.893748 #> 187 588.7704   2.764370 #> 188 518.1589   2.566433 #> 189 501.9602   3.003087 #> 190 500.4392   3.032154 #> 191 503.0658   3.043005 #> 192 536.2538   3.348108 #> 193 500.1251   2.930408 #> 194 501.9244   2.652591 #> 195 975.9878   3.852783 #> 196 501.3887   2.577933 #> 197 501.5487   2.768175 #> 198 583.5553   2.588757 #> 199 501.6186   2.506236 #> 200 501.5054   3.964391 #> 201 500.3742   2.943236 #> 202 500.7022   3.502366 #> 203 558.4387   3.728636 #> 204 616.8717   3.056760 #> 205 500.2723   3.742140 #> 206 507.4006   2.582894 #> 207 517.2139   3.386885 #> 208 556.0655   2.673554 #> 209 500.1490   2.505999 #> 210 516.3675   3.324487 #> 211 588.9596   2.583145 #> 212 526.0415   3.551160 #> 213 867.0335   3.156709 #> 214 535.1561   2.561573 #> 215 500.7636   2.984338 #> 216 509.6344   2.653351 #> 217 502.0317   2.817469 #> 218 509.1389   2.532235 #> 219 509.8126   2.907734 #> 220 501.8598   2.771025 #> 221 507.4478   3.606707 #> 222 500.3170   2.506271 #> 223 520.8009   2.824071 #> 224 760.5616   3.350486 #> 225 500.5481   2.865154 #> 226 503.9456   3.084364 #> 227 500.2971   3.355634 #> 228 503.5729   2.832398 #> 229 502.6073   3.697310 #> 230 500.0008   3.069993 #> 231 500.0982   2.575635 #> 232 500.0295   2.662158 #> 233 537.1817   2.689566 #> 234 503.9201   3.183242 #> 235 501.1455   2.515373 #> 236 500.7058   2.747756 #> 237 500.4532   2.515844 #> 238 500.0556   2.793349 #> 239 521.5504   2.588035 #> 240 528.1038   2.926943 #> 241 501.2110   2.684830 #> 242 672.1890   3.114752 #> 243 500.0649   3.776028 #> 244 500.4287   4.069197 #> 245 510.0681   2.605472 #> 246 505.9089   2.608506 #> 247 507.9114   3.103191 #> 248 545.6590   3.083324 #> 249 502.1999   2.918407 #> 250 500.6650   2.531026 #> 251 500.0579   3.039943 #> 252 509.3737   2.504817 #> 253 504.1312   2.827624 #> 254 516.8049   3.070553 #> 255 504.2122   4.035015 #> 256 500.2234   3.208764 #> 257 512.8387   3.267753 #> 258 505.6538   2.638627 #> 259 973.4670   3.231197 #> 260 538.6581   3.064945 #> 261 521.0785   2.516389 #> 262 500.0018   2.548184 #> 263 747.8123   2.955899 #> 264 501.9335   3.638686 #> 265 500.7080   2.973969 #> 266 500.1652   2.586738 #> 267 500.6781   2.712713 #> 268 877.6126   2.507195 #> 269 500.2246   2.891016 #> 270 513.3835   3.095736 #> 271 500.5775   3.127775 #> 272 556.5068   2.556935 #> 273 555.0179   3.393105 #> 274 500.0635   3.034140 #> 275 513.7627   2.546738 #> 276 525.9062   2.972897 #> 277 502.6716   2.565924 #> 278 508.8938   2.549403 #> 279 502.9247   2.578182 #> 280 500.3141   2.581058 #> 281 789.1751   2.717509 #> 282 500.0348   2.504651 #> 283 504.8661   2.704862 #> 284 503.5524   2.578107 #> 285 503.1456   3.010822 #> 286 500.4339   2.558936 #> 287 500.2245   3.553809 #> 288 573.1022   2.791382 #> 289 500.3142   2.578206 #> 290 503.8917   2.880076 #> 291 500.6050   2.792909 #> 292 607.1686   3.459342 #> 293 718.8926   3.114143 #> 294 562.8924   2.995875 #> 295 500.8557   2.912915 #> 296 625.7256   2.744616 #> 297 500.0093   2.906098 #> 298 500.6781   2.699843 #> 299 640.0886   2.713174 #> 300 665.8287   3.055913 #> 301 500.0017   2.957022 #> 302 500.1861   3.487153 #> 303 501.9758   2.948923 #> 304 530.6156   2.778265 #> 305 531.4612   2.573444 #> 306 500.9540   2.503673 #> 307 734.0468   2.600636 #> 308 545.9307   2.786640 #> 309 500.2574   2.915293 #> 310 508.6207   2.836542 #> 311 542.1543   3.046446 #> 312 770.5909   3.756222 #> 313 509.0098   2.573167 #> 314 519.8942   2.520021 #> 315 727.8014   2.770124 #> 316 541.1050   2.692614 #> 317 521.2065   2.963042 #> 318 500.3422   3.165894 #> 319 505.7598   2.752421 #> 320 501.4527   2.588169 #> 321 504.0215   2.633746 #> 322 501.8877   2.741305 #> 323 518.2938   2.991158 #> 324 512.0703   2.862527 #> 325 501.6771   2.732489 #> 326 508.8826   2.665370 #> 327 623.7599   2.752774 #> 328 500.1419   2.720513 #> 329 500.0339   2.762533 #> 330 784.8932   3.442654 #> 331 500.1984   2.537400 #> 332 587.1375   3.726462 #> 333 500.3886   2.541791 #> 334 500.6357   2.824824 #> 335 500.9276   2.518705 #> 336 510.6919   2.548936 #> 337 501.9129   2.938601 #> 338 500.0631   2.580726 #> 339 500.6240   3.024652 #> 340 502.8746   2.527818 #> 341 509.5596   3.626675 #> 342 500.2701   3.102471 #> 343 500.3647   2.553273 #> 344 501.3375   3.004682 #> 345 975.2951   4.088700 #> 346 506.5352   3.631845 #> 347 514.4936   2.668136 #> 348 727.4096   2.958047 #> 349 635.9644   2.642834 #> 350 500.1341   2.596576 #> 351 502.6420   2.779348 #> 352 518.7423   3.095602 #> 353 501.9951   3.144359 #> 354 505.8334   4.507245 #> 355 728.9806   3.272743 #> 356 520.2913   2.939665 #> 357 508.4927   2.567725 #> 358 500.6049   2.659380 #> 359 511.9502   2.542744 #> 360 535.3303   2.918547 #> 361 500.2407   2.528927 #> 362 500.0526   2.701677 #> 363 500.0180   2.848592 #> 364 504.4825   3.422727 #> 365 645.1621   3.519050 #> 366 665.7341   2.714024 #> 367 504.0842   2.749670 #> 368 501.5023   2.858603 #> 369 501.5059   2.758639 #> 370 516.9024   2.600926 #> 371 505.9484   2.594860 #> 372 598.9987   2.944021 #> 373 508.0862   3.553207 #> 374 500.2266   3.686305 #> 375 506.1324   2.787098 #> 376 501.3490   2.951895 #> 377 500.0731   3.463592 #> 378 500.5402   2.624056 #> 379 501.6986   2.502896 #> 380 500.4668   2.734691 #> 381 503.2628   2.773693 #> 382 503.5647   2.981414 #> 383 936.9667   2.587904 #> 384 500.2417   3.029319 #> 385 500.0420   3.113653 #> 386 502.5004   3.392501 #> 387 502.5281   2.680726 #> 388 501.1572   2.534231 #> 389 501.1747   3.130771 #> 390 771.5556   2.648101 #> 391 511.4917   2.620662 #> 392 506.6701   2.701887 #> 393 500.0144   3.400351 #> 394 519.3423   2.769682 #> 395 500.0070   3.192209 #> 396 502.3067   2.541562 #> 397 500.8555   3.242296 #> 398 504.0118   2.899536 #> 399 501.0675   3.252117 #> 400 502.9175   2.618234 #> 401 500.0184   2.737505 #> 402 805.7597   3.292995 #> 403 500.0021   2.598836 #> 404 732.8222   2.564523 #> 405 507.4553   2.671335 #> 406 500.0340   3.181256 #> 407 534.8842   3.933579 #> 408 522.6104   2.675273 #> 409 500.4141   2.620430 #> 410 506.7895   2.828854 #> 411 500.1069   2.678891 #> 412 508.5656   2.883707 #> 413 500.1509   2.738507 #> 414 501.0285   2.630658 #> 415 500.7298   2.634853 #> 416 500.9716   2.856186 #> 417 500.2131   3.226596 #> 418 500.7637   2.802308 #> 419 510.6904   3.032701 #> 420 503.5428   3.679693 #> 421 500.3907   2.745002 #> 422 515.3264   2.825178 #> 423 866.1333   3.451496 #> 424 500.0219   2.628494 #> 425 500.6331   3.117199 #> 426 502.7464   3.170526 #> 427 501.4412   3.281533 #> 428 502.1297   3.418858 #> 429 597.6078   2.661645 #> 430 804.3634   3.283374 #> 431 517.1410   2.880582 #> 432 663.9693   2.592237 #> 433 501.1451   2.533854 #> 434 500.0080   2.660417 #> 435 503.0684   2.610476 #> 436 712.6287   2.728613 #> 437 500.0035   2.602524 #> 438 589.8115   2.698495 #> 439 500.6538   2.650770 #> 440 671.3197   3.291747 #> 441 501.0240   2.719190 #> 442 546.0253   3.127690 #> 443 500.1185   3.235581 #> 444 501.5026   2.735214 #> 445 511.8294   2.648404 #> 446 500.0402   2.630047 #> 447 501.0408   3.125630 #> 448 500.4985   3.653287 #> 449 500.4407   2.902880 #> 450 501.6228   2.908704 #> 451 500.0195   3.749237 #> 452 869.3658   2.878165 #> 453 500.0450   2.504639 #> 454 502.5140   2.513980 #> 455 662.0088   2.799471 #> 456 500.5005   2.699898 #> 457 500.4638   2.675039 #> 458 504.2645   3.795221 #> 459 500.6837   2.561345 #> 460 502.6784   3.622397 #> 461 622.5949   2.532831 #> 462 501.3618   3.039458 #> 463 564.7012   4.026258 #> 464 500.0007   2.590345 #> 465 528.0439   2.542281 #> 466 500.6598   4.655270 #> 467 506.7126   2.790510 #> 468 506.4268   2.702921 #> 469 508.3891   3.220921 #> 470 502.5108   3.023827 #> 471 543.4592   2.661375 #> 472 501.4035   2.600943 #> 473 537.6054   3.463366 #> 474 506.0273   2.601597 #> 475 641.4596   2.560757 #> 476 506.9107   2.500813 #> 477 500.0750   2.742794 #> 478 596.6607   2.551722 #> 479 500.0909   3.939973 #> 480 500.3729   2.915077 #> 481 503.8135   2.896779 #> 482 500.0621   3.489822 #> 483 774.5791   2.954159 #> 484 500.5809   3.260436 #> 485 500.0463   2.968493 #> 486 500.1312   2.607011 #> 487 500.2261   2.740053 #> 488 500.0066   2.835520 #> 489 504.0422   2.642081 #> 490 500.3249   4.776085 #> 491 500.0286   2.941254 #> 492 500.8464   2.701516 #> 493 500.0372   2.937702 #> 494 708.7520   2.545419 #> 495 733.3049   3.010468 #> 496 506.5330   2.818773 #> 497 531.8936   2.986069 #> 498 500.0227   2.997504 #> 499 502.2667   3.717880 #> 500 502.7636   2.582815 #> 501 500.0822   2.540139 #> 502 502.4636   3.142032 #> 503 500.2081   2.565913 #> 504 512.5330   2.578000 #> 505 502.2737   2.593792 #> 506 506.3438   4.105671 #> 507 538.2815   3.303303 #> 508 500.0327   2.888087 #> 509 502.3101   3.311869 #> 510 501.3831   2.679926 #> 511 765.4247   3.558857 #> 512 524.2810   2.746969 #> 513 502.2470   2.826648 #> 514 500.6338   3.022230 #> 515 596.5616   2.954110 #> 516 770.4078   2.703121 #> 517 500.7497   2.605519 #> 518 500.0484   2.765897 #> 519 500.0977   2.738681 #> 520 503.0021   2.796780 #> 521 615.6478   2.565023 #> 522 524.1374   2.532240 #> 523 506.7577   2.527252 #> 524 531.3658   3.065696 #> 525 570.7568   2.525143 #> 526 501.9387   2.665665 #> 527 667.2526   2.600224 #> 528 501.0206   2.805144 #> 529 500.1493   3.138570 #> 530 500.1471   2.707937 #> 531 535.6605   4.402411 #> 532 897.6998   3.116385 #> 533 501.4713   2.552352 #> 534 772.9926   2.650196 #> 535 510.7751   2.692575 #> 536 502.1472   2.511543 #> 537 506.1597   2.740779 #> 538 501.2734   3.430064 #> 539 501.8949   2.768359 #> 540 500.8951   3.341775 #> 541 500.3939   3.735098 #> 542 500.1053   2.762075 #> 543 771.8607   2.523504 #> 544 500.1480   3.652049 #> 545 500.1614   2.666828 #> 546 500.4873   2.973550 #> 547 500.0421   2.745638 #> 548 549.2346   2.869548 #> 549 504.2462   2.755438 #> 550 646.5685   2.687226 #> 551 507.7148   2.642837 #> 552 505.7435   2.730998 #> 553 569.7763   2.590819 #> 554 500.1590   3.130961 #> 555 545.1500   2.923355 #> 556 784.1484   2.594636 #> 557 500.0174   2.540327 #> 558 603.8310   2.725667 #> 559 500.3480   2.644327 #> 560 507.8633   2.624551 #> 561 500.2840   2.515009 #> 562 504.3081   2.556722 #> 563 617.2813   2.551082 #> 564 515.4475   2.584441 #> 565 500.0523   2.638950 #> 566 500.0218   2.533160 #> 567 787.6986   3.333286 #> 568 510.8660   2.791564 #> 569 500.0859   2.933705 #> 570 844.1246   2.794254 #> 571 557.3125   2.631146 #> 572 504.1614   3.009722 #> 573 561.0359   3.180372 #> 574 571.4146   3.086648 #> 575 657.7247   2.601753 #> 576 500.0239   2.805376 #> 577 604.2390   3.195014 #> 578 590.1194   2.517654 #> 579 726.6392   2.782126 #> 580 500.0505   4.094643 #> 581 799.6385   2.992220 #> 582 506.5970   3.544605 #> 583 500.2496   2.850093 #> 584 619.6385   2.653735 #> 585 500.2994   4.006026 #> 586 500.0330   2.637743 #> 587 515.1692   3.089759 #> 588 594.0735   2.694187 #> 589 500.1034   2.859430 #> 590 500.6801   3.771197 #> 591 500.4491   2.705756 #> 592 500.9905   2.635322 #> 593 500.0039   2.582155 #> 594 582.1083   3.160984 #> 595 500.1141   3.384513 #> 596 571.2088   3.113058 #> 597 579.9838   2.893866 #> 598 500.3902   4.273866 #> 599 500.0312   2.547067 #> 600 927.2160   2.671458 #> 601 500.9147   3.337039 #> 602 514.6074   2.540614 #> 603 500.2567   2.827865 #> 604 506.3453   2.973268 #> 605 974.2276   2.642957 #> 606 785.2984   3.113965 #> 607 502.8396   3.018300 #> 608 500.1333   3.303795 #> 609 606.1684   2.653701 #> 610 527.0517   2.794364 #> 611 500.1958   2.666101 #> 612 521.3920   2.885521 #> 613 922.3378   2.638051 #> 614 506.8893   3.007043 #> 615 500.1347   2.874135 #> 616 506.9311   2.553520 #> 617 503.9802   2.985638 #> 618 501.8154   3.967599 #> 619 562.2774   3.708576 #> 620 500.4115   3.213534 #> 621 533.2881   2.652635 #> 622 505.9224   3.231609 #> 623 502.7955   3.107154 #> 624 500.5388   2.622121 #> 625 500.3115   2.613236 #> 626 500.0289   4.518324 #> 627 500.0207   2.984128 #> 628 502.5688   2.802321 #> 629 508.9876   2.551194 #> 630 500.0149   2.829846 #> 631 608.8438   2.837637 #> 632 519.7632   2.677217 #> 633 535.0571   3.179954 #> 634 500.0906   3.197362 #> 635 765.2964   2.873683 #> 636 500.6858   2.765550 #> 637 508.1562   2.844129 #> 638 739.7153   2.573422 #> 639 500.3522   2.800736 #> 640 768.3246   3.576356 #> 641 508.1990   2.533908 #> 642 500.1400   2.849473 #> 643 516.6438   3.936722 #> 644 500.0166   4.107444 #> 645 513.5430   3.616746 #> 646 509.5025   2.852226 #> 647 503.1750   3.460279 #> 648 503.0123   3.066231 #> 649 502.0635   2.560514 #> 650 507.1203   3.325876 #> 651 536.7710   2.747148 #> 652 533.6755   2.668761 #> 653 511.0797   2.631969 #> 654 501.0115   3.197883 #> 655 500.6498   2.528495 #> 656 500.6518   2.842139 #> 657 500.0192   2.623748 #> 658 892.4208   2.667285 #> 659 512.8850   2.783606 #> 660 778.7208   3.183733 #> 661 500.0892   2.666184 #> 662 500.1744   2.570260 #> 663 503.3924   3.601904 #> 664 501.1209   3.025149 #> 665 503.5141   3.040034 #> 666 619.4427   2.595637 #> 667 577.9906   2.771203 #> 668 502.5338   2.815815 #> 669 503.9614   2.801536 #> 670 717.9385   2.657667 #> 671 813.3025   3.021201 #> 672 500.3027   3.005498 #> 673 512.0072   2.588308 #> 674 502.3842   2.561439 #> 675 709.3880   2.775077 #> 676 562.6563   2.910912 #> 677 501.9526   2.975431 #> 678 711.7542   2.606119 #> 679 502.0546   2.996441 #> 680 518.7948   2.574281 #> 681 505.9154   2.562939 #> 682 501.0413   2.725388 #> 683 842.1024   2.561634 #> 684 500.3733   2.605663 #> 685 677.0970   2.714728 #> 686 519.6072   3.822635 #> 687 500.5329   2.724243 #> 688 529.2578   2.944088 #> 689 501.8148   2.882045 #> 690 501.1243   3.047400 #> 691 958.4759   3.264515 #> 692 500.6379   2.660178 #> 693 501.9801   3.123317 #> 694 500.6502   2.720824 #> 695 503.6605   2.704428 #> 696 521.0771   3.573264 #> 697 509.1809   2.927688 #> 698 503.2438   2.669186 #> 699 500.2924   3.467737 #> 700 635.2392   2.631804 #> 701 775.7097   3.822229 #> 702 712.4926   2.685219 #> 703 508.9481   2.611427 #> 704 504.7701   3.268046 #> 705 500.2447   3.054849 #> 706 500.3632   2.543121 #> 707 582.8331   3.293541 #> 708 500.9575   2.508497 #> 709 635.5049   4.199445 #> 710 500.0938   2.883660 #> 711 500.0626   2.601981 #> 712 504.8698   2.527625 #> 713 514.0938   3.282263 #> 714 560.7814   3.537716 #> 715 501.1707   2.709275 #> 716 507.2993   3.024734 #> 717 501.6422   2.643256 #> 718 504.1775   2.718198 #> 719 500.2026   3.057983 #> 720 511.6570   3.106068 #> 721 501.5762   2.968713 #> 722 501.0231   2.543627 #> 723 976.9193   3.099170 #> 724 501.0260   2.735565 #> 725 500.0556   2.806324 #> 726 502.2133   3.363153 #> 727 520.5879   2.527012 #> 728 500.0268   2.768005 #> 729 506.0545   2.997135 #> 730 500.0085   2.723396 #> 731 517.2713   2.630003 #> 732 549.7908   4.451880 #> 733 502.1511   3.082422 #> 734 500.0856   2.892815 #> 735 500.3635   2.587155 #> 736 664.4536   2.685648 #> 737 750.3821   2.955886 #> 738 506.9466   2.650640 #> 739 500.2003   2.681250 #> 740 500.1068   2.547473 #> 741 500.2800   3.071301 #> 742 500.5256   2.812320 #> 743 500.8279   4.308915 #> 744 503.9244   3.224412 #> 745 500.2291   2.861664 #> 746 500.1085   2.725994 #> 747 500.0205   2.735372 #> 748 543.0900   3.133769 #> 749 503.0374   2.836553 #> 750 505.4422   2.564165 #> 751 520.5696   2.892436 #> 752 504.1000   2.758254 #> 753 510.8177   3.009588 #> 754 507.0171   2.656635 #> 755 501.3245   4.345258 #> 756 500.0083   2.666067 #> 757 543.5705   2.871301 #> 758 688.3957   3.145096 #> 759 500.1815   2.579658 #> 760 541.2927   2.668212 #> 761 503.5566   3.095420 #> 762 651.5412   2.624514 #> 763 532.8692   2.951286 #> 764 500.0771   3.245829 #> 765 500.0010   3.642114 #> 766 500.4109   3.299348 #> 767 500.2433   2.894494 #> 768 767.1466   2.727275 #> 769 500.3681   2.502443 #> 770 500.2121   2.957067 #> 771 501.2428   2.687833 #> 772 502.0653   3.380722 #> 773 500.6897   3.161818 #> 774 688.4786   3.015270 #> 775 516.8307   3.009063 #> 776 503.0092   2.520592 #> 777 642.5487   2.628907 #> 778 682.0030   3.343184 #> 779 500.7533   2.775100 #> 780 500.2711   2.807185 #> 781 764.0114   3.075651 #> 782 502.0043   2.952789 #> 783 622.5469   2.740539 #> 784 616.5728   4.159490 #> 785 577.8260   2.944850 #> 786 508.7547   3.268246 #> 787 543.7404   2.677670 #> 788 500.5342   2.609786 #> 789 501.0268   2.685158 #> 790 654.1733   2.851694 #> 791 558.7994   2.609559 #> 792 560.6802   2.773690 #> 793 500.7523   2.541074 #> 794 501.4415   2.523081 #> 795 500.0420   2.790101 #> 796 500.0978   2.502224 #> 797 501.7666   2.589973 #> 798 522.4738   2.817204 #> 799 502.6931   3.237552 #> 800 510.9096   2.859765 #> 801 500.0448   2.659697 #> 802 536.6376   2.661090 #> 803 504.4263   2.782751 #> 804 532.5368   2.844923 #> 805 500.0992   4.380040 #> 806 500.2205   2.930563 #> 807 500.2703   2.549239 #> 808 500.1824   2.577824 #> 809 547.7903   3.165408 #> 810 500.1730   2.913095 #> 811 500.3790   2.541694 #> 812 596.7121   2.733274 #> 813 500.0222   3.306818 #> 814 814.2754   3.169836 #> 815 548.5976   3.091762 #> 816 688.2362   2.645725 #> 817 507.8073   2.813724 #> 818 500.7525   2.884594 #> 819 500.3439   2.646729 #> 820 558.9946   3.559449 #> 821 827.8874   2.812324 #> 822 500.0058   2.591378 #> 823 502.7857   3.240057 #> 824 500.1112   3.488943 #> 825 500.2704   3.033686 #> 826 500.6073   2.596513 #> 827 500.0403   3.087630 #> 828 505.7281   2.991510 #> 829 500.3491   2.667585 #> 830 500.0138   2.661560 #> 831 587.5231   2.641752 #> 832 500.1684   3.155708 #> 833 538.9954   2.690689 #> 834 500.5432   2.597516 #> 835 500.0274   2.658868 #> 836 500.1706   2.522932 #> 837 500.1223   2.809690 #> 838 541.3138   2.865501 #> 839 502.5734   3.004694 #> 840 559.9231   2.685807 #> 841 974.8250   2.808649 #> 842 500.0528   2.545561 #> 843 508.2425   2.624117 #> 844 501.2889   2.848927 #> 845 515.2270   2.749473 #> 846 500.1682   2.529605 #> 847 501.4165   2.688626 #> 848 502.9178   2.656571 #> 849 503.6281   2.504949 #> 850 501.8754   2.667882 #> 851 700.3322   2.565807 #> 852 570.4814   2.640570 #> 853 508.3829   2.884302 #> 854 500.1754   2.682325 #> 855 501.5132   2.921163 #> 856 500.0422   3.374057 #> 857 500.0121   2.713336 #> 858 506.7397   2.668613 #> 859 960.2985   2.893313 #> 860 500.0344   3.302614 #> 861 500.2517   3.402825 #> 862 500.0902   3.131520 #> 863 524.7150   2.827518 #> 864 500.4565   3.071402 #> 865 501.6717   3.203716 #> 866 527.9116   3.558227 #> 867 500.7194   2.979293 #> 868 507.0695   3.094420 #> 869 513.0547   3.435768 #> 870 505.6156   2.678750 #> 871 709.8587   2.904659 #> 872 502.5800   3.002505 #> 873 501.6260   3.311059 #> 874 501.5017   2.904730 #> 875 502.2730   3.026590 #> 876 500.3709   2.694892 #> 877 502.1892   2.633305 #> 878 512.4684   3.727054 #> 879 500.9097   2.592492 #> 880 546.5114   3.047711 #> 881 503.3085   2.898089 #> 882 755.9935   2.915155 #> 883 664.0465   2.792697 #> 884 926.7247   2.990441 #> 885 500.3990   2.847820 #> 886 505.4188   2.724827 #> 887 500.0744   2.892752 #> 888 508.8359   2.873043 #> 889 524.7615   2.651789 #> 890 514.9442   3.020411 #> 891 500.2858   3.072791 #> 892 510.7697   2.500977 #> 893 505.1194   2.742564 #> 894 500.0738   3.439969 #> 895 566.9339   4.016969 #> 896 503.5071   2.604969 #> 897 501.9806   2.897828 #> 898 977.7606   2.560418 #> 899 500.2884   2.695262 #> 900 502.7879   3.394185 #> 901 500.0897   2.891147 #> 902 513.6902   2.801921 #> 903 500.2958   4.498706 #> 904 501.2745   2.560855 #> 905 500.5633   2.987553 #> 906 500.5563   2.887550 #> 907 902.4275   2.909056 #> 908 502.1181   2.654649 #> 909 500.5415   3.102712 #> 910 507.8295   2.695403 #> 911 521.1700   3.287180 #> 912 500.7489   2.572168 #> 913 500.3589   2.609168 #> 914 989.3764   2.555725 #> 915 521.4036   2.656105 #> 916 504.5039   3.970853 #> 917 500.4422   2.829448 #> 918 504.2810   2.662252 #> 919 500.1673   2.573519 #> 920 500.2113   2.827510 #> 921 500.0570   2.794076 #> 922 563.1461   2.846213 #> 923 709.8056   2.853352 #> 924 500.6373   3.163633"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"Sampling times events triggered parent th according ETAS triggering function","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"","code":"sample_temporal_ETAS_times(theta, n.ev, th, T2)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"theta ETAS parameters list(mu=mu, K=K, alpha=alpha, c=c, p=p). n.ev Number events return sample time domain (th, T2]. th Time parent event producing n.ev daughters. T2 End time model domain.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_ETAS_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling times for events triggered by a parent at th according to the ETAS triggering function — sample_temporal_ETAS_times","text":"t.sample list times interval [0, T2] distributed according ETAS triggering function.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — sample_temporal_injection_events","title":"Title — sample_temporal_injection_events","text":"Title","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — sample_temporal_injection_events","text":"","code":"sample_temporal_injection_events(   a = 50,   V.i = 1,   tau = 10,   beta.p,   M0,   T.i,   T2 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — sample_temporal_injection_events","text":"Induced event rate per unit volume. V.Injected volume tau Decay rate [days]. beta.p Related b-value via b ln(10). M0 Minimum magnitude threshold. T.Time injection [days]. T2 End temporal model domain [days].","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/sample_temporal_injection_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — sample_temporal_injection_events","text":"Catalogue parent events induced injection; data.frame(times, magnitudes)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of time bins for a specific event. — time_grid","title":"Generate a set of time bins for a specific event. — time_grid","text":"Generate set time bins specific event.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"time_grid(data.point, coef.t, delta.t, N.exp., T1., T2.)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.point Point binning calculated, list elements time (ts, scalar), event index (idx.p, scalar). Names mandatory changed coef.t TimeBinning parameter: look breaks_exp() delta.t TimeBinning parameter: look breaks_exp() N.exp. TimeBinning parameter: look breaks_exp() T1. Start temporal domain, scalar T2. End temporal domain scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a set of time bins for a specific event. — time_grid","text":"data.frame many rows number bins fixed number columns. columns t.start : starting point bin (minimum = T1.). t.end : end point bin. (maximum = T2.). t.bin.name : unique bin identifier. t.ref_layer : bin identifier calculations ts : time provided data.point idx.p : identifier provided data.point bins T1. T2. containing T1.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/time_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a set of time bins for a specific event. — time_grid","text":"","code":"## EXAMPLE 1 event <- list(ts = 0, idx.p = 1) time_grid(data.point = event, coef.t = 1, delta.t = 0.1, N.exp. = 8, T1. = 1, T2. = 20) #>   t.start t.end t.bin.name t.ref_layer ts idx.p #> 1     1.0   1.6    0.8-1.6   between-1  0     1 #> 2     1.6   3.2    1.6-3.2           6  0     1 #> 3     3.2   6.4    3.2-6.4           7  0     1 #> 4     6.4  12.8   6.4-12.8           8  0     1 #> 5    12.8  20.0    12.8-20      last-1  0     1"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"Function plot ETAS triggering function corresponding different posterior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"","code":"triggering_fun_plot(   input.list,   post.samp = NULL,   n.samp = 10,   magnitude = 4,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"input.list structured input list least two elements: model.fit: bru object used sample posterior ETAS parameters link.functions: list functions convert ETAS parameters INLA scale ETAS scale post.samp data.frame containing posterior samples parameters. NULL, n.samp samples generated. n.samp different nrow(post.samp) n.samp rows uniformly sampled post.samp. Default NULL n.samp Number posterior samples, integer (default = 10). magnitude Magnitude event triggering function calculated, scalar (default = 4). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different posterior samples — triggering_fun_plot","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"Function plot ETAS triggering function corresponding different prior samples","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"","code":"triggering_fun_plot_prior(   input.list,   magnitude = 4,   n.samp = 10,   t.end = 1,   n.breaks = 100 )"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"input.list structured input list least one element: link.functions: list functions convert ETAS parameters INLA scale ETAS scale magnitude Magnitude event triggering function calculated, scalar (default = 4). n.samp Number posterior samples, integer (default = 10). t.end Upper bound x-axis, scalar (default = 1). n.breaks Number points 0 t.end calculate function, integer (default = 100)","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/triggering_fun_plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot the ETAS triggering function corresponding to different prior samples — triggering_fun_plot_prior","text":"ggplot object grey lines representing triggering function posterior sample. Black lines representing 0.025 0.975 quantiles function values calculated posterior sample. Horizontal red lines represents 0.025 0.975 quantiles sampled background rates.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"Copula transformation standard Normal distribution Uniform distribution","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"","code":"unif_t(x, a, b)"},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"x values standard Normal distribution, vector. minimum value Uniform distribution, scalar. b maximum value Uniform distribution, scalar.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/reference/unif_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copula transformation from a standard Normal distribution to a Uniform distribution — unif_t","text":"values Uniform distribution b, vector length x.","code":""},{"path":[]},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-development-version","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru (development version)","title":"ETAS.inlabru (development version)","text":"Add format argument generate_temporal_ETAS_synthetic() simplify conversion data.frame.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-111","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.1.1","title":"ETAS.inlabru 1.1.1","text":"Cleaned R package structure Added vignettes package website Renamed functions avoid “.” non-S3-method function names. Temporal.ETAS.* functions retain “.”, now.","code":""},{"path":"https://edinburgh-seismicity-hub.github.io/ETAS.inlabru/news/index.html","id":"etasinlabru-101","dir":"Changelog","previous_headings":"","what":"ETAS.inlabru 1.0.1","title":"ETAS.inlabru 1.0.1","text":"Initial package version.","code":""}]
